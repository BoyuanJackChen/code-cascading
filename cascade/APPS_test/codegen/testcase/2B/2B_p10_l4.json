[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5 1 8 6'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('1 2') == '1 8 6'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('3 4 1 6') == '1 8 6'\nassert solution('1 2') == '1 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '1, 8, 6'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\n''') == '5'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\n''') == '1 8 6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5 1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"1 2 3 8\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"1 2 3 4 6\"\n",
        "num_ids_2": 82,
        "num_ids_4": 124
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\nprint(\"You're a smart cookie!\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '10\\n'\n    '2 1 3 5 8\\n'\n    '10 2 8 4 1 20 4 5'\n) == '8 2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\nassert solution('''4\n20 3 7 4 1 8''') == '20 7'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '20 8'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"20 8\"\nassert solution(stdin=\"1 5 6 7 10\") == \"10 5\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2 3 4\") == \"3 4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n1 1\n''') == '1 1'\nassert solution('''\n1 1\n''') == '1 1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1\\n3 2\\n5 4\\n10\\n3 7 8 1 5 2\\n10\\n7\\n10\\n2 3\\n2\\n2 2\\n2 2 2\\n2 5\\n2 1\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 2\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 5\\n2 1\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2 2\\n2 2\\n2 5\\n2 1\\n2",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('10\\n20 8 1 2 4 5 1 2') == '20 8'\nassert solution('10\\n10 5 20 2 4 1 3') == '5 20'\n",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n1 2 3\\n\"\n    ) == \"1 3 2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\nassert solution('12 3 2') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '24'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\nassert solution(\"1 2 3 4\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 4\\n1 2 4 2 1') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2 4\\n3 8 7 1 2 4\\n8 4 7 1 6') == '56'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n3 3 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '56'\nassert solution('''\n3 2 3\n1 2 3 4\n7 1 1 4\n''') == '12'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 4 3 2') == '4'\nassert solution('7 1 3 5 6 5 4 2') == '6'\nassert solution('3') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 41
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 4 3 2\") == \"4\\nLRRR\", \"First example\"\nassert solution(\"7\\n1 3 5 6 5 4 2\") == \"6\\nRRLRRR\", \"Second example\"\nassert solution(\"3\\n2 2 2\") == \"1\", \"Third example\"\nassert solution(\"4\\n1 2 4 3\") == \"4\", \"Fourth example\"\n\n\n\"\"\"\n",
        "num_ids_2": 55,
        "num_ids_4": 94
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'RR'\nassert solution('3') == 'RLL'\nassert solution('4') == 'RLLR'\nassert solution('5') == 'LLRRRLLRLLRLL'\nassert solution('7') == 'RRLRRRRLRRLR'\n",
        "num_ids_2": 21,
        "num_ids_4": 50
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(f) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == output_string\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\nassert solution() == 'LLRR'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0447\u0442\u043e \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442\u0441\u044f \u0441 \u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u044b\u043c\u0438 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043e\u0442 0 \u0434\u043e n-1, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c n \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0447\u0435\u0442\u043d\u044b\u043c.\n\n\u0412\u0442\u043e\u0440\u043e\u0439 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u0432\u0432\u043e\u0434\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 stdin. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0432 \u0441\u043f\u0438\u0441\u043a\u0438 \u043d\u0435 \u0440\u0430\u0432\u043d\u044b \u043d\u0443\u043b\u044e, \u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043d\u0435\u043f\u0443\u0441\u0442\u044b\u043c\u0438 \u0441\u043f\u0438\u0441\u043a\u0430\u043c\u0438 \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043e\u0442 0 \u0434\u043e n-1.\n\n\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442\u0441\u044f \u0441 \u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u044b\u043c\u0438 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043e\u0442 0 \u0434\u043e n-1, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c n \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0447\u0435\u0442\u043d\u044b\u043c.\n\n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0440\u0430\u0432\u043d\u044b \u043d\u0443\u043b\u044e, \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043e\u0442 1 \u0434\u043e n-1.\n\n\u0412 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043e\u0442 1 \u0434\u043e n-1, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043e\u043d\u0438 \u043d\u0435 \u0440\u0430\u0432\u043d\u044b \u043d\u0443\u043b\u044e, \u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u0430\u043c \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043e\u0442 0 \u0434\u043e n-1.\n\n\u0412 \u043f\u044f\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0447\u0438\u0441\u043b\u0430\u043c \u043e\u0442 1 \u0434\u043e n-1.\n\n\u0412 \u0448\u0435\u0441\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a:\n\nstdin = [[1, 2, 3, 4, 5], [0, 2, 4, 6, 8], [1, 3, 5, 7, 9], [0, 2, 4, 6, 8],\n         [1, 3, 5, 7, 9], [0, 2, 4, 6, 8]]\n\n\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u043f\u043e\u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 1 \u0434\u043e n-1, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0430\u043c\u043e \u0447\u0438\u0441\u043b\u0430 \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0441",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 4 3 2') == '4'\nassert solution('7 1 3 5 6 5 4 2') == '6'\nassert solution('3') == 'R'\nassert solution('4') == 'LRRR'\n",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(stdin=\"5 1 4 3 7\") == \"3\"\nassert solution(stdin=\"4 2 5 2 5\") == \"3\"\nassert solution(stdin=\"1 4 4 7 4 1\") == \"3\"\nassert solution(stdin=\"1 3 3 7 4\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 60
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('5 2 2 5 2 5') == '3'\nassert solution('3') == '-1'\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4 4 7 4 1\\n') == '3'\nassert solution('5 2 2 5 2 5\\n') == '3'\nassert solution('1 3 3 7\\n') == '-1'\nassert solution('4 3 7\\n') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n5 4 5 7\\n') == '3\\n'\nassert solution('3\\n1 4 5 6\\n') == '-1\\n'\nassert solution('2\\n1 2\\n') == '2\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 59
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"2 2 5 2 5\") == \"3\"\nassert solution(\"1 2 3 4\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\nassert solution('''\n4\n1 3 3 7\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 4 4 7 4 1\n''') == '3'\nassert solution('''2\n2 8\n''') == '3'\nassert solution('''2\n1 3 3 7\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5 2 5 2 5\n''') == '3'\nassert solution('''\n1 3 3 7\n''') == '-1'\nassert solution('''\n3 2 8\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES', \"First example\"\nassert solution('''\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n\n''') == 'YES', \"Second example\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 2 4 4\n1 1 3 5\n3 1 5 5\n\"\"\"\n    ) == \"NO\"\n\nassert solution(\n\"\"\"\n3 3 7 5\n0 0 4 6\n0 0 7 4\n\"\"\"\n    ) == \"YES\"\n\nassert solution(\n\"\"\"\n5 2 10 5\n3 1 7 6\n8 1 11 7\n\"\"\"\n    ) == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\nassert solution('''\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n''') == 'YES'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(t1) == \"YES\"\nassert solution(t2) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO', 'First example'\n\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES', 'Second example'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 7 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'NO'\nassert solution('0 0 4 6') == 'YES'\nassert solution('0 0 7 4') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 7 5\") == \"NO\"\nassert solution(\"2 2 4 4\") == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1098') == '20'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1098') == \"20\"\nassert solution('10') == \"19\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1098') == '20'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 1 4 5 3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1 2'\nassert solution('2') == '2 3'\nassert solution('3') == '1 2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 1 4 5 3\"\nassert solution(stdin=\"5\\n4 3 0 0 0\") == \"2 1 4 5 3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('10') == '10 4 8 6 5 3 2 1'\nassert solution('1') == '1 1 1 1 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0 1\\n\") == \"3 1\"\nassert solution(\"4\\n0 0 2 4\\n\") == \"4 3 1 2\"\nassert solution(\"6\\n0 1 0 0 4 0\\n\") == \"6 3 1 4 2 0\"\nassert solution(\"7\\n0 1 0 2 3 4 5 6\\n\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\\n0 4 0 3 0 5 1\\n\") == \"7 3 2 1 4 5 6\"",
        "num_ids_2": 39,
        "num_ids_4": 92
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2 1 4 5 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('10 5') == 'NO'\nassert solution('5 2') == 'YES'\nassert solution('10 5') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution([1,2,3,4,5]) == \"YES\"\nassert solution([3, 2, 1, 2, 3]) == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('3 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == 'YES', solution('2 2')\nassert solution('5 2') == 'YES', solution('5 2')\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'NO'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n11 5 2\n11010100101\n''') == '1'\n\nassert solution('''\n11 5 1\n11010100101\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"2 5 1\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n\nstdin = '''\n1\n11010100101'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n\n----------------------------------------------------------------------\n\nInput:\n3 1 0\n1\n\nOutput:\n1\n\n----------------------------------------------------------------------\n\nInput:\n5 3 3\n001101010101\n\nOutput:\n5\n\n----------------------------------------------------------------------\n\nInput:\n6 7 3\n1011000110100100\n\nOutput:\n11\n\n----------------------------------------------------------------------\n\nInput:\n5 4 5\n011101010101\n\nOutput:\n9\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n1\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n2\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n3\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n4\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n5\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n6\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n7\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n8\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n9\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n10\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n11\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n12\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n13\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n14\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n15\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n16\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n17\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n18\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n19\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n20\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n21\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n22\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n23\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n24\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n25\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n26\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n27\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n28\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n29\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n30\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n31\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n32\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n33\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n34\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n35\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n36\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n37\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n38\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n39\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n40\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n41\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n42\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n43\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n44\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n45\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n46\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n47\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n48\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n49\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n50\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n51\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n52\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n53\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n54\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n55\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n56\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n57\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n58\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n59\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101\n\nOutput:\n60\n\n----------------------------------------------------------------------\n\nInput:\n11 5 1\n11010100101",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('10') == '2'\nassert solution('1') == '0'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''11 5 2\n11010100101\n''') == '1'\nassert solution('''11 5 1\n11010100101\n''') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n101001001001\n''') == '1'\nassert solution('''\n1\n11010100101\n''') == '3'\nassert solution('''\n11\n11010100101\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\\nNO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 1\") == \"YES\"\nassert solution(\"2\\n5\\n1 2 2 3 2\") == \"YES\"\nassert solution(\"3\\n5\\n1 2 2 1\") == \"NO\"\nassert solution(\"3\\n4\\n1 2 2 1\") == \"YES\"\nassert solution(\"3\\n4\\n1 1 2\") == \"NO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n2\n1 2 1\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n1\n1 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n2\n1 2 1\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == \"YES\"\n\nassert solution('''2\n3\n1 2\n2 3\n4\n2 4\n''') == \"YES\"\n\nassert solution('''1\n2\n1\n''') == \"NO\"\n\nassert solution('''5\n2\n1 2\n3\n1 2\n3 2\n4\n3 2 4\n''') == \"NO\"\n\nassert solution('''1\n1\n2\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"YES\", \"Case 1\"\nassert solution(\"1\") == \"YES\", \"Case 2\"\nassert solution(\"5\") == \"NO\", \"Case 3\"\nassert solution(\"4\") == \"YES\", \"Case 4\"\nassert solution(\"10\") == \"NO\", \"Case 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n\n''') == '1557'\n\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n\n''') == '99999'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution
        "num_ids_2": 1618,
        "num_ids_4": 1618
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1337\\n1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1') == '99999'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1553\"\nassert solution(\"5\") == \"99999\"\nassert solution(\"2\") == \"99999\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1337\n1 2 5 4 6 6 3 1 9\n\n''') == '1557'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n\n''') == '99999'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1337''') == '1553'\nassert solution('''4\n1337\n1 2 5 4 6 6 3 1 9''') == '1553'\nassert solution('''5\n11111\n9 8 7 6 5 4 3 2 1''') == '99999'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"99999\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    4\n    1337\n    1 2 5 4 6 6 3 1 9\n    ''') == '1557'\n\nassert solution('''\n    5\n    11111\n    9 8 7 6 5 4 3 2 1\n    ''') == '99999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '99999'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1557\", solution(\"4\")\nassert solution(\"5\") == \"99999\", solution(\"5\")\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '6'\nassert solution('15 18 21') == '18 18 18'\nassert solution('100 100 101') == '114'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5 3\n10 1\n\n''') == '1 1 3'\n\nassert solution('''\n2\n8 3\n10 1\n\n''') == '1 1 1'\n\nassert solution('''\n3\n1 2\n3 1\n\n''') == '1 2 1'\n\nassert solution('''\n2\n5 6\n1 1\n\n''') == '1 2 1'\n\nassert solution('''\n5\n1 1\n100 100\n100 100 100 100\n100 100 100 100 100\n100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 100",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1 1 3\"\nassert solution(\"8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"102\"\nassert solution(\"8\\n1 2 3\\n1 2 3\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1 1 3\"\nassert solution(\"8\\n1 2 3\\n1 2 3\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1 1 3\"\nassert solution(\"8\\n1 2 3\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"4\"\n",
        "num_ids_2": 104,
        "num_ids_4": 178
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '2 1 2 3'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '2 1 1 3'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '3 1 1 3'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 3 1 3'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '2 1 1 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1 1 3'\nassert solution(input()) == '102'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\nassert solution(\"\"\"\n5 2 1\n1 2 3\n3 4 5\n6 7 8\n\"\"\") == \"2 4 6\"\nassert solution(\"\"\"\n5 1 2\n1 2 3\n3 4 5\n6 7 8\n\"\"\") == \"2 4 6\"\nassert solution(\"\"\"\n5 1 2\n1 2 3\n3 4 5\n6 7 8\n\"\"\") == \"2 4 6\"\nassert solution(\"\"\"\n1 2 3\n1 2 3\n3 4 5\n6 7 8\n\"\"\") == \"3 4 5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1 1 3\"\nassert solution(\"3\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1 1 3\\n102\"\nassert solution(\"1\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == \"1 1 3\"\nassert solution(\"1\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == \"1 1 3\"\nassert solution(\"1\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == \"1 1 3\"\n",
        "num_ids_2": 73,
        "num_ids_4": 172
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n1 5 2\n9 8 12\n4 5 8\n10 3 3\n1 5 8\n1 5 2\n2 5 4\n3 5 6\n2 5 4\n1 6 7\n2 5 8\n3 5 8\n4 5 8\n3 5 8\n1 5 6\n2 5 4\n2 5 4\n3 5 6\n3 5 6\n2 5 4\n1 5 8\n''') == '1 1 2'\nassert solution('''\n1 5 2\n9 8 12\n4 5 8\n10 3 3\n1 5 8\n1 5 2\n2 5 4\n3 5 6\n2 5 4\n1 6 7\n2 5 8\n3 5 8\n4 5 8\n3 5 8\n1 5 6\n2 5 4\n2 5 4\n3 5 6\n3 5 6\n2 5 4\n1 5 8\n''') == '1 1 2'\nassert solution('''\n1 5 2\n9 8 12\n4 5 8\n10 3 3\n1 5 8\n1 5 2\n2 5 4\n3 5 6\n2 5 4\n1 6 7\n2 5 8\n3 5 8\n4 5 8\n3 5 8\n1 5 6\n2 5 4\n2 5 4\n3 5 6\n3 5 6\n2 5 4\n1 5 8\n''') == '1 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n2 1 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n3 2 1\n112 221 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n4 2 1\n112 221 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 2 3'\nassert solution('''\n5 3 1\n112 221 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\nassert solution(\"\"\"\n1 5 7\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 1\"\nassert solution(\"\"\"\n1 6 7\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 1\"\nassert solution(\"\"\"\n1 10 6\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1 1\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 3 7\n''') == '2'\nassert solution('''\n2\n1 100000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 3 3 7\n''') == '2'\nassert solution('''\n2\n1 100000\n''') == '0'\nprint('You are done! Go check it on your screen.')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2 1 100000\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 3 3 7') == '2'\nassert solution('2\\n1 100000') == '0'\nassert solution('2\\n1 100000') == '0'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 3 7\\n') == '2'\nassert solution('2\\n') == '0'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 1 100000') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n\n2 2 2 1 1 0 4 3 4 4''') == '1 2 3 0 3 \n\nassert solution('''3 2\n1 3 1\n1 2 1\n\n2 2 2 1 1 0 4 3 4 4''') == '-1\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n\n2 2 2 1 1 0 4 3 4 4''') == '2 2 2 1 1 0 4 3 4 4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == \"1 2 3 0 3\"\nassert solution('3 2') == \"2 2 2 1 1\"\n\n\n\n\n\n---",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"1 3 1\\n\"\n    \"1 5 1\\n\"\n    ) == \"1 2 3 0 3\\n\"\n\nassert solution(\n    \"3 2\\n\"\n    \"1 3 1\\n\"\n    \"1 2 1\\n\"\n    ) == \"-1\\n\"\n\nassert solution(\n    \"10 3\\n\"\n    \"4 7 2\\n\"\n    \"1 10 3\\n\"\n    \"8 9 1\\n\"\n    ) == \"2 2 2 1 1 0 4 3 4 4\\n\"\n\nassert solution(\n    \"8 9 1\\n\"\n    \"1 10 3\\n\"\n    \"1 5 1\\n\"\n    \"4 7 2\\n\"\n    \"3 2 1\\n\"\n    \"1 3 1\\n\"\n    ) == \"2 2 2 1 1 0 4 3 4 4\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 3 1\n1 2 1''') == '1 2 3 0 3 \nassert solution('''3 2\n1 3 1\n1 2 1''') == '-1\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4 \n''')",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 3 1\n1 2 1\n\n''') == '-1'\n\nassert solution('''5 2\n1 3 1\n1 2 1\n\n''') == '1 2 3 0 3'\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n\n''') == '2 2 2 1 1 0 4 3 4 4'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"1 2 3 0 3!\"\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1') == '1 2 3 0 3'\nassert solution('3 2\\n1 3 1\\n1 2 1') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3') == '2 2 2 1 1 0 4 3 4 4 \n",
        "num_ids_2": 47,
        "num_ids_4": 77
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''120 51840''') == '7'\nassert solution('''42 42''') == '0'\nassert solution('''48 72''') == '-1'\nprint('all tests passed')",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '7'\nassert solution(input_) == '-1'\nassert solution(input_) == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"aba\") == \"ababababa\"\nassert solution(\"aabb\") == \"ababababa\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'ababababa'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\na\n\n\"\"\") == \"a\"\nassert solution(\"\"\"\n2\nab\n\n\"\"\") == \"\"\nassert solution(\"\"\"\n3\nabab\n\n\"\"\") == \"\"\nassert solution(\"\"\"\n3\nabc\n\n\"\"\") == \"\"\nassert solution(\"\"\"\n5\nabcde\n\n\"\"\") == \"abcdeabcdeabcdeabcde\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\ndajug\n\n\"\"\") == \"dadug\", \"Wrong answer\"\nassert solution(\"\"\"4\na\n\n\"\"\") == \"a\", \"Wrong answer\"\nassert solution(\"\"\"4\nda\n\n\"\"\") == \"dad\", \"Wrong answer\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\nassert solution('3 2\\naba') == 'ababababa'\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\naba\") == \"ababababa\"\nassert solution(\"3 2\\ncat\") == \"catcat\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\naba\") == \"ababababa\"\nassert solution(\"3 2\\ncat\") == \"catcat\"\nassert solution(\"6\\ncatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcatcat",
        "num_ids_2": 32,
        "num_ids_4": 1710
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n') == 'ababababa'\nassert solution('3 2\\n') == 'catcat'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\naba\n\n''') == \"ababababa\"\nassert solution('''\n3\ncat\n\n''') == \"catcatcat\"\nassert solution('''\n1\na\n\n''') == \"a\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3'\nassert solution('4\\n8 3 5 2') == '2'\nassert solution('5\\n2 1 2 4 3') == '0'\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 5 1 2 2''') == '3'\nassert solution('''4\n8 3 5 2''') == '2'\nassert solution('''5\n2 1 2 4 3''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == '4'\nassert solution(input_2) == '2'\nassert solution(input_3) == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n1 4\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n1 2 4'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\n\nstdin = input()\nn = int(stdin)\nstdin = input().split()\n\nx = {}\nfor i in range(len(stdin)):\n    x[i] = stdin[i]\n\nlist1 = []\nfor i in range(len(x)):\n    if x[i] == max(x):\n        list1.append(i)",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n\"\n    \"8 5 1 2 2\\n\") == \"3\"\nassert solution(\n    \"4\\n\"\n    \"8 3 5 2\\n\") == \"2\"\nassert solution(\n    \"4\\n\"\n    \"8 3 5 2\\n\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 1 2 2\") == \"3\"\nassert solution(\"4\") == \"0\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution() == '4 1 5'\nassert solution() == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2\\n') == '3\\n1 4\\n'\nassert solution('4\\n8 3 5 2\\n') == '2\\n1 4\\n'\nassert solution('5\\n2 1 2 4 3\\n') == '0\\n'\n",
        "num_ids_2": 49,
        "num_ids_4": 70
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\nasdf') == 4\nassert solution('5 7\\naaaaa') == 15\nassert solution('10 100\\najihiushda') == 233\n",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\naaaaa''') == '15'\nassert solution('''5 7\naaaaa''') == '-1'\nassert solution('''10 100\najihiushda''') == '233'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"0 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5\\n') == \"4\"\nassert solution('5 6\\n') == \"15\"\nassert solution('5 7\\n') == \"-\"\nassert solution('10 100\\n') == \"233\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['5', '7', '2']) == '-1'\nassert solution(['3', '3', '2', '2', '1']) == '4'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"5 7\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-\"",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'\nassert solution('5 7') == '-1'\nassert solution('4 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'\n\nimport itertools\nfrom collections import defaultdict",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example) == \"YES\"\nassert solution(input) == \"YES\"\nassert solution(input_2) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"YES\"\nassert solution(input_) == \"YES\"\nassert solution(input_) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t1) == 'YES'\nassert solution(t2) == 'NO'\nassert solution(t3) == 'YES'\nassert solution(t4) == 'NO'\nassert solution(t5) == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\nassert solution('5 5 3') == 'NO'\nassert solution('3 5 5') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'\nassert solution() == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\n    \"11:10\\n11:12\") == \"11:11\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5:6') == '4:4'\nassert solution('8:7') == '10:8'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1:1\\n1:1') == '1:1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1:00\n1:01\n''') == '1:02'\n\nassert solution('''\n3:00\n4:00\n''') == '4:01'\n\nassert solution('''\n3:00\n4:00\n''') == '4:02'\n\nassert solution('''\n10:00\n11:00\n''') == '10:30'\n\nassert solution('''\n11:00\n12:00\n''') == '11:01'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '10:00\\n11:00'\n    ) == '10:30'\nassert solution(\n    '11:10\\n11:12'\n    ) == '11:11'\nassert solution(\n    '01:02\\n03:02'\n    ) == '02:02'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\n\nimport sys\nimport io\nimport unittest\n\n\nclass TestTask(unittest.TestCase):\n    def test_sample_input(self):\n        input_data = \"\"\"\n10:00\n11:00\n        \"\"\"\n        expected_result = \"\"\"\n10:30\"\"\"\n        output = solution(input_data)\n        self.assertEqual(output, expected_result)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\nassert solution('''\n01:02\n03:02\n''') == '02:02'\nassert solution('''\n11:11\n11:11\n''') == '11:11'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\nassert solution('''\n01:02\n03:02\n''') == '02:02'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(5) == '5'\nassert solution(10) == '9'\nassert solution(0) == '1'\nassert solution(9) == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n-----Input-----\n2\n\n-----Output-----\n1\n\n-----Input-----\n4\n\n-----Output-----\n2\n\n-----Input-----\n27\n\n-----Output-----\n5\n\n-----Input-----\n42\n\n-----Output-----\n6\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\nassert solution(\"55\") == \"5\"\nassert solution(\"65\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"3\", \"2\", \"1\"]) == \"0\"\nassert solution([\"3\", \"2\", \"1\", \"0\"]) == \"1\"\nassert solution([\"3\", \"2\", \"1\", \"1\"]) == \"2\"\nassert solution([\"3\", \"2\", \"1\", \"2\"]) == \"3\"\nassert solution([\"3\", \"2\", \"1\", \"1\"]) == \"2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'\n",
        "num_ids_2": 60,
        "num_ids_4": 104
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '2'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n\n''') == '7'\n\nassert solution('''\n4\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '1'\nprint(solution(sys.stdin.read()))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3 10\n1 2\n0 4\n3 3\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\nassert solution('''\n2\n3 10\n1 2\n0 4\n3 3\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n4 5\\n1 2\\n9 20') == '7'\nassert solution('2\\n6 4\\n1 3\\n0 4\\n1 20') == '1'\nassert solution('3\\n1 3\\n0 4\\n1 20') == '0'\nassert solution('2\\n3 4\\n1 2\\n9 20') == '1'\n",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3\\n1 3\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n3 3\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\nassert solution('''2\n3 10\n1 5\n''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 6\n1 3\n0 4\n3 3''') == '1'\nassert solution('''4\n2 6\n1 3\n0 4\n3 3''') == '2'\nassert solution('''3\n4 5\n1 2\n9 20''') == '7'\nassert solution('''2\n3 10\n1 5\n\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 5\\n1 2\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('2\\n3 10\\n1 5\\n') == '7'",
        "num_ids_2": 60,
        "num_ids_4": 104
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 6') == '1'\nassert solution('2 6\\n1 3') == '1'\nassert solution('0 4\\n1 3') == '0'\nassert solution('3 3\\n1 20') == '1'\nassert solution('4 5\\n1 2') == '7'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('1') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2,1,1,2,5]) == \"YES\"\nassert solution([3,4,3]) == \"NO\"\nassert solution([5,5,5]) == \"YES\"\n",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n\") == \"4\"\nassert solution(\"5 6\\n\") == \"15\"\nassert solution(\"5 7\\n\") == \"-1\"\nassert solution(\"10 100\\n\") == \"233\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\nabaca') == '-1'\nassert solution('5 6\\naaaaa') == '4'\nassert solution('3 5\\nabac') == '-1'\nassert solution('5 7\\naaaaa') == '233'\n\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == 4\nassert solution(\"5 6\") == 15\nassert solution(\"5 7\") == -1\nassert solution(\"10 100\") == 233\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 5\\n\"\n    \"asdf\"\n) == \"4\"\n\n\nassert solution(\n    \"5 6\\n\"\n    \"aaaaa\"\n) == \"15\"\n\n\nassert solution(\n    \"5 7\\n\"\n    \"aaaaa\"\n) == \"-1\"\n\n\nassert solution(\n    \"10 100\\n\"\n    \"ajihiushda\"\n) == \"233\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\n\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1\n''') == '4'\nassert solution('''\n3 2 2\n''') == '7'\nassert solution('''\n1 100 1\n''') == '3'\nassert solution('''\n30 20 10\n''') == '39'\nassert solution('''\n1 200 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == \"4\"\nassert solution('3 2 2') == \"7\"\nassert solution('30 20 10') == \"39\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1 1\n''') == '4'\nassert solution('''3 2 2\n''') == '7'\nassert solution('''1 100 1\n''') == '3'\nassert solution('''30 20 10\n''') == '39'\nassert solution('''1000000000000000\n''') == '600'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nprint('Cheers, It is solved!')\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n2 1 1\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n3 2 2\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"\n1 100 1\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n30 20 10\n\"\"\"\n) == \"39\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 1\n''') == '4'\nassert solution('''\n3 2 2\n''') == '7'\nassert solution('''\n1 100 1\n''') == '3'\nassert solution('''\n30 20 10\n''') == '39'\nassert solution('''\n3 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n\nstdin = '1 100 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1\n''') == '4'\nassert solution('''\n30 20 10\n''') == '39'\nassert solution('''\n1 100 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('6 4') == 'YES'\nassert solution('5 5') == 'NO'\nassert solution('4 5') == 'YES'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\nassert solution('''\n4 4\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n''') == 'NO'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\nassert solution('''4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'NO'\n'''\n\n\n\n\nimport numpy\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES'\nassert solution('''10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES'\nassert solution('''5 5\n5 5\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES'\nassert solution('''6 6\n5 7\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100''') == 'YES'\nassert solution('''4 4\n5 5\n5 5\n7 7\n8 8\n9 9\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1''') == 'YES'\nassert solution('''5 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'NO'\nassert solution('''2 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1''') == 'YES'\nassert solution('''10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == 'YES', \"3 4\"\nassert solution('3 5') == 'NO', \"3 5\"\nassert solution('10 10') == 'YES', \"10 10\"\nassert solution('10 10') == 'NO', \"10 10\"\nassert solution('100 100') == 'YES', \"100 100\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t1) == 'YES', \"Error\"\nassert solution(t2) == 'NO', \"Error\"\nassert solution(t3) == 'NO', \"Error\"\nassert solution(t4) == 'YES', \"Error\"\nassert solution(t5) == 'YES', \"Error\"\n\nYou can get 100% marks if you solved all test cases. Unfortunately you can still fail them. Try to do so!\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\n\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'NO'\n\n\nimport math\nimport itertools",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n1 100\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n2 2\\n1 100\") == \"NO\"",
        "num_ids_2": 138,
        "num_ids_4": 217
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n2\n1\n4\n1''') == \"1\"\nassert solution('''6\n5\n4\n3\n2\n1''') == \"1\"\nassert solution('''1\n1\n1\n1\n1''') == \"0\"\nassert solution('''5\n2\n2\n1\n2\n1''') == \"1\"\nassert solution('''10\n5\n6\n7\n8\n9''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n\"\"\") == '1'\n\nassert solution(\n\"\"\"\n6\n\"\"\") == '1'\n\nassert solution(\n\"\"\"\n1\n\"\"\") == '0'\n\nassert solution(\n\"\"\"\n2\n\"\"\") == '1'\n\nassert solution(\n\"\"\"\n4\n\"\"\") == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\nassert solution() == '4'\nassert solution() == '0'\nassert solution() == '0'\nassert solution() == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution() == \"4\"\nassert solution() == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n(()))()\n''') == '5'\nassert solution('''\n3\n(()\n''') == '4'\nassert solution('''\n2\n(((\n''') == '0'\n\nprint(solution('''\n3\n(()\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_stdin) == '109972927'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5071') == 4\nassert solution('705') == 1\nassert solution('1241367') == -1",
        "num_ids_2": 17,
        "num_ids_4": 28
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5071') == '4', \"error\"\nassert solution('705') == '1', \"error\"\nassert solution('1241367') == '-1', \"error\"\nassert solution('1009') == '-1', \"error\"\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5071') == '4', solution('5071')\nassert solution('705') == '1', solution('705')\nassert solution('1241367') == '-1', solution('1241367')\n",
        "num_ids_2": 30,
        "num_ids_4": 49
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\na\nb''') == '''1\n1 2 1 2 1\n2\n1 1 1 1 1\n2\n1 1 1 1 1'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\naaabbcbb\n\n''') == '2 1 1 1 1 2 3'\nassert solution('''\n8\nabcdedc\n\n''') == '3 1 1 1 1 2 3'\nassert solution('''\n7\nabcde\n\n''') == '1 1 1 1 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('4') == '1 2 1 2 1'\nassert solution('5') == '1 2 2 2 2 1'\nassert solution('6') == '1 2 2 2 2 1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3\nabcde\n\n3\naabbc\n\n2\n\"\"\") == \"\"\"\n1\n1 1 1 1 1\n\n2\n1 1 1 1 1 \n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nabcd') == '2'\nassert solution('2\\nabcd') == '1'\nassert solution('6\\nabce') == '2'\nassert solution('2\\nabce') == '1'\nassert solution('7\\nabce') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\naacdf\n''') == '2'\n\nassert solution('''4\nabcdef\n''') == '2'\n\nassert solution('''5\nabcdefg\n''') == '2'\n\nassert solution('''4\nabc\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nabcd') == '2'\nassert solution('8\\naaabbbbbbbb') == '1'\nassert solution('6\\nabcdefghi') == '1'\nassert solution('5\\nabcd') == '1'\nassert solution('3\\nabcd') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('8') == '2'\nassert solution('7') == '1'\nassert solution('5') == '1'\nassert solution('4') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\na\n''') == 'NO'\nassert solution('''\n2\na\nb\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"YES\"\n\n\"\"\"\n\nn = int(input())\n\nl = []\n\nfor i in range(n):\n    l.append(input())\n\nl.sort()\n\nfor i in l:\n    if i not in l[:l.index(i)]:\n        print(\"NO\")\n        exit()\nprint(\"YES\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"0\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n\n''') == \"NO\"\nassert solution('''5\na\naba\nabacaba\nba\naba\nabab\n\n''') == \"YES\"\nassert solution('''5\na\naba\nabacaba\nba\naba\nabab\n\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES', 'Wrong answer'\nassert solution('3') == 'NO', 'Wrong answer'\nassert solution('1') == 'NO', 'Wrong answer'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'NO'\nassert solution('3') == 'YES'\nassert solution('3') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"8 4\") == \"5\"\nassert solution(\"5 100\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 4\\n\") == \"5\"\nassert solution(\"5 2\\n\") == \"0\"\nassert solution(\"5 100\\n\") == \"5\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 4\n4 2 3 1 5 1 6 4\n''') == '5'\nassert solution('''5 2\n3 1 2 1 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 100') == '5'\nassert solution('10 5') == '5'\nassert solution('8 10') == '8'\nassert solution('5 100') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 4\n4 2 3 1 5 1 6 4\n''') == '5'\n\nassert solution('''5 2\n3 1 2 1 3\n''') == '0'\n\nassert solution('''5 100\n12 34 55 43 21\n''') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == \"5\"\n\nIn the fourth example, Mishka does not solve the problems.\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"5 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 4\n4 2 3 1 5 1 6 4\n''') == \"5\"\nassert solution('''\n5 2\n3 1 2 1 3\n''') == \"0\"\nassert solution('''\n5 100\n12 34 55 43 21\n''') == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 100') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"4 4\") == \"12\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\n') == '12'\nassert solution('3 9\\n') == '14'\nassert solution('3 6\\n') == '12'\nassert solution('506 2708\\n') == '3218'",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n') == '12'\nassert solution('3 9\\n') == '14'\nassert solution('3 6\\n') == '12'\nassert solution('506 2708\\n') == '3218'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"8\"\nassert solution(input_) == \"14\"\nassert solution(input_) == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 9]) == 14\nassert solution([4, 4]) == 12\nassert solution([6, 6]) == 14\nassert solution([9, 9]) == 16\nassert solution([3, 6]) == 16\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4\\n') == '12\\n'\nassert solution('3 9\\n') == '14\\n'\nassert solution('3 6\\n') == '12\\n'\nassert solution('506 2708\\n') == '3218\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '12'\nassert solution('3 9') == '14'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == 'NO'\nassert solution(\"aaaaa\") == 'YES'\nassert solution(\"\") == 'NO'\nassert solution(\"abacbecfd\") == 'YES'\nassert solution(\"\") == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == 'YES'\nassert solution('8') == 'YES'\nassert solution('7') == 'NO'\nassert solution('5') == 'YES'\nassert solution('4') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'NO'\nassert solution('8') == 'YES'\nassert solution('7') == 'YES'\nassert solution('5') == 'YES'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'NO'\nassert solution('7') == 'YES'\nassert solution('9') == 'YES'\nassert solution('8') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\nabcdedc') == 'NO'\nassert solution('9\\nabacbecfd') == 'YES'\nassert solution('7\\nabcde') == 'NO'\nassert solution('5\\nabcde') == 'YES'\n",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nabac\") == \"NO\"\nassert solution(\"3\\nabcd\") == \"YES\"\nassert solution(\"1\\n\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nabcde\n''') == 'NO'\nassert solution('''\n4\naec\n''') == 'YES'\nassert solution('''\n8\naaaa\n''') == 'YES'\nassert solution('''\n1\naaa\n''') == 'NO'\nassert solution('''\n10\naaaaaaaaa\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"NO\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"4 4\") == \"25\"\nassert solution(\"5 5\") == \"25\"\nassert solution(\"5 5\") == \"25\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\nassert solution('3 3') == '-1'\nassert solution('4 4') == '25'\nassert solution('-3 -3') == '-1'\nassert solution('-7 9') == '25'\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n2 1''') == '25'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"4 3\") == \"25\"\nassert solution(\"12 7\") == \"17\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"4 1\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '25'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '25'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '-1'\nassert solution('2 2') == '2'\nassert solution('-2 -2') == '-1'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 1\") == -1",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''26 6\n\n''') == 'YES'\nassert solution('''8 3\n\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 2') == 'NO'\n\nassert solution('1 2 3 4 5 6 8') == 'YES'\nassert solution('2 1 3 4 5 6 8') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n27 6\n\n''') == 'NO'\nassert solution('''\n28 6\n\n''') == 'YES'\nassert solution('''\n49 6\n\n''') == 'YES'\nassert solution('''\n60 6\n\n''') == 'NO'\nassert solution('''\n52 6\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == 'YES'\nassert solution('8 3') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'\n\n\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n            26 6\n            ''') == 'YES'\nassert solution('''\n            8 3\n            ''') == 'NO'\nassert solution('''\n            1 1\n            ''') == 'YES'\nassert solution('''\n            9 4\n            ''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"9 4\") == \"NO\"\nassert solution(\"13 4\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 6\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''5 2\n300 -300\n1 299\n1 123\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nprint('solution() is OK')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 6\n4 6\n10 -2\n8 -1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('6 20') == '3'\nassert solution('10 -2') == '7'\nassert solution('1 27') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"10 4\") == \"4\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 4\n4 6\n10 -2\n8 -1\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\n\"\"\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n4 6\n10 -2''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''5 8\n-1 -1\n1 -1\n1 -1\n-1 1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n1 -1\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('3 2') == '3'\nassert solution('30 -30') == '1'\nassert solution('50 -50') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'NO'\nassert solution('4') == 'YES'\nassert solution('3') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2\\n1 2 1\\n\"\n) == \"YES\"\nassert solution(\n    \"3\\n1 3 1\\n\"\n) == \"YES\"\nassert solution(\n    \"4\\n1 1 1 1 1 3 3 3 3\\n\"\n) == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\"\n\n\n\"\"\"\n",
        "num_ids_2": 49,
        "num_ids_4": 105
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == 'NO'\nassert solution(\"3\") == 'NO'\nassert solution(\"3\") == 'NO'\nassert solution(\"5\") == 'YES'\nassert solution(\"5\") == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == 'NO'\nassert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\"\"\n10\n10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"NO\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES', \"easy\"\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES', \"easy\"\n\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES', \"easy\"\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO', \"easy\"\n\nassert solution('''3 10\n10 -2\n8 -1\n''') == 'YES', \"easy\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"6 6\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES', 'First'\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n\n''') == 'YES', 'Second'\n\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n\n''') == 'NO', 'Third'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'NO'\nassert solution('5 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"4 5\") == \"NO\"\nassert solution(\"3 10\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n4 6\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"\n",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\"\"\n3 4\n4 6\n10 -2\n8 -1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 5\n4 -5\n4 -2\n1 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 4\n5 2\n5 -3\n2 1\n4 -2\n\"\"\") == \"NO\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1 2\") == \"NO\"\nassert solution(\"6 1 2\") == \"NO\"\nassert solution(\"6 1 2\") == \"NO\"\nassert solution(\"6 1 2\") == \"NO\"\nassert solution(\"6 1 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 3 2\") == \"YES\", \"Wrong answer\"\nassert solution(\"10 1 11\") == \"YES\", \"Wrong answer\"\nassert solution(\"10 1 5\") == \"YES\", \"Wrong answer\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1 3\") == \"YES\"\nassert solution(\"7 1 3\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3 \n\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \n\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0 \n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3 2\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 0 1 1 0 0 0 0\"\n",
        "num_ids_2": 45,
        "num_ids_4": 70
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 2') == 'YES'\nassert solution('7 2 2') == 'YES'\nassert solution('8 2 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('7 1 5') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1 2\\n3') == 'YES'\nassert solution('7 3 2\\n1 2 1\\n') == 'YES'\nassert solution('7 3 2\\n2') == 'NO'\nassert solution('10 1 11\\n1') == 'YES'\nassert solution('10 1 5\\n2') == 'YES'\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('baaba') == 3\nassert solution('bbaba') == 3\nassert solution('abcde') == 2\nassert solution('abcde') == 2\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == 3\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 1\nassert solution('asdfasdf') == 0\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 17,
        "num_ids_4": 1517
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == 3\nassert solution(sample_input_2) == 2\nassert solution(sample_input_3) == 0\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"bbaba\nbb\n\"\"\") == 3\n\nassert solution(\n\"\"\"baaba\nab\n\"\"\") == 2\n\nassert solution(\n\"\"\"abcde\nabcde\n\"\"\") == 0\n\nassert solution(\n\"\"\"asdfasdf\nfasd\n\"\"\") == 3\n\n\nfrom unittest import TestCase\n\nclass Test(TestCase):\n\n    def test_simple(self):\n        from solution import solution\n        assert solution(\n\"\"\"baaba\nab\n\"\"\") == 2\n    def test_long(self):\n        from solution import solution\n        ",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('ab') == 2\nassert solution('asdfasdf') == 3\nassert solution('abcde') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('baaba') == 3, \"Wrong solution\"\nassert solution('ab') == 2, \"Wrong solution\"\nassert solution('asdfasdf') == 3, \"Wrong solution\"\nassert solution('abcde') == 0, \"Wrong solution\"\n\n'''",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\naaaa\naaa\n''') == '4'\nassert solution('''\nbabaa\nbb\n''') == '3'\nassert solution('''\nasdfasdf\nfasd\n''') == '3'\nassert solution('''\nbbb\nbb\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('bbba') == 2\nassert solution('bbb') == 2\nassert solution('bbbaa') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('baaba') == '3'\nassert solution('baaba') == '3'\nassert solution('bbaba') == '3'\nassert solution('bbaba') == '3'\nassert solution('asdfasdf') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0.1') == '1'\nassert solution('1.3') == '1'\nassert solution('1.99') == '1'\nassert solution('2.23') == '2'\nassert solution('3.14') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('0.006922') == '10 3'\nassert solution('0.123456789') == '10 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('0.00100000') == '1 1'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == \"3 2\"\nassert solution(2) == \"10 3\"\nassert solution(4) == \"9 9\"\nassert solution(5) == \"8 8\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n\n'''\n\nimport re",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 3\n''') == 'YES'\nassert solution('''\n10 4 3\n''') == 'NO'\nassert solution('''\n10 5 3\n''') == 'YES'\nassert solution('''\n1 2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 5 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 5 3\n2 5\n7 2\n3 7\n3 1\n1 6\n8 7\n4 3\n5 6''') == \"YES\"\nassert solution('''6 2 3\n2 1\n4 2\n1 2\n5 2\n2 3\n3 1\n4 3\n5 3''') == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 2 3') == 'NO'\nassert solution('8 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 146
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('100 4 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input := '6 3 3') == \"YES\"\nassert solution(input := '6 2 3') == \"NO\"\nassert solution(input := '10 4 3') == \"YES\"\nassert solution(input := '8 5 3') == \"YES\"\nassert solution(input := '10 5 3') == \"YES\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('20 10 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\\n\") == \"NO\"\nassert solution(\"10 4 3\\n\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\"\n",
        "num_ids_2": 48,
        "num_ids_4": 144
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution() == \"NO\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"0011\"\nassert solution(input()) == \"110100\"\nassert solution(input()) == \"101100\"\nassert solution(input()) == \"011001\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1100'\nassert solution(input()) == '0010100'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == '1100'\nassert solution(solution.__name__) == '1100'\nassert solution(solution.__self__) == '1100'\nassert solution(solution.__module__) == '__main__'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nassert solution('5 1 5') == '1110111'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1100'\nassert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\nab\nbc\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\naa\nbc\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n1\ncb\nac\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5\nbaa\naaa\naaaa\nabc\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\naa\nbc\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\nab\\nbc\") == \"acbbac\"\nassert solution(\"3\\naa\\nbc\") == \"cacbacbab\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"0\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nab\\nbc') == \"YES\"\nassert solution('2\\nab\\nbc') == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"0\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == \"YES\"\nassert solution('3') == \"YES\"\nassert solution('4') == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nab\\nbc\\n') == 'acbbac', \"Wrong answer\"\nassert solution('2\\nab\\nbc\\n') == 'cacbacbab', \"Wrong answer\"\nassert solution('1\\ncb\\nac\\n') == 'abc', \"Wrong answer\"\n",
        "num_ids_2": 53,
        "num_ids_4": 76
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nab\\nbc\") == \"acbbac\"\nassert solution(\"3\\naa\\nbc\") == \"cacbacbab\"\nassert solution(\"2\\nab\\nbc\") == \"NO\"\n",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n-2 1\\n\") == \"3 1 2\"\nassert solution(\n    \"5\\n1 1 1 1\\n\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '1 2 3 4 5'\nassert solution('5') == '-1'\nprint(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 2 3 4\"\n\nassert solution(input()) == \"1 2 3 4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"5 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"3 1 1 1\") == \"1 2 3\"\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '1 1 1 1'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    6\n    3 1 2 4\n    '''\n    ) == '3 1 2 4'\nassert solution(\n    '''\n    2\n    4\n    '''\n    ) == '-1'\nassert solution(\n    '''\n    10\n    4 5 6 7 8 9 3 2 1\n    '''\n    ) == '3 1 2 4 5 6 7 8 9'\nassert solution(\n    '''\n    4\n    -4 -5 -6 -7\n    '''\n    ) == '-4 -5 -6 -7'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"-1\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 1 2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n2 3\\n1 3 2\\n2 2 2\\n\"\n) == \"1\"\nassert solution(\n    \"3\\n2 3 1\\n1 2 3\\n3 3 1\\n2 1 2\\n\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\n''') == '5'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\nassert solution('50') == '10'\nassert solution('500') == '15'\nassert solution('5000') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"3\"\nassert solution(\"123\") == \"3\"\nassert solution(\"1234\") == \"4\"\nassert solution(\"12345\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"17\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"10\\n\") == \"5\\n\"\nassert solution(\"1000\\n\") == \"21\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\nassert solution('20') == '6'\n\n\"\"\"\nfrom math import sqrt",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"5\"\nassert solution(\"100\") == \"101\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(5) == '5'\nassert solution(10) == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"11\") == \"3\"\nassert solution(\"12\") == \"4\"\nassert solution(\"13\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '119 226'\nassert solution('319') == '119 226'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 1 1\n1 1 0\n\n''') == '0 1'\nassert solution('''\n15\n5 5 5\n5 5 5\n\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n\n''') == '119 226'\nassert solution('''\n686\n479 178 29\n11 145 530\n\n''') == '22 334'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''3\n0 0 3\n3 0 0\n''') == '3 3'\nassert solution('''686\n479 178 29\n11 145 530\n''') == '119 226'\nassert solution('''319\n10 53 256\n182 103 34\n''') == '22 334'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\"\n    \"0 1 1\"\n    \"1 1 0\"\n    ) == \"0 1\"\n\nassert solution(\n    \"3\"\n    \"0 0 3\"\n    \"3 0 0\"\n    ) == \"3 3\"\n\nassert solution(\n    \"686\"\n    \"479 178 29\"\n    \"11 145 530\"\n    ) == \"119 226\"\n\nassert solution(\n    \"319\"\n    \"10 53 256\"\n    \"182 103 34\"\n    ) == \"119 226\"\n\nassert solution(\n    \"319\"\n    \"10 53 256\"\n    \"182 103 34\"\n    ) == \"119 226\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '119 226'\nassert solution('319') == '119 226'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0 1'\nassert solution('2') == '0 1'\nassert solution('3') == '3 3'\nassert solution('5') == '0 15'\nassert solution('15') == '0 15'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0 1\"\nassert solution(input()) == \"0 1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n3\n0 0 3\n5 5 5\n''') == '0 3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4 1 1'\nassert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('1') == '1'\nassert solution('3') == '1 1'\nassert solution('11') == '4 4'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 1 1 1\n''') == '4 4'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"4 4\"\n\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"4 4 4 4 4 4\"\nassert solution(\"1\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"2\\n0 1\\n\") == \"1\"\n\n\"\"\"\n\n\nimport math\n",
        "num_ids_2": 56,
        "num_ids_4": 90
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"\"\"2\n3 4\n1 1\n2 2\n3 3\n4 4\n\"\"\"[:-1]",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4 4 4 4 4 4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n\nassert solution() == \"4\"\nassert solution() == \"4\"\nassert solution() == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n4 1 2 2 1 5 3\n''') == '3'\n\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4'\n\nprint(solution('''\n4\n4 1 2 2 1 5 3\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\n\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    1 2 3\n''') == 'YES'\nassert solution('''\n    4\n    3 1 2 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\") == \"YES\", \"First example\"\nassert solution(\"3\\n1 2 3\") == \"NO\", \"Second example\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'NO'\n\n\n\n------SOLUTION------",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nabcdef\nabdfec\n''') == '-1'\nassert solution('''\n5\nabcd\naccd\n''') == '4'\nassert solution('''\n4\nabcd\naccd\n''') == '-1'\nassert solution('''\n8\nabcdefghijklmnopqrstuvwxyz\nzxvfrtsxjylbdmghjkl\n''') == '9'\nassert solution('''\n5\naaaaa\naaa\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '4'\nassert solution('''\n4\nabcd\naccd\n''') == '-1'\nprint(\"Test passed\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aab\") == \"2\"\nassert solution(\"aba\") == \"2\"\nassert solution(\"abcdef\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '-1'\nassert solution('''\n4\nabcd\naccd\n''') == '4 3 5 4 5'\nassert solution('''\n8\nabcdefgh\nacfdegh\n''') == '5 5 4 5 3 3 2 2'\nassert solution('''\n15\naaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4 3 5 4 5\" or solution() == \"-1\"\nassert solution(\"4\\nabcd\") == \"3 5 4 5\" or solution(\"4\\nabcd\") == \"-1\"\nassert solution(\"1\\nabcdef\") == \"1\" or solution(\"1\\nabcdef\") == \"-1\"\n\n\"\"\"\n",
        "num_ids_2": 49,
        "num_ids_4": 76
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"3 4 2\") == \"3\"\nassert solution(\"1 2 3 4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\naabbcdd\nacdfg''') == '-1'\nassert solution('''3\naaaa\nacddf\nbbb\n''') == '2'\nassert solution('''8\naaaa\naaaa\naaaa\nbbbb\nbbbb\ncccc\ndddd\neeeee\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n''') == '-1'\nassert solution('''\n4\nabcd\naccd\n\n''') == '4'\nassert solution('''\n3\nacdef\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '4'\nassert solution('4') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '4'\nassert solution('4') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"SPPSPSPS\"\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"PSPSPSPS\"\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == \"SPSPPSPS\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nba\\naaa\\naa\\na\\nabab\\naba\\nab') == 'PSPS'\nassert solution('1\\nP') == 'PS'\nassert solution('1\\nS') == 'PS'\nassert solution('3\\na') == 'PPS'\nassert solution('3\\nc') == 'PS'\n\n\"\"\"\n\n\nn = int(input())\nresult = \"\"\n",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n''') == 'SPPSPSPS'\nassert solution('''\n3\na\nc\n\n''') == 'PPSS'\nassert solution('''\n2\na\nc\n\n''') == 'PS'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n''') == 'SPPSPSPS'\nassert solution('''3\na\nc\n\n''') == 'PS'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"SPPSPSPS\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nba\\nabab\\na\\na\\na\\nab\\naba\\nab\\naba\\n') == 'SPPSPSPS'\nassert solution('3\\na\\na\\na\\n') == 'PPSS'\nassert solution('2\\na\\nc\\n') == 'PS'\nassert solution('5\\nba\\nabab\\na\\na\\na\\nab\\naba\\nab\\naba\\n') == 'SPPSPPSPS'\nassert solution('4\\nab\\nab\\nab\\nab\\n') == 'SPPS'\n",
        "num_ids_2": 60,
        "num_ids_4": 117
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nab\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\n\nassert solution('''3\na\nc\n\n''') == 'PPSS'\n\nassert solution('''2\na\nc\n\n''') == 'PS'\n\nassert solution('''1\na\n''') == 'SP'\n\nassert solution('''5\nabab\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == \"SPPSPSPS\"\nassert solution('''\n3\na\nc\n\n''') == \"PS\"\nassert solution('''\n2\na\nc\n\n''') == \"PS\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n4\n6\n8\n10\n''') == \"1\"\n\nassert solution('''\n1\n1\n1\n1\n''') == \"1\"\n\nassert solution('''\n1\n1\n1\n1\n''') == \"1\"\n\"\"\"\n\na, b, c, d = map(int, input().split())",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 2 6 4 6 5\") == \"1\"\nassert solution(\"4 5 7 2 6 4 5\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"0\"\nassert solution(\"0 0 0 0 0 0 0 0\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 2 2 2 2 2\") == \"1\"\nassert solution(\"0 2 2 2 2 2\") == \"1\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\nassert solution(\"5 6 7 8 9 10\") == \"1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('4 4 6 8 10') == '1'\nassert solution('1 4 6 8 10') == '1'\nassert solution('4 5 6 8 10') == '1'\nassert solution('1 1 1 1 1') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3') == '3'\n\nprint(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n5\n3\n10\n9\n9''') == '1'\nassert solution('''4\n3\n3\n6\n8''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 4 5 6\n''') == '4'\nassert solution('''\n1 2 3 4 5 6 7 8 9 10 11\n''') == '5'\nassert solution('''\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '6'\nassert solution('''\nn",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 6 4\") == \"1\"\nassert solution(\"2 4 6 8 10\") == \"2\"\n\nSolution is '1'\n\"\"\"\n\nn = list(map(int, stdin.split()))\nprint(max(n))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"1\"\nassert solution(\"5 6\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 4 6 8 10\n''') == '1'\n\nassert solution('''\n1 1 1 1\n''') == '2'\n\nassert solution('''\n2 2 2 1\n''') == '1'\n\nassert solution('''\n2 3 5\n''') == '1'\n\nassert solution('''\n-3 0 0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 61
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n0\") == \"0\"\nassert solution(\"3\\n1 0 1 0 1 0 1 0 1 0\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution(\"3\") == '2'\nassert solution(\"4\") == '0'",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 1 1\\n') == '0'\nassert solution('4\\n1 1 1\\n') == '0'",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'\n'''\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example) == solution_example\nassert solution(input) == solution\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1 2\n''') == '1'\nassert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n3\n2 6\n''') == '2'\nassert solution('''\n4\n2 6\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 2 3 4 5\"\n) == \"1\", \"Example testcase 1\"\n\nassert solution(\n    \"6 90 12 18 30 18\"\n) == \"4\", \"Example testcase 2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7 3 4 5\\n\") == \"2\"\nassert solution(\"6\\n90 12 18 30 18\\n\") == \"4\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 1\nassert solution('10') == 1\nassert solution('5') == 1\nassert solution('8') == 2\nassert solution('12') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 3 4 5\n''') == '1'\n\nassert solution('''\n6 90 12 18 30 18\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == '1', \"First\"\nassert solution('''1\n2\n3\n4\n5''') == '1', \"Second\"\nassert solution('''1\n1\n2\n3\n4\n5''') == '1', \"Third\"\nassert solution('''1\n1\n2\n3\n4\n5''') == '1', \"Fourth\"\nassert solution('''1\n1\n1\n2\n3\n4\n5''') == '2', \"Fifth\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '4'\nassert solution() == '3'\nassert solution() == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('100') == '4'\nassert solution('1000') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"1\") == '1'\nassert solution(\"4\") == '2'\nassert solution(\"100\") == '1'\nassert solution(\"1\") == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '1'\nassert solution('100 1 2 4 3 3 2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution('1') == '1'\nassert solution('100') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\") == \"2\"\nassert solution(\"2\\n100\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('100') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n2\\n4\\n3\\n3\\n2\") == \"2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"\nassert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"-1\"\n\n'''\n\nimport math",
        "num_ids_2": 44,
        "num_ids_4": 95
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n0 0 1 1 0 1\n''') == '2'\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\nassert solution('''\n11 9\n1 0 0 0 0 1 0 1 0 0 0 1 1 1 1\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"3\"\nprint(solution(input_))\nassert solution(input_) == -1\nprint(solution(input_))",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"",
        "num_ids_2": 41,
        "num_ids_4": 66
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 2') == '2'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '3'\nassert solution('5 10') == '2'\nassert solution('10 3') == '-1'\nassert solution('4 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n0 0 1 1 0 1\n''') == '3'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '2'\nassert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 10\n0 0 1 1 0 1 0 0 0 1\n''') == '2'\n\n'''\n    while (i < n):\n        if (isHeaterOn(i, a)):\n            a[i] = 1\n            i += r\n        else:\n            a[i] = 0\n            i += r\n        #print(a)\n        \n    return a\n        \n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 66
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n0 0 0 0 0\\n\") == \"3\"\nassert solution(\"5 10\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"2\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"-1\"\nassert solution(\"10 3\\n1 0 0 0 0 0 0 0 0 0 1\\n\") == \"3\"\n",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('3') == '0'\n\nassert solution('100') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('12') == '6'\nassert solution('100') == '18'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('10') == '6'\nassert solution('9') == '0'\nassert solution('1') == '0'\nassert solution('-3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '3'\nassert solution('3') == '3'\nassert solution('6') == '6'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4''') == '1 1 2'\nassert solution('''5''') == '2 1 1 1'\nassert solution('''6''') == '1 1 1 1 1 1'\nassert solution('''11''') == '5 3 2 1 1 1 1'\nassert solution('''1000''') == '12 12 12 12 12 12 12 12 12 12 12 12 12'\n",
        "num_ids_2": 31,
        "num_ids_4": 68
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n(((())\n''') == '3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\nassert solution(\"(((())\") == '3'\nassert solution(\")((()(()\") == '5'\nassert solution(\"(()())(())\") == '7'\nassert solution(\"())((()())\") == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(open('tests/in/06-bracket-equals-parentheses.in')) == '2'\nassert solution(open('tests/in/06-bracket-equals-parentheses.in')) == '0'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(inp) == '3'\nprint(solution(inp))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n(()((()()\n''') == 3\n\nassert solution('''6\n(()()()())\n''') == 2\n\nassert solution('''5\n()(()\n''') == 2\n\nassert solution('''8\n)\n''') == 0\n\nassert solution('''6\n()()()()())\n''') == 4",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '(((())'\n    ) == '3'\n\nassert solution(\n    '(((((())'\n    ) == '0'\n\nassert solution(\n    ')('\n    ) == '0'\n\nassert solution(\n    '(()((()'\n    ) == '3'\n\nassert solution(\n
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == 3\nassert solution(\"(((()\")) == 0\nassert solution(\"(())\") == 1\nassert solution(\")\") == 2\nassert solution(\"))\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"fasd\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"test\"\n    ) == \"st\"\n\nassert solution(\n    \"bbaba\"\n    ) == \"3\"\n\nassert solution(\n    \"baaba\"\n    ) == \"2\"\n\nassert solution(\n    \"abcde\"\n    ) == \"0\"\n\nassert solution(\n    \"asdfasdf\"\n    ) == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bbaba') == '3'\nassert solution('baaba') == '2'\nassert solution('abcde') == '0'\nassert solution('asdfasdf') == '3'\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''test\ntst\ntt\net''') == 'test'\nassert solution('''a\nab\na''') == 'ab'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 1\nassert solution('ba') == 1\nassert solution('bba') == 2\nassert solution('ab') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nab\nab\n''') == ''\nassert solution('''\naa\naa\n''') == ''\nassert solution('''\nabcde\nabcde\n''') == ''\nassert solution('''\nbbaba\nbb\n''') == ''\nassert solution('''\nbaaba\nba\n''') == 1\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('a') == 1\nassert solution('asdfasdf') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('baaba') == 2\nassert solution('asdfasdf') == 0\nassert solution('fasd') == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 2 1 1\") == \"2\"\nassert solution(\"2 2 3 2\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"10 5 1 1\") == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 2 1 1') == '3'\nassert solution('3 4 1 1') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 3 3') == '5'\nassert solution('5 5 5 5') == '15'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2\") == \"4\"\nassert solution(\"1 2 2 2\") == \"8\"\nassert solution(\"1 2 2 3\") == \"15\"\nassert solution(\"1 2 2 4\") == \"24\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"3 5 1 4\") == \"6\"\n\n-------\n## More advanced string parsing examples\n-------\n\n- Using the string.Template library\n- Using the string.Template library\n- Using the string.Template library\n\n--- Using the string.Template library ---\n--- Using the string.Template library ---\n--- Using the string.Template library ---\n\nThis is a sample application of the string.Template library. The code below\ntakes two string variables and uses them to print a greeting. It is similar to\nthe \"Hello World\" application shown in Example 1.2, but now the strings are\nstring literals.\n\nimport string\nimport string\n\ngreeting = \"Hello\"\nname = \"World\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 4 2\") == \"8\"\nassert solution(\"1 2 4 3\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == \"2\"\nassert solution('10') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n') == '2'\nassert solution('10\\n') == '5'\nassert solution('15\\n') == '4'\nassert solution('3\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '2'\nassert solution('9 1 4 4 6 7') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('10') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n9 1 4 4 6 7\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\\n\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1 4 4 6 7\") == \"2\"\nassert solution(\"6\\n3 1 4 4 6 7\") == \"2\"\nassert solution(\"8\\n2 3 4 6 7\") == \"4\"\nassert solution(\"2\\n3 1 4 4 6 7\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('9 1 4 4 6 7') == '2'\nassert solution('1000000000000') == '2'\nassert solution('4000000000000') == '1'\nassert solution('3000000000000') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"10 4 4 8\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"5 9 2 3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('10 6 10 11 5 7 3 2 1') == '7'\nassert solution('50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50",
        "num_ids_2": 31,
        "num_ids_4": 1372
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n7 24 21 23\n16 17 14 20 20 11 22\n\"\"\") == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 24 21 23') == \"3\"\nassert solution('17 14 20 20 11 22') == \"2\"\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''1\n2\n3\n4\n5\n6\n7''') == '7'\nassert solution('''1\n1\n1\n1\n1\n1\n1''') == '1'\nassert solution('''2\n2\n2\n2\n2\n2\n2''') == '0'\nassert solution('''1\n3\n3\n3\n3\n3\n3''') == '3'",
        "num_ids_2": 17,
        "num_ids_4": 31
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 24 21 23') == \"3\"\nassert solution('2 1 3') == \"0\"\nassert solution('3 4 5 2 6 1') == \"4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\n\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\n\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\n\nassert solution('''\n7\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\n\nassert solution('''\n8\n1 2 3 4 5 6 7 8 9 10 11\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 10 50 110 250\\n\") == \"1\"\nassert solution(\"5\\n7 12 100 150 199\\n\") == \"2\"\nassert solution(\"5\\n4 7 12 100 150 199\\n\") == \"3\"\nassert solution(\"5\\n1 2 5 6 7 10 21 23 24 49\\n\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"4\"\n\n----",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 5 6 7 10 21 23 24 49\\n\") == '4'\nassert solution(\"5\\n2 10 50 110 250\\n\") == '1'\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == '3'",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n5\n2 10 50 110 250\n\n6\n4 7 12 100 150 199\n\n''') == '1'\n\nassert solution('''\n5\n2 10 50 110 250\n\n6\n4 7 12 100 150 199\n\n''') == '4'\n\nassert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n3\n4 7 12 100 150 199\n\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 4'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''\n5\n5 2 11 3 7\n''') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"4\") == \"1 2\"\nassert solution(\"5\") == \"1 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5 2\n1 10 2\n5 3 7''') == '1 4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2'\nassert solution('5\\n5 2 11 3 7') == '2 4'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n\") == \"1 2\"\nassert solution(\"6\\n5 2 11 3 7\\n\") == \"2 4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 2'\nassert solution() == '2 4'\nassert solution() == '1 4'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n0\n10\n1\n10\n0\n''') == '11'\nassert solution('''6\n0\n12\n1\n0\n0\n''') == '12'\nassert solution('''5\n0\n1\n0\n1\n0\n''') == '0'\nassert solution('''6\n1\n0\n1\n0\n1\n0\n''') == '1'\nassert solution('''5\n0\n1\n1\n1\n0\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('100') == '100'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"01\"\nassert solution(\"6\") == \"01\"\nassert solution(\"7\") == \"0011\"\nassert solution(\"10\") == \"1011\"\nassert solution(\"12\") == \"11010\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"021\"\nprint(\"OK\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n0010001\n''') == '0010001'\nassert solution('''\n2\n01\n''') == '01'\nassert solution('''\n3\n00110\n''') == '001110'\nassert solution('''\n4\n101010\n''') == '101010'\nassert solution('''\n5\n111111\n''') == '111111'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '211220'\nassert solution('6') == '211220'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n121\n\n''') == '021'\nassert solution('''\n3\n011100\n\n''') == '011110'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n121\n''') == '021'\n\nassert solution('''\n6\n000000\n''') == '001122'\n\nassert solution('''\n6\n211200\n''') == '211201'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"01\"\nassert solution(\"6\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1111\"\nassert solution(\"5\") == \"10111\"\nassert solution(\"6\") == \"101110\"\nassert solution(\"7\") == \"1011101\"\nassert solution(\"8\") == \"10111010\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"5 6\") == \"2\"\nassert solution(\"6 0\") == \"4\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"5 6\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 1\n3\n\n''') == '4'\nassert solution('''6 1\n1\n\n''') == '5'\nassert solution('''6 1\n1\n\n''') == '4'\nassert solution('''6 1\n0\n\n''') == '0'\nassert solution('''6 1\n3\n\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '4'\nassert solution('6 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 1\n3''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([6,1]) == \"4\"\nassert solution([6,1,2]) == \"4\"\nassert solution([6,1,2,4]) == \"5\"\nassert solution([6,1,2,4,5]) == \"6\"\nassert solution([6,1,2,4,5,6]) == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '4'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 1\n3\n\n''') == '4'\nassert solution('''6 2\n3\n\n''') == '4'\nassert solution('''6 3\n3\n\n''') == '4'\nassert solution('''6 4\n3\n\n''') == '4'\nassert solution('''6 5\n3\n\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"3\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"6 4\") == \"1\"\nassert solution(\"6 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"7 1\") == \"5\"\nassert solution(\"7 2\") == \"0\"\nassert solution(\"7 3\") == \"0\"\nassert solution(\"7 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\") == \"2\"\nassert solution(\"6 2 5\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 1 5\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('4 5 3') == '2'\nassert solution('1 0 0') == '1'\nassert solution('0 1 0') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"5 1 4\") == \"4\"\nassert solution(\"1 1 4\") == \"4\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 4\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 3') == '2'\nassert solution('6\\n2 4') == '2'\nassert solution('7\\n1 2 3') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\\n\") == \"2\"\nassert solution(\"10 5 6\\n\") == \"10\"\nassert solution(\"1 0 1\\n\") == \"0\"\nassert solution(\"-1 1 0\\n\") == \"-1\"\nassert solution(\"-1 0 0\\n\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 4\") == \"2\"\nassert solution(\"6 2 4\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"6 2 3\") == \"4\"\nassert solution(\"6 2 2\") == \"0\"\nassert solution(\"4 5 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('0 0 0') == '0'\nassert solution('10 10 10') == '10'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"2\"\n\n\"\"\"\n\nstdin = \"\"\"\n1\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('5') == '0'\nassert solution('2') == '2'\n\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(11) == '2'\nassert solution(14) == '0'\nassert solution(61441) == '2'\nassert solution(571576) == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n\n''') == \"1\"\nassert solution('''\n2\n\n''') == \"1\"\nassert solution('''\n3\n\n''') == \"1\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\"\n) == \"27\"\nassert solution(\n    \"3\"\n) == \"27\"\nassert solution(\n    \"3\"\n) == \"27\"\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"10\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"27\"\nassert solution('4') == \"24\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1', \"1\"\nassert solution('2') == '2', \"2\"\nassert solution('3') == '3', \"3\"\nassert solution('4') == '4', \"4\"\nassert solution('5') == '5', \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '27'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"13\") == \"1\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '105', solution('7')\nassert solution('30') == '1085', solution('30')\nassert solution('-13') == '-2135', solution('-13')\n",
        "num_ids_2": 29,
        "num_ids_4": 47
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('7') == '0'\nassert solution('98') == '1'\nassert solution('997') == '1'\nassert solution('13') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1', \"Should be 1\"\nassert solution('12') == '0', \"Should be 0\"\nassert solution('123') == '1', \"Should be 1\"\nassert solution('4567') == '0', \"Should be 0\"\nassert solution('927') == '1', \"Should be 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '1', 'Expected output: 1'\nassert solution('927') == '1', 'Expected output: 1'\nassert solution('48') == '0', 'Expected output: 0'\nprint('Congratulations! All test cases passed.')\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '0'\nassert solution('123') == '1'\nassert solution('12') == '0'\nassert solution('321') == '1'\nassert solution('934') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0'\n\"\"\"\n\nstdin = __import__('sys').stdin.readline\n\na = int(stdin())\nprint(0 if a < 10 else 1)\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 5\n''') == '3'\nassert solution('''\n3\n4 5 3\n''') == '4'\nassert solution('''\n3\n1 2 5\n''') == '4'\nassert solution('''\n3\n4 5 3\n''') == '5'\n\n'''\nNOTE: The last stack ruputation was a bit of a shock, but it is as such. You don't want to\nthink about the last stack ruputation.\n\nThe only difference between the last stack ruputation is that it was not a 10 or 11 byte\nstack ruputation and you can only check the highest byte as to whether or not you can\ndistort the last stack ruputation.\n\nSo if you had a last stack ruputation of 4 bytes then you could use it to check whether\nor not you can distort the last stack ruputation. You cannot distor the last stack ruputation\nsince you cannot retrieve the fourth byte from the last stack ruputation.\n\nWhat you need to do is to check the two last stack ruputations to see if you can distor\nthem. If you can distor them then you will see that you can distor the last stack ruputation\nbecause you cannot retrieve the fourth byte from the last stack ruputation.\n\nOtherwise you will not see that you can distor the last stack ruputation.\n\nSo you need to check both.\n\nTo make it simpler, we will assume that you can distor both of them since if you can\ndistor the last stack ruputation you can distor the second one as well.\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    2 5 3 1\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n\nI AM NOT SURE ABOUT THE EXPECTED OUTPUT OF THE TEST, BUT I AM TRYING TO FIND IT.\n\nIT WILL BE DONE. THIS IS EXACTLY THE SAME APPROACH TO SOLVING THIS PROBLEM, SO THIS IS THE ONLY ONE WORKING.\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\nassert solution(\"6 5 2 3 1\") == \"5\"\nassert solution(\"4 5 2 3 1\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 3 1') == '4', '3rd testcase'\nassert solution('2 4 3 1') == '4', '2nd testcase'\nassert solution('2 4 3 2') == '3', '1st testcase'\nassert solution('1 2 3 4 5') == '0', '4th testcase'\nassert solution('1 2 3 4') == '-1', '1st testcase'",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n5\n3\n1\n''') == '4'\n\nassert solution('''\n1\n1\n''') == '2'\n\nprint(solution('''\n1\n1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n    1 2 3\n    4 5 6''') == \"1\"\n\nassert solution('''5\n    1 2 3 4 5\n    6 7 8 9 10\n    11 12 13 14 15\n    16 17 18 19 20\n    21 22 23 24 25\n    ''') == \"1\"\n\nassert solution('''10\n    1 2 3 4 5 6 7 8 9 10\n    11 12 13 14 15 16 17 18 19 20\n    21 22 23 24 25 26 27 28 29 30\n    31 32 33 34 35 36 37 38 39 40\n    41 42 43 44 45 46 47 48 49 50\n    51 52 53 54 55 56 57 58 59 60\n    61 62 63 64 65 66 67 68 69 70\n    71 72 73 74 75 76 77 78 79 80\n    81 82 83 84 85 86 87 88 89 90\n    91 92 93 94 95 96 97 98 99 100\n    101 102 103 104 105 106 107 108 109\n    111 112 113 114 115 116 117 118 119\n    121 122 123 124 125 126 127 128 129\n    131 132 133 134 135 136 137 138 139\n    141 142 143 144 145 146 147 148 149\n    151 152 153 154 155 156 157 158 159\n    161 162 163 164 165 166 167 168 169\n    171 172 173 174 175 176 177 178 179\n    181 182 183 184 185 186 187 188 189\n    191 192 193 194 195 196 197 198 199\n    201 202 203 204 205 206 207 208 209\n    211 212 213 214 215 216 217 218 219\n    221 222 223 224 225 226 227 228 229\n    231 232 233 234 235 236 237 238 239\n    241 242 243 244 245 246 247 248 249\n    251 252 253 254 255 256 257 258 259\n    261 262 263 264 265 266 267 268 269\n    271 272 273 274 275 276 277 278 279\n    281 282 283 284 285 286 287 288 289\n    291 292 293 294 295 296 297 298 299\n    301 302 303 304 305 306 307 308 309\n    311 312 313 314 315 316 317 318 319\n    321 322 323 324 325 326 327 328 329\n    331 332 333 334 335 336 337 338 339\n    341 342 343 344 345 346 347 348 349\n    351 352 353 354 355 356 357 358 359\n    361 362 363 364 365 366 367 368 369\n    371 372 373 374 375 376 377 378 379\n    381 382 383 384 385 386 387 388 389\n    391 392 393 394 395 396 397 398 399\n    401 402 403 404 405 406 407 408 409\n    411 412 413 414 415 416 417 418 419\n    421 422 423 424 425 426 427 428 429\n    431 432 433 434 435 436 437 438 439\n    441 442 443 444 445 446 447 448 449\n    451 452 453 454 455 456 457 458 459\n    461 460 461 462 463 464 465 466 467\n    469 471 472 473 474 475 476 477 478\n    479 480 481 482 483 484 485 486 487\n    489 490 491 492 493 494 495 496 497\n    501 502 503 504 505 506 507 508 509\n    511 512 513 514 515 516 517 518 519\n    521 522 523 524 525 526 527 528 529\n    531 532 533 534 535 536 537 538 539\n    541 542 543 544 545 546 547 548 549\n    551 552 553 554 555 556 557 558 559\n    561 562 563 564 565 566 567 568 569\n    571 572 573 574 575 576 577 578 579\n    581 582 583 584 585 586 587 588 589\n    591 592 593 594 595 596 597 598 599\n    601 602 603 604 605 606 607 608 609\n    611 612 613 614 615 616 617 618 619\n    621 622 623 624 625 626 627 628 629\n    631 632 633 634 635 636 637 638 639\n    641 642 643 644 645 646 647 648 649\n    651 652 653 654 655 656 657 658 659\n    661 662 663 664 665 666 667 668 669\n    671 672 673 674 675 676 677 678 679\n    681 682 683 684 685 686 687 688 689\n    691 692 693 694 695 696 697 698 699\n    701 702 703 704 705 706 707 708 709\n    711 712 713 714 715 716 717 718 719\n    721 722 723 724 725 726 727 728 729\n    731 732 733 734 735 736 737 738 739\n    751 752 753 754 755 756 757 758 759\n    761 760 761 762 763 764 765 766 767\n    771 772 773 774 775 776 777 778 779\n    781 782 783 784 785 786 787 788 789\n    791 792 793 794 795 796 797 798 799\n    801 802 803 804 805 806 807 808 809\n    811 812 813 814 815 816 817 818 819\n    821 822 823 824 825 826 827 828 829\n    831 832 833 834 835 836 837 838 839\n    841 842 843 844 845 846 847 848 849\n    851 852 853 854 855 856 857 858 859\n    861 862 863 864 865 866 867 868 869\n    871 872 873 874 875 876 877 878 879\n    881 882 883 884 885 886 887 888 889\n    891 892 893 894 895 896 897 898 899\n    901 902 903 904 905 906 907 908 909\n    911 912 913 914 915 916 917 918 919\n    921 922 923 924 925 926 927 928 929\n    931 932 933 934 935 936 937 938 939\n    941 942 943 944 945 946 947 948 949\n    951 952 953 954 955 956 957 958 959\n    961 960 961 962 963 964 965 966 967\n    969 971 972 973 974 975 976 977 978\n    979 980 981 982 983 984 985 986 987\n    989 990 999''')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2 5 3 1') == '4'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6 7') == '7'\nassert solution('1 2 3 4 5 6 7 8') == '8'",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 3 1') == '4'\n\n\n\"\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1', 'TEST FAILED'\n\nassert solution('2') == '1', 'TEST FAILED'\n\nassert solution('3') == '1', 'TEST FAILED'\n\nassert solution('1') == '1', 'TEST FAILED'\n\nassert solution('5') == '1', 'TEST FAILED'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n8 7\\n8 1') == '2'\nassert solution('5\\n999999733 999999732\\n999999733 999999733') == '1'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n10 7\n10 1\n999999999 999999978\n999999999 999999979\n''') == '1'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999999999999999 1\n999999999999999999 1\n''') == '1'\nassert solution('''\n6\n2 4\n3 1\n4 3\n4 1\n3 2\n4 2\n3 2\n''') == '4'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999733999999999') == '1'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n7 3\n3 2\n5 9\n''') == '0'\nassert solution('''\n5\n5 2\n1 2\n1 2\n''') == '1'\nassert solution('''\n5\n5 5\n4 5\n1 1\n5 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '8'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n8 7\n8 1\n9999999999999999999999999999999999999999999999999\n
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 7') == '8'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\nassert solution('999999733 999999733') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '1'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"0 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"2 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('3 3\\n2 1 1\\n1 3') == '1'\nassert solution('4 4\\n2 1 2\\n1 2') == '2'\nassert solution('5 5\\n3 1 2\\n1 3') == '5'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('0 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2,2], [[2,1],[1,2]]) == \"1\"\nassert solution([3,4], [[2,1],[2,2],[2,3]]) == \"2\"\nassert solution([2,2], [[1,2],[2,2]]) == \"0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('1 2') == '0'\nassert solution('0 1') == '1'",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.0\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 5 1') == '5.0000000000'\nassert solution('0 0 1 0') == '0.00000000000000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"10 10 10 10 10 10 10 10 10\") == \"100.00000000000000000000\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 9 0''') == '5.00000000000000000000'\nassert solution('''3 2 3 0''') == '3.99999999999999999999999999999'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 9 0') == '5.0000000000'\nassert solution('3 4 7 0') == '5.0000000000'\nassert solution('2 4 1 0') == '1.0000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 0') == '5.00000000000000000000'\nassert solution('3 4 9 0') == '5.00000000000000000000'\n'''\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"8\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"15 2\") == \"97\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n') == '8'\nassert solution('3 1\\n') == '6'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 4, 1, 4, 5, 60, 4]) == 8\nassert solution([3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 97\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 -2 3 1 2\") == \"6\"\nassert solution(\"5 4\") == \"7\"\nassert solution(\"1 0\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2 3 4\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n3 4'\nassert solution('1 0\\n1000000') == '0\\n0'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n''') == '7'\nassert solution('''1 0\n1000000\n\n''') == '0'\nassert solution('''5 3\n2 3 2 1\n1 1 1 1\n2 2 2 1\n1 1 1 1\n\n''') == '2'\nassert solution('''5 4\n2 -2 3 1 2\n3 5\n3 4\n2 4\n2 5\n\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"7\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 0\n1000000\n''') == '0'\nassert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\n\nfor i in range(int(stdin.split()[0])):\n    a.append(int(stdin.split()[i + 1]))\n\nfor j in range(int(stdin.split()[1])):\n    l.append(int(stdin.split()[j + 2]))\n    r.append(int(stdin.split()[j + 3]))\n\nans = 0\nfor i in range(len(a)):\n    for j in range(len(l)):\n        for k in range(len(r)):\n            if k + 1 <= len(r) and l[j] <= a[i] <= r[k]:\n                ans = max(ans, a[i] - min(l[j], r[k]))\n\nprint(ans)\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sorted([\"fced\", \"xyz\", \"r\", \"dabcef\", \"az\", \"aa\", \"bad\", \"babc\"])) == \"Yes\"\nassert solution(sorted([\"y\"])) == \"No\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == \"Yes\"\nassert solution('''\nXYZ\nxyz\nXYZ\nxyz\nXYZ\nxyz\nXYZ\nxyz\nXYZ\nxyz\nXYZ\nxyz\nXYZ\nxyz\nXYZ\nxyz\n''') == \"Yes\"\nassert solution('''\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n''') == \"No\"\nassert solution('''\ny\ny\ny\ny\ny\ny\ny\ny\ny\ny\ny\ny\ny\ny\ny\n''') == \"No\"\nassert solution('''\na\na\nb\na\na\nb\na\na\na\na\na\na\na\na\nb\na\na\n''') == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nabcd\n\"\"\") == \"No\"\nassert solution(\"\"\"\nx\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nb\n\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'Yes'\nassert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n\"\n) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == 'Yes'\nassert solution('''\nz\nabc\nf\nabc\nab\n''') == 'No'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''\n1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '6\\n2\\n3 2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '6'\nassert solution(sys.stdin.read()) == '7'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n3 5\n3 4\n2 4\n2 5\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\"\nprint(solution(open(0)))\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n''') == '7'\nassert solution('''\n1 0\n1000000\n\n''') == '0'\nassert solution('''\n1 2\n1000000\n\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '6'\nassert solution('1 0') == '0'\nassert solution('5 4') == '7'\nassert solution('2 -2 3 1 2') == '2'\nassert solution('1 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 5 4 3''') == '4'\nassert solution('''7 1 3 5 6 7 4 2''') == '7'\nassert solution('''3\n1 2 3''') == '3'\nassert solution('''4\n1 2 3 4''') == '4'\nassert solution('''5\n1 2 3 4 5''') == '5'\n'''\n",
        "num_ids_2": 37,
        "num_ids_4": 51
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n        '''2\n    1\n    5 4 3''') == '4'\nassert solution(\n        '''7\n    1 3 5 6 7 4 2''') == '7'\nassert solution(\n        '''3\n    1 2 3''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"LLL\"\nassert solution(\"2 1 5 4 3\") == \"RRR\"\nassert solution(\"3 1 2 4 3\") == \"LLR\"\nassert solution(\"4 1 2 4 3\") == \"RRL\"\nassert solution(\"5 1 2 4 3\") == \"RLL\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLRL'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1 5 4 3\n\n''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2\n\n''') == '7'\nassert solution('''3\n1 2 3\n\n''') == 'LLL'\nassert solution('''4\n1 2 4 3\n\n''') == 'LLRL'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution(\"\"\"\n1 2 3\n\"\"\") == \"LLR\"\nassert solution(\"\"\"\n1 2 3 4\n\"\"\") == \"LLL\"\nassert solution(\"\"\"\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"LLLLLLL\"\nassert solution(\"\"\"\n1 2 3 4\n\"\"\") == \"LLL\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"3\") == \"LLL\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"3\") == \"LLL\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == \"4\"\nassert solution('''2\n1 2\n''') == \"2\"\nassert solution('''7\n6 5 4 3 2 4 3\n''') == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n1 2 5 3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"2\n1 2\n\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '4'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 5 3 4\n''') == '4'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('7 6 5 4 3 2 4 3') == '2'\n\n\n\n\n\"\"\"\n\nfrom itertools import accumulate\nfrom typing import List",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 4 5''') == '0'\nassert solution('''5 5\n1 2 3 4 5''') == '0'\nassert solution('''10 50\n1 2 3 4 5 6 7 8 9 10''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 2 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\n\n\n\n\"\"\"\n\nfrom sys import stdin\nfrom math import floor\nfrom math import ceil\n\nn, k = stdin.readline().split()\na = list(map(int, stdin.readline().split()))\n\ndiff = []\n\nfor i in range(len(a)):\n    if i == 0:\n        diff.append(ceil(a[i]/2))\n    else:\n        diff.append(floor(a[i]/2))",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"5 3 4\") == \"4\"\nassert solution(\"7 2 4\") == \"3\"\nassert solution(\"10 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 3 4''') == '4'\nassert solution('''8 5 6''') == '4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3 4''') == '4'\nassert solution('''8 7 9''') == '3'\nassert solution('''1 1 1''') == '1'\nassert solution('''0 0 0''') == '0'\nassert solution('''0 0 1''') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3 4') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3 4\") == \"4\", \"Wrong answer for input\"\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\") == \"2\"\nassert solution(\"3 4 2\") == \"2\"\nassert solution(\"2 5 4 5 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 5\") == \"3\"\nassert solution(\"4 5 4\") == \"0\"\nassert solution(\"8 1 6\") == \"4\"\nassert solution(\"5 10 1\") == \"4\"\nassert solution(\"3 4 3\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n1 2 4\\n') == '1'\nassert solution('2\\n1\\n3\\n') == '3'\nassert solution('2\\n2\\n2\\n') == '2'\nassert solution('2\\n2\\n3\\n') == '2'\nassert solution('2\\n1\\n2\\n') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '48'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1', 'base'\nassert solution('2') == '1', 'base'\n\nstdin = '''\n3\n10 3\n6 8 5 7\n12\n10 9 7'''\n\nprint(solution(stdin))\n\nstdin = '''\n1\n2\n'''\n\nprint(solution(stdin))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '-1'\nassert solution('1') == '48'\nassert solution('8 2 12 6 4 24 16 3') == '4'\nassert solution('1') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\n8 2 12 6 4 24 16 3\n''') == '48'\n\nassert solution('''\n5\n12\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n9\n1 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n5\n1 2 4 3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1\n1 2\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n3\n9\n1 2 3 4 5 6 7 8 9\n\"\"\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4'\n\nassert solution('''\n6\n8 2 12 6 4 24 16 3\n1\n1\n1\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1\", \"First\"\nassert solution(\"10\") == \"5\", \"Second\"\nassert solution(\"100\") == \"25\", \"Third\"\nassert solution(\"10\") == \"10\", \"Fourth\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n8\\n2\") == \"48\"\nassert solution(\"2\\n8\\n2\") == \"4\"\nassert solution(\"3\\n8\\n2\") == \"-1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 61
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 4 4 4') == '2 4'\nassert solution('5\\n6 6 6 6 6') == '1'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'\nassert solution(input(False)) == '2 4'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n6 6 6 6 6\n''') == '1'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('6') == '5'\nassert solution('3') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '6'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n6 6 6 6 6\n''') == '1'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('42') == '44'\nassert solution('99') == '103'\nassert solution('432') == '435'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"20\") == \"20\"\nassert solution(\"42\") == \"44\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3''') == '1'\nassert solution('''4\n5\n6''') == '4'\nassert solution('''7\n8\n9''') == '9'\nassert solution('''10\n11\n12''') == '11'\nassert solution('''13\n14\n15''') == '14'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n3\\n') == '3'\nassert solution('3\\n') == '3'\nassert solution('2\\n') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 0\\nabc\\n1\\n0\\nabba\") == \"aac\"\nassert solution(\"4\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\") == \"aac\"\nassert solution(\"4\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\") == \"aba\"\nassert solution(\"10\\n38 13 24 14 11 5 3 24 17 0\\n\") == \"ecoosdcefr\"\n",
        "num_ids_2": 59,
        "num_ids_4": 117
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n0 1 0') == 'aac'\nassert solution('1\\n2\\n2 1 0') == 'a'\nassert solution('1\\n3\\n1 0 1') == 'b'\nassert solution('1\\n4\\n2 1 0') == 'c'",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\nabac\\n3\\n2 1 0') == 'aac'\nassert solution('4\\nabc\\n3\\n1 0 1') == 'aba'\nassert solution('4\\nabba\\n3\\n1 0 1') == 'b'",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'abac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'abc'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nabac\\n3\\n2 1 0\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0') == \"aac\"\nassert solution('5\\naba\\n3\\n2 1 0\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0') == \"aba\"\nassert solution('5\\naba\\n3\\n2 1 0\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0') == \"aba\"\nassert solution('5\\naba\\n3\\n2 1 0\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0') == \"aba\"\nassert solution('5\\naba\\n3\\n2 1 0\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0') == \"aba\"\n",
        "num_ids_2": 86,
        "num_ids_4": 170
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"ab\"\nassert solution(\"3\") == \"aba\"\nassert solution(\"4\") == \"aac\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('input') == 'a'\nassert solution('input') == 'aba'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == 'aba'\nassert solution(\"\"\"\n10\n38 13 24 14 11 5 3 24 17 0\n\n\"\"\") == 'aba'\nassert solution(\"\"\"\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == 'aac'\nassert solution(\"\"\"\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == 'aac'\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == 'a'\nassert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('3') == 'c'\nassert solution('4') == 'd'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('100') == 'zz'\nassert solution('101') == 'zzz'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'b'\nassert solution('1') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'aaaa'\nassert solution() == 'aaaaa'\nassert solution() == 'aaaaab'\nassert solution() == 'aaaaaab'\nassert solution() == 'aaaaaabb'\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"13\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"to be or not to be\\n\") == \"TB or not TB\"\nassert solution(\n    \"a ab a a b ab a a b c\\n\") == \"a AAAB AAAB c\"\nassert solution(\n    \"ab aa ab bb\\n\") == \"AB aa AB bb\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''to be or not to be''') == '12'\nassert solution('''a ab a a b ab a a b c''') == '13'\nassert solution('''AB aa AB bb''') == '11'\n",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('6') == '12'\nassert solution('10') == '13'\nassert solution('6') == '11'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nto be or not to be\n''') == '12'\nassert solution('''\na ab a a b ab a a b c\n''') == '13'\nassert solution('''\n6\naa bb aa aa bb bb\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nto be or not to be\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\") == \"13\"\nassert solution(\"6\\nto be or not to be\") == \"11\"\nassert solution(\"10\\na ab a a b ab a a b c\") == \"11\"\nassert solution(\"6\\nAB aa AB bb\") == \"11\"\n",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nto be or not to be\n''') == '12'\nassert solution('''5\naa aa bb cc dd aa\n''') == '9'\nassert solution('''6\naa bb cc dd aa\n''') == '12'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == solution('''\nto be or not to be\n''')\nassert solution(input_) == solution('''\n10\na ab a a b ab a a b c\n''')\nassert solution(input_) == solution('''\n6\naa bb aa aa bb bb\n''')\n\ninput_ = '''\n8\nto be or not to be\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nto be or not to be\n''') == '12'\n\nassert solution('''\naa bb aa aa bb bb\n''') == '11'\n\nassert solution('''\nAB aa AB bb\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nto be or not to be') == '12'\nassert solution('10\\na ab a a b ab a a b c') == '13'\nassert solution('10\\nAB aa AB bb') == '11'\nprint(solution(input()))\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n5 2\n1 1 1 1 1\n''') == '3'\nassert solution('''\n4 2\n1 2000 2000 2\n''') == '4000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == \"1 2 3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"2 2\"\nassert solution(\"8 3\") == \"20\"\nassert solution(\"5 1\") == \"5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 1\\n1 1 1 1 1\\n\"\n) == \"1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"20\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"4 2\") == \"4000\"\nassert solution(\"8 3\") == \"20\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 3') == '20'\nassert solution('5 1') == '1'\nassert solution('4 2') == '4000'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('4 -2 3 2') == '0'\nassert solution('5 -1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('9 -1 -1 -1 1 1 -1 1 -1') == '3'\nassert solution('8 -5 -11 -15 10 5 4 -4') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 75
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n-5\n3\n2''') == '1'\nassert solution('''4\n-2\n3\n2''') == '0'\nassert solution('''5\n-1\n1\n-1\n1\n1\n-1\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nassert solution(\"5\\n1 -5 3 2\\n\") == \"1\"\nassert solution(\"10\\n4 -2 3 -9 2\\n\") == \"0\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 74
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('4 -2 3 2') == '0'\nassert solution('5 -2 3 -9 2') == '1'\nassert solution('5 -1 1 -1 1 1 -1 -1') == '2'\nassert solution('9 -1 1 -1 1 -1 1 1 -1 -1') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2 -5 3 2\") == \"1\"\nassert solution(\"5\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"3\"\n",
        "num_ids_2": 44,
        "num_ids_4": 70
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 -5 3 2\\n') == '1'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3'\n",
        "num_ids_2": 40,
        "num_ids_4": 94
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('5 -2 3 -9 2') == '0'\nassert solution('4 -2 3 -9 2') == '1'\nassert solution('9 -1 1 -1 1 -1 1 1 -1 -1') == '6'\n",
        "num_ids_2": 30,
        "num_ids_4": 70
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1 -1\n\n''') == '1'\nassert solution('''\n5\n4 -2 3 -9 2\n\n''') == '0'\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n\n''') == '6'\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"8\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n5\n2\n100\n''') == '0'\nassert solution('''5\n2\n5\n2\n100\n''') == '10'\nassert solution('''5\n100\n2\n5\n2\n100\n''') == '2000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\nassert solution('1 100') == '0'\nassert solution('2 2') == '2'\nassert solution('5 5') == '10'\nassert solution('2 1000000000') == '2000000000'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n100\n2\n5\n2\n1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5\n1\n2\n5\n2\n1000000000\n1000000000 1000000000''') == '10'\nassert solution('''10\n100\n2\n5\n2\n1000000000\n1000000000 1000000000''') == '0'\nassert solution('''3\n1\n2\n5\n2\n1000000000\n1000000000 1000000000''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\nassert solution('''\n2\n3\n4\n4\n5\n4\n3\n2\n1\n3\n''') == '6'\nassert solution('''\n3\n1\n1\n3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\") == \"0\\n\"\nassert solution(\"1\\n3\\n\") == \"1\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n5 5\n2 100\n1000000000 1000000000\n2000000000''') == '0'\nassert solution('''\n1 1\n5 5\n2 100\n1000000000 1000000000\n30000000''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == \"0\"\nassert solution(input_string_2) == \"2\"\nassert solution(input_string_3) == \"10\"\nprint(solution(input_string_4))",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n1\n2\n5\n2\n1000000000\n1000000000\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"10\"\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestThis(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print('\\n' + out)\n        return out\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        print(\"test_\u5165\u529b\u4f8b_1\")\n        input = \"\"\"1 100\"\"\"\n        output = \"\"\"0\"\"\"\n        self.assertEqual(output, self.assertIO(input, output))\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        print(\"test_\u5165\u529b\u4f8b_2\")\n        input = \"\"\"2 2\"\"\"\n        output = \"\"\"2\"\"\"\n        self.",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"12\") == \"0\"\nassert solution(\"101\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101') == '4'\nassert solution('107') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '4'\nassert solution('111') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('101') == '4'\nassert solution('100') == '-1'\nassert solution('000') == '-1'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '4'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"7777777777\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(TEST_CASE) == '4', solution(TEST_CASE)\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"4\"\n\n---Output---\nex049\n\n##A count-in-range function\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"111\") == \"1\"\nassert solution(\"100\") == \"None\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''\n5 5\n1 2 3 4 5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5\n1 2 3 4 5\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('15 8') == '48'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 16\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'\nassert solution('5 15') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'\nassert solution('5 1 3 1 2') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"4\"\nassert solution(\"5 15\") == \"2\"\nassert solution(\"5 26\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"4\"\nassert solution(\"3\\n5 5 5 5\") == \"2\"\nassert solution(\"3\\n1 3 1\") == \"2\"\nassert solution(\"6\\n5 5 5 5 5\") == \"1\"\nassert solution(\"6\\n1 3 1\") == \"-1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n24 21 14 10\n''') == '3'\n\nassert solution('''\n2\n500 500\n''') == '0'\n\nassert solution('''\n3\n14 5 1\n''') == '1'\n\nassert solution('''\n5\n1 3 6 9 12\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n6 2 3\n''') == '3'\n\nassert solution('''\n2\n15 16 10\n''') == '0'\n\nassert solution('''\n4\n2 21 14 10\n''') == '2'\n\nassert solution('''\n5\n1 3 6 9 12\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"3\\n14 5 1\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '-1'\nassert solution('5') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n24 21 14 10\n\n''') == '3'\n\nassert solution('''\n2\n500 500\n\n''') == '0'\n\nassert solution('''\n5\n1 3 6 9 12\n\n''') == '1'\n\n\nassert solution('''\n3\n14 5 1\n\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 3 6 9 12\n''') == '1'\nassert solution('''\n3\n14 5 1\n''') == '1'\nassert solution('''\n5\n1 3 6 9 12\n''') == '2'\nassert solution('''\n3\n14 5 1\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"3\\n1 3 6 9 12\") == \"1\"\nassert solution(\"5\\n1 3 6 9 12\") == \"-1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('2') == '-1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('5') == '0'\nassert solution('8') == '0'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n4 5') == '3'\nassert solution('5 2\\n3 4 5 6 7') == '4'\nassert solution('6 2\\n4 5 6 7') == '4'\nassert solution('6 3\\n4 5 6 7') == '5'\nassert solution('4 6\\n4 5 6 7') == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"5 2\") == \"5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '4'\nassert solution('''4 4\n1 10 100 1000\n''') == '4'\nassert solution('''5 4\n1 10 100 1000\n''') == '3'\nassert solution('''8 8\n2 5 2 5 4 5 5\n''') == '6'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 5\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"6\"\nassert solution(\"7 2\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 2 15 15 15''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16''') == '2'\nassert solution('''4 4\n1 10 100 1000''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"2\"\nassert solution() == \"4\"\nprint(solution.__doc__, \":\", solution())\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 10 7') == '8'\nassert solution('5 10 7') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('3 3 2 3') == '-1'\n\n'''\nimport sys\nfrom itertools import combinations",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 10 7 2') == '-1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 7') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == \"8\", \"Wrong!\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('1 1 2 1') == '2'\nassert solution('3 4 5') == '-1'\nassert solution('5 5 5') == '5'\nassert solution('5 5 5') == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('2 2 4') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 100 4') == '-1'\nassert solution('2 3 7') == '-1'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\") == \"-1\"\n\"\"\"\n\nn, k, m = map(int, input().split())\n\nscores = []\nfor _ in range(n):\n    scores.append(int(input()))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n2\\n2\\n2\\n2\") == \"No\"\nassert solution(\"6 3 4\\n3\\n1\\n2\\n2\\n2\\n2\") == \"Yes\"",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes'\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n\n''') == 'No\\nNo\\nYes'\nassert solution('''4 1 5\n1\n1\n1\n1\n\n''') == 'Yes\\nYes\\nYes'\nassert solution('''7 1 5\n1\n1\n2\n3\n3\n3\n\n''') == 'Yes\\nYes\\nYes'\nassert solution('''7 3 6\n1\n1\n1\n1\n1\n1\n1\n\n''') == 'Yes\\nYes\\nNo'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5 3 4\n3\n1\n3\n2\n\n\"\"\") == \"No\"\nassert solution(\"\"\"5 3 4\n3\n1\n3\n2\n\n\"\"\") == \"Yes\"\nassert solution(\"\"\"5 3 4\n3\n1\n3\n2\n\n\"\"\") == \"Yes\"\nassert solution(\"\"\"5 3 4\n3\n1\n3\n2\n\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"6 3 4\n3\n1\n3\n2\n\"\"\"\n) == \"\"\"No\nNo\nYes\nNo\nNo\nNo\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\\n3\") == \"No\\nNo\\nYes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n0 1''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\nOutput\nYES\n010\n0000''') == 'YES'\nassert solution('''4 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n0 1 1 1''') == 'NO'\nassert solution('''4 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n0 1 1 1''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\"\nassert solution(\"3 3\\n0 0 0 1\\n1 0 1 0\\n1 1 0 1\\n\") == \"NO\"\n",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('2 3') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"3 4\") == \"NO\"\n\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('5 5') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n1 1\n''') == \"YES\"\nassert solution('''\n1 1\n0 0\n''') == \"NO\"\nassert solution('''\n1 1\n1 0\n''') == \"NO\"\nassert solution('''\n1 1\n1 1\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n\n''') == \"YES\"\n\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == \"YES\"\n\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n\n''') == \"NO\"\n\nassert solution('''\n4 4\n0 0 0 0\n1 1 1 1\n0 0 0 0\n1 1 1 1\n\n''') == \"NO\"\n\nassert solution('''\n5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\", \"1 + 2\"\nassert solution(\"37\") == \"No\", \"1 + 3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"Yes\"\n\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"372\") == \"Yes\"\nassert solution(\"13\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"21\") == \"Yes\"\nassert solution(\"432\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"121\") == \"No\"\nassert solution(\"373\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"1234567890\") == \"Yes\"\nassert solution(\"4321\") == \"No\"\nassert solution(\"113\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'No'\nassert solution('112') == 'Yes'\nassert solution('123') == 'No'\nassert solution('435') == 'Yes'\nassert solution('535') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '4'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '4'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0''') == \"5\"\nassert solution('''6 2 1\n1 0 0 1 0 1''') == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 2 1\n1 0 0 1 0 1''') == '3'\nassert solution('''5 2 1\n0 1 0 1 0''') == '5'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\nassert solution('6 2 1\\n1 1 0 1 0 1\\n') == '2'\nassert solution('6 2 1\\n1 1 1 0 1 0\\n') == '1'\nassert solution('6 2 1\\n0 1 1 1 0 1\\n') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n\n''') == '5'\n\nassert solution('''6 2 1\n1 0 0 1 0 1\n\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\nassert solution(\"6 2 0 0 0 1 1\") == \"6\"\nassert solution(\"6 2 0 0 0 1 0\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution(\n'''2+2''') == '-46'\nassert solution(\n'''112-37''') == '375'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-79+47-58+46') == '-67'\nassert solution('-15+10-2+5') == '-37'\nassert solution('-17-43+37+18-16') == '16'\nassert solution('2-2+2') == '4'\nassert solution('2+2') == '4'\n",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nprint(\"Congratulations! Your solution is correct.\")\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nprint('all tests passed')\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\n\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nassert solution('''112-37''') == '375'\n",
        "num_ids_2": 45,
        "num_ids_4": 60
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4', 'Should be: 4'\nassert solution('2+2') == '-46', 'Should be: -46'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"12 6\") == \"NO\"\n\nimport sys\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"5 5\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n1 2') == 'YES'\nassert solution('5 4\\n2 3') == 'NO'\nassert solution('5 4\\n4 3') == 'YES'\nassert solution('5 4\\n1 3') == 'YES'\nassert solution('5 4\\n1 2') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 2\n2 1\n3 4\n4 3\n3 2\n2 3\n2 1\n4 3\n3 2\n3 1\n3 2\n2 4\n4 3\n4 3\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n1 3\n3 2\n2 4\n4 3\n3 2\n1 3\n2 3\n2 1\n2 4\n3 2\n4 3\n3 4\n1 3\n1 2\n3 1\n1 2\n3 4\n2 4\n2 4\n4 1\n2 4\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n4 3\n1 2\n2 1\n3 4\n4 3\n3 2\n2 3\n2 1\n4 3\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n1 3\n3 2\n2 4\n4 3\n3 2\n1 3\n2 3\n2 1\n2 4\n3 2\n4 3\n3 4\n3 2\n2 4\n4 1\n1 4\n4 2\n1 3\n3 2\n2 4\n4 3\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n1 3\n3 2\n2 4\n4 3\n3 2\n1 3\n2 3\n2 1\n2 4\n3 2\n4 3\n3 4\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n1 3\n3 2\n2 4\n4 3\n3 2\n1 3\n2 3\n2 1\n2 4\n3 2\n4 3\n3 4\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n3 2\n3 1\n3 2\n2 4\n4 1\n1 4\n4 2\n3 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('20 10') == 'YES'\nassert solution('7 5') == 'YES'\nassert solution('7 7') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"10 3\") == \"YES\"\nassert solution(\"13 3\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"5 8\") == \"YES\"\nassert solution(\"6 6\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3\\n') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n\") == \"YES\"\nassert solution(\"10 4\\n\") == \"YES\"\nassert solution(\"13 4\\n\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('5 2 3') == '5'\nassert solution('6 1 5') == '-1'\nprint(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18', 'easy'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100', 'easy'\nassert solution('''\n6 1 5\n100 10 100 100 100 100\n''') == '0', 'easy'\nassert solution('''\n6 1 5\n100 10 100 100 100 100\n''') == '0', 'easy'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"18\"\nassert solution(\"6 1 5\") == \"100\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('5 1 3') == '18'\nassert solution('6 1 5') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution('''4 3 1\n1 100 1 1\n''') == '100'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"18\"\nassert solution(\"4 3 1\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''4 1\n0011''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"\n\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''4 1\n0011''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n00100\\n\") == '3'\nassert solution(\"6 1\\n000000\\n\") == '4'\nassert solution(\"12 1\\n000010000100\\n\") == '15'\nassert solution(\"4 1\\n0011\\n\") == '4'",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"00100\\n\"\n    ) == \"3\"\nassert solution(\n    \"6 1\\n\"\n    \"000000\\n\"\n    ) == \"1\"\nassert solution(\n    \"12 6\\n\"\n    \"000010000100\\n\"\n    ) == \"15\"\nassert solution(\n    \"4 1\\n\"\n    \"0011\\n\"\n    ) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '21'\nassert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"\nassert solution(\"12 8\") == \"10\"\nassert solution(\"1 0\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\nassert solution('teff') == 'teff'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'apple'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\nassert solution('az') == 'a'\nassert solution('az') == 'a'\nassert solution('a') == 'a'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"azzel\") == \"apple\"\nassert solution(\"apple\") == \"apple\"\nassert solution(\"hello\") == \"hello\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'apple'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"abcde\") == \"Yes\"\nassert solution(\"bccba\") == \"Yes\"\nassert solution(\"cababc\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('abc') == 'abc'\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n4\\n2\\n6') == '2\\n3\\n3\\n5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2\\n2 1\") == \"1\"\nassert solution(\"10\\n10\\n3 5\\n2 3\\n4 4\\n3 1\\n3 3\\n1 1\\n1 2\\n4 4\\n5 5\\n1 1\\n1 1\\n5 5\\n1 2\\n1 4\") == \"4\"\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 3 2 1') == \"1\"\nassert solution('5 3 4 1') == \"1\"\nassert solution('5 5 5 2 1') == \"1\"\nassert solution('5 5 4 1') == \"1\"\nassert solution('5 2 5 1') == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n5\\n3\") == \"2\"\nassert solution(\"2\\n4\\n4\\n4\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 1 2\") == \"2\"\nassert solution(\"4 5 1 2 2\") == \"2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 5\") == \"6\"\nassert solution(\"6 6 2\") == \"8\"\nassert solution(\"6 6 5 3\") == \"10\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n3\\n1\\n2') == '1'\nassert solution('2\\n3\\n2\\n3') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n6\n1\n2\n2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 1\") == \"2\"\nassert solution(\"3 2 1\") == \"2\"\nassert solution(\"5 3 1\") == \"5\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"3 1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 3 2 1 1\\n1 2 2\\n1 3 3\\n2 2 2\\n1 3 3\\n2 2 2\") == \"4\"\nassert solution(\"5\\n2 2 2 2 3 1\\n1 2 2 2 3\\n1 3 3 3 3\\n2 2 2 2 3\\n1 3 3 3 3\\n2 2 2 2 3\") == \"3\"\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('2 902\\n8 200\\n0 500') == '2'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 700\n3 500\n5 800\"\"\") == \"3\"\nassert solution(\"\"\"2 200\n5 200\"\"\") == \"2\"\nassert solution(\"\"\"2 500\n3 500\n5 500\"\"\") == \"3\"\nassert solution(\"\"\"2 500\n3 500\n5 500\"\"\") == \"4\"\nassert solution(\"\"\"2 500\n3 500\n5 500\"\"\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 700\\n3 500\\n5 800\\n') == '3'\nassert solution('4 100\\n5 100\\n20 100\\n') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 700') == '3'\nassert solution('5 800') == '4'\n\n----Time Limit Exceeded----\n---\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\"\n\n'''",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('2 870\\n3 690\\n5 1000') == '3'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 700\") == \"3\"\n\nfrom math import floor\nimport sys\n\nsys.setrecursionlimit(10000)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2\n8\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '2'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\n\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\n\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n\nprint(solution('''\n2\n4 2 4\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == \"2\"\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == \"3\"\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution() == '3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == \"18\"\nassert solution('''6 1 5\n10 30 30 70 10 10''') == \"-1\"\nassert solution('''3 3 1\n1 100 1 1''') == \"100\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 3 10 1') == '18'\nassert solution('6\\n1 5\\n10 30 30 70 10 10') == '100'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"18\"\nassert solution(\"4 1\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n\n''') == '100'\nprint(solution('''4 3 1\n1 100 1 1\n\n'''))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 2 3\\n\"\n    \"5 1 3 10 1\\n\"\n) == \"18\"\n\nassert solution(\n    \"6 1 5\\n\"\n    \"10 30 30 70 10 10\\n\"\n) == \"100\"\n\nassert solution(\n    \"4 3 1\\n\"\n    \"1 100 1 1\\n\"\n) == \"100\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\nassert solution(\"4 3 1\") == \"100\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == \"18\"\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == \"-1\"\nassert solution('''\n4 3 1\n1 100 1 1\n''') == \"100\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'No'\nassert solution('11') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == 'No'\nassert solution('2\\n') == 'Yes'\nassert solution('3\\n') == 'Yes'\nassert solution('4\\n') == 'Yes'\nassert solution('5\\n') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'No'\nassert solution('12') == 'Yes'\nassert solution('13') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'Yes'\nassert solution('20') == 'No'\nassert solution('200') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'No'\nassert solution('10') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"1000000\") == \"Yes\"\nassert solution(\"99999999\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'No'\nassert solution('4') == 'Yes'\nassert solution('11') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nprint(solution(input()))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n\") == \"2 2 6\"\nassert solution(\"10\\n1 2 5\\n2 3 5\\n3 1 5\\n3 1 6\\n3 1 7\\n4 1 5\\n4 2 5\\n4 1 6\\n4 2 7\\n\") == \"1 1 6\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 1 3\"\nassert solution(\"1\") == \"0 0 1\"\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 1533
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\nprint(solution('''\n4\n3 4 5\n2 1 5\n1 2 5\n3 2 5\n'''))\nprint(solution('''\n2\n3 3 5\n3 2 5\n2 2 5\n3 2 5\n'''))\nprint(solution('''\n5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2 2 6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 5') == '2 2 6'\nassert solution('2 1 5') == '2 1 6'\nassert solution('1 2 5') == '1 1 6'\nassert solution('3 2 5') == '3 2 6'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0 0\"\nassert solution(\"2\") == \"0 2\"\nassert solution(\"4\") == \"0 2\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"3\") == \"0 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 2 6'\nassert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '2 2 6'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2 2 6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4 4 5'\nassert solution('4') == '2 2 6'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('redcoder') =='redcoder'\nassert solution('abcdxyz') == 'xabcdxyz'\nassert solution('aab') == 'ab'\nassert solution('a') == 'a'\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"acb\") == \"2\"\nassert solution(\"bba\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('redcoder') == 1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('redcoder') == '1'\nassert solution('abc') == '1'\nassert solution('palin') == '1'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcoder') == '2'\nassert solution('redcoder') == '3'\nassert solution('redcoder') == '3'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\nassert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('redcoder') == '1'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '1'\nassert solution('a') == '1'\n\"\"\"\n",
        "num_ids_2": 35,
        "num_ids_4": 45
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(3) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(5) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes'\nassert solution('11') == 'No'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"7\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == 'Yes'\nassert solution('20') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"5\") == \"No\"\n\n------\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Yes\"\n\nprint(solution(\"4\"))\n\nassert solution(\"5\") == \"No\"\n\nprint(solution(\"10\"))\n\nassert solution(\"2\") == \"Yes\"\n\nprint(solution(\"5\"))\n\nassert solution(\"3\") == \"No\"\n\nprint(solution(\"7\"))\n\nassert solution(\"5\") == \"No\"\n\nprint(solution(\"10\"))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Yes'\n\nassert solution('1') == 'No'\n\nassert solution('10') == 'Yes'\n\nassert solution('100') == 'No'\n\nassert solution('10') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 9 7 5\") == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '5'\nassert solution(input) == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n4 4 9 7 5\n''') == '5'\nassert solution('''\n3\n3 3 3\n''') == '0'\nassert solution('''\n8\n3 1 2 8 8 3 1\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 9 7 5\") == \"5\"\n\"\"\"\n\nn = int(input())\nsticks = list(map(int, input().split()))\ncount = 0\n\nfor i in range(len(sticks)-2):\n    for j in range(i+1, len(sticks)-1):\n        for k in range(j+1, len(sticks)):\n            if sticks[i] < sticks[j] < sticks[k] or sticks[i] < sticks[k] < sticks[j]:\n                count += 1\nprint(count)\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"5\"\nassert solution(\"9\") == \"5\"\nassert solution(\"7\") == \"5\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\n9\\7\\5') == '5'\nassert solution('5\\n4\\n9\\7\\5') == '5'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\"\n\"\"\"\nfrom collections import defaultdict\nimport itertools\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n4 4 9 7 5\n\"\"\") == '5'\nassert solution(\"\"\"\n3\n1 1 1\n\"\"\") == '0'\nassert solution(\"\"\"\n10\n1 2 5 4 6 8 9 3 7 10\n\"\"\") == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"-1 -1\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 10\") == \"-1\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"2 5\\n\",\"10\\n\"]) == \"10\"\nassert solution([\"2 5\\n\",\"6\\n\"]) == \"-1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '10'\nassert solution('5 3') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nassert solution('4 6') == '-1'\n\n---Explanation---\n- Takahashi cannot multiply two integers between 1 and 9 (inclusive) together.\n- The input is:\n- 2 5\n- Output is:\n- 10\n- 2 \\times 5 = 10.\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"2\", \"5\"]) == \"10\"\nassert solution([\"2\", \"3\"]) == \"3\"\nassert solution([\"5\", \"3\"]) == \"15\"\nassert solution([\"5\", \"7\"]) == \"-1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5') == '10', \"3 * 5 = 10\"\nassert solution('20 10') == '20', \"20 * 10 = 20\"\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '-1'\nassert solution('2\\n4') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"100 101\\n1 2 3 4 5 6\") == \"4\"\nassert solution(\"1\\n10\") == \"1\"\nassert solution(\"1\\n100\") == \"1\"\nassert solution(\"1\\n0\") == \"1\"\n",
        "num_ids_2": 37,
        "num_ids_4": 63
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"10 1\\n10 10 10 10\") == \"2\"\nassert solution(\"10 2\\n10 10 10 10\") == \"2\"\nassert solution(\"10 3\\n10 10 10 10\") == \"2\"\nassert solution(\"10 4\\n10 10 10 10\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"5 3\\n5 3 3 3 2 1\\n\") == \"2\"\nassert solution(\"6 6\\n1 2 3 4 5 6\\n\") == \"0\"\nassert solution(\"5 5\\n5 5 5 5 5 5\\n\") == \"2\"\nassert solution(\"4 5\\n4 5 4 4 4 5\\n\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5\\n10 12 1 2 14\\n') == '5'\nassert solution('2 6\\n10 12 1 2 14\\n') == '5'\nassert solution('2 7\\n10 12 1 2 14\\n') == '5'\nassert solution('2 8\\n10 12 1 2 14\\n') == '5'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"10 2\\n12 13 1 2 14\") == \"4\"\nassert solution(\"10 5\\n12 13 1 2 14\") == \"8\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '5'\nassert solution('3 5') == '2'\nassert solution('2 8') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '1110'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '110110'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\nassert solution(\"5 6 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"3 3\") == \"01\"\nassert solution(\"5 6\") == \"111011\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('5 6 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3') == '1110'\nassert solution('4 6 3') == '101001'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\nassert solution(\"5 6 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '1110'\nassert solution('5 2 3') == '101001'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\"\"\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2\n2 3\n1 4\n4 3\n''') == '1110'\nassert solution('''\n4\n1 2\n2 3\n1 4\n4 3\n''') == '101001'\nassert solution('''\n5\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'YES\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\n\nn = int(input())\nparts = list(map(int, input().split()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 2, 1, 2, 5]) == 'YES'\nassert solution([3, 4, 3]) == 'NO'\nassert solution([3, 1, 2]) == 'NO'\nassert solution([1, 2]) == 'YES'\nassert solution([2, 2]) == 'YES'\n",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'YES'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'\n",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'YES'\nassert solution('2\\n10 10') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('2\\n1 2 3') == 'NO'\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\nassert solution('''\n3\n4 5 3\n''') == 'YES'\nassert solution('''\n2\n10 10\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"\nassert solution(\"3\\n1 2 3\\n\") == \"YES\"\n",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000000000000 5\\n-1 0 0 0 0\\n\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == \"4999999999996\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    2\n    -4\n    '''\n    ) == '-1'\n    assert solution(\n    '''\n    10\n    -5 -1 -3 -1\n    '''\n    ) == '4999999999996'\n    assert solution(\n    '''\n    1000000000000\n    -1 0 0 0 0\n    '''\n    ) == '4999999999996'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000000000000 5') == '4999999999996'\nassert solution('1000000000000 4') == '-1'\nassert solution('1000000000000 10') == '999999999999'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 6\") == \"9\"\nassert solution(\"1000000000000 5\") == \"4999999999996\"\nassert solution(\"10 4\") == \"-\"\n",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\nprint('All tests passed')",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'AA'\nassert solution('3') == 'AA'\nassert solution('5') == 'AA'\nassert solution('6') == 'AA'\nassert solution('10') == 'AA'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"\n\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\nA''') == 'A'\nassert solution('''2\nAA''') == 'AA'\nassert solution('''3\nAZ''') == 'AZ'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\nABA\"\"\") == \"AB\"\nassert solution(\"\"\"12\nAAAAAAA\nABAABB\nABCBAAA\nAAACCC\nBABABABA\nBBBABBB\"\"\") == \"BA\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"AB\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ZABZAA') == 'ZAB'\nassert solution('AZAZAA') == 'AZA'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\nABACABA') == 'AB'\nassert solution('5\\nZZZAA') == 'ZZ'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\nABACABA\n''') == 'AB'\n\nassert solution('''5\nZZZAA\n''') == 'ZZ'\n\nassert solution('''6\nABACABA\n\n''') == 'BA'\n\nassert solution('''5\nZZZAA\n\n''') == 'ZZ'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\nABACABA\n\n''') == 'AB'\nassert solution('''\n5\nZZZAA\n\n''') == 'ZZ'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"west\") == 2\nassert solution(\"codeforces\") == 9\nassert solution(\"test\") == 7\nassert solution(\"yes\") == 1\n",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 9\nassert solution(input()) == 7\nassert solution(input()) == 1\n\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"test\") == \"west\"\nassert solution(\"west\") == \"test\"\nassert solution(\"b\") == \"a\"\nassert solution(\"yes\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.readline().strip()) == str(int(sys.stdin.readline().strip()) - 1)\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"yes\"\nassert solution(\"test\") == \"west\"\nassert solution(\"b\") == \"a\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == str(len(input()) - 1)\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"west\") == \"here\"\nassert solution(\"a\") == \"\"\nassert solution(\"b\") == \"ab\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('codeforces') == 'codeforces'\nassert solution('test') == 'test'\nassert solution('b') == ''\nassert solution('yes') == 'yes'\nassert solution('west') == 'west'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 3\nassert solution(input()) == 7\nassert solution(input()) == 9\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 7 11\n''') == '2'\nassert solution('''3 3\n1 2 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 7 11\\n') == '2'\nassert solution('7 3\\n1 7 11\\n') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 1') == '1'\nassert solution('3 3') == '0'\nassert solution('1 1') == '1'\nassert solution('3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 3\"\n    ) == \"2\"\nassert solution(\n    \"1 7 11\"\n    ) == \"2\"\nassert solution(\n    \"1 4 7 11\"\n    ) == \"3\"\nassert solution(\n    \"1 1 3 3\"\n    ) == \"3\"\nassert solution(\n    \"1 1 2 2\"\n    ) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 3\n1 2 4 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 3\n1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 2\n1 2\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"2 3\") == \"2\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '2'\nassert solution('5 5') == '2'\nassert solution('3 3') == '2'\nassert solution('3 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n\n---\n\na = input()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakak",
        "num_ids_2": 22,
        "num_ids_4": 1743
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n\nprint(solution(\"akasaka\"))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"akasakaz\") == \"No\"\nassert solution(\"akasakazab\") == \"No\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n\n\"\"\"\nimport string",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\n\nassert solution('akasaka') == 'Yes'\n\nassert solution('akasaka') == 'Yes'\n\nassert solution('akasaka') == 'Yes'\n\nassert solution('akasaka') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"tacocat\") == \"No\"\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasakabithathathathashash') == 'No'\nassert solution('akasakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakakak",
        "num_ids_2": 31,
        "num_ids_4": 1743
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"4.1 1.2\") == \"5\"\nassert solution(\"3.6 1.6\") == \"8\"\nassert solution(\"2.6 1.5\") == \"3\"\nassert solution(\"1.6 0.1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 10\") == \"11\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"198 1.10\") == \"217\"\nassert solution(\"100 0.00\") == \"0\"\nassert solution(\"0 1.00\") == \"0\"\nassert solution(\"1.00 1.00\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n''') == '1 1'\nassert solution('''11 1\n''') == '11 1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1 2.1') == '2'\nassert solution('1.1 2.2') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 2\") == \"5 2\"\nassert solution(\"1.1 2\") == \"1 2\"\nassert solution(\"5.1 2\") == \"5 2\"\nassert solution(\"2.1 2\") == \"2 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1') == '0'\nassert solution('1 1') == '1'\nassert solution('1.1 1.2') == '1.2'\nassert solution('1.1 1.8') == '1.8'\nassert solution('1.1 1.7') == '1.7'\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('198 1.1') == '217'\nassert solution('1.1') == '1'\nassert solution('0.1') == '0'\nassert solution('0.1.1') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"200 1.11\") == \"220\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('7') == '0'\nassert solution('2000000000') == '999999999'\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n7\n1\n2\n3\n2000000000\n763243547''') == '3'\nassert solution('''10\n11\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '0'\nassert solution('''10\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12''') == '999999999'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1\n1\n1\n1\n1\n1\n    \"\"\") == \"4\"\nassert solution(\n    \"\"\"\n2\n3\n1\n2\n    \"\"\") == \"0\"\nassert solution(\n    \"\"\"\n4\n5\n1\n2\n    \"\"\") == \"3\"\nassert solution(\n    \"\"\"\n4\n1\n2\n3\n    \"\"\") == \"0\"\nassert solution(\n    \"\"\"\n10\n11\n8\n7\n    \"\"\") == \"23\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n7') == '3'\nassert solution('1\\n2') == '0'\nassert solution('4\\n2000000000') == '9999999999'\nassert solution('6\\n763243547') == '381621773'",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n7\n1\n2\n3\n2000000000\n763243547\n''') == \"3\"\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == \"0\"\n\nassert solution('''100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3\n1\n2\n3\n5\n''') == '3'\n\nassert solution('''\n5\n2\n1\n2\n3\n5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n5\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution('''\n1\n10\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n3\n5\n1\n2\n3\n2000000000\n763243547\n''') == '1'\nassert solution('''\n2\n10\n1\n1\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n7\n3''') == '1'\nassert solution('''1\n7\n3''') == '1'\nassert solution('''10\n6\n3''') == '3'\nassert solution('''10\n12\n2''') == '0'\nassert solution('''1\n100\n10''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == 3\nassert solution(\"5 4 5\") == 1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('5 4 6') == '2'\nassert solution('5 5 7') == '1'\nassert solution('5 5 5') == '0'\nassert solution('10 3 10') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('3 3 3') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution('5 4 5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '0'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '2'\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n1 1 1 4 4 4\\n') == '5'\nassert solution('7\\n1 1 1 4 4 4 1\\n') == '4'\nassert solution('5\\n1 2 3 4 1\\n') == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 2 4 1\n''') == '4'\n\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\n\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\n3 2 4 1\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n6\n1 1 1 4 4 4\n\"\"\"\n) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution() == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002'\nassert solution('''4 2\n1 2\n2 3\n2 4\n1 3\n''') == '000000000003'\nassert solution('''5 2\n1 2\n2 3\n3 4\n4 5\n1 3\n''') == '000000100003'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 32\") == \"000001000002\"\nassert solution(\"2 63\") == \"000002000001\"\nassert solution(\"1 12\") == \"000001000001\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"2 2\") == \"000001000001\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"2 1\") == \"000001000001\"\nassert solution(\"1 3\") == \"000002000001\"\nassert solution(\"1 1\") == \"000002000001\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '000001000002'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('2 4') == '000001000001'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('1 32') == '000001000002'\nassert solution('2 63') == '000001000002'\nassert solution('1 12') == '000001000001'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 10 8 40\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n2 10 8 40\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n2 10 9 10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n1 1 2 2\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('10\\n3 1 5 2 4 10') == '4'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('4\\n2 1 1 1') == '1'\nassert solution('4\\n2 1 1 2') == '1'\nassert solution('4\\n2 1 2 2') == '2'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 10 8 40\\n\") == \"2\"\nassert solution(\"5\\n10 2 9 3 50\\n\") == \"10\"\nassert solution(\"6\\n10 1 10 10 20 50\\n\") == \"1\"",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input(\"\")) == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 4') == '2'\nassert solution('5\\n5 5 5 5 5') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n2 10 8 40\n''') == '2'\nassert solution('''4\n1 9 7 40\n''') == '1'\nassert solution('''4\n1 2 3 8 10\n''') == '1'\nassert solution('''4\n1 2 3 8 10\n3 2 2 4 5\n''') == '3'\nassert solution('''4\n1 2 3 8 10\n3 2 2 4 5\n5 5 5 5\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2\") == \"2\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"5 1 2 3 4\") == \"1\"\nassert solution(\"100 2 5 2 1\") == \"2\"\nassert solution(\"5 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '?(_-_/___*__):-___>__.\\n'\n) == '0010'\nassert solution(\n    '?(__-_+_/_____):-__>__,_____<__.\\n'\n) == 'false'\nassert solution(\n    '?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n'\n) == '0250341'\nassert solution(\n    '?(__+___+__-___):-___>__.\\n'\n) == '0101'\nassert solution(\n    '?(__+___+__-___):-___>__,_____<__.\\n'\n) == '0101'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\nprint('All tests passed!')\n",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n?(_-_/___*__):-___>__.\n''') == '0010'\nassert solution('''\n?(__-_+_/_____):-__>__,_____<__.\n''') == 'false'\nassert solution('''\n?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0250341'\nassert solution('''\n?(__+___+__-___):-___>__.\n''') == '0101'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'false'\nassert solution('?') == '0010'\nassert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n",
        "num_ids_2": 20,
        "num_ids_4": 70
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\n",
        "num_ids_2": 54,
        "num_ids_4": 105
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n\") == \"0101\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n\") == \"false\"",
        "num_ids_2": 44,
        "num_ids_4": 128
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == 'false'\n",
        "num_ids_2": 50,
        "num_ids_4": 124
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'false'\nassert solution('?(_-_+___)/__:___>___,___<__.') == '0010'\nassert solution('?(______-___)/__:___>___,___<__.') == 'false'\nassert solution('?(___+-___)/__:___>___,___<__.') == '0101'\nassert solution('?(___+___+___)/__:___>___,___<__.') == '0101'\n",
        "num_ids_2": 35,
        "num_ids_4": 87
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n?(___-_+_/____*___,____.\n''') == '0101'\nassert solution('''\n?(___-__+____+____*____):-___>__.\n''') == 'false'\nassert solution('''\n?(__+__+___+___+____*___):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0250341'\nassert solution('''\n?(__+__+__+__+____*____):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0110'\nassert solution('''\n?(__+__+__+__+____*____):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0101'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'\n",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n\n''') == \"3\"\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == \"5\"\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == \"0\"",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n\n''') == \"3\"\n\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == \"5\"\n\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\n\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == '3'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == '5'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nabcdefg''') == \"abcdefg\"\nassert solution('''17\nabcdefghijklmnopqrstuvwxyz''') == \"abcdefghijklmnopqrstuvwxyz\"\n\nassert solution('''2\nxza''') == \"xyz\"\nassert solution('''8\nzxcvbnm''') == \"xcvbnm\"\n\nassert solution('''15\nghiabcdefghijklmno''') == \"abcdefghijklmno\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"10\") == \"codeforces\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 37,
        "num_ids_4": 47
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''rocesfedoc''') == 'codeforces'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10', 'rocesfedoc') == 'codeforces'\nassert solution('16', 'plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('1', 'z') == 'z'\n\"\"\"",
        "num_ids_2": 43,
        "num_ids_4": 56
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"rocesfedoc\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"plmaetwoxesisiht\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'z'\nassert solution('2') == 'thisisexampletwo'\nassert solution('3') == 'thisisexampletwo'\nassert solution('4') == 'thisisexampletwo'\nassert solution('5') == 'thisisexampletwo'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('-1 5') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('100001') == '100001'\n\n'''\n\nimport sys\nfrom math import sqrt",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 14\n        5\n        6\n        4\n        3\n        2''') == \"19\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == \"19\", \"First\"\nassert solution(\"381 492\") == \"873\", \"Second\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"5 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"++>\", \"First example failed\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Second example failed\"\nassert solution(\"2+3+4\") == \"++->->+>+>+>+>-<-[<-]<-<-\", \"Third example failed\"\nassert solution(\"9-7+9\") == \"+++++++++>+++++++>+>+>+>-<-[<-]<-<-\", \"Fourth example failed\"\nassert solution(\"9-7-9\") == \"+++++++++>+++++++>+>-<-[<-]<-<-\", \"Fifth example failed\"\n",
        "num_ids_2": 37,
        "num_ids_4": 116
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1+1\") == \"++>\", \"Should print addition result\"\nassert solution(\"1-1\") == \"<->-\", \"Should print subtraction result\"\nassert solution(\"1*1\") == \"<[->-]<\", \"Should print multiplication result\"\nassert solution(\"9-7\") == \"<[<->-]<\", \"Should print 9-7 result\"\nassert solution(\"2+3\") == \"++>\", \"Should print addition result\"\n\n\"\"\"\n\n\"\"\"\n1)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\n\"\"\"\n\n\"\"\"\n3)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"\n\n\n\"\"\"\n4)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"\n\n\n\"\"\"\n5)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"\n\n\n\"\"\"\n6)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"\n\n\n\"\"\"\n7)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"\n\n\"\"\"\n8)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"\n\n\n\"\"\"\n9)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"\n\n\"\"\"\n10)\nFirst, we need to write a function that will do the addition, subtraction or multiplication of the two operands.\n\n2)\nThen we need to write a function that will evaluate the expression, which will be created by the user and add the results of the two functions.\n\n3)\nFinally, we need to write a function that will take the results of the expression and turn them into Brainfuck code.\n\n\"\"\"",
        "num_ids_2": 39,
        "num_ids_4": 86
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n'''\nimport operator\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2+3') == '++>', 'Wrong solution'\nassert solution('9-7') == '+++++++++>', 'Wrong solution'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''30000 memory cells.\n\nmemory cells store integers from 0 to 255 with unsigned 8-bit wraparound.\n\nconsole input (, command) is not supported, but it's not needed for this problem.\n\n3+4\n++++>\n<[<-]<\n++>+>\n++++++++>\n''') == '++++++++>'\n\nassert solution('''9-7\n\n''') == '++++++++>'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Test Failed\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Test Failed\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"<[<->-]<\"\n\n'''\n\nfrom collections import deque\n\nclass Stack:\n    def __init__(self):\n        self.stack = deque()\n\n    def push(self, value):\n        self.stack.append(value)\n\n    def pop(self):\n        return self.stack.pop()\n\n    def top(self):\n        return self.stack[-1]\n\n    def empty(self):\n        return len(self.stack) == 0",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"2+3\",\"3+3\"]) == \"++>\", \"1st example\"\nassert solution([\"9-7\",\"7-9\"]) == \"++++++++>\", \"2nd example\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2+3\") == \"++>\", \"2+3\"\nassert solution(\"9-7\") == \"<[<->-]<\", \"9-7\"\n\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3+4+5\") == \"++>++++>++++>++++>++++>++++>++++>++++>++++>+++++>\"\nassert solution
        "num_ids_2": 40,
        "num_ids_4": 1634
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('5') == '2'\nassert solution('20') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1\\n3\\n20\\n38\\n56\\n') == '1'\nassert solution('4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\\n') == '8'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2132\") == \"2\"\nassert solution(\"506\") == \"5\"\nassert solution(\"999999999999999999\") == \"4\"\nassert solution(\"1000000000000000000\") == \"1\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1\n3\n20\n38\n56\n\n''') == \"2\"\nassert solution('''\n4\n2132\n506\n999999999999999999\n1000000000000000000\n\n''') == \"8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('5') == '0'\nassert solution('14') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''575''') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"7\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"12\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '0'\nassert solution('2') == '0'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"101\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['5', '7', '2', '5', '3', '7', '4', '2', '1', '6', '1', '8', '1', '2', '6', '2', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1",
        "num_ids_2": 1812,
        "num_ids_4": 1812
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\nassert solution('12') == '3'\nassert solution('2') == '0'\n\nimport re",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"10000000\") == \"7\"\nassert solution(\"100000001\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00000') == '1'\nassert solution('00010') == '1'\nassert solution('00100') == '1'\nassert solution('11111') == '2'\nassert solution('01110') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '000'\n) == '1'\n\nassert solution(\n    '111'\n) == '2'\n\nassert solution(\n    '101'\n) == '2'\n\nassert solution(\n    '100'\n) == '2'\n\nassert solution(\n    '111'\n) == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''0\n0\n1''') == '1'\nassert solution('''0\n1\n1''') == '2'\nassert solution('''0\n0\n0''') == '0'\nassert solution('''0\n1\n0''') == '1'\nassert solution('''0\n0\n1''') == '2'\n'''\n    S = stdin.strip()\n\n    black_count = 0\n    white_count = 0\n    for i in range(len(S)):\n        if S[i] == '0':\n            black_count += 1\n        else:\n            white_count += 1\n\n    return str(min(black_count, white_count))",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"000\") == 1\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('00') == 1, 'Wrong answer with input 00'\nassert solution('11') == 1, 'Wrong answer with input 11'\nassert solution('01') == 1, 'Wrong answer with input 01'\nassert solution('1110') == 2, 'Wrong answer with input 1110'\nassert solution('0101') == 2, 'Wrong answer with input 0101'\n\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 1\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == 1\nassert solution('00') == 1\nassert solution('0') == 1\nassert solution('01') == 2\nassert solution('10') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('000') == '1'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"110\") == \"2\"\nassert solution(\"1111\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6 7 9 10 31\\n\") == \"APPROVED\"\nassert solution(\"2\\n3 1\\n\") == \"DENIED\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('4') == 'DENIED'\n\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(100000)\n\nN = int(input())\nA_list = list(map(int, input().split()))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"DENIED\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'DENIED'\nassert solution('4') == 'APPROVED'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"1 2 3 4 5\") == \"DENIED\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"APPROVED\"\nassert solution(\"2\") == \"DENIED\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n7 8 9 10') == 'APPROVED', \"Wrong answer!\"\nassert solution('5\\n6 7 9 10 31') == 'DENIED', \"Wrong answer!\"\n\n'''\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"APPROVED\"\nassert solution(\"1\\n3\\n5\\n7\\n9\\n\") == \"DENIED\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"APPROVED\", \"First\"\nassert solution(\"2\") == \"DENIED\", \"Second\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n6 7 9 10 31''') == 'APPROVED'\nassert solution('''5\n1 2 3 4 5''') == 'DENIED'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LLLRUURD\") == \"No\"\n\"\"\"\n\nfrom typing import List\n\ns = stdin.readline()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UDLURDR\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('UDDLRUDR') == 'No'\n\"\"\"\n\nfrom collections import deque\nfrom itertools import combinations",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RURLDDR') == 'No'\n\n\"\"\"\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RRUDRD\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RUDLURD') == 'No'\nassert solution('RLUDRRUDLURD') == 'Yes'\n",
        "num_ids_2": 27,
        "num_ids_4": 44
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDRLUDR\") == \"No\"\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UDDLLRRR\") == \"Yes\"\nassert solution(\"UDDDUUD\") == \"No\"\nassert solution
        "num_ids_2": 27,
        "num_ids_4": 1691
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RUDRL') == 'No'\nassert solution('RRDLD') == 'Yes'\nassert solution('RUDDLLU') == 'Yes'\nassert solution('RUDDLLUL') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"6\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''4\n2\n2\n2\n3''') == '6'\nassert solution('''3\n1\n1\n1''') == '0'\nassert solution('''5\n2\n1\n2\n1\n1''') == '8'\nassert solution('''5\n1\n2\n3\n4\n5''') == '7'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"10\") == \"7\"\nassert solution(\"6\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"10\\n8\\n4\\n6\\n3\\n5\\n2\\n8\\n3\\n5\\n1\\n\") == \"18\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '7'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('4') == '4'\n\"\"\"\nimport math\nimport sys\n\nn = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1\n3\n7\n''') == '2'\n\n'''\nOutput:\n2\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n''') == '2'\nassert solution('''10\n''') == '1'\nassert solution('''5\n''') == '0'\nassert solution('''10\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\n\"\"\"\n\nimport sys\nfrom math import sqrt\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\n\"\"\"\n\nimport itertools",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"11\"\nassert solution(\"20\") == \"23\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n10\n''') == '7'\nassert solution('''5\n12\n''') == '13'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"9\"\nassert solution(\"12\") == \"13\"\nassert solution(\"20\") == \"23\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '5'\nassert solution('11') == '13'\nassert solution('28') == '29'\nassert solution('14') == '15'\nassert solution('10') == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '2'\nassert solution('20') == '23'\nassert solution('30') == '31'\nassert solution('50') == '53'\nassert solution('100') == '103'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20') == '23'\nassert solution('20') == '23'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12\\n') == '13'\nassert solution('5\\n') == '5'\nassert solution('5\\n') == '5'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n3 1 3 2\n''') == '1'\n\nassert solution('''\n3\n1 2 3\n''') == '2'\n\nassert solution('''\n3\n4 3 2\n''') == '1'\n\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\nassert solution('10') == '2'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n3 1 3 2') == '0'\nassert solution('1\\n3 1 3 2') == '0'\nassert solution('2\\n3 1 3 2') == '1'\nassert solution('10\\n3 1 3 2') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n3 1 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 1 3 2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6\n3 1 3 1 1 3\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 3 2') == '1'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n3 1 3 2 3') == '1'\n\n'''''\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"6\"\n",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"3 7 10\") == \"10\"\nassert solution(\"10 5 10\") == \"19\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('5 120 60 30') == '21'\nassert solution('3 4 7') == '1'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''5 2 3 4\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8''') == '41'\nassert solution('''5 4 2 3\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8''') == '8'\nassert solution('''5 5 1 2 3\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8''') == '41'\nassert solution('''5 3 2 3\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8''') == '41'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"4 10 50 90\") == \"50\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\nassert solution('''3 2 1\n1\n1\n2''') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('15 5 50 2 4 6') == '14'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23', 'Wrong answer'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == \"23\"\n\n'''\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 10 100 90 80\") == \"22\"\nassert solution(\"5 10 70 90 80\") == \"22\"\nassert solution(\"5 10 70 90 80 70\") == \"21\"\nassert solution(\"5 10 70 90 80 70 70\") == \"20\"\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 10 20\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"4 1 2 3\") == \"10\"\nassert solution(\"10 50 90\") == \"10\"\nassert solution(\"10 90 20\") == \"10\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'CDEZAB'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'CDEZAB'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"ABC\") == \"ABC\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"2\\nABC\") == \"ABC\"\nassert solution(\"2\\nA\") == \"A\"\nassert solution(\"2\\nZ\") == \"Z\"\nassert solution(\"2\\nA\") == \"A\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'A'\nassert solution('2') == 'C'\nassert solution('3') == 'B'\nassert solution('4') == 'D'\nassert solution('5') == 'E'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\nassert solution('3\\nZYXWVUT') == 'NYZXWVUT'\nassert solution('4\\nYYYWWWBB') == 'WWYYYYWBB'\nassert solution('5\\nBALBAABA') == 'ABABABABALBBAAB'\nassert solution('6\\n
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'E'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == ''\nassert solution('2') == '1'\nassert solution('2') == '2'\nassert solution('4') == '1'\nassert solution('10') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n2750131 199999\n''') == '199999'\nassert solution('''1\n3 6\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2 4 1 5 3\"\nprint(solution())\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('1') == '199999'\nassert solution('2') == '2 4 2'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 6 8 3 2\n''') == '6 3 8 8 2'\n\nassert solution('''\n1\n3 6\n''') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '2'\nassert solution('10') == '5'\nassert solution('15') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '3 4 2', 'For 1'\nassert solution('3') == '6', 'For 3'\nassert solution('5') == '5 4 2', 'For 5'\nassert solution('10') == '10 11 12 13 14 15 16 17 18 19', 'For 10'\nassert solution('2') == '2 3', 'For 2'\n",
        "num_ids_2": 30,
        "num_ids_4": 69
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n2') == '1\\n2'\nassert solution('1\\n2\\n3') == '1\\n2\\n3'\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n4 5 2 3\\n') == '3 4 2'\nassert solution('3\\n10 10 9 2 3\\n') == '9 2 3'\nassert solution('6\\n6 9 4 8 5 2\\n') == '9 2'\n",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 4 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '111111'\nassert solution('5 1') == '221112'\nassert solution('6 1') == '1121122'\nassert solution('8 1') == '11211222'\nassert solution('10 1') == '11122121'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"111111\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\"\n",
        "num_ids_2": 42,
        "num_ids_4": 66
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1111222\"\nassert solution(sys.stdin.read()) == \"21112\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'",
        "num_ids_2": 42,
        "num_ids_4": 66
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n2 4 5 3 1''') == '11111'\nassert solution('''5 1\n2 1 3 5 4''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6''') == '1121122'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"111111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples[0]) == \"111111\"\nassert solution(samples[1]) == \"222222\"\nassert solution(samples[2]) == \"111111\"\n\nassert solution(samples[3]) == \"1112121\"\nassert solution(samples[4]) == \"2111212\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == '11111'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 1 2 3\n''') == '2'\nassert solution('''\n4\n100 1\n''') == '4'\nassert solution('''\n2\n1 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 3 3 7\n''') == '4'\nassert solution('''\n5\n1 2 1 2 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''4\n100 1\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"7\"\nassert solution(\"1 2 3 4 5 6\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7\") == \"7\"",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 2 1 2 3\n\n''') == '2'\n\nassert solution('''\n2\n100 1\n\n''') == '4'\n\nassert solution('''\n5\n1 2 1 2 3\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('7') == '3'\nassert solution('2') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\nassert solution('''4\n1 3 3 7\n''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n7 1 5 4 9\"\n) == \"1\"\nassert solution(\n    \"5\\n1 2 3 4 5\"\n) == \"2\"\nassert solution(\n    \"1\\n16\"\n) == \"1\"\nassert solution(\n    \"4\\n1 1 1 1023\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"0\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"1\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"4\\n\") == \"0\"\n\n\nstdin = \"\"\"\n3\n\"\"\"\nassert solution(stdin) == \"1\"\n\nstdin = \"\"\"\n1\n\"\"\"\nassert solution(stdin) == \"0\"\n\nstdin = \"\"\"\n4\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4 7 1 5 4 9\\n') == '1\\n'\nassert solution('2\\n2 2\\n') == '1\\n'\nassert solution('3\\n1 1 1 1023\\n') == '0\\n'\n\n'''\n\nn = int(input())\na = list(map(int, input().split()))\n",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n5 1 2 3\n''') == '1'\nassert solution('''\n1\n16\n\n''') == '0'\nassert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n4\n1 1 1 1023\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n4\n''') == '0'\nassert solution('''\n5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10111\") == \"5\"\nassert solution(\"111\") == \"4\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('0110') == '3'\nassert solution('1100') == '2'\nassert solution('0111') == '1'\nassert solution('1101') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"3\"\nassert solution(\"0111\") == \"2\"\nassert solution(\"1000\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0011') == '4'\nassert solution('1111') == '1'\nassert solution('0') == '0'\nassert solution('1') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0011') == '4'\nassert solution('0001') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('0011') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0011') == '4'\nassert solution('1111') == '3'\nassert solution('01') == '2'\nassert solution('11') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('000000') == '0000'\nassert solution('11111') == '1111'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0011') == '4'\nassert solution('0000') == '0'\nassert solution('10111') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 1') == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '2'\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, m = list(map(int, stdin.split()))\n        ids = list(map(int, stdin.split()))\n        nodes = {}\n        for i in range(n):\n            if i not in nodes:\n                nodes[i] = set()\n        for i in range(m):\n            x = ids[i * 2]\n            y = ids[i * 2 + 1]\n            if x not in nodes:\n                nodes[x] = set()\n            nodes[x].add(y)\n        # print(nodes)\n        count = 0\n        for node in nodes:\n            count += len(nodes[node])\n        return str(count)\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 3\") == \"1\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"10 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 3\\n2 4') == '2'\nassert solution('4 2\\n1 3\\n2 4') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\nassert solution('''4 2\n1 3\n2 4\n''') == '1'\nassert solution('''3\n1 2\n3 4\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('6 6\\n1 2 3 4 5 6\\n2 5 3 4 1\\n2 5 3 4 1\\n2 5 3 4 1') == '3'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4 2\n1 3\n2 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"4 2\n1 3\n2 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 5\n1 2\n3 4\n5 6\n2 7\n8 9\n4 10\n\"\"\") == \"0\"\n\nassert solution(\"\"\"10 8\n1 2\n4 5\n7 8\n9 10\n2 11\n5 12\n8 13\n11 14\n7 15\n3 16\n12 17\n14 18\n\"\"\") == \"5\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"5\\n1 2 2 1\") == \"3\"\nassert solution(\"6\\n1 2 2 1\") == \"4\"\nassert solution(\"7\\n1 2 2 1\") == \"5\"\n\n'''",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n\"\"\"\nimport sys\n\nN = int(sys.stdin.readline())\nheights = list(map(int, sys.stdin.readline().split()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 2 1') == '2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"5\\n1 2 2 1 1\") == \"4\"\nassert solution(\"20\\n
        "num_ids_2": 33,
        "num_ids_4": 1713
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '3'\n\nassert solution('''5\n1 2 3 4 5\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 2 1 1') == \"2\"\nassert solution('5\\n3 4 1 2 3') == \"4\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n2 4 1 2\n''') == '4'\n\nassert solution('''5 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\n2 4\n-1 1\n''') == '4'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '0'\nassert solution('') == '0'\nassert solution('\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '4'\nassert solution(input_) == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    4 4\n    1 4 1 2\n''') == '2'\nassert solution('''\n    2 5\n    2 4 1 2\n''') == '4'\nassert solution('''\n    4 10\n    2 4 1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000000000000000 3000000000000000000') == '126 42 84 28'\nassert solution('4 8 6 3 12 9') == '9 3 6 12 4 8'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '11'\nassert solution('6') == '933'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '11'\nassert solution('4') == '111'\nassert solution('6') == '1111'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"9 3 6 12 4 8\"\nassert solution(\"6\") == \"9 3 6 12 4 8\"\nassert solution(\"2\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"100000000000000000000\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"9 3 6 12 4 8\"\n\n\n'''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1000000000000\n''') == '1000000000000'\n\nassert solution('''4\n80000000\n''') == '80000000'\n\nassert solution('''2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '1234 5678 9012 3456'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '1'\nassert solution
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 4 7 10 12\") == \"3\"\nassert solution(\"2 2 5 6 7\") == \"2\"\nassert solution(\"3 5 6 7\") == \"1\"\nassert solution(\"6 2 5 7 1\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n') == '1 2'\nassert solution('3\\n3 1 3\\n') == '1 3'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '1'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n4\n4\n2\n3\n4\n4\n5\n6\n''') == '3\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('4\\n7 2 5') == '8'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '3\\n7 3 5\\n'\nassert solution('5') == '1\\n8\\n'\nassert solution('-1 -2 5 8 11') == '1 8\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 51
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n3 5 4 7 10 12\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n-1 2 5 8 11\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n5\n-1 2 5 8 11\n    '''\n    ) == '1 8'\nassert solution(\n    '''\n10\n10 9 -1 -2 -3 7 -8 -9 -4 5 -6 -7 -8 9\n    '''\n    ) == '9 10 -1 -2 -3 -4 5 -6 -7 -8 -9'\n\n'''\n\nSample Test Cases:\n\nInput:\n5\n-1 2 5 8 11\n\nOutput:\n1 8\n\nInput:\n10\n10 9 -1 -2 -3 7 -8 -9 -4 5 -6 -7 -8 9\n\nOutput:\n9 10 -1 -2 -3 -4 5 -6 -7 -8 -9\n\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"12\") == \"3 1 5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"0 2\"\nassert solution(\"4 3 2\") == \"1 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('100 1000 100') == '0 1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 3\") == \"0 2\"\nassert solution(\"2 3 3\") == \"0 1\"\nassert solution(\"2 0 0\") == \"0 0\"\nassert solution(\"0 0 0\") == \"0 0\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n5\n1''') == '0 1'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '0 2'\n\"\"\"\nA, B, K = list(map(int, input().split()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"0 2\"\nassert solution(\"2 1 3\") == \"0 2\"\nassert solution(\"1 2 2\") == \"0 1\"\nassert solution(\"1 1 1\") == \"0 1\"\n\n\"\"\"\n\nfrom collections import deque\nimport heapq\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"100\") == \"1\"\nassert solution(\"101\") == \"1\"\nassert solution(\"102\") == \"2\"\nassert solution(\"103\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('10') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"103\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"100\") == \"2\"\nassert solution(\"101\") == \"1\"\nassert solution(\"102\") == \"1\"\nassert solution(\"103\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"99\") == \"2\"\nassert solution(\"10310\") == \"3\"\nassert solution(\"1030\") == \"3\"\nassert solution(\"10311\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"3\"\nassert solution(\"30\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"10\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('103') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('104') == '4'\nassert solution('3') == '1'\nassert solution('-100') == '2'\nassert solution('0') == '1'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('103') == '3'\nassert solution('1') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '9'\nassert solution('5') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n''') == '9'\n\nassert solution('''\n2\n''') == '9'\n\nassert solution('''\n100\n''') == '41357382512394'\n\nassert solution('''\n100\n''') == '41357382512394'\n\nassert solution('''\n0\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n') == '9'\nassert solution('2\\n') == '9'\nassert solution('5\\n') == '18'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '1+1+1+1+1+1+1+2=9'\nassert solution('3') == '1+1+1+1+1+1+2+2=9'",
        "num_ids_2": 36,
        "num_ids_4": 62
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\nassert solution('2') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '9'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('10') == '23'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 4 6\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\n3 4 6\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\n1 2 3\n\"\"\") == \"10\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '10', \"3\"\nassert solution('4') == '10', \"4\"\nassert solution('6') == '10', \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4 6') == \"10\", \"Should be 10\"\nassert solution('4\\n3 4 6') == \"6\", \"Should be 6\"\nassert solution('5\\n4 4 6') == \"6\", \"Should be 6\"\nassert solution('6\\n3 4 6') == \"3\", \"Should be 3\"\nassert solution('7\\n3 4 6') == \"10\", \"Should be 10\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '10'\nassert solution('4') == '10'\nassert solution('6') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3 4 6') == '10'\nassert solution('3\\n2 5 9') == '6'\nassert solution('3\\n2 2 2') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 6\") == \"10\", \"Should be 10\"\nassert solution(\"1 2 3\") == \"2\", \"Should be 2\"\nassert solution(\"1 2 3 4\") == \"2\", \"Should be 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('5\\n3 4 5 6 7') == '12'\nassert solution('10\\n3 4 5 6 7') == '13'\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4 4\") == \"Yes\"\nassert solution(\"10\\n1 2 3 2 5\") == \"No\"\nassert solution(\"5\\n1 2\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 45
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2''') == 'Yes'\nassert solution('''1\n1 2\n1 2\n1 3\n1 4\n1 5''') == 'No'\nassert solution('''2\n1 2\n1 3\n1 4\n1 5''') == 'Yes'\nassert solution('''3\n1 2\n1 3\n1 4\n1 5''') == 'Yes'\nassert solution('''4\n1 2\n1 3\n1 4\n1 5''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('5 1 2 4 3') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nprint(solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\"))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes'\nassert solution('2') == 'No'\nassert solution('6') == 'Yes'\nassert solution('1 2') == 'Yes'\nassert solution('6 6') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('2\\n0 2\\n1 1\\n0 0') == 'No'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'No'\nassert solution('''5\n1 2\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''5\n1 2\n4 4\n3 3\n3 2\n''') == 'No'\nassert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '4'\nassert solution('1000000') == '9999999'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '4'\nassert solution(\"1\") == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nprint(solution('2'))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('100') == '100'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"5\\n3 9 5 1\") == \"No\"\nassert solution(\"6\\n3 9 5 1\") == \"Yes\"\nassert solution(\"7\\n3 9 5 1\") == \"No\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 8 5 1\") == \"Yes\"\nassert solution(\"4\\n3 8 5 1\") == \"No\"\nassert solution(\"5\\n4 8 5 1\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\") == \"Yes\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"Yes\"\n\n---Time Limit exceeded---\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 5 2 1') == 'Yes'\nassert solution('4\\n3 8 5 1') == 'No'\nassert solution('6\\n3 4 5 2 1') == 'No'\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"2\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n3 8 5 1''') == 'Yes'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n2 2\\n2') == 'Yes'\nassert solution('1\\n2\\n3\\n4') == 'No'\nassert solution('3\\n5 4 1\\n2') == 'Yes'\nassert solution('3\\n5 1 2\\n2') == 'No'\nassert solution('5\\n5 5 5 5 5\\n5') == 'Yes'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '702'\nassert solution('5 5') == '-1'\nassert solution('8 8') == '8'\n\n\"\"\")",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '702'\nassert solution('1 7') == '702'\nassert solution('3 2') == '-1'\nassert solution('1 7') == '-1'\n\n\"\"\"\n\nfrom sys import stdin",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 7') == '702'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '702'\nassert solution('1 7') == '702'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"402\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"702\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"702\"\nassert solution(\"10\") == \"0\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"8\") == \"202\"\nassert solution(\"4\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '702'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('100\\n1 9\\n0 2\\n1 7\\n') == '-1'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '9'\nassert solution('4 4') == '12'\nassert solution('5 5') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000 3\") == \"90000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '9'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n''') == '9'\nassert solution('''10 3\n''') == '18'\nassert solution('''100 6\n''') == '243'\nassert solution('''10000 6\n
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"3\", \"Should be 3\"\nassert solution(\"2 2\") == \"9\", \"Should be 9\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 2\\n\") == \"9\"\nassert solution(\n    \"3 1\\n\") == \"9\"\nassert solution(\n    \"5 1\\n\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"1 2 3\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"101\"\nassert solution(\"15\") == \"10101\"\nassert solution(\"-9\") == \"1011\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-10\") == \"1001\"\n\n---- Extension ----\nIn this problem, it is not possible to determine the base -2 representation of positive integer N.\nSo, you have to take care of this special case.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the base -2 representation of N.\n\n-----Sample Input-----\n10\n\n-----Sample Output-----\n1110\n\"\"\"\n\nfrom math import log2",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"15\") == \"1111\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1011\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-10\") == \"1010\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"-2\") == \"10\"\nassert solution(\"-3\") == \"11\"\nassert solution(\"-4\") == \"100\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"-9\") == \"1011\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-9') == '1011'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('-9') == '1011'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-9') == '1011'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '12'\nassert solution('2 5') == '12'\nassert solution('2 5') == '12'\nassert solution('2 5') == '12'\nassert solution('2 5') == '12'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'\nassert solution('2 4') == '1'\nassert solution('2 5') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '12'\nassert solution('10 5') == '12'\nassert solution('10 10') == '20'\nassert solution('3 10') == '5'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == '12'\nassert solution(example_input_2) == '12'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 5]) == \"12\"\nassert solution([4, 9]) == \"16\"\nassert solution([2, 4]) == \"4\"\nassert solution([1, 2]) == \"1\"\nassert solution([1, 1]) == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"2 5\") == \"13\"\nassert solution(\"2 5\") == \"15\"\nassert solution(\"2 5\") == \"17\"\nassert solution(\"2 5\") == \"18\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '12'\nassert solution('2 5') == '12'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"12\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5\\n4 9') == '12'\nassert solution('2 5\\n2 4') == '5'\nassert solution('2 5\\n1 2') == '4'\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n10\\n4\\n8\\n7\\n3'\n    ) == '2'\nassert solution(\n    '4\\n1\\n1\\n1\\n1'\n    ) == '1'\nassert solution(\n    '10\\n4\\n1\\n5\\n1\\n4\\n3\\n3'\n    ) == '2'\nassert solution(\n    '5\\n4\\n3\\n2\\n1'\n    ) == '1'\nassert solution(\n    '4\\n3\\n2\\n1'\n    ) == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '2'\nassert solution('5') == '2'\nassert solution('5') == '2'\nassert solution('5') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('5000000') == '3'\nassert solution('10000000') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n10 4 8 7 3''') == '2'\nassert solution('''5\n10 4 8 7 3\n10 7 7 7''') == '4'\nassert solution('''5\n10 4 8 7 3\n10 7 7 7\n10 7 7 7''') == '4'\nassert solution('''5\n10 4 8 7 3\n10 7 7 7\n10 7 7 7\n10 7 7 7''') == '4'\nassert solution('''5\n10 4 8 7 3\n10 7 7 7\n10 7 7 7\n10 7 7 7\n10 7 7 7''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n10 4 8 7 3''') == '2'\nassert solution('''3\n3 2 1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n10 4 8 7 3\\n') == '2'\nprint(solution(input()))",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution([1, 2, 3, 4, 5]) == '1'\nassert solution([1, 2, 3, 4, 5]) == '0'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 72
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 2 2 4 5\\n\"\n) == \"1\"\nassert solution(\n    \"5 3\\n\"\n    \"1 2 3 4 5\\n\"\n) == \"2\"\nassert solution(\n    \"5 3\\n\"\n    \"1 2 3 4 5\\n\"\n    \"6 7 8 9 10\\n\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 2 2 4 5\"\n) == \"1\"\nassert solution(\n    \"5 3\\n\"\n    \"1 2 3 4 5\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 2 4 5\\n\") == \"0\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '1', f\"wrong answer for {stdin!r}\"\nassert solution('1 2 3 4 5') == '0', f\"wrong answer for {stdin!r}\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n3 3 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6 5\n1 2 2 4 2 3\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n\nassert solution(\"2 3 4 5\\n1 2 3 1\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\") == \"3\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\") == \"4\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n1 2 2 4 2 3\n''') == '3', f\"{solution('''\\\n5 6\n1 2 2 4 2 3\n''')}\"\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4', f\"{solution('''\\\n7 5\n3 3 2 1 1 1 3\n''')}\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\nassert solution('3 3 2 1 1 1 3') == '4'\nassert solution('6 5') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\n\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 3 2 1\n''') == '3'\nassert solution('''\n6\n1 2 2 4 2 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1\n1 2 2 4 2 3\n''') == '3'\nassert solution('''5 7\n3 3 2 1 1 1 3\n''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10'\nassert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '9'\nassert solution('5\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n1000000000000 42000000000000') == '42000000000000'",
        "num_ids_2": 64,
        "num_ids_4": 108
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 3\") == \"10\"\nassert solution(\"7 3 2\") == \"1000\"\nassert solution(\"1 1000000 1\") == \"42000000000000\"\nassert solution(\"1000000000000 42 88\") == \"10\"\nassert solution(\"10 1 3\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    10 1 3\n    7 3 2\n    1 1000 1\n    1000000000000 42 88\n    ''') == '10\\n9\\n1000\\n42000000000000'\n\nassert solution('''\n    5\n    10 1 3\n    7 3 2\n    1 1000 1\n    1000000000000 42 88\n    3\n    4\n    2\n    1 2\n    1\n    3\n    ''') == '10\\n9\\n1000\\n42000000000000\\n10\\n10\\n42000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n\") == \"1000\"\nassert solution(\"5 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n\") == \"42000000000000\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"10\\n1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '9'\nassert solution('''\n5\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1 1000000 1 1000\n1 1 1 1\n''') == '1000'\nassert solution('''\n8\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1 1000000 1 1000\n1 1 1 1\n1 1 1 1\n''') == '42000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('2 1') == '2'\nassert solution('2 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '9'\nassert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '1000'\nassert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '42000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 3 3\n1 1 1\n2 2 2\n''') == '9'\n\nassert solution('''\n3\n3 3 3\n1 1 1\n2 2 2\n''') == '1000'\n\nassert solution('''\n2\n2 2 2\n1 1 1\n1 1 1\n''') == '42000000000000'\n\nassert solution('''\n10\n4 8 2\n4 8 2\n4 8 2\n4 8 2\n4 8 2\n4 8 2\n4 8 2\n4 8 2\n4 8 2\n4 8 2\n''') == '11000000000000'\n\nassert solution('''\n5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n5 5 5 5\n''') == '11000000000000'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '2'\nassert solution('10 10') == '1'\nassert solution('5 1') == '1'\nassert solution('2 4') == '1'\nassert solution('10 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6') == '2'\nassert solution('12') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '2'\nassert solution('3 4 5') == '1'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 4, 5]) == \"2\"\nassert solution([6, 4, 5]) == \"1\"\nassert solution([3, 4, 5]) == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6') == '2'\nassert solution('5 8') == '2'\nassert solution('5 5') == '0'\nassert solution('5 10') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1\", \"Wrong!\"\nassert solution(\"2 1\") == \"2\", \"Wrong!\"\nassert solution(\"7 10\") == \"3\", \"Wrong!\"\nassert solution(\"1 1\") == \"0\", \"Wrong!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 5\") == \"2\"\nassert solution(\"3 4 5\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n3 4 5''') == '2'\nassert solution('''3 6\n3 4 5''') == '1'\nassert solution('''3 1\n3 4 5''') == '0'\nassert solution('''1 1\n1 2 3''') == '3'\nassert solution('''1 1\n1 1 1''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\nassert solution('''\n1\nhoge\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nhoge\\neenglish\\nhoge\\nenigma\\n') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nhoge\nenglish\nenigma\n''') == 'No'\nassert solution('''\n5\nhoge\nenglish\nenigma\nmikyoshi\nhanako\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(Takahashi) == \"Yes\"\nassert solution(Takahashi2) == \"No\"\nassert solution(Takahashi3) == \"No\"\n\n\"\"\"\n\nfrom itertools import product\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nhoge\\neenglish\\nhoge\\nenigma') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"1000000000\") == \"Yes\"\nassert solution(\"1000000010\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"3\\nhoge\\negg\\n\") == \"No\"\nassert solution(\"7\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"Yes\"\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nhoge\nenglish\nhoge\nenigma\n''') == \"No\"\n\nassert solution('''\n5\nhoge\nfuga\nhoge\nenigma\n''') == \"Yes\"\n\nassert solution('''\n10\nhoge\nhoge\nfuga\nhoge\nenigma\nhoge\nfuga\nenigma\nenigma\n''') == \"Yes\"\n\nassert solution('''\n25\nhoge\nhoge\nfuga\nhoge\nenigma\nhoge\nfuga\nenigma\nenigma\n''') == \"Yes\"\n\nassert solution('''\n20\nhoge\nhoge\nfuga\nhoge\nenigma\nhoge\nfuga\nenigma\nenigma\n''') == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"No\"\nassert solution(input(\"\")) == \"Yes\"\nassert solution(input(\"hoge\\nenglish\\nhoge\\nenigma\\n\")) == \"No\"\nassert solution(input(\"hoge\\nenglish\\nhoge\\nenigma\\n\")) == \"Yes\"\nassert solution(input(\"hoge\\nenglish\\nhoge\\nenigma\\nenigma\\n\")) == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 71
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"6\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"1 2\") == \"6\"\nassert solution(\"2 1\") == \"6\"\nassert solution(\"1 1\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '6'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 3\n\"\"\") == \"6\"\nassert solution(\"\"\"4 6\n\"\"\") == \"8\"\nassert solution(\"\"\"2 2\n\"\"\") == \"5\"\n\"\"\"\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 2\n2\n1\n\"\"\") == \"6\"\n\nassert solution(\"\"\"2 2\n1\n1\n\"\"\") == \"6\"\n\nassert solution(\"\"\"2 2\n1\n1\n\"\"\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '6'\n\"\"\"\nA, B = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"4 7\") == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 5') == '6'\nassert solution('1 1') == '1'\nassert solution('10 10') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"salam\") == \"salam\"\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('sardine') == 'xxxxxxx'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\n'''\n\nimport re",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('10\\n10 20 10 20 30') == 'No'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('6') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('4\\n1 2 1 1 3') == 'No'\nassert solution('4\\n1 2 1 1 4') == 'Yes'\nassert solution('4\\n1 2 1 2 3') == 'No'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 2, 1, 1, 3]) == 'Yes'\nassert solution([5, 1, 2, 3, 4]) == 'No'\nassert solution([3, 2, 1, 3, 4]) == 'Yes'\nassert solution([1, 2, 1, 1, 3, 1, 1, 2]) == 'Yes'\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Yes'\nassert solution('1') == 'No'\nassert solution('6') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"3\\n3 2 1\\n\") == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 1 1 3\\n') == 'Yes'\n\n'''",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"6\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('2 3 -10') == '1'\nassert solution('2 3 -10') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '1'\nassert solution('''4 2 -9\n1 2 2\n2 3 2\n1 3 2\n3 1 2''') == '2'\nassert solution('''1 2 -10\n3 4 2\n4 5 2\n5 6 -10\n6 5 4''') == '1'\nassert solution('''3 4 2\n1 2 3\n3 4 1\n2 4 1\n1 3 4''') == '2'\nassert solution('''4 4 4\n1 2 3\n2 3 1\n3 1 2\n3 1 1''') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('4 4 -10\\n2 2 1\\n1 2 2\\n2 2 2\\n3 2 3\\n') == '1'\n\"\"\"\nimport sys\nsys.stdin = open(\"input.txt\", \"rt\")\nfrom collections import deque",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('2 2 -4') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"2 2 2\") == \"2\"\n\"\"\"\nfrom collections import deque\n\nN, M, C = list(map(int, stdin.split()))\n\ncodes = deque()\n\nfor i in range(N):\n    codes.appendleft(list(map(int, stdin.split())))\n\ncnt = 0\n\nwhile codes:\n    code = codes.pop()\n\n    for i in range(1, M+1):\n        if code[i-1] <= 0:\n            continue\n        if code[i-1] == 1:\n            if code[i] <= 0:\n                break\n            code[i] -= 1\n        else:\n            if code[i] <= 0:\n                break\n            code[i] -= 2\n        cnt += 1\n\nprint(cnt)\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n''') == '1', 'Error: Sample 1'\nassert solution('''\n10 5 1\n1 2 3\n3 2 1\n5 6 7\n8 8 8\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n''') == '10', 'Error: Sample 2'\n\n'''\n--- Sample Solution ---\nimport math\nimport itertools\n\nn, m, c = map(int, input().split())\na = [[int(x) for x in input().split()] for i in range(n)]\nb = list(map(int, input().split()))\n\nres = 0\nfor i in range(1 << n):\n    h = 0\n    for j in range(n):\n        if i & (1 << j):\n            h += a[j][0] * b[0] + a[j][1] * b[1] + a[j][2] * b[2]\n    if h > 0 and h <= c:\n        res += 1\n\nprint(res)\n'''\n\n'''\n## Sample Input 1\n3 3 -10\n1 2 3\n3 2 1\n1 2 2\n\n## Sample Output 1\n1\n\n## Sample Input 2\n10 5 1\n1 2 3\n3 2 1\n5 6 7\n8 8 8\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n\n## Sample Output 2\n10\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 2\") == \"1\"\nassert solution(\"2 2 -3 3\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"3 1 1 1 1\") == \"1\"\nassert solution(\"1 1 2 2 3\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '2'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nassert solution(\"2 4 1\\n-5 1 2\\n2 1 4\\n-1 1 -2\\n1 1 1\\n-1 -1 -3\") == \"1\"\nassert solution(\"2 4 2\\n-3 1 -2\\n1 1 3\\n-1 2 -2\\n2 1 4\\n1 1 2\\n-1 1 1\\n1 1 1\") == \"1\"\n",
        "num_ids_2": 71,
        "num_ids_4": 123
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('1000') == '1000'\nassert solution('1000000') == '1000'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '1'\nassert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('25') == '25'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('4\\n') == '0'\nassert solution('5\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000\") == \"1\"\nassert solution(\"1500\") == \"2\"\nassert solution(\"19000\") == \"100\"\nassert solution(\"100000000000\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"3\") == \"3\"\n\n------------------",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n4\n10''') == '100'\nassert solution('''1\n2\n4\n10''') == '100'\nassert solution('''1\n2\n3\n10''') == '10'\nassert solution('''1\n2\n3\n10''') == '10'\nassert solution('''1\n2\n3\n10''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '0'\nassert solution('0\\n') == '0'\nassert solution('1001\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1500\") == \"400\"\nassert solution(\"1000\") == \"100\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"\n\nn = int(input())\nn_chng = 0",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('100') == '10'\nassert solution('1000') == '11'\nassert solution('10000') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n5 2\n4 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n10\n2 2 2 3 3 3 5 5 5\n2\n\"\"\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 5 2\n4 5\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"15\"\nassert solution(\"5\") == \"19\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '9'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"9\", \"First\"\nassert solution(\"3\") == \"9\", \"Second\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 2') == '9'\nassert solution('2 6 8') == '12'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n3 5 2\n4 5\n\"\"\") == \"9\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"1\\n10 100000\\n5 5\") == \"9\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '9'\n\n'''\n\n\n\nn = int(input())\n\ntown_list = list(map(int,input().split()))\n\nhero_list = list(map(int,input().split()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 10 20') == 'War'\nassert solution('2 2 10 20') == 'No War'\nassert solution('3 3 10 20') == 'War'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 30') == 'War'\nassert solution('2 2 10 20') == 'War'\nassert solution('4 4 100 10') == 'War'\nassert solution('3 3 100 20') == 'War'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 16 20\") == \"War\"\nassert solution(\"3 2 10 16\") == \"No War\"\nassert solution(\"3 2 20 16\") == \"War\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"War\"\n\n\"\"\"\n\n\"\"\"\n--- Day 2: Inventory Management System ---\n\nYou use your device to log entries that represent the purchase of items.\n\nYou can now see a list of the things you own, or search for other people's inventory.\n\nIf you search for an item, enter a name:\n\nIf it is not found, return an error message.\n\nEnter a new name.\nEnter the item's price.\nAdd item to inventory.\n\nEnter a new name.\nEnter the item's price.\nAdd item to inventory.\n\nEnter a name.\nEnter the item's price.\nUpdate item price.\n\nEnter a name.\nEnter the item's price.\nRemove item from inventory.\n\nEnter a name.\nEnter the item's price.\nRemove item from inventory.\n\nEnter a name: Ring\nEnter the item's price.\nYou have the following items:\nItem (price) | Name\n----------------------------------\n25 | Ring\n\nEnter a new name: Book\nEnter the item's price.\nItem (price) | Name\n----------------------------------\n30 | Book\n\nEnter a new name: Phone\nEnter the item's price.\nItem (price) | Name\n----------------------------------\n35 | Phone\n\nEnter a name: Phone\nEnter the item's price.\nItem (price) | Name\n----------------------------------\n20 | Phone\n\nEnter a name: Phone\nItem (price) | Name\n----------------------------------\n30 | Phone\n\nEnter a name: Phone\nItem (price) | Name\n----------------------------------\n50 | Phone\n\nEnter a name: Phone\nItem (price) | Name\n----------------------------------\n75 | Phone\n\nEnter a name: Phone\nItem (price) | Name\n----------------------------------\n85 | Phone\n\nEnter a name: Phone\nItem (price) | Name\n----------------------------------\n100 | Phone\n\nEnter a name: Phone\nItem (price) | Name\n----------------------------------\n20 | Phone\n\nEnter a name: Phone\nItem (price) | Name\n----------------------------------\n30 | Phone\n\nEnter a new name: TV\nEnter the item's price.\nItem (price) | Name\n----------------------------------\n20 | TV\n\nEnter a new name: TV\nEnter the item's price.\nItem (price) | Name\n----------------------------------\n30 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n50 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n70 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n80 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n90 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n100 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n90 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n85 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n----------------------------------\n40 | TV\n\nEnter a new name: TV\nItem (price) | Name\n--------------------------------",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 10 20\n8 15 13''') == 'War'\nassert solution('''1 2 1\n1 2''') == 'No War'\nassert solution('''0 0 0\n1 1''') == 'No War'\nassert solution('''3 2 10 20\n8 15 13\n16 22\n''') == 'War'\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 10 20\n8 15 13\n16 22\n10 5 3\n5 4''') == 'War'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"1 2 10 20\") == \"No War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"2\") == \"6\"\n\"\"\"\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_str) == '6'\nprint(solution(input_str))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3\\n5\\n7\\n') == '6'\nassert solution('2\\n4\\n7\\n') == '4'\nassert solution('2\\n3\\n3\\n') == '2'",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n3\") == \"6\"\nassert solution(\"3\\n4\\n2\") == \"9\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('2 1') == '3'\nassert solution('3') == '3'\n\nimport sys\nfrom datetime import datetime as dt",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '6'\nassert solution('3') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '6'\n\n\"\"\"\n\n\nfrom math import gcd\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('4\\n3 2 1') == '1'\nassert solution('5\\n7 8 9 3') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2 3\n''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\") == \"0\"\nassert solution(\"2\\n3\\n4\") == \"0\"\nassert solution(\"3\\n4\\n5\") == \"0\"\nassert solution(\"3\\n5\\n6\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\nassert solution('''\n10\n8 4 2 1 5 3 6 7 6 9\n''') == '1.5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('1 2 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\nassert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(\"4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\n3 2 1\n1 2 3\n4 5 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == \"6\"\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == \"2\"\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(\"4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"0\"\n",
        "num_ids_2": 55,
        "num_ids_4": 84
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"5 3\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\nassert solution('3 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"2\") == \"99\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 2 3 14 5') == '5'\nassert solution('2 1 100') == '99'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"2\") == \"99\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '99'\nassert solution('3') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0 1\\n\") == \"3\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"0\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\nassert solution(\"4\\n0 1 0 1\\n\") == \"1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 0 1 0 1\n''') == \"2\"\n\nassert solution('''6\n0 1 0 1 1 0\n''') == \"3\"\n\nassert solution('''7\n1 0 1 1 1 0 1\n''') == \"3\"\n\nassert solution('''3\n0 0 0\n''') == \"0\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"2\"\nprint(solution(input_))\n\"\"\"\n\nn = int(input())\nschedule = list(map(int, input().split()))\n\nrest = 0\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == \"2\"\n\nassert solution('''\n7\n1 0 1 1 1 0 1\n''') == \"3\"\n\nassert solution('''\n3\n0 0 0\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 0 1 0 1\n''') == '2'\nassert solution('''6\n0 1 0 1 1 0\n''') == '3'\nassert solution('''7\n1 0 1 1 1 0 1\n''') == '3'\nassert solution('''3\n0 0 0\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 0 0\n\n''') == '2'\nassert solution('''\n5\n1 0 1 0 1\n\n''') == '2'\nassert solution('''\n7\n1 0 1 1 1 0 1\n\n''') == '3'\nassert solution('''\n3\n0 0 0\n\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution([5, 1, 1, 0, 1, 0, 1]) == '2'\nassert solution([5, 0, 1, 1, 0, 1, 0]) == '3'\nassert solution([0, 0, 0, 0, 0, 0, 0]) == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 74
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0 1\\n') == '3'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '0'\nassert solution('3\\n0 0 0\\n') == '0'\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == '2'\nassert solution('''\n6\n0 1 0 1 1 0\n''') == '3'\nassert solution('''\n3\n0 0 0\n''') == '0'\nassert solution('''\n3\n0 1 0\n''') == '0'\nassert solution('''\n4\n1 0 1 0\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('10') == '0'\nassert solution('15') == '1'\nassert solution('16') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '6'\n\nassert solution('''\n20\nbrie hard\ncamembert hard\nfeta hard\ngoat hard\nmuenster hard\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '13'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nhard\\nsoft\\nsoft\\nsoft\\nsoft') == '4'\nassert solution('4\\nhard\\nsoft\\nsoft\\nsoft') == '4'\nassert solution('6\\nhard\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft') == '3'\nassert solution('12\\nhard\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\",
        "num_ids_2": 47,
        "num_ids_4": 1806
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\n''') == '4'\n\nassert solution('''\n10\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n\n''') == '0'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3'\nassert solution('''\n2\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == '3'\nassert solution('6') == '4'\n\n'''\nimport re",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9') == 3\nassert solution('6') == 4",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\n\nassert solution(\"9\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '4'\nassert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1 0 0 2'\nassert solution('7') == '0 0 0 1 0 2 4'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"0 0 0 1 0 2 4\"\nprint(solution(\"7\"))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 4 3 1 0\n1\n''') == '0 0 0 1 0 2 4'\n\nassert solution('''\n5\n2 4 3 1 0\n3\n''') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 1 2\n3 2 1\n''') == '0 0 0 1 2'\n\nassert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 0 1') == '1 0 0 1'\nassert solution('0 1 2 3 4 5') == '0 1 2 3 4 5'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 2 3 4 0 5 6'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '4\\n0 1 2 1\\n3 2 1 1\\n'\n) == '1 0 0 2'\n\nassert solution(\n    '7\\n2 5 1 5 3 4 3\\n'\n) == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 1 2\\n3 2 1 1') == '1 0 0 2'\nassert solution('10\\n0 1 2 3 4 5 6 7 8 9 10\\n7 9 8 8 7 5 4 3 2 1 0') == '0 0 0 1 0 2 3 4 5 6 7 8 9 10'\n\nassert solution('10\\n0 1 2 3 4 5 6 7 8 9 10\\n7 9 8 8 7 5 4 3 2 1 0') == '0 0 0 1 0 2 3 4 5 6 7 8 9 10'\nassert solution('15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n14 9 8 7 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '0 0 0 1 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\nassert solution('2\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1') == '0 0'\n",
        "num_ids_2": 73,
        "num_ids_4": 195
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1 0 0 2 0 0 4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\"\nassert solution(\"5\\n5 1 2 1 3 4\\n5 4 3 2 1\\n\") == \"0 0 0 1 0 2 4\"\nassert solution(\"6\\n1 1 1 1 2 2\\n2 2 2 2 1\\n\") == \"0 0 0 1 2 1\"\nassert solution(\"10\\n3 2 1 2 1 4 2 1 2 1 1\\n2 1 1 4 1 2 2\\n\") == \"3 2 1 1 4 1 2 2 1 1\"\nassert solution(\"1000\\n2 2 2 1 1 1 4 1 1 1 1 1\\n1 1 1 4 1 2 2\\n\") == \"2 2 2 1 1 1 4 1 1 1 1 1\"\n",
        "num_ids_2": 60,
        "num_ids_4": 135
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('11') == '1'\n\n\"\"\"\n\nstdin = '0'\nstdin = '1'\nstdin = '10'\nstdin = '11'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['0', '1', '1', '0']) == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\n\nprint(solution())\n\n\n\n[Image] \n\"\"\"\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('0\\n1') == '0'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0\n1\n1\n0''') == '0'\nassert solution('''1\n0\n1\n0''') == '1'\nassert solution('''1\n0\n1\n0''') == '1'\nassert solution('''1\n0\n0\n0''') == '0'\nassert solution('''1\n1\n1\n0''') == '1'\n''') == '0'\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0\n1\n1\n0''') == '1'\nassert solution('''0\n0\n1\n1''') == '1'\nassert solution('''0\n1\n1\n0''') == '0'\nassert solution('''1\n1\n1\n0''') == '0'\nassert solution('''1\n1\n1\n0''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 10 80') == 'No'\nassert solution('1000 20 80') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 2') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('5000 5 0') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1000 10 20\") == \"No\"\n\n\"\"\"\n\nfrom math import ceil\nfrom time import time\n\nstart = time()",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == 'Yes', 'Sample Test Failed'\nassert solution('10\\n15\\n20') == 'No', 'Sample Test Failed'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\nassert solution(\"5 5 5\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('100 10 60') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('4 1000 15 80') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 10 80\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('84 97 66') == 'Yes', \"3x3 grid, A[1,1] = 84, A[1,2] = 97, A[1,3] = 66\"\nassert solution('79 89 11') == 'Yes', \"3x3 grid, A[2,1] = 79, A[2,2] = 89, A[2,3] = 11\"\nassert solution('61 59 7') == 'Yes', \"3x3 grid, A[3,1] = 61, A[3,2] = 59, A[3,3] = 7\"\nassert solution('7') == 'No', \"1x1 grid, A[1,1] = 7\"\nassert solution('89') == 'No', \"1x1 grid, A[1,1] = 89\"\n",
        "num_ids_2": 90,
        "num_ids_4": 160
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'Yes'\nassert solution('''79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'No'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'Yes'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'No'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'Yes'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'Yes', 'test 1 failed'\nassert solution('''87 79\n7\n87\n79\n24\n84''') == 'No', 'test 2 failed'\nassert solution('''61 59 7\n7\n87\n79\n24\n84''') == 'No', 'test 3 failed'\nassert solution('''7\n89\n7\n87\n79\n24\n84''') == 'No', 'test 4 failed'\nassert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'Yes', 'test 5 failed'\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n') == 'No'\nassert solution('\\n7\\n') == 'No'\nassert solution('8') == 'Yes'\n",
        "num_ids_2": 86,
        "num_ids_4": 145
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '30'\nassert solution('41 2') == '30'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"30\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"10 2\") == \"0\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"100 2\") == \"99\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"41 2\\n5 5\") == -1\nassert solution(\"41 1\\n100 2\") == \"99\"\n\n\"\"\"\n\nimport math\n\nn = int(input())\nm = int(input())\n\nassignments = list(map(int, input().split()))",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n5 6') == '30'\nassert solution('41 2\\n5 6') == '30'\nassert solution('8 2\\n5 6') == '-1'\nassert solution('41 2\\n8 6') == '-1'\nassert solution('8 2\\n41 6') == '-1'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"30\"\nassert solution(\"4 1\") == \"30\"\nassert solution(\"1 1\") == \"31\"\nassert solution(\"10 2\") == \"31\"\nassert solution(\"1 1\") == \"31\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"41 2\") == \"30\"\nassert solution(\"5 6\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"30\"\nassert solution(\"20 1\") == \"30\"\nassert solution(\"21 9\") == \"30\"\nassert solution(\"40 3\") == \"30\"\nassert solution(\"1 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('41 2\\n5 6') == '30'\nassert solution('41 2\\n10 9') == '-1'\nassert solution('41 2\\n15 20') == '-1'\n\n--If no solution exists, print -1.\n--If there are multiple solutions, print the minimum number of days required to do all the assignments during the vacation.\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''41 2\n5 6''') == '30'\nassert solution('''40 2\n5 7''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '30'\nassert solution('5 2') == '30'\nassert solution('2 2') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '5'\nassert solution('2 5') == '5'\nassert solution('3 5') == '5'\nassert solution('4 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"0 5\") == \"5\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 6\") == \"6\"\nassert solution(\"2 7\") == \"7\"\nassert solution(\"3 8\") == \"8\"\nassert solution(\"4 9\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 5\\n') == '5'\nassert solution('1 3\\n') == '3'\nassert solution('2 2\\n') == '2'\nassert solution('3 2\\n') == '2'\nassert solution('2 3\\n') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '5'\nassert solution('0 5') == '5'\nassert solution('1 0') == '1'\nassert solution('0 0') == '1'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"3 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5\\n') == '5'\nassert solution('2 2\\n') == '4'\nassert solution('3 2\\n') == '3'\nassert solution('4 2\\n') == '2'\nassert solution('5 2\\n') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 5\n''') == '5'\nassert solution('''1 0\n''') == '0'\nassert solution('''2 1\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('2\\n6 7\\n') == '1'\nassert solution('3\\n10 20 30\\n') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\", \"First\"\nassert solution(\"2\") == \"1\", \"Second\"\nassert solution(\"3\") == \"1\", \"Third\"\nassert solution(\"4\") == \"2\", \"Fourth\"\nassert solution(\"5\") == \"2\", \"Fifth\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('5') == '5'\nassert solution('7') == '2'\nassert solution('9') == '3'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7 6 8\n''') == '2'\nassert solution('''4\n10 4 3 2\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n4\\n') == '2'\nassert solution('1\\n3\\n5\\n') == '1'\nassert solution('2\\n2\\n2\\n') == '2'\nassert solution('2\\n2\\n2\\n') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3 1 2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 45
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1 2 3\"\n\"\"\"\n\nfrom typing import List\n\nN = int(input())\nstudent_numbers = list(map(int, input().split()))\nsorted_student_numbers = sorted(student_numbers)\nfor i in range(N):\n    print(sorted_student_numbers[i], end=\" \")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1\\n2\\n3\\n') == '1 2 3'\nassert solution('5\\n8 5 4 3 2') == '5 2 3 4 8'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1\\n\") == \"3 1 2\"\nassert solution(\"3 2 1\\n\") == \"3 1 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('4') == '4 3 1 2'\nassert solution('5') == '5 4 3 1 2'\nassert solution('6') == '6 5 4 3 1 2'\nassert solution('7') == '7 6 5 4 3 1 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('3') == '3 1 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"5\") == \"1 3 2 4 5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '3 1 2'\nassert solution('2') == '3 1 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3 1\n''') == '3 1 2'\nprint(solution('''2\n2 3 1\n'''))\nprint(solution('''3\n2 3 1\n'''))\nprint(solution('''10\n1 2 3 4 5 6 7 8 9 10\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 10 100') == '0'\nassert solution('1 1 100') == '1'\nassert solution('1 1 100') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"1234\"\nassert solution(\"10 7 100\") == \"9\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '10 7 100'\n) == '9'\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 2 10') == '12'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 5 100\") == \"0\"\nassert solution(\"10 10 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 7 100') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 7 100\n''') == '9'\nassert solution('''10 2 100\n''') == '0'\nassert solution('''10 8 100\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([10, 7, 100]) == '9'\n\"\"\"\nimport math\nA, B, X = map(int, input().split())\n\ndp = [[math.inf] * (X+1) for _ in range(100001)]\ndp[1][0] = 0\nfor i in range(2, X+1):\n    for j in range(1, min(A, X-i+1)+1):\n        dp[i][i] = j\n        if dp[j][i] == math.inf:\n            continue\n        dp[i][i] = j\n        for k in range(j, i+1):\n            dp[i][i] = min(dp[i][i], dp[j][i]+k*dp[k][i-k])\n            \nprint(dp[X][X])\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 150\\n150 140 100 200\\n') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n1\"\"\") == \"1\"\nassert solution(\"\"\"3\n1\n1\n1\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '0'\nassert solution(\"\") == '0'\nassert solution(\"4\") == '0'\nassert solution(\"4 150\") == '2'\nassert solution
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n2\n3\n''') == '2'\nassert solution('''3 4\n5 6\n7 8\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2'\nassert solution('1 100\\n150 140 100 200') == '1'\nassert solution('2 200\\n150 140 100 200') == '1'\nassert solution('3 150\\n150 140 100 200') == '2'\nassert solution('4 150\\n150 140 100 200') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 150\\n150 140 100 200\\n\") == \"2\"\nassert solution(\"5 10\\n10 10 10 10 10\\n\") == \"1\"\nassert solution(\"1 10\\n10 10\\n\") == \"2\"\nassert solution(\"4 100\\n1 100 100 100\\n\") == \"2\"\nassert solution(\"4 100\\n1 100\\n\") == \"3\"\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 150\\n150 140 100 200\\n') == '2'\nassert solution('4 150\\n140 100 200\\n') == '3'\nassert solution('4 100\\n150 100 200\\n') == '3'\nassert solution('4 100\\n140 100 200\\n') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 150\") == \"2\"\nassert solution(\"1 100\") == \"0\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"10 5\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 5\\n4 3 2 1\") == \"No\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('5 1\\n5 4 2 1') == 'No'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 1\n5 4 2 1\n''') == 'Yes'\nassert solution('''4 2\n5 4 2 1\n''') == 'No'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"Yes\"\nassert solution(\"5 1\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"Yes\", solution(\"4 1\")\nassert solution(\"10 1\") == \"No\", solution(\"10 1\")\nassert solution(\"3 1\") == \"Yes\", solution(\"3 1\")\nassert solution(\"10 5\") == \"Yes\", solution(\"10 5\")\nassert solution(\"10 10\") == \"Yes\", solution(\"10 10\")\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('3 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5, 4, 2, 1]) == \"Yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"3 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"12 2\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5,4,2,1]) == \"Yes\"\nassert solution([4,3,1,2,5]) == \"Yes\"\nassert solution([1,2,3,4,5]) == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == '5'\nassert solution('5 5 2') == '15'\nassert solution('6 6 2') == '30'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"8 9 8\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 2\\n.##\\n###\\n') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('5 4 3') == '5'\nassert solution('5 3 6') == '12'\nassert solution('2 2 1') == '1'\nassert solution('3 2 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"2 3 2\", \"..#\", \"###\"]) == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 2') == '5'\nprint(solution('2 3 2'))\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2020 2040') == '2'\nprint(solution(input()))\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2019 2020') == '1'\nassert solution('2020 2040') == '1'\nassert solution('2039 2039') == '1'\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nprint(solution(\"2020 2040\"))\nprint(solution())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2020 2041\") == \"4\"\nassert solution(\"2020 2042\") == \"4\"\nassert solution(\"2020 2043\") == \"5\"\nassert solution(\"2020 2044\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2020 2040') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2020 2040''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2020 2040') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"100 100\") == \"100\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10110\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"\") == \"WA\"\nassert solution(\"ABCD\") == \"WA\"\nassert solution(\"AABCDDD\") == \"AC\"\nassert solution(\"AABCDDDq\") == \"WA\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"WA\"\nassert solution(\"AC\") == \"AC\"\nassert solution(\"ATCODER\") == \"WA\"\n\"\"\"\n\nstring = input()\n",
        "num_ids_2": 19,
        "num_ids_4": 32
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"AC\", \"WA\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"ATCCER\") == \"WA\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"ATCODER\") == \"AC\"\nassert solution(\"AtCoder\") == \"WA\"\nassert solution(\"ATCODER\") == \"WA\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"CODER\") == \"WA\"\nassert solution(\"ATcoder\") == \"AC\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"WA\", \"Empty String\"\nassert solution(\"ATCODER\") == \"AC\", \"Upper case A\"\nassert solution(\"AtCoder\") == \"AC\", \"Upper case A\"\nassert solution(\"ATCODER\") == \"AC\", \"Lower case A\"\nassert solution(\"ATCODER\") == \"AC\", \"Lower case A\"\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('cts') == 'WA'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"AtCoder\") == \"WA\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1214') == '2'\nassert solution('1224') == '2'\nassert solution('124') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1324\") == \"133\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"24\") == \"2\"\nassert solution(\"\") == \"\"\nassert solution(\"101\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 39
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1214') == '2'\nassert solution('1215') == '2'\nassert solution('1216') == '2'\nassert solution('1217') == '2'\nassert solution('1218') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1214') == '2'\nassert solution('1213') == '1'\nassert solution('1324') == '6'\nassert solution('1111') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1214') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1234\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1214') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1214') == '2'\nassert solution('12345') == '5'\nassert solution('1234') == '4'\nassert solution('1234') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1234567890\") == \"3\"\nassert solution(\"1324\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1214') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == 'YES'\nassert solution('3 2 1') == 'NO'\nassert solution('5 2 3 4 1') == 'YES'\nassert solution('5 2 3 4 1') == 'NO'\nassert solution('5 2 3 4 2') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('3 1 2 4 5') == 'YES'\nassert solution('3 5 2 4 1') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('4 3 2 1') == 'NO'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5 3 4 1\") == \"YES\"\nassert solution(\"10 10 10 10\") == \"NO\"\nassert solution(\"5 2 3 4 1\") == \"YES\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 2 3 1') == 'YES'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n5 2 3 4 1\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3121\") == '2'\nassert solution(\"6\") == '1'\nassert solution(\"1000000000000000000000000000000000\") == '33'\nassert solution(\"201920181\") == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('3') == '2'\nassert solution('7') == '1'\nassert solution('89') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '2'\nassert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3121') == 2\nassert solution('6') == 1\nassert solution('1000000000000000000000000000000000') == 33\nassert solution('201920181') == 4",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2|0|1|9|201|81') == '33'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3121''') == '2'\nassert solution('''6''') == '1'\nassert solution('''201920181''') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\n\nassert solution('''\n4\n0 0 0 0\n1 2 3 4\n''') == '0'\n\nassert solution('''\n3\n1 2 3\n4 5 6\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"0\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"2\"\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3') == '2'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n') == '0'\nassert solution('2\\n1 2 -1\\n-6 -12 6\\n') == '0'\n",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2'\nassert solution('3\\n13 37 39\\n1 2 3\\n') == '0'\nassert solution('4\\n0 0 0 0\\n1 2 3\\n') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''\n3\n13 37 39\n1 2 3\n''') == '3'\nassert solution('''\n4\n0 0 0 0\n1 2 3 4\n''') == '0'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\ncodeforces\\ndodivthree') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n'\nassert solution('7\\nabaca?b') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n'\nassert solution('9\\nbambarbia') == '0\\n'\n",
        "num_ids_2": 81,
        "num_ids_4": 98
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(10) == \"5\"\nassert solution(7) == \"6 5\"\nassert solution(9) == \"6 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\\\n10\ncodeforces\ndodivthree\n\nOutput\n5\n7 8\n4 9\n2 2\n9 10\n3 1\n''') == '5'\n\nassert solution('''\\\n7\nabaca?b\nzabbbcc\n\nOutput\n5\n6 5\n2 3\n4 6\n7 4\n1 2\n''') == '6 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    7\n    a?b\n    zabbbcc\n    ''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"6 2\"\nassert solution(\"10\") == \"6 2\"\nassert solution(\"9\") == \"7 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '6 2'\nassert solution('10') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"7\") == \"6\"\nassert solution(\"9\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '10'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\nabaca?b') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\nassert solution('7\\nabaca?b') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\nassert solution('9\\nbambarbia') == '0\\n'\n",
        "num_ids_2": 72,
        "num_ids_4": 89
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '4 4 4 4 4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3 4 5 4 4'\nassert solution('10') == '2 2'",
        "num_ids_2": 45,
        "num_ids_4": 56
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n5\n1 2 3\n4 5\n3 4\n2 1\n1 0\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1\n5\n1 2 3\n4 5\n3 4\n2 1\n1 0\n\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution('3') == '4 4 4'\nassert solution('11') == '3 4 4 4 4 4 5'\n",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('7') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4 4 4 4 4'\nassert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3 7 7 7 7 7'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4 4 4 4 4 4 4 4 4 4 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"4 4 4 1 1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n\n''') == '3\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n''') == '4\nassert solution('''\n4\n1 1 1 1\n\n''') == '4\nassert solution('''\n10\n-2 -3 -4 -5 -6 -7 -8 -9 -10\n\n''') == '1 1 2'\nassert solution('''\n10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\n\n''') == '2 3 4 5 6 7 8 9 10'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution() == '3 4'\nassert solution() == '1 1'\nassert solution() == '2 2'\nassert solution() == '3 3'\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('4') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4 4 4 4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4 4 4 4 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 60
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([6, 11, 45, 1, 10, 12, 11, 7]) == 7\n\nassert solution([4, 2, 3, 7, 19, 3, 3]) == 0\n\nassert solution([5, 2, 3, 7, 19, 3, 3]) == 12",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '7'\nassert solution('5 2') == '0'\nassert solution('6 11') == '7'\nassert solution('4 2') == '0'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '0'\nassert solution('5 2') == '0'\nassert solution('6 11') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n6 11\n45 1 10 12 11 7\n    \"\"\"\n) == \"7\"\n\nassert solution(\n    \"\"\"\n4 2\n2 78 4 10\n    \"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"\n5 2\n3 7 19 3 3\n    \"\"\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"7\"\nassert solution(\"3 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '7'\nassert solution('5 2') == '12'\nassert solution('6 11') == '7'\nassert solution('4 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 11\\n') == '7'\nassert solution('4 2\\n') == '12'\nassert solution('5 2\\n') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == '7'\nassert solution(input_string_2) == '12'\nassert solution(input_string_3) == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7') == '7'\nassert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '7'\nassert solution('5 2') == '0'\nassert solution('4 2') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"6\") == \"18\"\nassert solution(\"20\") == \"50\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution( '1\\n2 3') == '6'\nassert solution( '1\\n2 2') == '3'\nassert solution( '2\\n2 2') == '3'\nassert solution( '5\\n2 2 2 3') == '8'\nassert solution( '10\\n2 3 2 3 2 4') == '15'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\"\n    ) == \"9\"\nassert solution(\n    \"4\"\n    ) == \"8\"\nassert solution(\n    \"2\"\n    ) == \"7\"\nassert solution(\n    \"10\"\n    ) == \"25\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('4\\n5 4 5 4\\n') == '0'\nassert solution('10\\n3 3 3 3 3 3 3 3 3\\n') == '10'",
        "num_ids_2": 34,
        "num_ids_4": 57
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 5\\n') == '9'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2 2 2 5\\n\") == \"9\"\nassert solution(\"5\\n6 1 3 4 5\\n\") == \"10\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('3') == '9'\nassert solution('4') == '6'\nassert solution('5') == '15'\n\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n---------------------------------------------------------------\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '9'\nassert solution('4') == '6'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 5\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == stdout_string, \"Should return {}\".format(stdout_string)\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n') == '110'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('5 2 5\\n1 2 3 4 5\\n1 3 2 5\\n2 3 4 5\\n1 4 5\\n2 5 4\\n3 4 5\\n2 5 1\\n3 5 4\\n2 5 3\\n3 5 2\\n1 4 5\\n2 5 1\\n3 5 4\\n2 5 3\\n3 5 2\\n1 4 5\\n2 5 1\\n3 5 4\\n2 5 3\\n3 5 2') == '65'\nassert solution('6 5 4\\n1 2 5 3\\n1 3 4 2\\n1 4 5 2\\n1 5 3 2\\n1 6 4 2\\n1 6 5 2\\n1 6 6 2') == '0'\n",
        "num_ids_2": 146,
        "num_ids_4": 200
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\") == \"110\"\nassert solution(\"3 4 3\") == \"110\"\nassert solution(\"10 4 3\") == \"110\"\nassert solution(\"10 4 3\") == \"110\"\nassert solution(\"3 10 3\") == \"110\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\") == \"110\"\nassert solution(\"3 3 3\") == \"110\"\nassert solution(\"2 4 3\") == \"110\"\nassert solution(\"2 3 3\") == \"110\"\nassert solution(\"1 2 3\") == \"110\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\") == \"110\"\nassert solution(\"1 2 3\") == \"110\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 4\") == \"110\"\nassert solution(\"3 4 3\") == \"110\"\nassert solution(\"1 2 2 10\") == \"10\"\nassert solution(\"1 2 2 100\") == \"10\"\nassert solution(\"1 2 2 0\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 2 3\\n1 2 3') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('3 3 3') == '110'\nassert solution('3 1 3') == '110'\nassert solution('3 4 5') == '110'\nassert solution('4 6 4') == '110'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '110'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('2 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 1') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '5'\nassert solution('10') == '9'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['4', '1 4 6 3']) == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 4 6 3') == '5'\nassert solution('5\\n1 4 6 3') == '3'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n') == '3\\n1\\n', 'First'\nassert solution('4\\n1 2 3 4\\n') == '1\\n', 'Second'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"5\"\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 5\\n') == '5'\nassert solution('4\\n1 4 6 3\\n') == '5'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4 6 3') == '5'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\nassert solution(\"10\") == \"2.3090908191\"\nassert solution(\"20\") == \"2.3090908191\"\nassert solution(\"100\") == \"2.3090908191\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1''') == '2.276142374'\nassert solution('''2\n0 0\n1 1''') == '1.0'\nprint('solved!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1\n''') == '2.2761423'\nassert solution('''3\n1 0\n2 0\n3 0\n''') == '2.2761423'\nassert solution('''3\n1 0\n2 0\n3 0\n''') == '2.2761423'\n\nprint(\"Congratulations! All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 0\n1 0\n0 1\n''') == '2.2761423709375'\nassert solution('''\n3\n0 0\n1 0\n0 1\n''') == '2.2761423709375'\nassert solution('''\n5\n1 2\n3 4\n5 2\n2 1\n4 3\n''') == '3.7999998153'\nassert solution('''\n10\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n8 0\n9 0\n10 0\n''') == '4.8333333333333333333333333333'\nassert solution('''\n20\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n8 0\n9 0\n10 0\n11 0\n12 0\n13 0\n14 0\n15 0\n16 0\n17 0\n18 0\n19 0\n20 0\n21 0\n22 0\n23 0\n24 0\n25 0\n26 0\n27 0\n28 0\n29 0\n30 0\n31 0\n32 0\n33 0\n34 0\n35 0\n36 0\n37 0\n38 0\n39 0\n40 0\n41 0\n42 0\n43 0\n44 0\n45 0\n46 0\n47 0\n48 0\n49 0\n50 0\n51 0\n52 0\n53 0\n54 0\n55 0\n56 0\n57 0\n58 0\n59 0\n60 0\n61 0\n62 0\n63 0\n64 0\n65 0\n66 0\n67 0\n68 0\n69 0\n70 0\n71 0\n72 0\n73 0\n74 0\n75 0\n76 0\n77 0\n78 0\n79 0\n80 0\n81 0\n82 0\n83 0\n84 0\n85 0\n86 0\n87 0\n88 0\n89 0\n90 0\n91 0\n92 0\n93 0\n94 0\n95 0\n96 0\n97 0\n98 0\n99 0\n100 0\n101 0\n102 0\n103 0\n104 0\n105 0\n106 0\n107 0\n108 0\n109 0\n110 0\n111 0\n112 0\n113 0\n114 0\n115 0\n116 0\n117 0\n118 0\n119 0\n120 0\n121 0\n122 0\n123 0\n124 0\n125 0\n126 0\n127 0\n128 0\n129 0\n130 0\n131 0\n132 0\n133 0\n134 0\n135 0\n136 0\n137 0\n138 0\n139 0\n140 0\n141 0\n142 0\n143 0\n144 0\n145 0\n146 0\n147 0\n148 0\n149 0\n150 0\n151 0\n152 0\n153 0\n154 0\n155 0\n156 0\n157 0\n158 0\n159 0\n160 0\n161 0\n162 0\n163 0\n164 0\n165 0\n166 0\n167 0\n168 0\n169 0\n170 0\n171 0\n172 0\n173 0\n174 0\n175 0\n176 0\n177 0\n178 0\n179 0\n180 0\n181 0\n182 0\n183 0\n184 0\n185 0\n186 0\n187 0\n188 0\n189 0\n190 0\n191 0\n192 0\n193 0\n194 0\n195 0\n196 0\n197 0\n198 0\n199 0\n200 0\n201 0\n202 0\n203 0\n204 0\n205 0\n206 0\n207 0\n208 0\n209 0\n210 0\n211 0\n212 0\n213 0\n214 0\n215 0\n216 0\n217 0\n218 0\n219 0\n220 0\n221 0\n222 0\n223 0\n224 0\n225 0\n226 0\n227 0\n228 0\n229 0\n230 0\n231 0\n232 0\n233 0\n234 0\n235 0\n236 0\n237 0\n238 0\n239 0\n240 0\n241 0\n242 0\n243 0\n244 0\n245 0\n246 0\n247 0\n248 0\n249 0\n250 0\n251 0\n252 0\n253 0\n254 0\n255 0\n256 0\n257 0\n258 0\n259 0\n260 0\n261 0\n262 0\n263 0\n264 0\n265 0\n266 0\n267 0\n268 0\n269 0\n270 0\n271 0\n272 0\n273 0\n274 0\n275 0\n276 0\n277 0\n278 0\n279 0\n280 0\n281 0\n282 0\n283 0\n284 0\n285 0\n286 0\n287 0\n288 0\n289 0\n290 0\n291 0\n292 0\n293 0\n294 0\n295 0\n296 0\n297 0\n298 0\n299 0\n300 0\n301 0\n302 0\n303 0\n304 0\n305 0\n306 0\n307 0\n308 0\n309 0\n310 0\n311 0\n312 0\n313 0\n314 0\n315 0\n316 0\n317 0\n318 0\n319 0\n320 0\n321 0\n322 0\n323 0\n324 0\n325 0\n326 0\n327 0\n328 0\n329 0\n330 0\n331 0\n332 0\n333 0\n334 0\n335 0\n336 0\n337 0\n338 0\n339 0\n340 0\n341 0\n342 0\n343 0\n344 0\n345 0\n346 0\n347 0\n348 0\n349 0\n350 0\n351 0\n352 0\n353 0\n354 0\n355 0\n356 0\n357 0\n358 0\n359 0\n360 0\n361 0\n362 0\n363 0\n364 0\n365 0\n366 0\n367 0\n368 0\n369 0\n370 0\n371 0\n372 0\n373 0\n374 0\n375 0\n376 0\n377 0\n378 0\n379 0\n380 0\n381 0\n382 0\n383 0\n384 0\n385 0\n386 0\n387 0\n388 0\n389 0\n390 0\n391 0\n392 0\n393 0\n394 0\n395 0\n396 0\n397 0\n398 0\n399 0\n400 0\n401 0\n402 0\n403 0\n404 0\n405 0\n406 0\n407 0\n408 0\n409 0\n410 0\n411 0\n412 0\n413 0\n414 0\n415 0\n416 0\n417 0\n418 0\n419 0\n420 0\n421 0\n422 0\n423 0\n424 0\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"2.2761423871\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"4\\n1 0\\n2 0\\n3 0\\n2 1\\n3 1\\n1 2\\n3 1\") == \"1.5234804093\"\nassert solution(\"4\\n1 0\\n3 0\\n2 1\\n3 1\\n1 2\\n3 1\") == \"1.5234804093\"\nassert solution(\"4\\n1 0\\n3 0\\n2 1\\n3 1\\n1 2\\n3 1\") == \"1.5234804093\"\nassert solution(\"4\\n1 0\\n3 0\\n2 1\\n3 1\\n1 2\\n3 1\") == \"1.5234804093\"\n",
        "num_ids_2": 70,
        "num_ids_4": 148
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2.2761423\"\nassert solution(\"4\") == \"3.1896554\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n0 0\n1 0\n0 1\n\"\"\") == \"2.2761423749\"\nassert solution(\"\"\"\n3\n0 0\n1 0\n0 1\n\"\"\") == \"2.2761423749\"\nassert solution(\"\"\"\n100\n0 0\n1 0\n0 1\n\"\"\") == \"3.90508803724\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\nassert solution(\"4\") == \"2.2761423749\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.276142...'\nassert solution('4\\n0 0\\n1 0\\n0 1\\n3 4\\n') == '2.276142...'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 4') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '4'\nassert solution('100 4') == '4'\nassert solution('100 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 2') == '1'\nassert solution('5 1') == '0'\nassert solution('9 4') == '4'\nassert solution('10 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['12 4']) == '4'\nassert solution(['7 5']) == '3'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12 4\\n\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 12\") == \"4\"\nassert solution(\"13 10\") == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 4\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 1') == '0'\nassert solution('123 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 20') == '12'\nassert solution('3 1') == '1'\nassert solution('100 100') == '100'\nassert solution('10 100') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 4') == 4\nassert solution('4 5') == 4\nassert solution('6 6') == 6\nassert solution('1 1') == 1\nassert solution('1 100') == 1\n\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10000') == '3'\nassert solution('15') == '7'\nassert solution('8') == '3'\nassert solution('5') == '5'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"10000\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(5) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10000''') == '3'\nassert solution('''5''') == '5'\nassert solution('''1000000000''') == '7'\nassert solution('''20000000000''') == '4'\nassert solution('''10000000000''') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10000''') == '3'\n\nassert solution('''123456789''') == '4'\n\nassert solution('''1000000000''') == '10'\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('10000') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10000\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '3'\nassert solution('10') == '3'\nassert solution('16') == '3'\nassert solution('100') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"3\"\nassert solution(\"15000\") == \"4\"\nassert solution(\"2\") == \"0\"\nassert solution(\"99\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2 3') == '1'\nassert solution('3 3 1 2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1 2\n2 3 3\n1 2 2''') == '2'\n\nassert solution('''2 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '2'\n\nassert solution('''3 5\n1 2 1\n2 1 1\n1 3 1\n3 1 2''') == '2'\n\nassert solution('''4 5\n1 2 3\n2 1 3\n3 1 2\n3 1 2''') == '3'\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('5 5\\n1 1 2 2 2 2 2\\n3 3 3 3 3 3\\n2 2 1 2 3 2\\n5 2 3 2 1 2\\n1 1 2 2 3 2') == '5'\nassert solution('10 10\\n1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == '10'\n\n>>> solution('5 5\\n1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\\n2 2 1 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2\\n5 2 3 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2\\n1 1 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2\\n1 1 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3')\n'10'\n>>> solution('20 20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n1 1 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2')\n'20'\n\"\"\"\n\nimport sys",
        "num_ids_2": 79,
        "num_ids_4": 194
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1 1') == '1'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\n\n'''\n3 3\n1 1 1\n1 1 1\n1 1 1\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 4\n2 1 3\n3 1 2 3\n2 3 2\n:\n3 1 2 3\n:\n2 3 2\n:\n3 1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 3\n2 1 3\n3 1 2 3\n2 3 2\n:\n3 1 2 3\n:\n3 1 2 3\n:\n2 3 2\n:\n2 3 2\n:\n3 1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 2\n1 2 3\n3 1 2 3\n:\n2 3 2\n:\n3 1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n:\n3 1 2 3\n:\n3 1 2 3\n:\n2 3 2\n:\n2 3 2\n:\n3 1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n:\n3 1 2 3\n:\n3 1 2 3\n:\n2 3 2\n:\n2 3 2\n:\n3 1 2 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '1'\nassert solution('2 3') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('2 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"3 1 2 3\") == \"2\"\nassert solution(\"2 3 2\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 4\n2 1 3\n3 1 2 3\n2 3 2\n\"\"\") == \"1\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0.5000000000'\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('2') == '0.25'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('10') == '0.0'\nassert solution('100') == '0.0'\nassert solution('101') == '0.0'\nassert solution('1010') == '0.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.5'\nassert solution('3') == '0.5'\nassert solution('4') == '0.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '0.5000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '0.5'\nassert solution('4\\n') == '0.5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0.5'\nassert solution('3') == '0.333333333333333333'\nassert solution('8') == '0.5'\nassert solution('4') == '0.5'",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('5') == '0.1666666667'\nassert solution('100') == '0.3333333333'\nassert solution('1000') == '0.1666666667'\nassert solution('10000') == '0.1666666667'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0.5'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution(\"4\") == \"0.5\"\nassert solution(\"5\") == \"0.166666666667\"\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n1 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2', \"First\"\nassert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2', \"Second\"\nassert solution('''\n4\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '1', \"Third\"\nassert solution('''\n4\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '1', \"Fourth\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n6\\n3\\n1 1\\n1\\n2 2\\n1\\n2\\n') == '4'\nassert solution('10\\n30\\n31\\n20\\n3\\n3\\n5\\n1\\n9\\n') == '3'\nassert solution('10\\n20\\n30\\n20\\n5\\n1\\n1\\n1\\n9\\n') == '3'\nassert solution('10\\n20\\n30\\n20\\n1\\n1\\n1\\n1\\n9\\n') == '3'\n\n--Pythonic--\n",
        "num_ids_2": 68,
        "num_ids_4": 140
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('7') == '6'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n''') == '2', 'Wrong answer'\n\nassert solution('''\n2\n1 1\n1\n1 1\n1\n2 0\n\n''') == '1', 'Wrong answer'\n\nassert solution('''\n3\n2\n1 1\n1\n1 1\n1\n2 0\n\n''') == '2', 'Wrong answer'\n\nassert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n''') == '1', 'Wrong answer'\n\nassert solution('''\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\n''') == '2', 'Wrong answer'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\") == \"2\"\nassert solution(\"10\\n1 2 1\\n2 1 1\\n3 1 1\\n4 1 1\\n5 1 1\\n6 1 1\\n7 1 1\\n8 1 1\\n9 1 1\\n10 1 1\") == \"9\"\nassert solution(\"10\\n1 2 1\\n2 1 1\\n3 1 1\\n4 1 1\\n5 1 1\\n6 1 1\\n7 1 1\\n8 1 1\\n9 1 1\\n10 1 1\") == \"10\"\n",
        "num_ids_2": 87,
        "num_ids_4": 147
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1\n3 1\n1\n1 1\n1\n3 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1\n4 1\n1\n1 1\n1\n4 0\n\"\"\") == \"4\"\n\nprint('Checking...')\nimport sys\nimport io\n\nsys.stdin = io.StringIO(sample_input)\nprint(solution())\nsys.stdin = io.StringIO(input)\nprint(solution())\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == 'nikoandsolstice'\nassert solution('5') == 'nikoand'\nassert solution('13') == 'nikoandsolstice'\nassert solution('10') == 'nikoand'\nassert solution('8') == 'nikoandsolstice'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"nikoandsolstice\") == \"nikoand...\"\nprint(\"Problem is solved\")\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'nikoandsolstice'\nassert solution('123456') == '123456'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == 'nikon'\n\n\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'nikoandso'\nassert solution('100') == 'nikoandso'\nassert solution('2') == 'no'\n",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"7\nnikoandsolstice\"\"\") == \"nikoand...\"\nassert solution(\"\"\"6\nabcdefghij\"\"\") == \"abcdefghijabcdefghijabcdefghij\"\nassert solution(\"\"\"5\ndafhqdlhjyjqjcsdqjfdqwcvxzbvqvcz\"\"\") == \"dafhqdlhjyjqjcsdqjfdqwcvxzbvqvcz\"\n\"\"\"\nTo run this, type the following in the terminal:\npython3 solution.py\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == 'nikoandsolstice'\nassert solution('8') == 'nikoandsolstice'\nassert solution('9') == 'nikoandsolstice'\nassert solution('1') == 'nikoandsolstice'\n\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoandsolstice')\nsolution('nikoands",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'nikoand...'\nassert solution('3') == 'nikoand...'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"nikoand...\"\n\n--:--\n@author Mina HE\n@date 2018-11-11\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('c') == 'c'\nassert solution('d') == 'd'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"apples\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '', 'Provided an empty input'\nassert solution('apple') == 'apples', 'Provided an input of the incorrect type'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"\n\nprint(\"You passed the test!\\n\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('dragon') == 'dragons'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'banaan'\nassert solution('chocolate') == 'choatchoo'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bans\"\nassert solution(\"carrot\") == \"carc\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"chicken\") == \"chickens\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"4 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"10 3\") == \"5\"\nassert solution(\"100 50\") == \"36\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2 3\") == \"1\"\nassert solution(\"3 2 2 2\") == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 38
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_sample_one()) == \"1\"\nassert solution(input_sample_two()) == \"2\"\nassert solution(input_sample_three()) == \"1\"\n\nimport io\nimport os\nimport sys\n\nfrom lib.functions import read_input\nfrom lib.functions import write_answer\nfrom lib.queue import Queue\nfrom lib.graph import Graph\nfrom lib.graph import Vertex\n\nsys.stdout = buffer = io.StringIO()\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n2\n1 3\n1\n3''') == '1', 'Takahashi will not fall victim if Snukes have no snacks.'\nassert solution('''5 1\n3\n1 1\n2\n1 3\n3\n1''') == '1', 'Snukes will not fall victim when Snukes are in the same Snack.'\nassert solution('''10 1\n3\n1 1\n2\n1 3\n3\n1 4\n2\n1 5\n3\n1''') == '2', 'Snukes will not fall victim if Snukes are not in same Snack'\nassert solution('''3 1\n1 1\n2\n1''') == '1', 'Takahashi can not be more than one victim'\n\n'''\n    Explanation:\n    Snuke A_{i, 1} are Snuke 1, Snuke 2, Snuke 3, Snuke 4..., Snuke N live in a town. \n    There are K kinds of snacks sold in this town, called Snack 1, Snack 2,..., Snack K. The following d_i Snukes have Snack i: Snuke A_{i, 1}, Snuke A_{i, 2},..., Snuke A_{i, {d_i}}. \n    Takahashi walks around this town and makes mischief on the Snukes who have no snacks. \n    How many Snukes will fall victim to Takahashi's mischief? \n    \n    For example, Snuke A_{1, 1} has Snack 1, Snack 2, Snack 3, Snack 4..., Snack N. The Snacks are Snack 1, Snack 2,..., Snack N. \n    Snuke A_{1, 1} and Snuke A_{1, 2} are both in the same Snack. So they will not be fallen victim. \n    Snuke A_{1, 1} and Snuke A_{1, 3} are in different Snacks. So they will be fallen victim. \n    \n    So, there will be one victim: Snuke A_{1, 2}\n'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '1'\nassert solution('2 1') == '1'\nassert solution('6 2') == '1'\n\"\"\"\n\nn, k = map(int, stdin.split())\n\nsnakes = []\nfor i in range(1, n + 1):\n    snakes.append(i)\n\nsnakes_per_snack = []\nfor i in range(1, k + 1):\n    snakes_per_snack.append(i)\n\ncount = 0\nfor i in range(1, n + 1):\n    snakes_list = []\n    for j in range(1, k + 1):\n        snakes_list.append(i * j)\n    if set(snakes_list) == set(snakes):\n        count += 1\nprint(count)\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\n\"\"\"\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().split())\nsnakes = []\nfor _ in range(N):\n    d, *x = map(int, sys.stdin.readline().split())\n    snakes.append((d, *x))\n\nsnakes.sort()\n\nvictims = 0\nfor (d1, *x1) in snakes:\n    victims += 1\n    for (d2, *x2) in snakes:\n        if d2 < d1:\n            for (d3, *x3) in snakes:\n                if d3 < d2:\n                    for (d4, *x4) in snakes:\n                        if d4 < d3:\n                            if x1[-1] == x2[0] == x3[0] == x4[0]:\n                                victims += 1\n\nprint(victims)\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nassert solution('100 3') == '4'\nassert solution('10 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 4') == '1'\nassert solution('6 6') == '1'\nassert solution('5 6') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('5') == '4'\nassert solution('aabbbbaaca') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"2\"\nassert solution(\"4\\n\") == \"3\"\nassert solution(\"5\\n\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\na\n''') == '1'\n\nassert solution('''\n3\na\nb\n''') == '1'\n\nassert solution('''\n5\nabcabc\n''') == '3'\n\nassert solution('''\n5\nabcabc\naabbbba\ncabaca\n''') == '4'\n\nassert solution('''\n5\nabcabc\naabbbba\ncabaca\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n') == '5'\nassert solution('10\\naabbbbaaca') == '5'\nassert solution('20\\nbaaaaaaabbbbaaaa') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\naabbbbaaca\n''') == '5'\n\nassert solution('''\n100\naaaaaaaaa\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"11\") == \"6\"\nassert solution(\"22\") == \"7\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\naaaaababbbbaaca') == '5'\nprint(solution('10\\naaaaababbbbaaca'))\n\nhttps://judge.softuni.bg/Contests/Practice/Index/1647#1\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"abaca\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"4 5 8 9\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''5\n5 2 4\n''') == '2'\nassert solution('''1\n1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"6\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5 2 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1 1 3''') == '2'\nassert solution('''10 1 1 3''') == '10'\nassert solution('''2 2 2 3''') == '3'\nassert solution('''2 3 1 3''') == '1'\nassert solution('''2 3 3 3''') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('1 2 1 3') == '3'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n\"\"\"\nA, B, C = list(map(int, stdin.split()))\nK = int(input())\n\nmax_sum = 0\ncount_0 = 0\ncount_1 = 0\nfor i in range(1, min(A, B, C) + 1):\n    if A % i == 0:\n        count_0 += 1\n    if B % i == 0:\n        count_1 += 1\n    if C % i == 0:\n        count_0 -= 1\n        count_1 -= 1",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1 3') == '2'\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"5 1 5 -1\") == \"5\"\nassert solution(\"6 1 6 -1\") == \"6\"\nassert solution(\"7 1 7 -1\") == \"7\"\nassert solution(\"6 1 5 -1\") == \"7\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2 1 1 3') == '2'\nassert solution('2 0 1 3') == '3'\nassert solution('5 0 1 3') == '3'\nassert solution('2 1 0 3') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 1 1 3\"\n) == \"2\"\n\n\"\"\"\n\nA, B, C = map(int, input().split())\nK = int(input())\n\ndp = [0] * (C+1)\ndp[0] = 0\nfor i in range(1, C+1):\n    if i % K == 0:\n        dp[i] = dp[i//K] + 1\n    else:\n        dp[i] = max(dp[i], dp[i-1])\nprint(dp[-1])\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 1 1 3\"\n) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 3') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 5\") == \"Yes\"\nassert solution(\"3 7\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 2\n3 4\n5 6\"\"\") == \"Yes\"\nassert solution(\"\"\"1 2\n3 4\n5 6\"\"\") == \"No\"\nassert solution(\"\"\"1 3\n3 2\n5 4\"\"\") == \"Yes\"\nassert solution(\"\"\"1 3\n3 2\n5 4\"\"\") == \"No\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Yes', \"Wrong result for input '1 2'\"\nassert solution('2 3') == 'No', \"Wrong result for input '2 3'\"\nassert solution('3 4') == 'No', \"Wrong result for input '3 4'\"\nassert solution('4 5') == 'No', \"Wrong result for input '4 5'\"\nassert solution('5 6') == 'Yes', \"Wrong result for input '5 6'\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('4 3') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"2 1\") == \"1\"\n\nclass Node:\n    def __init__(self, val):\n        self.val = val\n        self.neighbours = {}\n\nclass Graph:\n    def __init__(self, n):\n        self.n = n\n        self.node_map = {}\n        self.node_map[0] = Node(0)\n        for i in range(1, n + 1):\n            self.node_map[i] = Node(i)\n\n    def add_edge(self, a, b):\n        if a not in self.node_map:\n            self.node_map[a] = Node(a)\n        if b not in self.node_map:\n            self.node_map[b] = Node(b)\n\n        self.node_map[a].neighbours[b] = self.node_map[b]\n        self.node_map[b].neighbours[a] = self.node_map[a]\n\n    def get_paths(self, a, b):\n        results = []\n        if a == b:\n            results.append(1)\n        for neighbour in self.node_map[a].neighbours:\n            if neighbour!= b:\n                results += self.get_paths(neighbour, b)\n        return results\n\n\ngraph = Graph(4)\ngraph.add_edge(0, 1)\ngraph.add_edge(0, 2)\ngraph.add_edge(1, 2)\ngraph.add_edge(2, 3)\ngraph.add_edge(3, 3)\ngraph.add_edge(1, 3)\ngraph.add_edge(2, 3)\ngraph.add_edge(3, 0)\n\nprint(len(graph.get_paths(1, 3)))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n5 3\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n3 5\n''') == '4'\nassert solution('''\n5 3\n1 2\n1 3\n1 4\n1 5\n2 3\n3 4\n4 5\n''') == '3'\n'''\n\nfrom collections import deque",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2\n1 3''') == '2'\n\nassert solution('''3 3\n1 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''4 5\n1 2\n2 3\n3 4\n1 3\n4 5''') == '3'\n'''\n\nfrom math import sqrt",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('2 3\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 3\\n2 3') == '2'\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''\n2 3\n1 2\n1 3\n''') == '3'\n\nassert solution('''\n3 3\n1 2\n2 3\n''') == '2'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 1') == '0'\nassert solution('5 2') == '0'\nassert solution('10 4') == '1'\nassert solution('10 3') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '18', solution('5 2')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"10 5\") == \"5\"\nassert solution(\"100 100\") == \"100\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"18\"\nassert solution(\"5 3\") == \"13\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n''') == '18'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '18'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '18'\nassert solution('7 2') == '22'\nassert solution('13 2') == '14'\nassert solution('8 3') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n\") == \"18\"\nassert solution(\"5 2\\n\") == \"9\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"10 3\") == \"8\"\nassert solution(\"20 3\") == \"22\"\nassert solution(\"20 3\") == \"22\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1,2,Fizz'\nassert solution('15') == '60,\\mbox{Fizz},\\mbox{Buzz},11,\\mbox{Fizz},13,14,FizzBuzz'\n\n\"\"\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '60'\nassert solution('''15\n''') == '60'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(0) == \"0\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2\"\nassert solution(4) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5''') == '60'\nassert solution('''15''') == '60'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\\n\"\nassert solution(\"5\") == \"Buzz\\n\"\nassert solution(\"1\") == \"1\\n\"\nassert solution(\"10\") == \"Buzz\\nFizz\\nFizzBuzz\\nFizz\\nBuzz\\nFizz\\nBuzz\\nFizzBuzz\\nFizz\\nBuzz\\n\"\nassert solution(\"15\") == \"Buzz\\nFizz\\nFizzBuzz\\nFizz\\nBuzz\\nFizz\\nBuzz\\nFizzBuzz\\nFizz\\nBuzz\\nFizz\\nBuzz\\nFizzBuzz\\nFizz\\nBuzz\\nBuzz\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 83
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"60\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n20\n''') == '1,2,Fizz,4,Buzz,Fizz,7,8,Fizz,Buzz,11,Fizz,13,14,FizzBuzz'\nassert solution('''\n15\n''') == '1,2,Fizz,4,Buzz,Fizz,7,8,Fizz,Buzz,11,Fizz,13,14,FizzBuzz'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"15\") == \"60\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"5\") == \"Buzz\"\nassert solution(\"10\") == \"FizzBuzz\"\n\"\"\"\nimport itertools\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\n4 7 10 6 5\n''') == '8'\nassert solution('''\n1 5\n4 7 10 6 5\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n\") == \"2\"\n\n---or---\n\nfrom typing import List\nfrom functools import cmp_to_key\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5\") == \"8\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"8 8\") == \"8\"\nassert solution(\"7 7\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n10\\n6\\n5\\n\") == \"8\"\nassert solution(\"6\\n5\\n\") == \"8\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8'\nassert solution('7 9\\n5 6 9 3 7 8 1\\n1 2 3 4 5 6 7 8 9\\n4 5 6 7 8 9 1 2 3\\n6 7 8 9 1 2 3 4 5') == '2'\nassert solution('6 5\\n5 6 9 3 7 8 1\\n1 2 3 4 5 6 7 8 9\\n4 5 6 7 8 9 1 2 3\\n6 7 8 9 1 2 3 4 5') == '4'\nassert solution('6 5\\n5 6 9 3 7 8 1\\n1 2 3 4 5 6 7 8 9\\n4 5 6 7 8 9 1 2 3\\n6 7 8 9 1 2 3 4 5') == '2'\nassert solution('5 6\\n9 8 7 2 1 3 4 5\\n3 2 1 4 8 7 5 9\\n7 2 4 1 9 8 5 6 3\\n1 4 5 6 9 2 7 8 3') == '4'\n",
        "num_ids_2": 71,
        "num_ids_4": 177
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5\\n4 7 10 6 5\\n') == '8'\nassert solution('12 2\\n7 5 1 6 2\\n') == '2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"5 6\") == \"5\"\n\n###",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1') == '2'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '1'\n\n---OR---",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n1''') == '1', 'Wrong answer with input 1 1'\nassert solution('''3 3\n2 1\n1''') == '1', 'Wrong answer with input 3 3'\nassert solution('''2 5\n4 3\n2 5''') == '3', 'Wrong answer with input 2 5'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 5\") == \"1\"\n\n---Output---\nprint(\"1\")\nprint(\"1\")\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\", \"Should be 1\"\nassert solution(\"2 3\") == \"2\", \"Should be 2\"\nassert solution(\"3 2\") == \"3\", \"Should be 3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('5 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"10 4\") == \"9\"\nassert solution(\"2 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '4'\nassert solution('1 10') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 3') == '2'\nassert solution('5 7') == '6'\nassert solution('10 20') == '41'\nassert solution('10 20') == '41'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6', \"First\"\nassert solution('7 2') == '-1', \"Second\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\nassert solution(\"9 8\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n\") == \"6\"\nassert solution(\"7 2\\n\") == \"-1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '6'\nassert solution(input) == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 4\n3 7 5 1 10 3 20\n''') == '6'\nassert solution('''\n7 2\n3 7 5 1 10 3 20\n''') == '-1'\nassert solution('''\n''') == '-1'\nassert solution('''\n7 2\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '6'\nassert solution() == '-1'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"5 2\\n3 7 5 1 10 3 20\") == \"-1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 4') == '6'\nassert solution('7 2') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 3 2 7 1 9 5 6\") == \"6\"\nassert solution(\"2 5 3 2 7 1 9 5 6\") == \"-1\"\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3 4 1\\n3 5 2\\n3 5 1\\n3 5 1\"\nassert solution(\"5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\") == \"3 4 1\\n3 5 2\\n3 5 1\\n3 5 1\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n') == \"3\\n3 4 1\\n3 5 2\\n3 5 1\"\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\\n') == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"3 3\") == \"2 2 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"4 5\") == \"2 2 1\"\n\n\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"3 3\") == \"2 2 1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"2 1\") == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n.*.*\\n.*.\\n.*.*\") == \"3 4 1\"\nassert solution(\"6 8\\n***...\\n...**.\\n..****.\\n...**...\\n....*...\\n........\\n\") == \"3 4 1\"\nassert solution(\"3 3\\n**.\\n.*.\\n**.\\n\") == \"3 3 1\"\nassert solution(\"5 5\\n.**.\\n***..\\n.*..\\n.**.\\n\") == \"3 4 1\"\nassert solution(\"5 5\\n.***\\n.**.\\n.***\\n.*..\\n\") == \"3 4 1\"\n\n'''\n",
        "num_ids_2": 67,
        "num_ids_4": 127
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\".*..\") == \"3 4 1\"\nassert solution(\".*.*\") == \"2 2 1\"\nassert solution(\"***..\") == \"-1\"\n\nstdin = \"\"\"\n5 5\n.*...\n***.\n.*...\n.*...\n.....\n\n\"\"\"\nprint(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"6 8\") == \"3 4 1\"\n\n\nclass Solution:\n    def solve(self, grid):\n        # Complete this function\n        def neighbors(r, c, s):\n            res = []\n            for row in range(r-s, r+s+1):\n                for col in range(c-s, c+s+1):\n                    if row >= 0 and row < len(grid) and col >= 0 and col < len(grid[0]):\n                        res.append(grid[row][col])\n            return res\n\n        r, c = len(grid), len(grid[0])\n        ans = 0\n        for r in range(len(grid)):\n            for c in range(len(grid[0])):\n                if grid[r][c] == '*':\n                    left = grid[r][max(c-1, 0)]!= '*'\n                    up = grid[min(r+1, r+s)][c]!= '*'\n                    right = grid[min(r+1, r+s)][c+1]!= '*'\n                    down = grid[max(r-1, 0)][c+1]!= '*'\n                    ans += (1 + left + up + right + down)\n        return str(ans)\n\nn, m = map(int, input().split())\ngrid = []\nfor i in range(n):\n    grid.append(list(input()))\nprint(Solution().solve(grid))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6 8\\n\"\n    \"....*...\\n\"\n    \"...**...\\n\"\n    \".*****.\\n\"\n    \"...**...\\n\"\n    \"....*...\\n\"\n    \"........\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"5 5\\n\"\n    \".*...\\n\"\n    \"****.\\n\"\n    \".*...\\n\"\n    \".*...\\n\"\n    \".....\\n\"\n) == \"3\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('good') == 0\nassert solution('abcd') == 1\nassert solution('aaa') == 2\nassert solution('aaaabbbbcddd') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('good') == 'good'\nassert solution('aaa') == 'aaa'\nassert solution('aa') == 'aa'\nassert solution('') == ''\nassert solution('   ') == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'aa'\nassert solution('aa') == 'a'\nassert solution('') == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 28
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"ab\"\nassert solution(\"4\") == \"a\"\nassert solution(\"5\") == \"a\"\nassert solution(\"6\") == \"a\"\nassert solution(\"7\") == \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'ab'\nassert solution('4') == 'good'\nassert solution('5') == 'aaa'\nassert solution('6') == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"\nprint(\"Aufgabe 1: DONE\")",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('good') == 0\nassert solution('ab') == 1\nassert solution('aabc') == 2\nassert solution('aaa') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"good\") == \"good\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aabba\") == \"aabb\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('good') == 'good'\nassert solution('aaa') == 'aa'\nassert solution('aabc') == 'abc'\nassert solution('ab') == 'a'\n\nstdin = 'aaa'",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == 'YES'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\"\nassert solution(\"10 10\\n0 0\\n1 1\\n0 1\\n1 0\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n\") == \"NO\"\nassert solution(\"10 10\\n0 0\\n1 1\\n0 1\\n1 0\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"10 10\\n0 0\\n1 1\\n0 1\\n1 0\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n\") == \"NO\"\n\n\"\"\"\nimport unittest\n\n\nclass TestStringMethods(unittest.TestCase):\n    def test_input(self):\n        input_list = stdin.split()\n        self.assertEqual(len(input_list), 2)\n        self.",
        "num_ids_2": 82,
        "num_ids_4": 180
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"6 5\") == \"YES\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\n\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\n\nassert solution('''\n4 2\n1 2\n2 3\n1 3\n''') == 'NO'\n\nassert solution('''\n4 2\n1 2\n2 3\n1 3\n''') == 'NO'\n\nassert solution('''\n4 2\n1 2\n1 3\n1 4\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\n\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''\n3 3\n2 1\n1 5\n2 3\n''') == 'NO'\n''')\n\n\"\"\"\n\n\nimport sys\nimport math\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(TEST) == \"YES\"\n\n\"\"\"\nfrom collections import deque\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2\n1 4\n3 1\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"1 3\\n2 3\\n3 4\\n1 4\\n5 2\\n4 5\\n5 6\\n6 1\\n6 5\\n\") == \"NO\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"2\"\nassert solution(\"1 7\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''\n1 7\n1 7\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"2\"\nassert solution(\"1 7\") == \"0\"\nassert solution(\"2 5\") == \"3 4\"\nassert solution(\"2 7\") == \"0\"\nassert solution(\"3 5\") == \"1 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"1 7\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n2 2\n1 2\n5 5''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n2 2''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 5\n1 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'\n\n\n\"\"\"\nfrom math import inf",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2 4 \nassert solution('''1 7\n1 7\n''') == '0\n\nassert solution('''1 10\n1 10\n''') == '0\n\nassert solution('''1 2\n1 2\n''') == '1\n\nassert solution('''4 1\n4 1\n''') == '0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"5 3 5 7\") == \"4\"\nassert solution(\"5 7 5 7\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 2 3''') == '3'\nassert solution('''1 1 2 2''') == '2'\nassert solution('''1 3 2 2''') == '3'\nassert solution('''3 5 7 2''') == '4'\nassert solution('''1 1 2 2''') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 9 2 3\n''') == '2'\nassert solution('''5 7 2 1\n''') == '5'\nassert solution('''1 2 3 4 5 6 7\n''') == '8'\nassert solution('''1 1 1 2 2 3 4 5 6 7\n''') == '8'\nassert solution('''1 2 3 4 5 6 7 1 2 3 4 5 6 7\n''') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 9 2 3') == '2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '4', solution('1 2 3 4')\nassert solution('1 9 1 3') == '0', solution('1 9 1 3')",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 9 2 3\n''') == '2', 'It should equal to 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2 3\") == \"2\"\nassert solution(\"5 3 6 5\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('8 8 8 9') == '3'\nprint('Congratulations, have fun!')\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"10 10 10 10\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 4 2 3\") == \"2\"\nassert solution(\"5 9 2 3\") == \"3\"\nassert solution(\"5 5 5 5\") == \"5\"\nassert solution(\"4 4 4 4\") == \"4\"\n\n--------------------------------------------------",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234568') == 'No'\nassert solution('123456') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('00000000') == 'No'\n'''",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456') == 'No'\nassert solution('1337') == 'Yes'\nassert solution('123456') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456789') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('987654321') == 'No'\nassert solution('12345') == 'Yes'\n\"\"\"\nimport re",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456789') == 'No'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('12389989') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234567\") == \"No\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123456789') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('127') == '4'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"127\"\n) == \"4\"\n\nassert solution(\n    \"3\"\n) == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''15\n''') == '2'\nassert solution('''12\n''') == '2'\nassert solution('''22\n''') == '4'\nassert solution('''22\n22\n''') == '4'\nassert solution('''2\n2\n2\n2\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('12') == '0'\nassert solution('123') == '0'\nassert solution('1234') == '0'\nassert solution('12345') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"37\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('9') == '5'\nassert solution('6') == '4'\nassert solution('40') == '7'\nassert solution('21') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2''') == '4'\nassert solution('''10\n1\n2\n3\n4\n5\n6''') == '5'\nassert solution('''15\n10\n11\n12\n13\n14\n15''') == '7'\nassert solution('''20\n15\n16\n17\n18\n19\n20''') == '8'\nassert solution('''100\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"mango\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('kyoto') == 'Yes', 'kyoto'\nassert solution('tokyo') == 'Yes', 'tokyo'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n\ns = input()\nt = input()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"tokyo\"\nassert solution(\"tokyo\") == \"kyoto\"\nassert solution(\"\") == \"\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 33
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bbaaaabaabaaabaab\") == \"2\"\nassert solution(\"bbaaaabaabaaabaabaa\") == \"3\"\nassert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"cab\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 57
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n\"\"\"\n\nfrom collections import Counter",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abcd') == 2\nassert solution('abd') == 1\nassert solution('abcdefghij') == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ab\") == \"a\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abcd\") == \"d\"\nassert solution(\"abcc\") == \"b\"\nassert solution(\"abcdc\") == \"c\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n'''\n\nfrom collections import Counter\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"a\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution('cabacc') == '2'\nassert solution('abc') == '2'\nassert solution('abcba') == '2'\nassert solution('abcabcabc') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['8', '12', '2']) == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 2') == '3'\nassert solution('8 12 2') == '2'\nassert solution('7 15 5') == '5'\nassert solution('5 7 15 5') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('16 20 4') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6 3\") == \"6\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"2 6 1\") == \"1\"\nassert solution(\"6 2 3\") == \"3\"\nassert solution(\"6 1 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 1 3') == '3'\nassert solution('1 1 1') == '1'\nassert solution('2 8 2') == '2'\nassert solution('1 0 0') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 12 2\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 4\") == \"4\"\nassert solution(\"1 3 7\") == \"7\"\nassert solution(\"4 2 2\") == \"2\"\nassert solution(\"12 12 12\") == \"12\"\nassert solution(\"1 1 1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5 2\") == \"2\"\nassert solution(\"7 2 3\") == \"5\"\nassert solution(\"1 3 2\") == \"1\"\n\n\"\"\"\n\na, b, k = map(int, input().split())\na = list(str(a))\nb = list(str(b))\n\na.sort(reverse=True)\nb.sort(reverse=True)\n\nres = []\nfor i in range(k):\n    if a[i] == b[i]:\n        continue\n    else:\n        res.append(a[i])\n\nres.sort(reverse=True)\nprint(res[0])\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 6\\n') == '3'\nassert solution('3 2 7\\n') == '1'\nassert solution('5 3 10\\n') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('10000') == '2040'\nassert solution('10') == '10'\nassert solution('100') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1024') == '2020'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1024') == '2020'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''X\n\n''') == '2020'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1024') == '2020'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"2020\"\nassert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2020'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1234\") == \"36\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4\") == \"5\"\nassert solution(\"3\\n2 2 2\") == \"6\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"5\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n''') == '5'\nassert solution('''\n2\n1 4\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('3\\n1 4 3') == '8'\nassert solution('4\\n1 4 3') == '5'\nassert solution('5\\n1 4 3') == '8'\nassert solution('6\\n1 4 3') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 4\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('3\\n1 4 2') == '5'\nassert solution('4\\n1 2 3 4') == '4'\nassert solution('5\\n1 2 3 4') == '5'\nassert solution('6\\n1 2 3 4 5') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '3'\nassert solution('1 10') == '1'\nassert solution('2 10') == '1'\nassert solution('3 10') == '2'\nassert solution('4 10') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '0', 'Sample Test Failed'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 10\") == \"3\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 10') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"10 15\") == \"3\"\nassert solution(\"20 10\") == \"2\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"3\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"4 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"5 10\") == \"4\"\nassert solution(\"10 10\") == \"9\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 6\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('CSS') == \"2\"\nassert solution('CSR') == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SSR') == '2'\nassert solution('CSR') == '1'\nassert solution('CSS') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSRSSS\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSS') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '2'\nassert solution('CS') == '2'\nassert solution('CSR') == '2'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('9') == '8 9 10'",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\n\"\"\"\nfrom typing import List\n\nimport sys\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('1\\n1 3 5 4 2') == '1'\nassert solution('2\\n1 3 5 4 2') == '2'\nassert solution('3\\n1 3 5 4 2') == '2'\nassert solution('4\\n1 3 5 4 2') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 3 5 4 2\n''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.620\"\nassert solution(\"8\") == \"5.480\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\nassert solution('8') == '5.480'\nassert solution('5') == '6.040'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.720'",
        "num_ids_2": 144,
        "num_ids_4": 279
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n'''\n) == '5.410'\nassert solution(\n'''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n'''\n) == '5.620'\nassert solution(\n'''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n'''\n) == '5.480'\nassert solution(\n'''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n'''\n) == '6.040'\nassert solution(\n'''\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n'''\n) == '6.720'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5.622\"\nassert solution() == \"5.62\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5.400'\nassert solution('8') == '5.410'\nassert solution('5') == '6.420'\nassert solution('8') == '6.460'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\nassert solution(\"\"\"\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\n\"\"\") == \"5.620\"\nassert solution(\"\"\"\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\nassert solution(\"\"\"\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\n\"\"\") == \"6.040\"\nassert solution(\"\"\"\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\n\"\"\") == \"6.720\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0.18\"\nassert solution(\"1\") == \"0.18\"\nassert solution(\"2\") == \"0.18\"\nassert solution(\"3\") == \"0.18\"\nassert solution(\"4\") == \"0.18\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 8\n2 3 1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 16\n5 5 5 5 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 26\n5 5 5 5 5\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5 32\n5 5 5 5 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == \"4\"\nassert solution('7 10') == \"2\"\nassert solution('5 26') == \"1\"\nassert solution('5 16') == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 26') == '1'\nassert solution('5 1') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'\nassert solution('5 30') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '-1'\nassert solution('5 8') == '4'\nassert solution('5 16') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'\nassert solution('5 7\\n5 5 5 5 5') == '2'\nassert solution('5 10\\n1 3 4 2 1 4 2') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\n\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\n\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\n\nassert solution('''\n15 4\n1 3 1 3 10 3 7 7 12 3\n''') == '1 3 1 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1 1'\nassert solution('10 4') == '7 3 1 3'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\n\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\n\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\n''') == '1 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1 3\"\nassert solution(\"10 4\") == \"1 1\"\nassert solution(\"15 2\") == \"7 3 1 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('10 4') == '7 3 1 3'\nassert solution('15 2') == '7 3 1 3'",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 3 1 3 10 3 7 7 12 3') == '1 1 1 1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"7 3\\n\"\n    \"1 2 3 2 4 3 1\"\n) == \"1 2 3\"\n\nassert solution(\n    \"10 4\\n\"\n    \"1 3 1 3 10 3 7 7 12 3\"\n) == \"1 1 1 3\"\n\nassert solution(\n    \"15 2\\n\"\n    \"1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\"\n) == \"1 1 1 1 1 1 1 1 1 2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 4\n1 2 3 4\n10 3 7 3''') == \"5\"\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n\n''') == \"0\"\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n\n''') == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n4\n1 2 3 4\n10 3 7 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2\n4\n1 2 3 4\n10 3 7 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n2\n5\n1\n4\n3\n10\n8\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\n1 2 3 4\n10 8\n5 3\n4 3\n''') == '5'\n\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\n\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n\nassert solution('''\n4 1\n5\n1\n6\n''') == '0'\n\nassert solution('''\n5 1\n3\n6\n2\n5\n1\n''') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\") == \"5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 2 3 4\n    10 8\n    \"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n    4 2\n    1 2 3 4\n    10 8\n    \"\"\"\n) == \"5\"\nassert solution(\n    \"\"\"\n    6 1\n    3\n    6\n    2\n    5\n    1\n    4\n    \"\"\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2\"\n    \"1 2 3 4\"\n    \"10 3 7 3\"\n) == \"5\"\nassert solution(\n    \"6 1\"\n    \"3\"\n    \"6\"\n    \"2\"\n    \"5\"\n    \"1\"\n    \"4\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == \"5\"\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '8'\n\"\"\"\n\nn = int(input())\nstring = input()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(6) == 1\nassert solution(5) == 0\nassert solution(10) == 8",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"9\"\nassert solution(\"11\") == \"9\"\nassert solution(\"44\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input(\"./input_data/sample_1\")) == \"0\"\nassert solution(input(\"./input_data/sample_2\")) == \"0\"\nassert solution(input(\"./input_data/sample_3\")) == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 70
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxx\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '5'\nassert solution('5') == '1'\nassert solution('10') == '8'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nxxxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nxxxiii\n''') == '1'\nassert solution('''5\nxxoxx\n''') == '0'\nassert solution('''10\nxxxxxxxxxx\n''') == '8'\nassert solution('''1\nx\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"xiii\") == \"x\"\nassert solution(\"xoxx\") == \"xx\"\nassert solution(\"xxoxx\") == \"\"\nassert solution(\"xxoxxx\") == \"xxx\"\nassert solution(\"xxoxxxx\") == \"x\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '48'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('7') == '7'\nassert solution('11') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"48\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '12'\nassert solution('2') == '48'\nassert solution('3') == '81'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '4'\nassert solution('100') == '48'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\n\n--------------------------------------",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '48'\n\nprint(solution())\n\"\"\"\n\nr = int(input())\nprint(3 * r * (r ** 2) // 4)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n''') == '48'\nassert solution('''3\n''') == '48'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\", \"Must be an empty string.\"\nassert solution(\"0\") == \"\", \"Must be an empty string.\"\nassert solution(\"1\") == \"\", \"Must be an empty string.\"\nassert solution(\"2\") == \"\", \"Must be an empty string.\"\nassert solution(\"3\") == \"\", \"Must be an empty string.\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"48\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('10 10') =='safe'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"unsafe\"\nassert solution(\"100 100\") == \"safe\"\nassert solution(\"3\") == \"unsafe\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('2 6') =='safe'\nassert solution('4 5') == 'unsafe'\nassert solution('5 1') =='safe'\nassert solution('1 0') == 'unsafe'",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n\") == \"unsafe\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') =='safe'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'unsafe'\nassert solution('5 5') =='safe'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('2 3') =='safe'\nassert solution('4 3') == 'unsafe'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == 'unsafe'\nassert solution('5 5') =='safe'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'unsafe'\nassert solution(input(\"\")) =='safe'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 2 3') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n\nclass Solution:\n    def triangle_area(self, abc: list[int]) -> float:\n        pass\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 4 7\") == \"9\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nprint(solution(\"3 4 5\"))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '6', 'Wrong answer'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"8 4 2\") == \"14\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"3 4 5\"]) == \"6\"\nassert solution([\"5 5 4\"]) == \"10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 5\") == \"6\", \"Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4 3\n''') == '6'\nassert solution('''5 5 5\n''') == '12'\nassert solution('''4 2 3\n''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 5 1\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\n\nprint(solution(input()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 11 4') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\nA B C\n2 11 4\n''') == '4'\n\nassert solution(\n'''\nA B C\n2 3 5\n''') == '3'\n\nassert solution(\n'''\nA B C\n2 4 3\n''') == '4'\n\nassert solution(\n'''\nA B C\n5 5 5\n''') == '5'\n\nassert solution(\n'''\nA B C\n20 20 20\n''') == '20'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 11 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('3 1 1') == '3'\nassert solution('10 10 10') == '10'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('5 10 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 1''') == '1'\nassert solution('''2 2 1''') == '1'\nassert solution('''4 3 2''') == '2'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"10 2 6\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"5 6\") == \"10\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2', \"1 * 2 = 2\"\nassert solution('2 3') == '6', \"2 * 3 = 6\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('10') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5') == '10'\nprint('All tests passed!')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '10'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n''') == '2'\nassert solution('''\n1 3\n''') == '3'\nassert solution('''\n2 5\n''') == '10'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '10'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"2 1\\n\") == \"2\\n\"\nassert solution(\"2 2\\n\") == \"4\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"10 10\") == \"100\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 3') == '1'\nassert solution('10 5 7') == '10'\nassert solution('2 5 7') == '6'\nassert solution('10 10 7') == '20'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"4 5 2\") == \"15\"\nassert solution(\"2 5 3\") == \"7\"\nassert solution(\"1 3 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 4 7\") == \"10\"\nassert solution(\"3 10 7\") == \"15\"\nassert solution(\"1 5 7\") == \"6\"\nassert solution(\"1 2 3\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 7\n''') == '10'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 2 7\"\"\") == \"10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 2 5\") == \"6\"\nassert solution(\"1 1 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"4 4 8\") == \"20\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"5 5 10\") == \"20\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n200 120') == 'OK'\nassert solution('5\\n100 110') == 'NG'\nassert solution('20\\n1000 100') == 'NG'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n100 200\\n\") == \"OK\"\n\n2\n900 1700\n\n3\n200 600\n\n4\n1000 2000\n\n5\n500 600\n\n6\n1000 2000\n\n7\n500 600\n\n8\n10 20\n\n9\n100 50\n\n10\n500 600\n\n11\n900 2000\n\n12\n100 100\n\n13\n1000 2000\n\n14\n100 100\n\n15\n100 100\n\n16\n900 1700\n\n17\n1000 2000\n\n18\n100 100\n\n19\n100 100\n\n20\n900 1700\n\n21\n900 1700\n\n22\n100 100\n\n23\n900 1700\n\n24\n1000 2000\n\n25\n100 100\n\n26\n100 100\n\n27\n500 600\n\n28\n500 500\n\n29\n100 100\n\n30\n900 1700\n\n31\n1000 2000\n\n32\n100 100\n\n33\n900 1700\n\n34\n1000 2000\n\n35\n100 100\n\n36\n500 600\n\n37\n500 500\n\n38\n100 100\n\n39\n500 600\n\n40\n500 500\n\n41\n100 100\n\n42\n900 1700\n\n43\n1000 2000\n\n44\n100 100\n\n45\n100 100\n\n46\n900 1700\n\n47\n1000 2000\n\n48\n100 100\n\n49\n100 100\n\n50\n900 1700\n\n51\n1000 2000\n\n52\n100 100\n\n53\n500 600\n\n54\n500 500\n\n55\n100 100\n\n56\n500 500\n\n57\n500 500\n\n58\n100 100\n\n59\n500 600\n\n60\n500 500\n\n61\n100 100\n\n62\n900 1700\n\n63\n1000 2000\n\n64\n100 100\n\n65\n100 100\n\n66\n500 600\n\n67\n500 500\n\n68\n100 100\n\n69\n500 500\n\n70\n500 500\n\n71\n500 500\n\n72\n100 100\n\n73\n900 1700\n\n74\n1000 2000\n\n75\n100 100\n\n76\n100 100\n\n77\n100 100\n\n78\n500 600\n\n79\n500 500\n\n80\n100 100\n\n81\n500 500\n\n82\n500 500\n\n83\n100 100\n\n84\n500 600\n\n85\n500 500\n\n86\n100 100\n\n87\n500 500\n\n88\n500 500\n\n89\n100 100\n\n90\n500 600\n\n91\n500 500\n\n92\n100 100\n\n93\n500 500\n\n94\n500 500\n\n95\n500 500\n\n96\n900 1700\n\n97\n1000 2000\n\n98\n100 100\n\n99\n100 100\n\n100\n200\n\n101\n500\n\n102\n600\n\n103\n1000\n\n104\n500\n\n105\n1000\n\n106\n1000\n\n107\n500\n\n108\n500\n\n109\n1000\n\n110\n500\n\n111\n500\n\n112\n1000\n\n113\n500\n\n114\n500\n\n115\n500\n\n116\n500\n\n117\n500\n\n118\n500\n\n119\n500\n\n120\n500\n\n121\n500\n\n122\n500\n\n123\n500\n\n124\n500\n\n125\n500\n\n126\n500\n\n127\n500\n\n128\n500\n\n129\n500\n\n130\n500\n\n131\n500\n\n132\n500\n\n133\n500\n\n134\n500\n\n135\n500\n\n136\n500\n\n137\n500\n\n138\n500\n\n139\n500\n\n140\n500\n\n141\n500\n\n142\n500\n\n143\n500\n\n144\n500\n\n145\n500\n\n146\n500\n\n147\n500\n\n148\n500\n\n149\n500\n\n150\n500\n\n151\n500\n\n152\n500\n\n153\n500\n\n154\n500\n\n155\n500\n\n156\n500\n\n157\n500\n\n158\n500\n\n159\n500\n\n160\n500\n\n161\n500\n\n162\n500\n\n163\n500\n\n164\n500\n\n165\n500\n\n166\n500\n\n167\n500\n\n168\n500\n\n169\n500\n\n170\n500\n\n171\n500\n\n172\n500\n\n173\n500\n\n174\n500\n\n175\n500\n\n176\n500\n\n177\n500\n\n178\n500\n\n179\n500\n\n180\n500\n\n181\n500\n\n182\n500\n\n183\n500\n\n184\n500\n\n185\n500\n\n186\n500\n\n187\n500\n\n188\n500\n\n189\n500\n\n190\n500\n\n191\n500\n\n192\n500\n\n193\n500\n\n194\n500\n\n195\n500\n\n196\n500\n\n197\n500\n\n198\n500\n\n199\n500\n\n200\n500\n\n201\n500\n\n202\n500\n\n203\n500\n\n204\n500\n\n205\n500\n\n206\n500\n\n207\n500\n\n208\n500\n\n209\n500\n\n210\n500\n\n211\n500\n\n212\n500\n\n213\n500\n\n214\n500\n\n215\n500\n\n216\n500\n\n217\n500\n\n218\n500\n\n219\n500\n\n220\n500\n\n221\n500\n\n222\n500\n\n223\n500\n\n224\n500\n\n225\n500\n\n226\n500\n\n227\n500\n\n228\n500\n\n229\n500\n\n230\n500\n\n231\n500\n\n232\n500\n\n233\n500\n\n234\n500\n\n235\n500\n\n236\n500\n\n237\n500\n\n238\n500\n\n239\n500\n\n240\n500\n\n241\n500\n\n242\n500\n\n243\n500\n\n244\n500\n\n245\n500\n\n246\n500\n\n247\n500\n\n248\n500\n\n249\n500\n\n250\n500\n\n251\n500\n\n252\n500\n\n253\n500\n\n254\n500\n\n255\n500\n\n256\n500\n\n257\n500\n\n258\n500\n\n259\n500\n\n260\n500\n\n261\n500\n\n262\n500\n\n263\n500\n\n264\n500\n\n265\n500\n\n266\n500\n\n267\n500\n\n268\n500\n\n269\n500\n\n270\n500\n\n271\n500\n\n272\n500\n\n273\n500\n\n274\n500\n\n275\n500\n\n276\n500\n\n277\n500\n\n278\n500\n\n279\n500\n\n280\n500\n\n281\n500\n\n282\n500\n\n283\n500\n\n284\n500\n\n285\n500\n\n286\n500\n\n287\n500\n\n288\n500\n\n289\n500\n\n290\n500\n\n291\n500\n\n292\n500\n\n293\n500\n\n294\n500\n\n295\n500\n\n296\n500\n\n297\n500\n\n298\n500\n\n299\n500\n\n300\n500\n\n301\n500\n\n302\n500\n\n303\n500\n\n304\n500\n\n305\n500\n\n306\n500\n\n307\n500\n\n308\n500\n\n309\n500\n\n310\n500\n\n311\n500\n\n312\n500\n\n313\n500\n\n314\n500\n\n315\n500\n\n316\n500\n\n317\n500\n\n318\n500\n\n319\n500\n\n320\n500\n\n321\n500\n\n322\n500\n\n323\n500\n\n324\n500\n\n325\n500\n\n326\n500\n\n327\n500\n\n328\n500\n\n329\n500\n\n330\n500\n\n331\n500\n\n332\n500\n\n333\n500\n\n334\n500\n\n335\n500\n\n336\n500\n\n337\n500\n\n338\n500\n\n339\n500\n\n340\n500\n\n341\n500\n\n342\n500\n\n343\n500\n\n344\n500",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"OK\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 10\") == \"NG\"\nassert solution(\"1\\n1 1\") == \"OK\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n12345') == 'OK'\nassert solution('7\\n12345') == 'NG'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n500 600\\n') == 'OK'\nassert solution('1\\n2 3\\n') == 'NG'\nassert solution('6\\n6 7\\n') == 'OK'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"7\") == \"NG\"\nassert solution(\"7\") == \"NG\"\n\"\"\"\n\nimport sys\nfrom datetime import datetime",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"8\\n1000 1000\") == \"NG\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'NG'\nassert solution('5') == 'OK'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3') == '2.6666666667'\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n\") == \"2.6666666667\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7') == '1.3333333333'\nassert solution('2 3') == '1.3333333333'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 3\n''') == \"2.6666666667\"\n\nassert solution('''\n10 4\n''') == \"10.0\"\n\nassert solution('''\n15 6\n''') == \"5.0\"\n\nassert solution('''\n15 20\n''') == \"15.0\"\n\nassert solution('''\n20 20\n''') == \"20.0\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"2.6666\"\nassert solution(\"5 1\") == \"4.5\"\nassert solution(\"6 1\") == \"2.5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2\n\"\"\") == \"1.0\"\nassert solution(\"\"\"\n1 3\n\"\"\") == \"1.3333333333333333\"\nassert solution(\"\"\"\n2 4\n\"\"\") == \"1.75\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7') == '2.75'\n\"\"\"\n\nt, x = map(int, input().split())\n\nprint(t * x // (x + 1) )\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '2.5', 'Wrong!'\nassert solution('10 3') == '3.3333333333333335', 'Wrong!'\nassert solution('100 3') == '3.3333333333333335', 'Wrong!'\nassert solution('10000 3') == '3.3333333333333335', 'Wrong!'\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"12 3\") == \"8.3333333333\"\nassert solution(\"24 3\") == \"16.3333333333\"\nassert solution(\"50 3\") == \"18.3333333333\"\nassert solution(\"84 3\") == \"16.3333333333\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3') == '3.3333...'\nassert solution('10 10') == '11.6667...'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4 3') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6 3\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([6, 4, 3]) == \"1\"\nassert solution([1, 1, 1]) == \"0\"\nassert solution([6, 20, 0]) == \"1\"\nassert solution([12, 100, 35, 8]) == \"0\"\nassert solution([1, 1, 1, 1]) == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 4 3\\n') == '1'\nassert solution('10 2 3\\n') == '6'\nassert solution('1 2 1\\n') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 4 3\\n') == '1'\nassert solution('5 5 5\\n') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([6,4,3]) == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"30 15 5\") == \"6\"\nassert solution(\"10 10 10\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1000000 40000 50000') == '1000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 2 1 3') == '3'\nassert solution('1 2 3 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 3 2\n3 1 2\n''') == '3'\n\nassert solution('''\n5\n1 3 2 4 5\n3 1 2 4 5\n''') == '3'\n\nassert solution('''\n2\n1 3\n3 1\n''') == '2'\n\nassert solution('''\n4\n1 3 2 4\n3 1 2 4\n''') == '4'\n\nassert solution('''\n5\n1 3 2 4 5\n3 1 2 4 5\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n1 2\n3\"\"\") == \"3\"\nassert solution(\"\"\"3\n1 2\n2 3\n3\"\"\") == \"4\"\nassert solution(\"\"\"5\n1 1 1 2 2\n2 1 1 2 2\n1 2 2 1 1\n2 1 2 1 1\n1 1 1 2 2\"\"\") == \"6\"\nassert solution(\"\"\"4\n1 2 1 3\n2 1 3 1\n1 3 2 1\n3 1 1 1\"\"\") == \"3\"\nassert solution(\"\"\"5\n1 3 1 3 1\n3 1 1 3 3\n1 3 1 1 3\n1 1 1 3 1\n3 1 1 1 1\"\"\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n\n''') == '3'\nassert solution('''3\n1 2 3\n2 3 1\n3 1 2\n\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1 3 2\n3 1 2\n\"\"\") == \"3\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''3\n1 3 2\n3 1 2\n''') == '4'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 3 2\n3 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n1 2 3\n3 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n1 3 2\n3 1 2\n\"\"\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1 3 2\") == \"3\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 1 2 1 3 2 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ATCODER') == 'AT'\nassert solution('GATC') == 'TC'\nassert solution('TGATC') == 'ATC'\nassert solution('ATGATC') == 'ACG'\nassert solution('ATTC') == 'AT'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ATCODER') == 'ATC', 'Test 1'\nassert solution('ATCODERACDCB') == 'ATC', 'Test 2'\nassert solution('ATCODERACD') == '', 'Test 3'\nassert solution('ATCODERACCT') == 'ATC', 'Test 4'\nassert solution('ATCODERACCTG') == '', 'Test 5'\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ATCODER') == 3\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == \"AC\", \"Should be AC\"\nassert solution(\"ATCODERAA\") == \"AC\", \"Should be AC\"\nassert solution(\"ATCODERAC\") == \"AC\", \"Should be AC\"\nassert solution(\"ATCODERAT\") == \"AC\", \"Should be AC\"\nassert solution(\"ATCODERA\") == \"AC\", \"Should be AC\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('A') == 'A'\nassert solution('AT') == 'A'\nassert solution('ATCC') == 'A'\nassert solution('AAC') == 'A'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '9'\nassert solution('15') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"12\") == \"1\"\nassert solution(\"13\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1''') == '1'\nassert solution('''4\n1''') == '3'\nassert solution('''5\n1''') == '4'\nassert solution('''6\n1''') == '5'\nassert solution('''7\n1''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '9'\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '9'\nassert solution('20') == '0'\nassert solution('0') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '9'\n\n---Snippet---\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '9'\nassert solution('123') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '1'\nassert solution('11') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\nfrom functools import reduce\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofcoffee') == 'cupofhottea'\n\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'\n\"\"\"\n\n\"\"\"\nWrite a program that takes in a string S and an integer N and returns the number of operations required to convert\nS to N by swapping every kth character.\n\n\nExample 1:\nInput:\nS = \"cupofcoffee\", N = \"cupofhottea\"\nk = 2\nOutput: 4\n\nExample 2:\nInput:\nS = \"cupofcoffee\", N = \"cupofhottea\"\nk = 4\nOutput: 0\n\nConstraints:\n1 <= k <= 1000\n1 <= len(S), len(N) <= 1000\nS and N consist of lowercase English letters.\n\n-----Hints-----\nThe number of swaps can be done by using the even-odd algorithm\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\n----Hints----\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"cupofcoffee\"\n) == \"cupofhottea\"\nassert solution(\n    \"cupofhottea\"\n) == \"cupofcoffee\"\n\"\"\"\n\nimport collections",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\n",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1 1 1\"\nassert solution(\"3 10\") == \"1 1 2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 5\") == \"4 5 6 7 8 9\"\nassert solution(\"100 3\") == \"99 99 98 97 96 95 94 93 92 91 9\"\n",
        "num_ids_2": 31,
        "num_ids_4": 52
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6 7 8 9\") == \"5 6 7 8 9\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"3 3 3 3 3\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('4 8') == '4 5 6 7'\nassert solution('10 7') == '10 7 8 9'\nassert solution('5') == '5 6 7 8 9'\nassert solution('2') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 7') == \"5 6 7 8 9\"\nassert solution('1 5') == \"1 2 3 4 5\"\nassert solution('3 2') == \"3 4 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 43
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('1 2') == '1 2'\nassert solution('1 3') == '1 3'\nassert solution('2 2') == '2 2'\nassert solution('2 3') == '2 3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 7') == '5 6 7 8 9'\nassert solution('3 3') == '5 6 7 8 9'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('1 2') == '1 2'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"30\") == \"Yes\"\nassert solution(\"40\") == \"No\"\nassert solution(\"25\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('25') == 'Yes', \"Wrong solution\"\nassert solution('-10') == 'No', \"Wrong solution\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"-40\") == \"No\"\nassert solution(\"40\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'No'\nassert solution('20') == 'Yes'\nassert solution('40') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('X') == 'Yes'\nassert solution('40') == 'No'\nassert solution('-40') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Yes'\nassert solution('1') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('25') == 'No'\nassert solution('-40') == 'Yes'\nassert solution('40') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Yes\", \"Wrong Answer\"\nassert solution(\"25\") == \"No\", \"Wrong Answer\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"3 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 2') == '0'\nassert solution('2 2') == '0'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8\n''') == '1'\nassert solution('''3 3\n2 2\n1 1\n5 5\n-2 8\n''') == '1'\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n-2 8\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 4') == '1'\nassert solution('-2 8') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '1'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0123') == 'Bad'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('123456') == 'Bad'\nassert solution('123456') == 'Good'\nassert solution('123456') == 'Good'\nassert solution('123456') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('3724') == 'Good'\nassert solution('7325') == 'Good'\nassert solution('9999') == 'Good'\nassert solution('6675') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1234\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"112233\") == \"Good\"\nassert solution(\"123344\") == \"Good\"\nassert solution(\"13\") == \"Bad\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Bad'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(''.join(['0','1','2','3'])) == 'Good'\nassert solution(''.join(['0','1','2','1'])) == 'Bad'\nassert solution(''.join(['3','1','1','1'])) == 'Bad'\nassert solution(''.join(['2','2','2','2'])) == 'Good'\nassert solution(''.join(['0','1','1','1','0'])) == 'Bad'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Bad', 'Test 1 Failed'\nassert solution('3589') == 'Good', 'Test 2 Failed'\nassert solution('9783') == 'Good', 'Test 3 Failed'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Good\"\nprint(\"Congratulations, have a nice day!\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7256\") == \"Good\"\nassert solution(\"9287\") == \"Bad\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3.5'\nassert solution('2 5') == '9.5'\nassert solution('2 5 6') == '8.5'\nassert solution('2 5 6 7') == '7.5'\nassert solution('2 5 6 7 8') == '7.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"2.0\"\nassert solution(\"3\") == \"3.0\"\nassert solution(\"4\") == \"3.5\"\nassert solution(\"5\") == \"4.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2\n4\n5\n6\n3\n6\n3\n4\n''') == '5.0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 4') == '3.5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3.5'\nassert solution('5') == '3.8181818181818182'\nassert solution('10') == '3.6363636363636363'\nassert solution('1000') == '3.5'",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"4.0\"\nassert solution(\"10\") == \"8.0\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '2'\nassert solution('2 3') == '3.5'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"3.5\"\nassert solution(\"2\\n3 4\") == \"3.5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"2\"\nassert solution(\"2\\n1\\n2\\n\") == \"1.5\"\nassert solution(\"2\\n3\\n2\\n\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '1.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"6\"\nassert solution(\"3 1 2\") == \"14\"\n",
        "num_ids_2": 18,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\\n5 6 4\\n3 6\") == \"14\"\nassert solution(\"3\\n3 3 1\\n5 6 4\\n3 6\") == \"22\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''\n4\n4 1 2 3\n2 5 4 6\n3 6 7 8\n''') == '23'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '4'\nassert solution('3') == '8'\nassert solution('4') == '16'\nassert solution('5') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 2') == '14'\nassert solution('3 1 2 3') == '20'\nassert solution('3 4 5') == '10'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6''') == '14'\nassert solution('''3\n2 2 3\n1 6 8\n7 8''') == '22'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1, 2]) == 14\nassert solution([3, 1, 2]) == 14\nassert solution([3, 1, 2]) == 14\nassert solution([3, 1, 2]) == 14\nassert solution([3, 1, 2]) == 14\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 2') == 14\nassert solution('5 5 5') == 20\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"3 1 2\") == \"6\"\nassert solution(\"3 1 2 3\") == \"11\"\nassert solution(\"3 1 2 3 2\") == \"12\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '2'\nassert solution('10') == '2'\nassert solution('3') == '0'\n\n'''\n\n'''\nInput:\n\n(1) The first line contains an integer T, the number of test cases.\n\n(2) Each test case is as follows:\n\n(3) First line contains N, the length of the string.\n\n(4) Second line contains the string S.\n\nOutput:\n\nFor each test case, output the number of occurrences of ABC in S as contiguous subsequences.\n\nIf no such subsequences, then output 0.\n\nIf there are no occurrences of ABC in S, then output 0.\n\nFor example, on separate lines:\n\nInput:\n\n4\n10\nZABCDBABCQ\n\nOutput:\n\n2\n0\n0\n1\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABCD\") == '2'\nassert solution(\"10\\nABCDBCD\") == '1'\n\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---\n## ---(Wed Nov  6 17:43:50 2020)---",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\n\nn = int(input())\ns = input()\nres = 0\ncount = 0\nfor i in range(0, n - 2):\n    if s[i] == 'a' and s[i + 1] == 'c' and s[i + 2] == 'b' and s[i + 3] == 'a':\n        count += 1\n        res += count\nprint(res)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 2",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ZABCDBABCQ\") == \"2\"\nassert solution(\"ABCDCDABC\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == 1\nassert solution(\"ABBBDCCCDAABCAABCD\") == 3\nassert solution(\"ABCDBCDDEEFBDAABBBCBAABB\") == 3\nassert solution(\"ABCDABCABABCCCABABCCABA\") == 1\n",
        "num_ids_2": 29,
        "num_ids_4": 66
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '2'\n\"\"\"\n\nimport itertools\nimport string",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\nimport collections\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '5'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == '2'\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nMASHIKE\\nRUMOI\\nHABORO\") == \"2\"\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n\nfrom itertools import combinations",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == \"Yes\"\nassert solution('10 1') == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2\\n3 4\\n5 6\") == \"Yes\"\nassert solution(\"4 4\\n5 2\\n1 4\\n3 3\\n1 4\\n2 3\") == \"No\"\n\"\"\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 3, 6]) == \"Yes\"\nassert solution([1, 3, 5]) == \"No\"\nassert solution([1, 3, 4]) == \"Yes\"\nassert solution([5, 4, 3]) == \"No\"\nassert solution([1, 1, 1]) == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"Yes\", \"1 2\"\nassert solution(\"2 3\") == \"Yes\", \"2 3\"\nassert solution(\"3 4\") == \"No\", \"3 4\"\nassert solution(\"4 5\") == \"No\", \"4 5\"\nassert solution(\"5 6\") == \"Yes\", \"5 6\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"5 2\") == \"No\"\nassert solution(\"5 1\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"4 3\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('4 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n\n\"\"\"\n\nn, m = map(int, input().split())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 2') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('2 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"gene\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('sippuu') == 'Yes'\nassert solution('hi') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippaa') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"No\"\n\nfrom itertools import permutations",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"cups\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"cccce\") == \"No\"\nassert solution(\"cccccc\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n\nassert solution(\"sippu\") == \"No\"\n\nassert solution(\"\") == \"No\"\n\nprint(\"Tests passed!\")\n",
        "num_ids_2": 24,
        "num_ids_4": 33
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"3 60\") == \"TLE\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"TLE\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4'\nassert solution('2 3\\n1 2\\n3 4') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'TLE'\nassert solution('2') == 'TLE'\nassert solution('3') == '4'\nassert solution('4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 60\\n7 60\\n1 80\\n4 50') == '4'\nassert solution('3 70\\n7 60\\n1 80\\n4 50') == 'TLE'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 70\n7 60\n1 80\n4 50\n''') == \"4\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 70') == '4'\nassert solution('3 60') == '60'\nassert solution('1 80') == '80'\nassert solution('4 50') == '50'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\n\"\"\"\nimport sys\nimport math\n\nstdin = sys.stdin.read()\ninputs = stdin.splitlines()\nN, T = int(inputs[0]), int(inputs[1])\n\nresult = math.inf\n\nfor index, i in enumerate(inputs):\n    if index == 0:\n        continue\n    a, b = list(map(int, i.split()))\n    result = min(result, a + b * (T - index))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 70') == '4'\nassert solution('1 80') == 'TLE'\nassert solution('4 50') == 'TLE'\n'''",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 9\") == \"8\"\nassert solution(\"3 5 7\") == \"14\"\nassert solution(\"10 7 4\") == \"24\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 2 9\"\n) == \"8\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 2 9\") == \"9\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 0 1\") == \"1\"\nassert solution(\"1 0 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"20 5 7\") == \"55\"\nassert solution(\"100 5 2\") == \"25\"\nassert solution(\"4 1 7\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2 9\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 2 3') == '3'\nassert solution('10 2 8') == '7'\nassert solution('3 2 10') == '9'\nassert solution('1 2 9') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 8') == '8'\nassert solution('2 2 8') == '8'\nassert solution('5 3 2') == '10'\nassert solution('2 2 8') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 2 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 8''') == '8'\nassert solution('''5 5 10''') == '15'\nassert solution('''1 1 6''') == '6'\nassert solution('''0 5 10''') == '10'\nassert solution('''20 1 10''') == '10'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2 9') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == '1'\nassert solution(\"3\") == '1'\nassert solution(\"4\") == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nacornistnt\npeanutbomb\nconstraint''') == '1'\nassert solution('''4\npetercooper\npetermarbles\nxylophone\nconstraint''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nacornistnt\npeanutbomb\nconstraint''') == '1'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\nassert solution('''\n5\naetasundas\nsundasas\nsundasas\nsundasas\nsundasas\n''') == '4'\nassert solution('''\n1\nabc\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('3\\nqweqw\\nqweqw\\nqweqw') == '0'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n5\n10\n20\n30\n40\n''') == '8'\nassert solution('''\n1\n5\n10\n20\n30\n40\n''') == '0'\nassert solution('''\n3\n2\n1\n''') == '8'\nassert solution('''\n5\n1\n2\n3\n4\n5\n''') == '2'\nassert solution('''\n4\n1\n2\n3\n4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n3\n20\n38\n56''') == '2'\nassert solution('''4\n2132\n506\n999999999\n1000000000''') == '8'\nassert solution('''5\n1\n3\n20\n38\n56''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n2\\n5\\n2\\n0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n3 1\\n1 4\") == \"1 1 1 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"3 1\") == \"1 1 1\"\nassert solution(\"10 2\") == \"1 1 1 1 1 1 1 1 1\"",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"1 2 1 1 2\"\nassert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 2\n3 1\n1 4\n1 2\n3 5\n3 6\n5 2\n''') == \"2\", \"First\"\nassert solution('''4 2\n3 1\n1 4\n1 2\n3 5\n3 6\n5 2\n''') == \"1\", \"Second\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2\\n3 1\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '2'\nassert solution('6 2\\n3 1\\n1 4\\n1 2\\n4 5\\n2 5\\n2 6\\n5 3\\n3 6\\n3 7\\n4 8\\n4 9\\n') == '1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '3'\nassert solution('20 2\\n20 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n3 10\\n4 11\\n4 12\\n4 13\\n5 14\\n5 15\\n5 16\\n5 17\\n5 18\\n5 19\\n') == '4'\n",
        "num_ids_2": 92,
        "num_ids_4": 230
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\nassert solution('6 2') == '1'\nassert solution('10 2') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n3 1\n1 4\n1 2\n''') == '2'\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 2\n3 1\n1 4\n1 2\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 2\n3 1\n1 4\n1 2\n5 2\n3 6\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 2\n1 2\n3 4\n3 5\n3 6\n2 7\n2 8\n2 9\n5 2\n\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 2\") == \"1 2 1 1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('1 2') == '1 1 1'\nassert solution('10 3') == '1 1 1 1 1 1 1 1 1 1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == '2 2'\nassert solution('4 4 4 4') == '3 3'\nassert solution('7 7 7 7') == '3 6'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 4 4\n''') == '2 4'\nassert solution('''\n9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\nassert solution('''\n7\n4 3 7 1 4 3 3\n''') == '3 6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2 4'\nassert solution('7') == '3 6'\nassert solution('9') == '3 8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 4 4') == '2 4'\nassert solution('9 3 7 1 4 3 3') == '3 6'\nassert solution('7') == '3'\n",
        "num_ids_2": 31,
        "num_ids_4": 41
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 4 4\n\"\"\") == \"2 4\"\n\nassert solution(\"\"\"\n7\n4 3 7 1 4 3 3\n\"\"\") == \"3 6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2 4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 4'\nassert solution('4\\n1 2 4 4') == '2 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n') == '3 2 4 1 5'\nprint(solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n'))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\"\nassert solution(\"3\\n2 3\") == \"3 1 2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 3\n3 1\n1 2\n''') == '3 2 3 1'\n\nassert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n\n''') == '3 2 4 1 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3 2 1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3 2 1'\nassert solution('5') == '5 2 1 3 4'\nassert solution('6') == '6 5 1 4 2 3'\nassert solution('11') == '11 10 9 8 7 6 5 4 3 2 1'\nassert solution('13') == '13 10 9 8 7 6 5 4 3 2 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3 2 4 1 5\"\nassert solution(\"3\") == \"3 1 2\"\nassert solution(\"2\") == \"2 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3 2 4 1 5\"\nassert solution(\"3\") == \"3 2 4 1\"\nassert solution(\"2\") == \"2 3 1\"\nassert solution(\"1\") == \"1 2\"\nassert solution(\"3\") == \"3 1 2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 2 1'\nassert solution('3') == '3 2 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3 2 1'\nassert solution('2') == '2 3 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3 2 1 4'\n\nassert solution('3') == '1 2 3 4'\n\nassert solution('2') == '1 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 10 17 12 15 2''') == '3'\nassert solution('''10\n
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\", \"The first example\"\nassert solution(\"10\") == \"10\", \"The second example\"\nassert solution(\"6\") == \"1\", \"The third example\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution(\n'''\n10\n
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n
        "num_ids_2": 1610,
        "num_ids_4": 1610
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"10\"\n\nassert solution() == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n') == '4\\n-1\\n5\\n2\\n0\\n1'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('15 5 5 1') == '2'\nassert solution('16 7 5 2') == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"4\"\nassert solution('''3\n3\n5\n4''') == \"0\"\nassert solution('''0\n3\n5\n4''') == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 4 3 2\n10 5 4 3\n15 5 7 2\n20 5 7 3\n15 5 4 3\n16 7 5 2\n20 5 7 3\n15 5 4 3\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\"\"\"\n) == \"-1\"\nassert solution(\n\"\"\"15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '-1'\nassert solution('15 5 3 2') == '4'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('15 5 5 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"4\"\nassert solution(input_) == \"0\"\n\"\"\"\n\nimport sys\nsys.stdin = open('input.txt')\nimport math\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == '0'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '1'\nassert solution(\"4\") == '2'\nassert solution(\"5\") == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"2835\"\nassert solution(\"5\") == \"46\"\nassert solution(\"6\") == \"24\"\nassert solution(\"9\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"46\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''9\ncbbbbcaa\n''') == '0'\nassert solution('''9\ncbbbbcaa\n''') == '8'\nassert solution('''8\ncbbbbcaa\n''') == '8'\nassert solution('''8\ncbbbbcaa\n''') == '8'\nassert solution('''7\n???c\n''') == '2835'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nabcdc?\") == \"1\"\nassert solution(\"6\\nac?b?c\") == \"24\"\nassert solution(\"7\\n???????\") == \"2835\"\nassert solution(\"5\\na???c\") == \"46\"",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"24\"\nassert solution(\"8\") == \"48\"\nassert solution(\"10\") == \"48\"\nassert solution(\"10\") == \"88\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"46\"\nassert solution(\"a???c\") == \"46\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"5\") == \"46\"\nassert solution(\"9\") == \"0\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == str(24)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 0\n1 3 3 7\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''\n4 0\n1 3 3 7\n2 3 5\n2 1 1\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution() == \"16\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"4 0\") == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == '5'\nassert solution(input_2) == '16'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_1) == \"6\"\n\nassert solution(input_2) == \"18\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '5'\n\ninput_ = '4 0\\n1 3 3 7\\n2 3 5\\n2 1 1\\n'\nprint(solution(input_))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''4 0\n1 3 3 7\n''') == '16'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 3 3\\n2 3 5\\n2 1 1\\n') == '5'\nassert solution('4 0\\n1 3 3 7\\n') == '16'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"4 0\") == \"16\"\n\nassert solution(\"5 4\") == \"18\"\n\n\"\"\"\n\nfrom collections import defaultdict\nimport sys\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '45'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '-1'\nassert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '45'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"45\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\n\"\"\") == \"14\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n0 5\n\n\"\"\") == \"45\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n1 5\n\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n10 3 4\n2 3\n5 1\n2 7\n6 6\n\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n10 2 4\n0 9\n1 5\n\n\"\"\") == \"10\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '14'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 2 4') == '14'\nassert solution('10 1 1') == '45'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == -1\n",
        "num_ids_2": 58,
        "num_ids_4": 79
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\n",
        "num_ids_2": 60,
        "num_ids_4": 82
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 4\") == \"14\"\nassert solution(\"1 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"5 10 5\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5 2\") == \"No\"\nassert solution(\"3 5 2\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes', \"Sample Test\"\nassert solution('2 2 2') == 'No', \"Sample Test\"\nassert solution('5 6 6') == 'Yes', \"Sample Test\"\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('1 2 1') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == 'Yes', 'Test 1 failed'\nassert solution('5 7 5') == 'Yes', 'Test 2 failed'\nassert solution('1 1 2') == 'No', 'Test 3 failed'\nassert solution('6 5 7') == 'No', 'Test 4 failed'\nassert solution('1 1 1') == 'Yes', 'Test 5 failed'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 1') == 'No'\nassert solution('1 2 2') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('5 3 5') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 7 5''') == 'Yes'\nassert solution('''4 7 5''') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1', 'Expected 1'\nassert solution('2') == '1', 'Expected 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 5 1000\\n') == '1'\nassert solution('2 2 5 2000\\n') == '1'\n\n\"\"\"\n\nfrom math import floor, ceil\n\nstdin = input()\n\nn, T, A, *H = stdin.split()\nn = int(n)\n\nT = int(T)\nA = int(A)\n\nH = tuple(map(int, H))\n\nH_min = min(H)\nH_max = max(H)",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n5\\n1000 2000') == '1'\nassert solution('1\\n1\\n0') == '0'\nassert solution('1\\n10\\n0') == '0'\nassert solution('1\\n0\\n50') == '0'\nassert solution('1\\n0\\n-60') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2\\n5 5\\n1000 2000\"\n) == \"1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('6') == '4'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n12 5\n1000 2000\n''') == '1'\nassert solution('''\n3\n10 20 30\n10 20 30\n10 20 30\n''') == '2'\nassert solution('''\n4\n20 20 20\n20 20 20\n20 20 20\n''') == '1'\nassert solution('''\n5\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n10 10 10 10 10\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"-3\") == \"1\"\nassert solution(\"-3\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('123') == '1'\nassert solution('1000000') == '0'\nassert solution('12345') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"2\", \"12\", \"5\", \"1000\", \"2000\"]) == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"6 6\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 1]) == '1'\nassert solution([2, 4]) == '0'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('4 1') == '1'\nassert solution('1 1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"1 0\") == \"0\"\n\"\"\"\n\nstdin = input()\nN,M = map(int,stdin.split())\neven_count = 0\nfor i in range(0, N):\n    if i % 2 == 0:\n        even_count += 1\n    else:\n        even_count += 0\n\nodd_count = 0\nfor i in range(0,M):\n    if i % 2!= 0:\n        odd_count += 1\n    else:\n        odd_count += 0",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"5 5\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n5 3\n7 9''') == '1'\nassert solution('''1 2\n4 5\n6''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT_S) == OUTPUT_S\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3') == '2'\nassert solution('8 3') == '0'\nassert solution('8 3') == '3'\nassert solution('8 3') == '1'\nassert solution('8 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n\"\"\"\nimport sys\n\nstdin = sys.stdin.read()\nstdin = stdin.strip()\nstdin = stdin.split()\n\nN, Q = stdin[0], stdin[1]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n') == '2\\n0\\n3'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"9 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n8\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"0\\n\"\nassert solution(\"1 2\") == \"3\\n\"\nassert solution(\"5 5\") == \"2\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\"\nassert solution(\"6 4\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"0\"\nassert solution(\"8 3\\nAACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"3\"\n",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"4 7\") == \"0\"\nassert solution(\"8 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\nACACTACG\n3 7\n2 3\n1 8''') == '2'\nassert solution('''8\nACACTACG\n3 7\n2 3\n1 8''') == '3'\nassert solution('''5\nACACTACG\n3 5\n2 4\n1 6\n1 7''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5,3]) == \"210\"\nassert solution([5,4]) == \"220\"\nassert solution([5,5]) == \"250\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n50 100 80 120 80\\n') == '210'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"210\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"210\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"210\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == \"210\"\nassert solution(\"4 2\\n50 100\\n100 100\\n100 100\\n100 100\\n\") == \"300\"\nassert solution(\"5 3\\n50 100 80 120 80\\n\") == \"210\"\n",
        "num_ids_2": 49,
        "num_ids_4": 69
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 5') == '300'\nassert solution('4 6') == '200'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"210\"\nassert solution(\"10 5\") == \"95\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '210'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n50 100 80 120 80\\n') == '210'\nassert solution('3 2\\n1 2 1\\n') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 4 5\") == \"5\"\nassert solution(\"7 8 9\") == \"9\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"5 8 4\") == \"10\"\nassert solution(\"1 6 1\") == \"9\"\nassert solution(\"9 1 8\") == \"11\"\nassert solution(\"1 4\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 3, 4]) == \"4\"\nassert solution([2, 4, 6]) == \"8\"\nassert solution([3, 5, 7]) == \"13\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 5 3') == '5'\nassert solution('1 5 4') == '5'\nassert solution('1 5 4') == '5'\nassert solution('2 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"4 5 1\") == \"7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '3'\nassert solution('1 2 2') == '2'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 5 7') == '6'\nassert solution('4 4 4') == '3'\n\nstdin = \"\"\"2 2 2\"\"\"\nassert solution(stdin) == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '10'\nassert solution('0') == '10'\nassert solution('4') == '0'\nassert solution('5') == '10'\nassert solution('9') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0', \"Wrong!\"\nassert solution('2 1') == '10', \"Wrong!\"\nassert solution('3 1') == '0', \"Wrong!\"\nassert solution('4 1') == '10', \"Wrong!\"\nassert solution('5 1') == '0', \"Wrong!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"10\"\nassert solution(\"3 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"10 9\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"10\"\nassert solution(\"2 9\") == \"10\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"5 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n        '5\\n'\n        '1') == '10'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 7\") == \"10\"\n\n-------------------------------------------------------------------------------------------------------------------------\n\n--- Day 2: Password Philosophy ---\n\nYour flight departs in a few days from the coastal airport; the easiest way down to the coast from here is via toboggan.\n\nThe shopkeeper at the North Pole Toboggan Rental Shop is having a bad day. \"Something's wrong with our computers; we can't log in!\" You ask if you can take a look.\n\nTheir password database seems to be a little corrupted: some of the passwords wouldn't have been allowed by the Official Toboggan Corporate Policy that was in effect when they were chosen.\n\nTo try to debug the problem, they have created a list (your puzzle input) of passwords (according to the corrupted database) and the corporate policy when that password was set.\n\nFor example, suppose you have the following list:\n\n1-3 a: abcde\n1-3 b: cdefg\n2-9 c: ccccccccc\nEach line gives the password policy and then the password. The password policy indicates the lowest and highest number of times a given letter must appear for the password to be valid. For example, 1-3 a means that the password must contain a at least 1 time and at most 3 times.\n\nIn the above example, 2 passwords are valid. The middle password, cdefg, is not; it contains no instances of b, but needs at least 1. The first and third passwords are valid: they contain one a or nine c, both within the limits of their respective policies.\n\nHow many passwords are valid according to their policies?\n\n--- Part Two ---\nWhile it appears you validated the passwords correctly, they don't seem to be what the Official Toboggan Corporate Authentication System is expecting.\n\nThe shopkeeper suddenly realizes that he just accidentally explained the password policy rules from his old job at the sled rental place down the street! The Official Toboggan Corporate Policy actually works a little differently.\n\nEach policy actually describes two positions in the password, where 1 means the first character, 2 means the second character, and so on. (Be careful; Toboggan Corporate Policies have no concept of \"index zero\"!) Exactly one of these positions must contain the given letter. Other occurrences of the letter are irrelevant for the purposes of policy enforcement.\n\nGiven the same example list from above:\n\n1-3 a: abcde is valid: position 1 contains a and position 3 does not.\n1-3 b: cdefg is invalid: neither position 1 nor position 3 contains b.\n2-9 c: ccccccccc is invalid: both position 2 and position 9 contain c.\nHow many passwords are valid according to the new interpretation of the policies?\n\n\"\"\"\n\nimport os, sys\nsys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/..')\nimport lib\nimport time",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"0 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\", \"1\"\nassert solution(\"7 4\") == \"1\", \"7 4\"\nassert solution(\"3 5\") == \"1\", \"3 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"1\"\nassert solution(\"3 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 4\\n') == '1\\n'\nassert solution('12 2\\n') == '1\\n'\nassert solution('10 3\\n') == '4\\n'\nassert solution('15 5\\n') == '0\\n'\nassert solution('20 3\\n') == '3\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 5') == '0'\nassert solution('1 9') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('3 4') == '2'\nassert solution('-3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"3 3 3\") == \"bust\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('4 5 8') == 'bust'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"win\"\nassert solution(\"5 7 9\") == \"win\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7 9') == 'win', 'Check your code'\nassert solution('3 4 5') == 'bust', 'Check your code'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 9') == \"win\", \"Should be win\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\\n\") == \"win\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 9\\n') == 'win', \"First test case failed\"\nassert solution('1 2 3\\n') == 'bust', \"Second test case failed\"\nassert solution('2 5 3\\n') == 'win', \"Third test case failed\"\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == 'win', 'your solution is wrong'\nassert solution('4 8 3') == 'bust', 'your solution is wrong'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('123456789') == '123456789'\nassert solution('11') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"4\"\nassert solution(\"100\") == \"100\"\n\nstdin = \"5\"\nassert solution(stdin) == \"5\"\nstdin = \"4\"\nassert solution(stdin) == \"4\"\nstdin = \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('1') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"12\"\nassert solution(\"7\") == \"14\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '9'\nassert solution('1') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '2'\nassert solution('1 2') == '1'\nassert solution('2 3') == '0'\nassert solution('3 4') == '1'\nassert solution('5 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2') == '2'\n\nIn this example, we have the following input:\n\n6 2\n\nThe output is:\n\n2\n\nIn this example, we have the following input:\n\n3 4\n\nThe output is:\n\n0\n\nIn this example, we have the following input:\n\n4 6\n\nThe output is:\n\n0\n\n\"\"\"\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2'\nassert solution('10 10') == '5'\nassert solution('1 1') == '2'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"8 10\") == \"3\"\n\"\"\"\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('5 3') == '1'\nassert solution('3 1') == '0'\nassert solution('6 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\n\"\"\"\n\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2\") == \"2\"\n\nprint(solution(\"6 2\"))\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1'\nassert solution('20 10') == '3'\nassert solution('20 10') == '3'\nassert solution('20 10') == '3'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('16') == 'pon'\nassert solution('9') == 'hon'\nassert solution('1') == 'hon'\nassert solution('1') == 'pon'\nassert solution('0') == 'hon'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('16') == 'pon'\nassert solution('17') == 'bon'\nassert solution('123') == 'hon'\nassert solution('100') == 'pon'\nassert solution('999') == 'bon'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'pon'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"pon\", solution(\"5\")\nassert solution(\"9\") == \"bon\", solution(\"9\")\nassert solution(\"12\") == \"hon\", solution(\"12\")\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"bon\"\nassert solution(\"4\") == \"pon\"\nassert solution(\"5\") == \"bon\"\nassert solution(\"6\") == \"pon\"\nassert solution(\"7\") == \"bon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == 'pon'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5''') == 'bon'\nassert solution('''5''') == 'bon'\nassert solution('''9''') == 'bon'\nassert solution('''3''') == 'hon'\nassert solution('''4''') == 'hon'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"hon\"\nassert solution(\"10\") == \"bon\"\nassert solution(\"150\") == \"pon\"\nassert solution(\"5133\") == \"bon\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'pon'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0') == 'on'\nassert solution('1') == 'on'\nassert solution('2') == 'on'\nassert solution('3') == 'on'\nassert solution('4') == 'on'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '11'\nassert solution(input()) == '16'\nassert solution(input()) == '18'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"5\\n1 3 5 2 6\") == \"27\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '11'\nassert solution('5') == '65'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2\n0''') == '2'\nassert solution('''3\n3\n2''') == '5'\nassert solution('''5\n5\n4\n3\n2''') == '14'\nassert solution('''10\n10\n9\n8\n7\n6\n5\n4\n3\n2''') == '23'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"10\") == \"25\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 1 2') == '11'\nassert solution('5\\n1 3 2 4 5') == '19'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2\\n') == '11'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"100\") == \"99\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == None\nassert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n4\") == \"4\\n4\\n\"\nassert solution(\"3\\n3\\n5\\n\") == \"5\\n5\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n2\\n3') == '3'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\\n3\\n4\", \"Test Failed\"\nassert solution(\"2\") == \"4\\n4\\n4\", \"Test Failed\"\nassert solution(\"5\") == \"4\\n3\\n4\", \"Test Failed\"\nassert solution(\"4\") == \"4\\n4\\n4\", \"Test Failed\"\nassert solution(\"200\") == \"200\\n200\\n200\", \"Test Failed\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\nprint('tests passed')\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4\\n3\\n4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('5') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 4') == '2'\nassert solution('5 3') == '3'\nassert solution('6 7') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"5 3\") == \"9\"\nassert solution(\"15 10\") == \"19\"\nassert solution(\"3 2\") == \"3\"\n\n\"\"\"\n\nn, m = map(int, input().split())\n\ncoins = []\n\nfor i in range(n):\n    coins.append(int(input()))",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == '9'\nassert solution('5 3') == '9'\nassert solution('1 2') == '3'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"4 5\") == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n''') == '6'\nassert solution('''\n2 3\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 5\n''') == '15'\nassert solution('''\n10 5\n''') == '15'\nassert solution('''\n20 2\n''') == '24'\nassert solution('''\n20 2\n''') == '24'\nassert solution('''\n5 4\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '9'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('5 3') == '6'\nassert solution('5 5') == '10'\nassert solution('5 4') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '40'\nassert solution('1 1') == '1'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 4\n3 3 3 3\"\"\") == \"12\"\nassert solution(\"\"\"5 3\n-10 -20 -50 -80 -40\"\"\") == \"210\"\nassert solution(\"\"\"4 2\n5 2 2 2\"\"\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '40'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"40\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 3]) == \"40\"\nassert solution([4, 2]) == \"1\"\nassert solution([3, 1]) == \"0\"\nassert solution([2, 1]) == \"0\"\nassert solution([3, 2]) == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('5 3') == '40'\nassert solution('-30 -10 10 20 50') == '40'",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"40\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([[-30, -10, 10, 20, 50]], 3) == \"40\"\nassert solution([[-30, -10, 10, 20, 50]], 5) == \"120\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '40'\nassert solution('15 3') == '48'\nassert solution('1 3') == '4'\nassert solution('4 3') == '4'\nassert solution('15 10 20 50') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"40\"\n\n\"\"\"\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1,2') == '1'\nassert solution('8,13') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"30 23\") == \"2\"\nassert solution(\"-100 10\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([8, 13]) == 2",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"30 30\") == \"2\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"50 50\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 13\\n') == '2'\nassert solution('6 5\\n') == '0'\nassert solution('4 1\\n') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 3') == '1'\nassert solution('7 10') == '2'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 13\n''') == '2'\nassert solution('''8 5\n''') == '2'\nassert solution('''9 6\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 13') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"10 10\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 5') == '2'\nassert solution('10 6') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 5') == '4'\nassert solution('10 6') == '5'\nassert solution('10 7') == '5'\nassert solution('10 8') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"9 9\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4') == '3'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"50 50\") == \"7\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"20 10\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '3'\nassert solution('1\\n2') == '3'\nassert solution('1\\n2\\n3') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2''') == '3'\nassert solution('''10 4''') == '3'\nassert solution('''10 7''') == '2'\nassert solution('''10 1''') == '1'\nassert solution('''1 2''') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 75 25 100') == '50'\n\n-----\n\npythagoras(1,2,3,4,5)\n\nx^2 + y^2 = r^2\n\n0.5*(r^2-x^2-y^2)\n\n------",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 0 25 100\") == \"75\"\nassert solution(\"0 0 0 25\") == \"25\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('25 75 100') == '50'\nassert solution('25 100 75') == '50'\nassert solution('100 75 25') == '50'\nassert solution('0 75 25') == '50'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"12 723 888\") == \"14\"\nassert solution(\"100 101 0\") == \"101\"\nassert solution(\"2 0 1\") == \"1\"\nassert solution(\"12 19 5\") == \"12\"",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 75 25 100\n''') == '50'\nassert solution('''\n10 50 25 100\n''') == '25'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"1 0 5 100\") == \"49\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('0 75 25 100') == '50'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\", \"Wrong answer\"\nassert solution(\"0 75 25 100\") == \"50\", \"Wrong answer\"\nassert solution(\"0 75 25 100\") == \"50\", \"Wrong answer\"\nassert solution(\"0 75 25 100\") == \"50\", \"Wrong answer\"\nassert solution(\"0 75 25 100\") == \"50\", \"Wrong answer\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == 1\nassert solution(\"\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"105\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('105\\n') == '1'\nassert solution('1000000\\n') == '3'\nassert solution('100000000000000\\n') == '8'\nassert solution('100001000010000\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"100\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join([\n    '100',\n    '101',\n    '200',\n    '201',\n])) == '3'\n\nassert solution('\\n'.join([\n    '1000',\n    '1001',\n    '1010',\n    '1011',\n    '1012',\n    '1013',\n    '1014',\n    '1015',\n    '1016',\n    '1017',\n    '1018',\n    '1019',\n    '1020',\n    '1021',\n    '1022',\n    '1023',\n    '1024',\n    '1025',\n    '1026',\n    '1027',\n    '1028',\n    '1029',\n    '1030',\n    '1031',\n    '1032',\n    '1033',\n    '1034',\n    '1035',\n    '1036',\n    '1037',\n    '1038',\n    '1039',\n    '1040',\n    '1041',\n    '1042',\n    '1043',\n    '1044',\n    '1045',\n    '1046',\n    '1047',\n    '1048',\n    '1049',\n    '1050',\n    '1051',\n    '1052',\n    '1053',\n    '1054',\n    '1055',\n    '1056',\n    '1057',\n    '1058',\n    '1059',\n    '1060',\n    '1061',\n    '1062',\n    '1063',\n    '1064',\n    '1065',\n    '1066',\n    '1067',\n    '1068',\n    '1069',\n    '1070',\n    '1071',\n    '1072',\n    '1073',\n    '1074',\n    '1075',\n    '1076',\n    '1077',\n    '1078',\n    '1079',\n    '1080',\n    '1081',\n    '1082',\n    '1083',\n    '1084',\n    '1085',\n    '1086',\n    '1087',\n    '1088',\n    '1089',\n    '1090',\n    '1091',\n    '1092',\n    '1093',\n    '1094',\n    '1095',\n    '1096',\n    '1097',\n    '1098',\n    '1099',\n    '1100',\n    '1101',\n    '1102',\n    '1103',\n    '1104',\n    '1105',\n    '1106',\n    '1107',\n    '1108',\n    '1109',\n    '1110',\n    '1111',\n    '1112',\n    '1113',\n    '1114',\n    '1115',\n    '1116',\n    '1117',\n    '1118',\n    '1119',\n    '1120',\n    '1121',\n    '1122',\n    '1123',\n    '1124',\n    '1125',\n    '1126',\n    '1127',\n    '1128',\n    '1129',\n    '1130',\n    '1131',\n    '1132',\n    '1133',\n    '1134',\n    '1135',\n    '1136',\n    '1137',\n    '1138',\n    '1139',\n    '1140',\n    '1141',\n    '1142',\n    '1143',\n    '1144',\n    '1145',\n    '1146',\n    '1147',\n    '1148',\n    '1149',\n    '1150',\n    '1151',\n    '1152',\n    '1153',\n    '1154',\n    '1155',\n    '1156',\n    '1157',\n    '1158',\n    '1159',\n    '1160',\n    '1161',\n    '1162',\n    '1163',\n    '1164',\n    '1165',\n    '1166',\n    '1167',\n    '1168',\n    '1169',\n    '1170',\n    '1171',\n    '1172',\n    '1173',\n    '1174',\n    '1175',\n    '1176',\n    '1177',\n    '1178',\n    '1179',\n    '1180',\n    '1181',\n    '1182',\n    '1183',\n    '1184',\n    '1185',\n    '1186',\n    '1187',\n    '1188',\n    '1189',\n    '1190',\n    '1191',\n    '1192',\n    '1193',\n    '1194',\n    '1195',\n    '1196',\n    '1197',\n    '1198',\n    '1199',\n    '1200',\n    '1201',\n    '1202',\n    '1203',\n    '1204',\n    '1205',\n    '1206',\n    '1207',\n    '1208',\n    '1209',\n    '1210',\n    '1211',\n    '1212',\n    '1213',\n    '1214',\n    '1215',\n    '1216',\n    '1217',\n    '1218',\n    '1219',\n    '1220',\n    '1221',\n    '1222',\n    '1223',\n    '1224',\n    '1225',\n    '1226',\n    '1227',\n    '1228',\n    '1229',\n    '1230',\n    '1231',\n    '1232',\n    '1233',\n    '1234',\n    '1235',\n    '1236',\n    '1237',\n    '1238',\n    '1239',\n    '1240',\n    '1241',\n    '1242',\n    '1243',\n    '1244',\n    '1245',\n    '1246',\n    '1247',\n    '1248',\n    '1249',\n    '1250',\n    '1251',\n    '1252',\n    '1253',\n    '1254',\n    '1255',\n    '1256',\n    '1257',\n    '1258',\n    '1259',\n    '1260',\n    '1261',\n    '1262',\n    '1263',\n    '1264',\n    '1265',\n    '1266',\n    '1267',\n    '1268',\n    '1269',\n    '1270',\n    '1271',\n    '1272',\n    '1273',\n    '1274',\n    '1275',\n    '1276',\n    '1277',\n    '1278',\n    '1279',\n    '1280',\n    '1281',\n    '1282',\n    '1283',\n    '1284',\n    '1285',\n    '1286',\n    '1287',\n    '1288',\n    '1289',\n    '1290',\n    '1291',\n    '1292',\n    '1293',\n    '1294',\n    '1295',\n    '1296',\n    '1297',\n    '1298',\n    '1299',\n    '1300',\n    '1301',\n    '1302',\n    '1303',\n    '1304',\n    '1305',\n    '1306',\n    '1307',\n    '1308',\n    '1309',\n    '1310',\n    '1311',\n    '1312',\n    '1313',\n    '1314',",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n''') == '1'\nassert solution('''\n10\n''') == '0'\nassert solution('''\n10000\n''') == '208'\nassert solution('''\n100000\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('5\\n') == '0'\nassert solution('10\\n') == '1'\nassert solution('15\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('105') == '1'\nassert solution('2') == '0'\nassert solution('8') == '8'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n') == '1\\n'\nassert solution('10\\n') == '1\\n'\nassert solution('200\\n') == '199\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 4\") == \"1\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"6 5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 7\") == \"1\"\nassert solution(\"10 100\") == \"0\"\nassert solution(\"5 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"7 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3\\n') == '1'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([7, 3]) == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('7 3') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 3\n2 6\n3 5\n4 4\n5 4\n6 5\n7 7''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1'\nassert solution('10 2') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('111') == '111'\nassert solution('0') == '0'\n\"\"\"\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\n\n\nn = int(input())\n\nN = n\nK = 1\n\nwhile K < 10**9:\n    x = 10**9\n    count = 0\n    while x!= 0:\n        if x % 10 == N:\n            x = int(x / 10)\n            count += 1\n        else:\n            x = int(x / 10)\n    if count == 9:\n        break\n    else:\n        K += 1\n\nprint(str(K) + \" \" + str(N))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    31\n    123456789\n''') == '31'\nassert solution('''\n    27\n    123456789\n''') == '27'\nassert solution('''\n    21\n    123456789\n''') == '21'\nassert solution('''\n    20\n    123456789\n''') == '20'\nassert solution('''\n    15\n    123456789\n''') == '15'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"111\") == \"111\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"111\"\nassert solution(\"111\") == \"111\"\nassert solution(\"111\") == \"111\"\nassert solution(\"111\") == \"111\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('111') == '111'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('111') == '111'\nassert solution('11') == '11'\nassert solution('2') == '2'\nassert solution('21') == '21'\nassert solution('22') == '22'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"10 10 10\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 6, 3]) == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == '5'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 6 3\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"1 1 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 6 3') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 5 4') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n''') == '5'\nassert solution('''4\n''') == '1'\nassert solution('''2\n''') == '1'\nassert solution('''1\n''') == '1'\nassert solution('''6\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('5') == '5'\nassert solution('7') == '6'\nassert solution('2') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('8') == '5'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '3'\nassert solution('2') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"2 2 2 2\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"No\"\nassert solution(\"5 5 5 5\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 9 2 5\") == \"Yes\"\nassert solution(\"4 1 1 3\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 9 10 10\\n\") == \"No\"\nassert solution(\"1 2 3 4\\n\") == \"Yes\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('12 13 14 15') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('7 8 5 4') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 9 9\") == \"Yes\"\nassert solution(\"10 9 1 1\") == \"Yes\"\nassert solution(\"10 9 1 5\") == \"No\"\nassert solution(\"10 9 10 2\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '5'\nassert solution('10 2 5') == '15'\nassert solution('6 3 4') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    10 2 5\n    6 3 4\n    ''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n10 2 5\n6 3 4\n\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n2 3 1 1 3\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n1 1\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n10 2 1 3 4 5 6 7 8 9 10\n\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4\\n') == '5'\nassert solution('1\\n1 1\\n1') == '0'\nassert solution('10\\n1 2\\n2 3\\n1') == '10'\n",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '4'\nassert solution('5') == '8'\nassert solution('6') == '7'\nassert solution('7') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"1 1\") == \"##\"\nassert solution(\"1 2\") == \"##\"\nassert solution(\"1 3\") == \"##\"\nassert solution(\"1 4\") == \"##\"\n",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n##.#\\n##.#\\n###.#') == '###'\nassert solution('10 10\\n#.#.\\n##.##\\n#.#.\\n.##.\\n.##.\\n.##.\\n#.##\\n#.##\\n#.##\\n##.#') == '##.##'\nassert solution('10 10\\n.##.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n.##.') == '#.#.'\n",
        "num_ids_2": 85,
        "num_ids_4": 147
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\n##.#') == '###\\n###\\n.##\\n', \"Wrong\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"3 3\") == \"###\\n###\\n#..\n\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\", \"Test 1\"\nassert solution(\"4 5\") == \"###\\n###\\n.##\\n.##\\n###\\n\", \"Test 2\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n#.##\\n...#\\n#.##\\n#.#.\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n###\\n...#\\n#.##\\n#.#.\") == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 73,
        "num_ids_4": 109
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n.#.\\n.#.\\n#.#') == '###\\n###\\n.##\\n'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"##\"\nassert solution(\"4 3\") == \"###\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"2 1\") == \"##\\n\"\nassert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"3 2\") == \"##\\n#.\\n\"\nassert solution(\"3 5\") == \"###\\n###\\n#.#\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('1') == '6.28318530717958623200'\nassert solution('2') == '8.204565217391304459'\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6.28318530717958623200'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"6.28318530717958623200\"\nassert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"0\") == \"Invalid\"\nassert solution(\"a\") == \"Invalid\"\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1) == '6.28318530717958623200'\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"6.283185307179586\"\nassert solution(\"3\") == \"7.38905609893065\"\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution
        "num_ids_2": 1868,
        "num_ids_4": 1868
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3.14159265358979323846'\nassert solution('1') == '3.14159265358979323846'\nassert solution('0') == '3.14159265358979323846'",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '1.5707963267948966190'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"6.28318530717958623200\"\n\"\"\"\nfrom math import pi\n\nr = int(stdin)\n\nprint(f\"{pi * r**2}\")\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"AAAAA\") == \"Yes\"\nassert solution(\"AAAAAA\") == \"No\"\nassert solution(\"AAAAAAA\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"TSA\") == \"No\"\nassert solution(\"ATA\") == \"Yes\"\nassert solution(\"ATK\") == \"No\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"AABA\") == \"Yes\"\nassert solution(\"AAAB\") == \"No\"\nassert solution(\"ABA\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASAB') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AABBCCCDDDD') == 'Yes'\nassert solution
        "num_ids_2": 25,
        "num_ids_4": 1874
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"PSY\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASD') == 'No'\nassert solution('ABBD') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ASSA') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ASSA') == \"Yes\"\nassert solution('ATA') == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"SSSA\") == \"No\"\nassert solution(\"ALSA\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13 3') == '-10'\nassert solution('-1 -2') == '-3'\nassert solution('-1 -2 3') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-3 -14') == '-12'\nassert solution('-8 -5') == '-10'\nassert solution('-6 -3') == '-14'\nassert solution('3 5') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 -2\n6 -1\n4 -2\n''') == '-7'\nassert solution('''8 -12\n14 -3\n8 -1\n''') == '14'\nassert solution('''0 -1\n2 -5\n-2 -3\n''') == '-2'\nassert solution('''5 -5\n-8 -4\n-3 -9\n''') == '-10'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-100 3') == '-100'\nassert solution('100 3') == '100'\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"-10\"\nassert solution(\"1 2\") == \"-11\"\nassert solution(\"3 4\") == \"-16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('0 -2') == '2'\nassert solution('0 -5') == '-5'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n''') == '1'\nassert solution('''\n3 4\n''') == '6'\nassert solution('''\n4 7\n''') == '34'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"-13 3\") == \"10\"\nassert solution(\"-100 3\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13 3') == '-10'\nassert solution('-1 1') == '-1'\nassert solution('-100 -1') == '-99'\nassert solution('0 -1') == '-1'\nassert solution('-100 -13') == '-13'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '', 'Please, type the output you need.'\nprint(solution(\n    '''\n    7\n    2\n    '''\n))\nprint(solution(\n    '''\n    9\n    2\n    '''\n))\nprint(solution(\n    '''\n    -5\n    -3\n    '''\n))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '3'\nassert solution('4') == '0'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"7\"\nassert solution(\"1000\") == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 6, 5, 6, 8]) == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6 5 6 8\\n\") == \"3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 6, 5, 6, 8]) == '3'\nassert solution([1, 1, 1, 1]) == '4'\nassert solution([3, 5, 2, 3, 1]) == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('8') == '7'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n5\n6 5 6 8''') == '3'\nprint(solution('''4\n5\n6 5 6 8'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 3 4 5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n3 4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3 4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\\\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '5'\nprint('The local tests are done. Click return to continue.')\ninput()\nprint('Local tests are done. Click return to continue.')\ninput()\nprint('Done!')\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4'\nassert solution('4\\n1 1 1 1\\n') == '1\\n1'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n5'\nassert solution('5\\n1 2 1 2 1\\n') == '3\\n2 2 1'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n1 2 3 1 2 3 4\") == \"2\"\nassert solution(\"2\\n1 1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 63
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n''') == '2'\nassert solution('''\n5\n1 2 1 2 1\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n3\n1 1 1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n1\\n1\\n1\\n1\\n1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n5\"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 87
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    6\n    7\n    21\n    28\n''') == '1'\nassert solution('''\n    1\n    2\n    1\n    7\n    4\n    3\n''') == '2'\nassert solution('''\n    1\n    2\n    1\n    7\n    4\n    3\n''') == '1'\nassert solution('''\n    1\n    2\n    1\n    7\n    4\n    3\n''') == '7'\nassert solution('''\n    1\n    2\n    1\n    7\n    4\n    3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\\\n7\n3\n6\n7\n21\n28\n999999999\n999999984''') == \"1\"\nassert solution('''\\\n2\n2\n2\n1\n1''') == \"2\"\nassert solution('''\\\n1\n1\n1\n1\n1''') == \"1\"\nassert solution('''\\\n5\n3\n6\n7\n21\n28\n999999999\n999999984''') == \"7\"\nassert solution('''\\\n7\n3\n6\n7\n21\n28\n999999999\n999999984''') == \"7\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '2'\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '1'\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '7'\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n6\n7\n21\n28\n999999999\n999999984\"\"\") == \"1\"\nassert solution(\"\"\"\n7\n3\n6\n7\n21\n28\n999999999\n999999984\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n2\n1\n7\n4\n333333333\n333333328\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n2\n1\n7\n4\n333333333\n333333328\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n2\n1\n7\n4\n333333333\n333333328\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1\n    3\n    6\n    7\n    21\n    28\n    999999999\n    999999984\n    \"\"\") == \"1\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '7'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''5\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '50'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('512 4\\n') == '50\\n'\nassert solution('1000000000 9\\n') == '1'\n\nfrom typing import List\nimport sys\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['512', '4']) == '50'\nassert solution(['1000000000', '9']) == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''512 4\n        ''') == '50'\nassert solution('''1000000000 9\n        ''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''5\n3 7 5 1 5\n''') == '2'\nassert solution('''7\n5 1 4\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3 5 1 2 2 1\") == \"5 2 1 1 2 3\"\nassert solution(\"3 7 5 1 5\") == \"5 5 1 2 3\"\nassert solution(\"3 7 5 1 5\") == \"5 5 1 2 3\"",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('4') == '1 1 1 1'\nassert solution('5') == '1 1 1 1 1'\nassert solution('6') == '1 1 1 1 1 1'\nassert solution('7') == '1 1 1 1 1 1 1'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution(stdin='''\n5\n3 4 3 2 1\n''') == '2'\nassert solution(stdin='''\n3\n3 4 5 1\n''') == '3'\n",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n1 2 2 2 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5 \n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3 5 1 2 2 1\n''') == '5'\n\nassert solution('''\n5 1 4\n''') == '2'\n\nassert solution('''\n7\n3 7 5 1 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 5 1 5\\n') == '2\\n5 5\\n'\nassert solution('5\\n4 3 5 1 2 2 1\\n') == '5\\n2 1 1 2 3'\nassert solution('7\\n3 7 5 1 5\\n') == '7\\n1 2 2 2 2 3'\nassert solution('7\\n7 7 1 4\\n') == '7\\n1 2 2 2 2 3'\nassert solution('2\\n10 2\\n') == '2\\n10 2\\n'\n",
        "num_ids_2": 52,
        "num_ids_4": 105
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '7\\n'\n    '4 3 5 1 2 2 1'\n) == '5\\n'\nassert solution(\n    '5\\n'\n    '3 7 5 1 5'\n) == '2\\n'\nassert solution(\n    '7\\n'\n    '2 2 3 2 1 2 2'\n) == '7\\n'\nassert solution(\n    '3\\n'\n    '7 5 1 5'\n) == '2\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2 4\n''') == \"2\"\n\nassert solution('''\n7\n5 1 5 1 5 2 2\n''') == \"5\"\n\nassert solution('''\n5\n3 7 5 1 5\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\nassert solution('4 10') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\n\nassert solution(\"3 1\") == \"-1\"\nassert solution(\"4 10\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 16\n10 8\n7 4\n3 1\n5 4\n''') == '2'\nassert solution('''\n4 16\n10 8\n7 4\n3 1\n5 4\n''') == '-1'\nassert solution('''\n4 16\n10 8\n7 4\n3 1\n5 4\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == '2'\nassert solution('4 16') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"5 0\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4 21\n10 8\n7 4\n3 1\n5 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4 16\n10 8\n7 4\n3 1\n5 4\n\"\"\") == \"-1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 16\n10 8\n7 4\n3 1\n5 4\n''') == '2'\nassert solution('''\n4 21\n10 8\n7 4\n3 1\n5 4\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 1\n6 5 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 5 3\") == \"tleelte\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"tleelte\"\nassert solution(input()) == \"qwerty\"\nassert solution(input()) == \"vvvvvv\"\nassert solution(input()) == \"abcde\"\n\nfrom collections import Counter",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"tleelte\", solution(\"\")\nassert solution() == \"qwerty\", solution(\"\")\nassert solution() == \"vvvvvv\", solution(\"\")\nassert solution() == \"abcde\", solution(\"\")",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"te\"\nassert solution(\"2\") == \"ts\"\nassert solution(\"3\") == \"tt\"\nassert solution(\"4\") == \"elet\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 5 3\") == \"tleelte\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"tleelte\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"tleelte\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"tleelte\"\nassert solution(input()) == \"qwerty\"\nassert solution(input()) == \"vvvvvv\"\nassert solution(input()) == \"abcde\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 6\") == \"12\"\nassert solution(\"2 2 2\") == \"12\"\nassert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 2') == '4'\nassert solution('10 3 1') == '2'\nassert solution('50 20 100') == '70'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([20, 12, 6]) == \"12\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 12 15\") == \"22\"\nassert solution(\"20 12 10\") == \"12\"\nassert solution(\"20 12 20\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n10 2 9\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n10 2 5\n\"\"\"\n) == \"10\"\nassert solution(\n\"\"\"\n1 2 5\n\"\"\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20 12 6\") == \"12\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"2\"\nassert solution(\"6 3 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"12\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12 6\") == \"12\"\nassert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 12 2\") == \"12\"\nassert solution(\"20 4 8\") == \"8\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([20,12,6]) == \"12\"\nassert solution([10,5,3]) == \"6\"\nassert solution([1,2,3]) == \"3\"\nassert solution([2,3,4]) == \"4\"\nassert solution([2,3,4]) == \"4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(5) == 2, \"Wrong\"\n\"\"\"\n\nn = int(input())\nprint(3 if n <= 3 else 4 if n >= 5 else 2)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '5'\nassert solution('50') == '2'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '2'\nassert solution('10') == '3'\nassert solution('12') == '4'\nassert solution('21') == '3'\nassert solution('32') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('7') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\", solution(\"2\")\nprint(solution(\"8\"))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '3'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"2 2\") == \"5\"\nassert solution(\"5 5\") == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"9 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3\\n') == '3'\nassert solution('1 4\\n') == '4'\nassert solution('4 3\\n') == '3'\nassert solution('0 2\\n') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '3'\nassert solution('1 2') == '2'\nassert solution('2 2') == '1'\nassert solution('1 1') == '2'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '3'\nassert solution('0 3') == '3'\nassert solution('5 2') == '2'\nassert solution('10 10') == '10'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"4 5\") == \"9\"\nassert solution(\"10 20\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"4 5\") == \"2\"\n\n'''\n\na, b = input().split()\na = int(a)\nb = int(b)\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 12') == '16'\nassert solution('10 1') == '9'\nassert solution('1 5') == '0'\nassert solution('2 1') == '1'\nassert solution('2 9') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"4 9\") == \"8\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"16\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2 0\"\nassert solution(\"4 6\") == \"10 -6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 12\") == \"16\"\n\nsolution(\"5 8\") == \"13\"\n\nsolution(\"8 10\") == \"18\"\n\nsolution(\"4 8\") == \"12\"\n\nsolution(\"8 10\") == \"18\"\n\nsolution(\"3 5\") == \"8\"\n\nsolution(\"5 5\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n\") == \"7\\n\", \"Should be 7\"\nassert solution(\"2 4\\n\") == \"2\\n\", \"Should be 2\"\nassert solution(\"3 9\\n\") == \"1\\n\", \"Should be 1\"\nassert solution(\"3 4\\n\") == \"1\\n\", \"Should be 1\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('2') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1 + 2 = 3'\nassert solution('1 4') == '1 - 4 = -3'\nassert solution('1 100') == '1 + 100 = 101'\n\n'''",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n\"\"\"\nimport sys\nfrom typing import List\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''chokudai\nchokudaiz''') == 'Yes'\nassert solution('''chokudai\nchokudaj''') == 'No'\nassert solution('''chokudai\nchokudai''') == 'Yes'\nassert solution('''chokudai\nchokudai''') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\nassert solution('chokudaiz') == 'No'\n\n----Hints----\nUse a function to print the output in one line.\n\n
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n'''\nfrom collections import Counter",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\nassert solution(\"chokudaiz\") == \"No\"\nassert solution(\"chokudai\" * 3) == \"No\"\nassert solution(\"chokudai\" * 100) == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '9'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 16') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 16') == '9'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 16') == '9'\nassert solution('1 10') == 'IMPOSSIBLE'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == '9'\nprint(solution(input_string))\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Impossible'\nassert solution('1 10') == '10'\nassert solution('5 20') == '20'\nassert solution('5 5') == 'Impossible'\nassert solution('1 1') == 'Impossible'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('1 4') == '9'\nassert solution('2 4') == '9'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 3\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n2 3\n''') == '9'\nassert solution('''\n4 3\n''') == '7'\nassert solution('''\n1 1\n''') == 'IMPOSSIBLE'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"5 9\") == \"9\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('117') == 'Yes'\n\n\"\"\"\nn=int(input())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('117') == 'Yes'\nassert solution('42') == 'No'\nassert solution('123') == 'No'\nassert solution('788') == 'Yes'\nassert solution('32') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == 'Yes'\nassert solution(\"117\") == \"Yes\"\nassert solution(\"-1\") == 'No'\nassert solution(\"\") == \"No\"\n\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('117') == 'Yes'\nassert solution('200') == 'No'\nassert solution('100') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('117') == 'Yes'\nassert solution('1337') == 'No'\nassert solution('234') == 'No'\nassert solution('234') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('117') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '117') == 'Yes', 'Should return Yes if the last digit of N is 7'\nassert solution(\n    '53') == 'No', 'Should return No if the last digit of N is 5'\nassert solution(\n    '12345678') == 'No', 'Should return No if the last digit of N is 1'\nassert solution(\n    '45678') == 'Yes', 'Should return Yes if the last digit of N is 0'\nassert solution(\n    '01') == 'No', 'Should return No if the last digit of N is 1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"No\", \"Empty string\"\nassert solution(\"12\") == \"No\", \"One digit\"\nassert solution(\"223\") == \"Yes\", \"Three digits\"\nassert solution(\"33\") == \"No\", \"Three digits\"\nassert solution(\"1234\") == \"Yes\", \"Four digits\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_cases[0]) == 'Yes'\nassert solution(test_cases[1]) == 'No'\nassert solution(test_cases[2]) == 'No'\n\n----",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('117') == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('999') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1') == 'No'\nassert solution('101') == 'Yes'\nassert solution('1010') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'No'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"22\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"38\") == \"No\"\nassert solution(\"88\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1') == 'No'\nassert solution('11') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == 'Yes'\nassert solution('34') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('100') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 0\") == \"0 0 0 0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 0\") == \"0 0 0 0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0 0 0 1\n''') == '-1 1 -1 0'\nassert solution('''\n1 1 0 1\n''') == '-1 1 -1 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1 0 0') == '-1 -1 1 0 0'",
        "num_ids_2": 26,
        "num_ids_4": 47
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 1 -1 0\") == \"1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"x_1,y_1,x_2,y_2\\n\") == \"x_3,y_3,x_4,y_4\"\nassert solution(\"0 0 0 1\\n\") == \"-1 1 -1 0\"\n\n\"\"\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red\") == \"2\"\nassert solution(\"blue\") == \"4\"\n\"\"\"\nfrom collections import defaultdict",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"12 34\") == \"10 24\"\nassert solution(\"23\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('red blue') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('red blue') == '2 4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 6\") == \"5 6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red red\") == \"2 4\"\nassert solution(\"blue red\") == \"2 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\nassert solution('red blue') == '2 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"6\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('abcabcabcabc') == 'Yes'\nassert solution('abcabcabcabcabcabc') == 'No'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nabcd') == 'Yes'\nassert solution('5\\nabcd') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('10\\nabcdefghiabcdefghi') == 'No'\nassert solution('2\\n') == 'No'\nassert solution('3\\nab') == 'No'\n",
        "num_ids_2": 34,
        "num_ids_4": 59
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nabba') == 'Yes'\nassert solution('4\\nabd') == 'Yes'\nassert solution('10\\nabbbbaa') == 'Yes'\nassert solution('5\\nabbbbaa') == 'No'\nassert solution('4\\nabd') == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\nabcabc''') == 'Yes'\nassert solution('''7\nabcabca''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n') == 'No'\nassert solution('1\\n') == 'Yes'\nassert solution('2\\n') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3.000000 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1 2 3 4 5\") == \"5.000000 0\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 2 2') == '0'\nassert solution('3 3 1 2') == '0'\nassert solution('3 3 1 3') == '0'\nassert solution('2 2 2 2') == '3.000000'\nassert solution('3 4 1 3') == '3.000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('4 4 5 2') == '3.000000 1'\nassert solution('4 4 5 2') == '4.000000 1'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n5 2 1 2\n3 5 1\n1 3 1\n3 2 1\n1 3 1\n\n\"\"\"\n) == '3.000000 0\\n'\n\nassert solution(\n\"\"\"\n10\n10 2 1 2\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9 1\n3 6 1\n1 5 1\n4 8 1\n1 9",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3 1 2\n''') == '3.000000 0'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2') == '3.000000 0'\nassert solution('5 6 1 2') == '5.000000 0'\nassert solution('4 4 1 2') == '5.000000 1'\nassert solution('10 6 1 2') == '10.000000 1'\nassert solution('4 2 1 2') == '10.000000 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 1'\nassert solution('3 3 1 2') == '3.000000 0'\n\"\"\"\nimport sys",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"Four\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\nG W Y P Y W\\n\") == \"Four\"\nassert solution(\"7\\nG W Y P Y W\\n\") == \"Three\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nG W Y P Y W\\n') == 'Four'\nassert solution('3\\nP P Y Y\\n') == 'Three'\nassert solution('1\\nP\\n') == 'One'\nassert solution('4\\nP W Y Y\\n') == 'Four'\n",
        "num_ids_2": 38,
        "num_ids_4": 71
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"Four\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\nGPWYPYW\") == \"Four\"\nassert solution(\"10\\nPGWYGYGPGWYGYG\") == \"Three\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nG W Y P Y W\\n\") == \"Four\"\nassert solution(\"4\\nP W Y G\\n\") == \"Three\"\nassert solution(\"4\\nP W Y G\\n\") == \"Four\"\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"Four\"\nassert solution(\"3\") == \"Three\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'Three'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == 'Four'\nassert solution('1') == 'Three'\nassert solution('2') == 'Two'\nassert solution('3') == 'One'\nassert solution('4') == 'Three'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Three'\nassert solution('2') == 'Four'\nassert solution('3') == 'Four'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 3\n2 3 1 3 4 2\n''') == '6'\n\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\n\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 3 2\n2 3 1 3 4 2\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5 3 3\n1 2 4 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 5 6\n1 2 6 10 3\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1 3 4 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\n\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(t1) == 6\nassert solution(t2) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2 4\") == \"7\"\nassert solution(\"4 5 4 1 3\") == \"7\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n6\n3 2 8 8 9 9 9\n7 9 1 4 8 7 8 2\n''') == '8'\nassert solution('''\n3\n1 3 2 4\n1 3 2 4\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 3 3\\n2 2 2\\n\") == \"0\"\nassert solution(\"3\\n3 4 5\\n1 3 2 4\\n\") == \"1\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\n\nassert solution('''3\n2 5 3\n2 5 3\n''') == '1'\n\nassert solution('''4\n1 3 2 4\n1 3 2 4\n1 3 2 4\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0'\nassert solution('5') == '7'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n1 2 4 5 10\n\"\"\") == \"1 1 3 5 9\"\nassert solution(\"\"\"\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n\"\"\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 4 5 10''') == '1 1 3 5 9'\n\n'''\n\nimport itertools\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 1 3 5 9'\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1 1 3 5 9'\nassert solution('10') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 1 3 5 9\"\nassert solution() == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"1 1 3 5 9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 1 3 5 9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 1 3 5 9\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 1 3 5 9\"\nassert solution() == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution('1 2') == '1'\nassert solution('17 15') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution(input_data) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == \"1\"\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n11\n1 2\n2 3\n3 4\n4 5\n4 5\n5 6\n6 7\n7 8\n8 9\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n241 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n281 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n301 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n331 333\n333 334\n334 335\n335 336\n336 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n365 366\n366 367\n367 368\n368 369\n369 370\n370 371\n371 372\n372 373\n373 374\n374 375\n375 376\n376 377\n377 378\n378 379\n379 380\n380 381\n381 382\n382 383\n383 384\n384 385\n385 386\n386 387\n387 388\n388 389\n389 390\n390 391\n391 392\n392 393\n393 394\n394 395\n395 396\n396 397\n397 398\n398 399\n399 400\n400 401\n401 402\n402 403\n403 404\n404 405\n405 406\n406 407\n407 408\n408 409\n409 410\n410 411\n411 412\n412 413\n413 414\n414 415\n415 416\n416 417\n417 418\n418 419\n419 420\n420 421\n421 422\n422",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2\\n3 4\\n5 4\\n3 5') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6') == '2'\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 5\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\n\n\n\"\"\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\n''') == '0'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''3\n1 2\n2 3\n1 3''') == '0'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5''') == '4'\nassert solution('''5\n1 0 0 0 1 2\n1 2\n2 3\n3 4\n4 5''') == '2'\n\nimport aoc\nimport math\nimport re\n\nstdin = aoc.read_input('input.txt')\n",
        "num_ids_2": 18,
        "num_ids_4": 32
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2') == '4'\nassert solution('3\\n1 1 2') == '0'",
        "num_ids_2": 42,
        "num_ids_4": 57
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"6\") == \"0\"\n\nstdin = \"\"\"\n2\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\"\nassert solution(stdin) == \"1\"\nstdin = \"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\"\nassert solution(stdin) == \"0\"\nstdin = \"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0 0 1 2\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\") == \"4\"\nassert solution(\"5\\n1 0 0 0 2\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '1'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\n",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '0'\nassert solution('5') == '2'\nassert solution('5') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('3') == 'c'\nassert solution('4') == 'd'\nassert solution('5') == 'e'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    1\n    az\n    ''') == 'bc'\n\nassert solution('''\n    2\n    zivh\n    ziw\n    ''') == 'bcd'\n\nassert solution('''\n    3\n    aasj\n    ksjk\n    ''') == 'alzw'\n\nassert solution('''\n    4\n    jffk\n    rjqh\n    ''') == 'qzw'\n\nassert solution('''\n    5\n    zvnq\n    qjw\n    ''') == 'vnqzw'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"bc\"\n\nInput\n2\na\na\n\nOutput\na\n\nInput\n2\nb\na\n\nOutput\na\n\nInput\n4\na\nasdji\n\nOutput\na\n\nInput\n4\nafogk\nasdji\n\nOutput\nasdji\n\nInput\n5\nafogk\nasdji\n\nOutput\nasdji\n\nInput\n6\nnijfvj\ntvqhwp\n\nOutput\nqoztvz\n\nInput\n6\nafogk\nasdji\n\nOutput\nafogk\n\nInput\n6\nasdji\ntvqhwp\n\nOutput\nasdji\n\nInput\n5\nafogk\nasdji\n\nOutput\nasdji\n\nInput\n4\nafogk\nasdji\n\nOutput\nasdji\n\"\"\"\n\nfrom collections import Counter\n\nk = int(input())\ns = input()\nt = input()\n\ncounts = Counter(s)\ncounts2 = Counter(t)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'qoztvz'\nassert solution('6') == 'def'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n5\nafogk\nasdji\n\"\"\") == \"qoztvz\"\nassert solution(r\"\"\"\n6\nnijfvj\ntvqhwp\n\"\"\") == \"def\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"bc\"\nassert solution(\"5\") == \"qoztvz\"\nassert solution(\"6\") == \"def\"\nassert solution(\"8\") == \"def\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\naz\\nbf\\n\") == \"bc\", \"First example\"\nassert solution(\"5\\nafogk\\nasdji\\n\") == \"alvuw\", \"Second example\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"bf\"\nassert solution(stdin=\"3\\nafogk\\nasdji\\n\") == \"alvuw\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n\n-----Input-----\n2\naz\nbf\n\nOutput\nbc\n\n-----Input-----\n5\nafogk\nasdji\n\nOutput\nqoztvz\n\n-----Input-----\n6\nnijfvj\ntvqhwp\n\nOutput\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\"\n    \"az\"\n    \"bf\"\n) == \"bc\"\n\nassert solution(\n    \"5\"\n    \"afogk\"\n    \"asdji\"\n) == \"alvuw\"\n\nassert solution(\n    \"6\"\n    \"nijfvj\"\n    \"tvqhwp\"\n) == \"qoztvz\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n15 13 15 15 12\n\n''') == 'YES'\nassert solution('''4 4\n20 10 40 30\n\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 5\") == \"YES\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5\n15 13 15 15 12\n''') == 'YES'\n\nassert solution('''4\n5\n20 10 40 30\n''') == 'NO'\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\"\nassert solution(\"5 4\\n20 10 40 30\") == \"NO\"\nassert solution(\"5 5\\n30 20 20 20 20\") == \"YES\"\nassert solution(\"5 6\\n30 20 30 30 30 30\") == \"NO\"",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n15 13 15 15 12\n''') == \"YES\"\nassert solution('''4 4\n20 10 40 30\n''') == \"NO\"\nassert solution('''6 4\n15 10 20 20 10 30\n''') == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''5 4\n20 10 40 30\n''') == 'NO'\nassert solution('''4 4\n20 10 40 30\n''') == 'YES'\nassert solution('''5 3\n15 13 15 15 12\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"YES\", \"sample\"\n\nassert solution(input) == \"NO\", \"another sample\"\n\nassert solution(input) == \"NO\", \"yet another sample\"\n\nassert solution(input) == \"NO\", \"and another one\"\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('4 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n15 13 15 15 12') == 'YES 1 2 5'\nassert solution('5 4\\n15 13 15 15 12') == 'NO'\nassert solution('4 4\\n20 10 40 30') == 'YES 1 2 3 4'\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5 3'\n) == 'YES'\nassert solution(\n    '4 4'\n) == 'YES'\nassert solution(\n    '10 20 40 30'\n) == 'YES'\n\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict\nfrom itertools import permutations",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('3 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1 2 4 0 2\n\"\"\") == \"YES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\n'\n    '1 2 4 0 2'\n) == 'NO'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2 3 4\n\"\"\") == \"YES\", \"First\"\nassert solution(\"\"\"\n10 10 10 10\n\"\"\") == \"NO\", \"Second\"\nassert solution(\"\"\"\n6 6 6 6 6 6 6 6\n\"\"\") == \"YES\", \"Third\"\nassert solution(\"\"\"\n10 10\n\"\"\") == \"NO\", \"Fourth\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n4\n10 1 2 3\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n4\n10 1 3 2\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n1\n0\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n8\n0 1 2 3 4 5 6 7 8\n\"\"\"\n) == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1 3 6 8 2 9 0 10\n''') == \"YES\"\nassert solution('''\n5\n1\n''') == \"NO\"\nassert solution('''\n5\n0\n''') == \"NO\"\nassert solution('''\n3\n2\n''') == \"NO\"\nassert solution('''\n3\n0 1\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n4\\n5\\n6') == 'NO'\nassert solution('1\\n1\\n1\\n1') == 'YES'\nassert solution('4\\n3 2 5 1') == 'YES'\nassert solution('10\\n0 0 1 1 2 2 3 4 5 5 6 6 7 7 8 8 9 9 9 9 9') == 'YES'",
        "num_ids_2": 41,
        "num_ids_4": 90
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n5\n1 3 4 5\n''') == 'YES'\nassert solution('''\n5\n1 2 3\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES', 'INCORRECT SOLUTION'\nassert solution('5 1 2 3 4') == 'YES', 'INCORRECT SOLUTION'\nassert solution('5 1 2 3 4 2 5 2 3 6 2 4 7 3 8 2 9 0 10') == 'YES', 'INCORRECT SOLUTION'\nassert solution('0') == 'NO', 'INCORRECT SOLUTION'",
        "num_ids_2": 38,
        "num_ids_4": 90
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"0\"\nassert solution(\"1\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"1134\"\n",
        "num_ids_2": 48,
        "num_ids_4": 89
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n0\\n1134\\n0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\n\nassert solution('''\n3\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3'\nassert solution('8\\n2 3 1 7\\n1 2 2 1\\n1 2 5 1\\n1 3 3 1\\n3 1 5 1\\n3 2 6 1\\n7 2 7 1\\n1 4 3 1\\n4 2 6 1\\n1 6 7 1\\n5 2 2 1\\n3 2 5 1\\n2 3 6 1\\n1 5 3 1\\n2 6 6 1\\n3 3 3 1\\n4 3 2 1\\n6 3 6 1\\n4 3 6 1\\n7 4 4 1\\n2 6 2 1\\n2 7 2 1\\n2 4 4 1\\n2 5 5 1\\n5 4 5 1\\n1 3 4 1\\n6 4 3 1\\n4 3 3 1\\n1 4 2 1\\n5 4 5 1\\n2 2 3 1\\n3 3 2 1\\n1 2 4 1\\n2 3 4 1\\n2 3 6 1\\n2 4 4 1\\n4 3 3 1\\n1 2 3 1\\n1 3 3 1\\n1 4 4 1\\n1 5 4 1\\n2 2 3 1\\n2 5 3 1\\n2 4 3 1\\n2 5 4 1\\n2 6 4 1\\n1 6 3 1\\n2 6 5 1\\n2 5 6 1\\n2 6 6 1\\n4 1 3 1\\n5 2 5 1\\n1 3 2 1\\n3 2 2 1\\n1 4 4 1\\n3 3 2 1\\n1 6 2 1\\n3 5 6 1\\n2 6 5 1\\n1 3 3 1\\n2 6 6 1\\n1 5 6 1\\n3 5 5 1\\n1 4 4 1\\n2 5 4 1\\n4 4 2 1\\n2 5 5 1\\n3 5 6 1\\n6 2 3 1\\n1 3 3 1\\n1 5 6 1\\n3 5 5 1\\n1 4 4 1\\n4 4 4 1\\n3 5 6 1\\n4 5 5 1\\n4 5 6 1\\n6 2 6 1\\n4 6 5 1\\n2 5 5 1\\n2 6 6 1\\n3 6 2 1\\n4 6 3 1\\n6 2 6 1\\n5 4 4 1\\n1 4 4 1\\n2 5 4 1\\n3 5 4 1\\n5 2 5 1\\n1 5 6 1\\n6 6 6 1\\n1 3 5 1\\n2 6 3 1\\n2 3 5 1\\n1 3 3 1\\n2 3 4 1\\n1 3 6 1\\n1 4 6 1\\n2 3 4 1\\n1 4 3 1\\n1 5 3 1\\n2 3 5 1\\n2 3 6 1\\n2 4 5 1\\n3 4 6 1\\n1 3 4 1\\n1 4 2 1\\n2 4 4 1\\n2 3 6 1\\n2 4 5 1\\n1 4 5 1\\n4 5 4 1\\n1 3 3 1\\n1 4 5 1\\n2 3 3 1\\n3 2 4 1\\n1 4 4 1\\n1 5 6 1\\n1 6 6 1\\n1 4 3 1\\n1 4 4 1\\n1 3 4 1\\n1 5 2 1\\n1 4 5 1\\n2 4 2 1\\n3 4 5 1\\n1 4 5 1\\n4 2 3 1\\n2 3 3 1\\n1 2 5 1\\n1 3 4 1\\n1 2 4 1\\n1 6 3 1\\n2 4 4 1\\n3 5 5 1\\n1 2 5 1\\n1 2 4 1\\n1 2 3 1\\n1 3 2 1\\n1 5 3 1\\n1 5 4 1\\n1 6 3 1\\n1 6 4 1\\n1 2 3 1\\n1 3 4 1\\n1 3 2 1\\n1 4 4 1\\n2 3 2 1\\n1 4 5 1\\n1 4 4 1\\n3 2 5 1\\n1 4 4 1\\n1 2 5 1\\n2 3 3 1\\n1 4 6 1\\n1 3 6 1\\n1 3 5 1\\n1 5 4 1\\n1 6 4 1\\n1 5 5 1\\n1 3 6 1\\n1 4 5 1\\n1 5 4 1\\n1 6 3 1\\n1 6 5 1\\n1 3 6 1\\n1 5 3 1\\n1 5 5 1\\n2 4 5 1\\n2 5 4 1\\n1 3 2 1\\n1 5 3 1\\n1 3 4 1\\n1 5 5 1\\n1 3 5 1\\n1 6 3 1\\n1 5 6 1\\n1 5 6 1\\n1 4 5 1\\n1 6 2 1\\n1 3 6 1\\n1 4 4 1\\n1 3 6 1\\n1 5 6 1\\n1 4 5 1\\n1 5 3 1\\n1 3 6 1\\n1 4 5 1\\n1 5 4 1\\n1 3 6 1\\n1 4 5 1\\n1 6 2 1\\n1 3 6 1\\n1 2 3 1\\n1 4 4 1\\n1 3 4 1\\n1 2 5 1\\n1 2 4 1\\n1 3 3 1\\n1 3 4 1\\n1 4 4 1\\n1 5 2 1\\n1 5 4 1\\n1 5 5 1\\n1 2 3 1\\n1 3 4 1\\n1 4 5 1\\n1 5 4 1\\n1 6 6 1\\n1 5 5 1\\n1 3 5 1\\n1 5 5 1\\n1 3 5 1\\n1 6 5 1\\n1 4 4 1\\n2 4 4 1\\n1 6 2 1\\n1 4 6 1\\n1 4 5 1\\n1 2 4 1",
        "num_ids_2": 1365,
        "num_ids_4": 1365
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    10 2 3 7\n    100 51 51 51\n    1234 1 100 199\n    1000000000 1 1 1000000000\n    '''\n    ) == '3'\n\nassert solution(\n    '''\n    10 2 3 7\n    100 51 51 51\n    1234 1 100 199\n    1000000001 1 1 1000000000\n    '''\n    ) == '0'\n\nassert solution(\n    '''\n    10 2 3 7\n    100 51 51 51\n    1234 1 100 199\n    1134 1 1 1000000000\n    '''\n    ) == '1134'\n\nassert solution(\n    '''\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    10000000 1 1 1000000000\n    '''\n    ) == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == \"3\\n0\\n1134\\n0\"\nprint(solution(input_data))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2 3 7') == '3'\nassert solution('100 51 51 51') == '0'\nassert solution('1234 1 100 199') == '1134'\nassert solution('1000000000 1 1 1000000000') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\n\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\nassert solution('''\n4\n10 2 3 7\n100 100 1 100\n1000000000 1 1 1000000000\n''') == '0'\n\nassert solution('''\n4\n10 2 3 7\n100 100 1 100\n1000000000 1 1 1000000000\n''') == '1134'\n\nassert solution('''\n100 100 1 100\n1000000000 1 1 1000000000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nprint(solution(*tuple(map(int, stdin.strip().split()))))\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n''') == '1'\n\nassert solution('''\n2\n''') == '1'\n\nassert solution('''\n4\n''') == '3'\n\nassert solution('''\n8\n''') == '12164510040883200'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n\n''') == '1'\nassert solution('''4\n\n''') == '3'\nassert solution('''8\n\n''') == '1260'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3''') == '1'\nassert solution('''4\n5\n6''') == '2'\nassert solution('''8\n9\n10''') == '1260'\nassert solution('''20\n21\n22''') == '12164510040883200'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n\n4\n4\n\n2\n2\n\n3\n3\n''') == '1'\nassert solution('''2\n2\n\n2\n2\n\n2\n1\n\n3\n3\n''') == '2'\nassert solution('''6\n3\n\n4\n3\n\n2\n2\n\n3\n3\n''') == '1260'\nassert solution('''20\n4\n\n4\n3\n\n2\n2\n\n3\n3\n''') == '12164510040883200'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15 3') == 'ccbbabaccbc'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15 3') == 'cccbbabaccbc'\nassert solution('1 1') == 'def'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"\"\nassert solution(\"3 4\") == \"aa\"\nassert solution(\"3 5\") == \"aaa\"\nassert solution(\"4 1\") == \"bb\"\nassert solution(\"4 3\") == \"bbbb\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\nu''') == ''\n\nassert solution('''1\na''') == ''\n\nassert solution('''1\nb''') == ''\n\nassert solution('''1\na\nb\nc\nd''') == ''\n\nassert solution('''1\nb\nc\nd\ne\nf''') == ''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\nu') == 'def'\nassert solution('15 3\\ncccaabababaccbc') == 'ccbbabaccbc'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('ab') == ''\nassert solution('aa') == ''\nassert solution('aab') == 'aab'\nassert solution('aba') == 'aba'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == ''\nassert solution('3 2') == 'bcc'\nassert solution('5 4') == 'abbc'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"15 3\ncccaabababaccbc\"\"\") == \"cccbbabaccbc\"\nassert solution(\"\"\"15 9\ncccaabababaccbc\"\"\") == \"cccccc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\na\n''') == ''\n\nassert solution('''10 20\na\n''') == 'a'\n\nassert solution('''7 5\naaaabaa\n''') == 'aaaab'\n\nassert solution('''7 5\naaaabbb\n''') == 'aaaab'\n\nassert solution('''15 5\naaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaac\n''') == 'aaaaaaaaaaaaaaaaaaaaaaaaaa'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2\n2 5\n3 4\n''') == '20'\nassert solution('''\n5 1\n1 2\n1 5\n2 4\n''') == '21'\nassert solution('''\n2 3\n2 4\n''') == '4'\nassert solution('''\n3 2\n1 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''\n5 5\n4 2\n3 3\n2 5\n1 2\n1 5\n2 3\n\n''') == '20'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"8\"\nassert solution(\"10 5\") == \"20\"\nassert solution(\"15 15\") == \"25\"\nassert solution(\"20 20\") == \"25\"\nassert solution(\"20 20 20\") == \"25\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n4 2\n3 5\n4 2\n2 5\n\n''') == '20'\nassert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\n''') == '18'\nassert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\n''') == '20'\n\n'''\n\n[Easy]\n\nIvan is playing a game, so he has to buy microtransactions in different types of the shop. So he wants to buy only the most expensive microtransactions of all types. If the price of the microtransaction is greater than the sum of its $2$ cost and the cost of the sale of the item then he can not buy it.\n\nIvan has the two types of microtransactions:\n\n$2$ for each day.\n$1$ for each sale.\n\nIvan has to buy as many microtransactions as possible, but he can not buy them all at the same time.\n\nYou are given a list of $k_i$-th microtransaction of the $i$-th type. There is one special offer of $j$-th day. The offer is for the $j$-th day and for the $k_i$-th microtransaction.\n\nIvan has to buy the $k_i$-th microtransaction only if the price of the microtransaction does not exceed the sum of $2$ cost and the sum of $1$ cost of the sale of the item.\n\nFind the minimum day when he can buy all microtransactions and actually play the game.\n\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '8'\nassert solution('3 3') == '2'\nassert solution('4 3') == '4'\nassert solution('2 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5 6\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"20\"\nassert solution(\"\"\"\n4 6\n4 3\n1 2\n2 3\n3 5\n1 2\n\n\"\"\") == \"20\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2\n3 5\n2 4\n''') == '20'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"4 1 3\") == \"5\"\nassert solution(\"4 3 1\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == '-1'\n\n-------",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3 4 1'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3 3 1'\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3 4 1'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3 3 1'\nprint(solution(input()))\n\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\n''') == '3'\n\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '3'\n\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('5 5') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 5 2'\nassert solution('5 5') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 8\n***.***\n*.*.**\n***.**\n*.*.**\n***.***\n.***.***\n....*\n''') == '3 4 1'\n\nassert solution('''5 5\n.*.\n*.*\n.*.\n.*.\n.*.''') == '2 2 1'\n\nassert solution('''5 5\n.*.\n*.*\n.*.\n*.*\n.*.''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"3\"\n\nimport re",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('575') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"-575\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('575') == 'Yes'\nassert solution('100') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"Yes\", \"Your function did not return correct result for test case when N=575\"\nassert solution(\"55\") == \"Yes\", \"Your function did not return correct result for test case when N=55\"\nassert solution(\"10\") == \"No\", \"Your function did not return correct result for test case when N=10\"\n",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"101\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('575') == 'Yes'\nassert solution('123') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 6') == 'Alice'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"Alice\"\nassert solution(\"1 3\") == \"Bob\"\nassert solution(\"1 4\") == \"Draw\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('3 4') == 'Bob'\nassert solution('1 2') == 'Draw'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"9 5\") == \"Bob\"\nassert solution(\"8 2\") == \"Draw\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Alice\"\nassert solution(\"4 7\") == \"Bob\"\nassert solution(\"8 6\") == \"Draw\"\n\n-----Explanation-----\nTest cases 1, 2 and 3 are incorrect, because 1 is written on Bob's card, and 6 is written on Alice's card.\nTest case 4 is correct, because both the players have the same strength, so the game is drawn.\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6\\n8 6') == 'Alice'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 5') == 'Bob'\nassert solution('5 8') == 'Draw'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"12 5\") == \"Alice\"\nassert solution(\"4 9\") == \"Bob\"\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'Alice'\nassert solution('6 4') == 'Bob'\nassert solution('8 6') == 'Alice'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('7') == 'Bob'\nassert solution('3') == 'Draw'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('h') == 'h '\nassert solution('ah') == 'ah '\nassert solution('ahh') == 'ahh '\nassert solution('aaa,bbb,zzz') == 'aaa bbb zzz'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n\"\"\"\n\ns = stdin\n\ns = s.replace(',',' ')\ns = s.replace('.',' ')\n\nprint(s)\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,,,enjoy') == 'happy newyear enjoy'\nassert solution('happy,,,enjoy,') == 'happy newyear enjoy'\nassert solution('happy,,,enjoy,,,,') == 'happy newyear enjoy'\n",
        "num_ids_2": 27,
        "num_ids_4": 62
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"hi,my,name,is,dolphin\") == \"hi my name is dolphin\"\nassert solution(\"abc,xyz,xyz\") == \"abc xyz xyz\"\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"sunny,fine,happy\") == \"sunny fine happy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\\n1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"4 2\") == \"2 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('2 2') == '2 1'\n\"\"\"\n\nimport math\n\nimport sys\nsys.setrecursionlimit(10**6)\n\nn, m = list(map(int, input().split()))\ncheckpoints = []\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    checkpoints.append((a, b))\n\ncheckpoints = sorted(checkpoints, key=lambda x: x[0])\n\nstudents = list(map(int, input().split()))\n\nresult = []\n\nfor student in students:\n    dist = math.inf\n    for i in range(len(checkpoints)):\n        temp_dist = abs(student - checkpoints[i][0]) + abs(checkpoints[i][1] - student)\n        if dist > temp_dist:\n            dist = temp_dist\n            result.append(i + 1)\nprint(*result)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n0 0\\n-1 0\\n1 0') == '1\\n1'\nassert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0\n\n''') == '2 1\\n1 1\\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 2\n2 0\n0 0\n-1 0\n1 0\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n1 1\n0 0\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n1 2\n2 0\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n4 6\n2 0\n0 0\n-1 0\n1 0\n\"\"\") == \"2 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"2 1\"\nprint(solution(input))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\\n1\"\nassert solution(\"1 2\") == \"1\\n1\"\nassert solution(\"2 5\") == \"1\\n2\"\nassert solution(\"4 3\") == \"1\\n2\"\nassert solution(\"12 5\") == \"2\\n2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2 1\\n1 1\\n'\n\"\"\"\n\nimport sys\nfrom math import sqrt",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"21\"\nassert solution(\"4\") == \"25\"\nassert solution(\"5\") == \"35\"\nassert solution(\"6\") == \"36\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '14'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '14'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"25\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '14'\nassert solution('3') == '17'\nassert solution('4') == '25'\nassert solution('5') == '35'\nassert solution('6') == '45'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"68\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '14'\nassert solution('3') == '14'\nassert solution('4') == '16'\nassert solution('5') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '8'\nassert solution('5') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\", \"Test 1 (integer)\"\nassert solution(\"2\") == \"4\", \"Test 2 (integer)\"\nassert solution(\"3\") == \"9\", \"Test 3 (integer)\"\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"Yes\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n.#.\n.#.\n.#.\n.#.\n.#.\n\n7 7\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2\\n#.#\\n.#.\\n#.#\\n.#.') == 'Yes'\nassert solution('2 2\\n#.#\\n.#.\\n#.#\\n#.') == 'No'\nassert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.') == 'Yes'\nassert solution('2 2\\n#.#\\n.#.\\n#.#\\n#.') == 'No'\nassert solution('3 2\\n#.#\\n#.#\\n#.#\\n#.') == 'Yes'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"No\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n.#\\n\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#\\n\") == \"No\"\nassert solution(\"5 1\\n###\\n#..\\n#.##\\n##.##\\n##.##\\n#.##\\n###\") == \"No\"\nassert solution(\"5 1\\n###\\n#..\\n#.#\\n##.##\\n##.##\\n#.##\\n###\") == \"No\"\nassert solution(\"5 1\\n###\\n#..\\n#.#\\n##.##\\n##.##\\n#.##\\n###\") == \"Yes\"\n",
        "num_ids_2": 56,
        "num_ids_4": 137
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n#.#\\n.#.\\n#.#\\n#.\\n') == 'Yes'\nassert solution('3 3\\n#.#\\n.#.\\n#.#\\n.#\\n') == 'No'\nassert solution('4 4\\n#.#\\n.#.\\n.##\\n#.\\n') == 'Yes'\nassert solution('5 5\\n#.#\\n.#.\\n#.#\\n.#\\n') == 'No'\nassert solution('1 2\\n#.\\n#.\\n') == 'No'\n",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"10 11 12\") == \"100000000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 9 5 3') == '30'\nassert solution('1 9 5 3') == '30'\nassert solution('1 9 5 3') == '30'\nassert solution('1 9 5 3') == '30'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 5 2') == '53'\nassert solution('2 8 2') == '44'\nassert solution('4 5 2') == '9'\nassert solution('4 5 5') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == \"53\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(samples.SAMPLE_INPUT_1) == \"53\"\nassert solution(samples.SAMPLE_INPUT_2) == \"59\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"12\"\nassert solution(\"1 2 3\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 5 4') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == '53'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '15950', 'First'\nassert solution('5') == '9950', 'Second'\nassert solution('7') == '16500', 'Third'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '15950'\n\n--\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '15950.0'\nassert solution('10') == '15950.0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '15950'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\"\n\"\"\"\n\nN = int(input())\ns = input().split()\ns = list(map(int, s))\ns.sort(reverse=True)\np = []\np.append(s[0])\np.append(s[1] / 2)\np.append(s[2] / 2)\nfor i in range(3, N):\n    if s[i] > p[i - 3]:\n        p.append(s[i] - p[i - 3])\n    else:\n        p.append(s[i] / 2)\nprint(sum(p))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n4980\n7980\n''') == '15950'\nassert solution('''\n1\n6980\n''') == '6980'\nassert solution('''\n3\n4980\n7980\n6980\n''') == '15950'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"5\") == \"15950\"\nassert solution(\"10\") == \"15950\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '15'\nassert solution('3') == '15'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"150.0\"\nassert solution(\"6\") == \"230.0\"\nassert solution(\"1\") == \"200.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '15950', \"Wrong Answer\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nA\nB\nC\nD\nE\n''') == '215'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\nprint(solution(input()))\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '30'\nassert solution('35') == '57'\nassert solution('120') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"60\"\nassert solution(\"35\") == \"57\"\nassert solution(\"120\") == \"180\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '120'\nassert solution('35') == '120'\nassert solution('120') == '120'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"29\"\nassert solution(\"7\") == \"29\"\nassert solution(\"35\") == \"51\"\nassert solution(\"120\") == \"121\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '60'\nassert solution('35') == '57'\nassert solution('120') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n29\n20\n7\n35\n120\n''') == '215'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7.5'\nassert solution('1') == '1'\nassert solution('4') == '0.25'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n10 30\\n') == '7.50001'\nassert solution('2\\n10 30\\n') == '7.49999'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"2\\n10 30\") == \"7.5\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"7.5\"\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n''') == '1.0'\nassert solution('''2\n1\n''') == '0.25'\nassert solution('''3\n1\n''') == '0.3333333333333333'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"2\", \"10\", \"30\"]) == \"7.5\"\nassert solution([\"2\", \"10\", \"100\"]) == \"7.5\"\nassert solution([\"2\", \"10\", \"1000\"]) == \"7.5\"\nassert solution([\"2\", \"10\", \"10000\"]) == \"7.5\"\nassert solution([\"2\", \"10\", \"1000000\"]) == \"7.5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"3\\n2 1 1\") == \"0.99999\"\nassert solution(\"3\\n0 1 1\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"3\\n50 10\") == \"4.8\"\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '0.5'\nassert solution('4') == '0.25'\nassert solution('10') == '0.1'\nassert solution('12') == '0.125'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"10\") == \"7.5\"\nassert solution(\"30\") == \"7.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1\n2\n3\n4''') == '1'\nassert solution('''5 3\n10\n15\n11\n14\n12\n\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"10 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12\n''') == '2'\n\nassert solution('''5 1\n10\n15\n11\n14\n12\n''') == '3'\n\nassert solution('''1 2\n10\n15\n11\n14\n12\n''') == '3'\n\n'''\n\n__author__ = \"Syed Raza\"\n__email__  = \"syedraza18@gmail.com\"\n__version__= \"1.0.1\"\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n\") == \"2\"\nassert solution(\"3 4\\n\") == \"2\"\nassert solution(\"4 3\\n\") == \"2\"\nassert solution(\"4 4\\n\") == \"2\"\nassert solution(\"5 5\\n\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"6 6\") == \"2\"\nassert solution(\"10 9\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nassert solution(\"9 4\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n\") == \"4\"\nassert solution(\"5 3\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n\") == \"2\"\n",
        "num_ids_2": 71,
        "num_ids_4": 108
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '2'\nassert solution('20 15') == '1'\nassert solution('12 25') == '1'\nassert solution('10 8') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"B\") == \"a\"\nassert solution(\"A\") == \"A\"\nprint(solution())\n\n\n\nA program that takes a string as input and returns the number of \"a\"s and the number of \"e\"s.\n\n-----Constraints-----\n - The input contains only a-z.\n\n-----Input-----\naba\n\n-----Output-----\n3\n\n1 a, 1 e.\n\nExplanation\nInput contains only a-z. Thus, there are 3 \"a\"s and 1 \"e\".\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('B') == 'A'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(b) == a\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"b\") == \"b\"\nassert solution(\"c\") == \"C\"\nassert solution(\"c\") == \"C\"\nassert solution(\"d\") == \"D\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == 'A'\nassert solution('B') == 'B'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\n\n\"\"\"\n\nalphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"a\"\n\n----",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"B\") == \"a\"\nassert solution(\"a\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(['A', 'b', 'c', 'A', 'a']) == 'a'\nassert solution(['a', 'A', 'c', 'a', 'a']) == 'A'\n\"\"\"\n\nimport sys",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'B'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"10 10\") == \"48\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 3') == '0'\nassert solution('3 2') == '0'\nassert solution('2 3') == '6'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'\nassert solution('5 3') == '12'\nassert solution('1 5') == '14'\nassert solution('2 1') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '6'\nassert solution('10 10') == '24'\nassert solution('100 50') == '30'\nassert solution('20 4') == '6'\nassert solution('50 20') == '26'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '6'\nassert solution('5 5') == '12'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 3') == '0'\nassert solution('2 4') == '2'\n\n-----Sample Case 2-----\n2 4\n\n-----Sample Case 3-----\n3 4\n\n-----Sample Case 4-----\n3 2\n\n-----Sample Case 5-----\n4 4\n\n-----Sample Case 6-----\n4 3\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"YYMM\", \"MMYY\"]) == \"YYMM\"\nassert solution([\"MMYY\", \"YYMM\"]) == \"MMYY\"\nassert solution([\"YYMM\", \"AMBIGUOUS\"]) == \"AMBIGUOUS\"\nassert solution([\"AMBIGUOUS\", \"YYMM\"]) == \"AMBIGUOUS\"\nassert solution([\"MMYY\", \"AMBIGUOUS\"]) == \"AMBIGUOUS\"\n",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0519\") == \"YYMM\"\nassert solution(\"0101\") == \"YYMM\"\nassert solution(\"05\") == \"AMBIGUOUS\"\nassert solution(\"19\") == \"AMBIGUOUS\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('10') == 'NA'\nassert solution('199') == 'NA'\nassert solution('1735') == 'YYMM'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1906\") == \"YYMM\"\nassert solution(\"1805\") == \"YYMM\"\nassert solution(\"1806\") == \"YYMM\"\nassert solution(\"1905\") == \"YYMM\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('01') == 'MMYY'\nassert solution('3245') == 'AMBIGUOUS'\nassert solution('123') == 'NA'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('01') == 'YYMM'\nassert solution('0805') == 'YYMM'\nassert solution('06') == 'YYMM'\nassert solution('0101') == 'YYMM'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"01\") == \"YYMM\"\nassert solution(\"12\") == \"MMYY\"\nassert solution(\"0123\") == \"AMBIGUOUS\"\nassert solution(\"01\") == \"AMBIGUOUS\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0123\") == \"NA\", \"NA\"\nassert solution(\"012345\") == \"NA\", \"NA\"\nassert solution(\"01234567\") == \"YYMM\", \"YYMM\"\nassert solution(\"0123456789\") == \"AMBIGUOUS\", \"AMBIGUOUS\"\nassert solution(\"01234567890\") == \"AMBIGUOUS\", \"AMBIGUOUS\"\n",
        "num_ids_2": 29,
        "num_ids_4": 70
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1905') == 'YYMM', 'Wrong answer'\nassert solution('0215') == 'AMBIGUOUS', 'Wrong answer'\nassert solution('05') == 'NA', 'Wrong answer'\nassert solution('00') == 'NA', 'Wrong answer'\nassert solution('3') == 'NA', 'Wrong answer'\n",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234\") == \"NA\"\nassert solution(\"1205\") == \"YYMM\"\nassert solution(\"1905\") == \"YYMM\"\nassert solution(\"1911\") == \"MMYY\"\nassert solution(\"1906\") == \"AMBIGUOUS\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('4') == '0'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == '2'\nassert solution(\"5\") == '4'\nassert solution(\"6\") == '3'\nassert solution(\"10\") == '5'\nassert solution(\"15\") == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n''') == '2'\nassert solution('''4\n''') == '0'\nassert solution('''5\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '2'\nassert solution('3') == '2'\n\"\"\"\nfrom math import sqrt, ceil",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('100') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"4\"\nassert solution(\"123\") == \"5\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('10\\n') == '1'\nassert solution('7\\n') == '1'\nassert solution('2\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '2'\n'''\n\nfrom functools import reduce",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == \"21\", \"error\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 12') == '21'\nassert solution('18 20') == '19'\n\n-----------------------------------------------------\n--- Day 3: Toboggan Trajectory ---\n\nIn this challenge, we go through some basic math to understand the question at hand. If you've gotten to the end of the\nchallenge, congratulations on completing it.\n\nThe map we're given is a grid. \".\" is an empty space, \"#\" is a tree, \"@\" is a person sitting at that tree, and \"o\" is a\nperson on a motorcycle. If a person is standing in front of a tree and the motorcycle is on the same tree, they are\ntalking. The motorcycles are on consecutive rows from top to bottom, and they each move one space.\n\nFor example, the. character indicates that the person sitting at that space is standing on a tree.\n\nYour task is to write a function that returns an array of the trees people are standing on, ordered from the tree that\nthey are standing on to the tree that they are standing on in the tree in the order they stand.\n\nInput:\nThe first line contains an integer T, the number of test cases. Each test case is described below.\n\nThe first line of each test case contains a single integer N, the number of trees in the map.\n\nThe second line contains N space-separated integers. Each integer describes the row, col coordinates of a tree.\n\nConstraints\n1 \\leq T \\leq 10\n1 \\leq N \\leq 100\n0 \\leq row, col \\leq 100\nOutput\nFor each test case, output one line containing the trees people are standing on, in order from the tree that they are\nstanding on to the tree that they are standing on in the tree in the order they stand.\n\nSample Input\n2\n5\n0 0 0 0 0\n2 5 0 2\nSample Output\n0 0 0 0 0\n0 0 1 1 1\n\n-----------------------------------------------------------\n\n--- Day 2: No Time to Talk ---\n\nIn this challenge, we're going to simulate a bit of physics with a nice little string of numbers. Before we dive in, you\nmight be tempted to try to figure out how to generate this string. But that is not the most efficient way to do it.\n\nInstead, we'll show you how to do it with recursion! You should get familiar with the \"base case\" and \"general case\" of\nthe recursion.\n\nLet's say that we want to compute the velocity of a falling object after a time period of t seconds. Suppose the initial\nvelocity v0 is provided, and the time period is also provided. If we are not given any information about the height\nof the object before the time period ends, what we'll say is that the object never reaches the ground. The height of the\nobject is related to the initial velocity, and the object can only get higher or lower depending on which side of the\nground it falls upon, so if we were not given any information about the height of the object after t seconds, we'll say\nthe object never reaches the ground.\n\nIf we are given the information that the initial velocity v0 is: what is the maximum velocity that the object can have? and\nthe time period is t: what is the height of the object after t seconds?\n\nThe function below will solve both of these problems. The function should return the velocity and the height of the object\nafter t seconds, in any order.\n\nFor example, given the initial velocity v0 = 3, and t = 1:\n\ncompute_height_after_t(3, 1)\n    compute_height_after_t(3, 2)\n        compute_height_after_t(2, 3)\n            compute_height_after_t(1, 4)\n                compute_height_after_t(0, 5)\n                    compute_height_after_t(0, 6)\n                        compute_height_after_t(0, 7)\n                            compute_height_after_t(0, 8)\n                                compute_height_after_t(0, 9)\n                                    compute_height_after_t(0, 10)\n                                        compute_height_after_t(0, 11)\n                                            compute_height_after_t(0, 12)\n                                                compute_height_after_t(0, 13)\n                                                    compute_height_after_t(0, 14)\n                                                        compute_height_after_t(0, 15)\n                                                            compute_height_after_t(0, 16)\n                                                            compute_height_after_t(0, 17)\n                                                            compute_height_after_t(0, 18)\n                                                            compute_height_after_t(0, 19)\n                                                            compute_height_after_t(0, 20)\n                                                            compute_height_after_t(0, 21)\n                                                            compute_height_after_t(0, 22)\n                                                            compute_height_after_t(0, 23)\n                                                            compute_height_after_t(0, 24)\n                                                            compute_height_after_t(0, 25)\n                                                            compute_height_after_t(0, 26)\n                                                            compute_height_after_t(0, 27)\n                                                            compute_height_after_t(0, 28)\n                                                            compute_height_after_t(0, 29)\n                                                            compute_height_after_t(0, 30)\n                                                            compute_height_after_t(0, 31)\n                                                            compute_height_after_t(0, 32)\n                                                            compute_height_after_t(0, 33)\n                                                            compute_height_after_t(0, 34)\n                                                            compute_height_after_t(0, 35)\n                                                            compute_height_after_t(0, 36)\n                                                            compute_height_after_t(0, 37)\n                                                            compute_height_after_t(0, 38)\n                                                            compute_height_after_t(0, 39)\n                                                            compute_height_after_t(0, 40)\n                                                            compute_height_after_t(0, 41)\n                                                            compute_height_after_t(0, 42)\n                                                            compute_height_after_t(0, 43)\n                                                            compute_height_after_t(0, 44)\n                                                            compute_height_after_t(0, 45)\n                                                            compute_height_after_t(0, 46)\n                                                            compute_height_after_t(",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"21\"\nassert solution(\"12 2\") == \"21\"\nassert solution(\"15 10\") == \"21\"\nassert solution(\"5 18\") == \"18\"\nassert solution(\"2 22\") == \"22\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 18') == '17'\nassert solution('1 2') == '11'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\nassert solution('10 10') == '10'\nassert solution('6 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\nassert solution('10 0') == '10'\nassert solution('7 1') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 12') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 12') == '21'\nassert solution('6 12') == '18'\nassert solution('14 6') == '18'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA B\n\n''') == '21'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"5 8\") == \"17\"\nassert solution(\"0 1\") == \"21\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"20 3711\") == \"203711\"\nassert solution(\"20 3700\") == \"203700\"\nassert solution(\"20 3710\") == \"203710\"\nassert solution(\"20 3701\") == \"203701\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 9\") == \"9\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 10\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"2 10\") == \"0\"\nassert solution(\"2 11\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"10 3080\") == \"3080\"\nassert solution(\"10 6080\") == \"6080\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\\n\") == \"3719\"\nassert solution(\"1 9\\n\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 2919\n\"\"\"\n) == \"3719\"\nassert solution(\n\"\"\"\n1 2\n\"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"2 2912\") == \"3612\"\nassert solution(\"10 3020\") == \"3920\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '26'\nassert solution('9 1') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 2') == '4'\nassert solution('10101010') == '4'\nassert solution('10101010') == '4'\nassert solution('10101010') == '4'\nassert solution('10101010') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('12345678') == '9'\nassert solution('101010101') == '2'\nassert solution('10101010101010101') == '1'\nassert solution('10101010101010101010101010101') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('0 1') == '1'\nassert solution('13 4') == '3'\nassert solution('111111 10') == '11'\nassert solution('111111 11') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n11''') == \"4\"\nassert solution('''10 2\n5''') == \"3\"\nassert solution('''1 2\n4''') == \"1\"\nassert solution('''1 10\n2''') == \"1\"\nassert solution('''2 11\n4''') == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\n\nn, k = [int(s) for s in input().split()]\na = \"01\"\nres = \"\"\nfor i in range(n):\n    res += a\n    a = a[-k:] + a[:-k]\nprint(len(res))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 2') == '4'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 2') == '4'\nassert solution('100 1010') == '7'\nassert solution('1010') == '1'\n\n'''",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('20') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '3'\nassert solution('6\\n') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '3'\nassert solution('3') == '3'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n''') == '3'\nassert solution('''10\n''') == '2'\nassert solution('''3\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Yay!\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == 'Yay!'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Yay!'\n\n=======\n\nE869120 and square1001 were just about to eat A and B of those pieces, respectively,\n\nwhen they found a note attached to the cake saying that \"the same person should not take two adjacent pieces of cake\".\nCan both of them obey the instruction in the note and take desired numbers of pieces of cake?\n\n-----Constraints-----\n - A and B are integers between 1 and 16 (inclusive).\n - A+B is at most 16.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nIf both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake, print Yay!; otherwise, print :(.\n\n-----Sample Input-----\n5 4\n\n-----Sample Output-----\nYay!\n\nBoth of them can take desired number of pieces as follows:",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n\") == \"Yay!\"\n\nNote that both E869120 and square1001 can't take 2 adjacent pieces of cake.\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nE869120    4\nsquare1001    4\n''') == 'Yay!'\nassert solution('''\nE869120    2\nsquare1001    2\n''') == 'Yay!'\nassert solution('''\nE869120    5\nsquare1001    5\n''') == 'Yay!'\nassert solution('''\nE869120    3\nsquare1001    3\n''') == 'Yay!'\nassert solution('''\nE869120    7\nsquare1001    7\n''') == 'Yay!'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('4 5') == 'E869120'\nassert solution('3 3') =='square1001'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n') == 'Yay!'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 4]) == \"Yay!\"\nassert solution([3, 5]) == \"Yay!\"\nassert solution([1, 5]) == \"Yay!\"\n\n'''\n\nfrom itertools import combinations",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('8 5') == 'Sorry!'\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('6 8') == 'Yay!'\nassert solution('10 16') == 'Yay!'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678') == '34'\nassert solution('1234567') == '34'\nassert solution('12345') == '34'\nassert solution('123') == '34'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"676876\") == \"34\"\nassert solution(\"6768\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"123456789\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '34'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234567876') == '34'\nassert solution('35134567') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234567876') == '34'\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'\nassert solution('746') == '0'\nassert solution('1235') == '2'\nassert solution('14') == '0'\nassert solution('123456') == '34'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"\n\n---Submissions---\n7\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1234567876') == '34'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5 3'\nassert solution('3\\n3 12 6') == '5 3'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '2999999987 2'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\n",
        "num_ids_2": 25,
        "num_ids_4": 68
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\nassert solution('''2\n2 9\n''') == '1 7'\nassert solution('''7\n13 52 0 13 26 52\n''') == '12 13'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 12, 6]) == \"5 3\"\nassert solution([2, 9]) == \"1 7\"\nassert solution([7]) == \"12 13\"\nassert solution([6]) == \"1 7\"",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 12 6\n\n''') == '5 3'\n\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n\n''') == '2999999987 2'\n\nassert solution('''\n6\n13 52 0 13 26 52\n\n''') == '12 13'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solutions.test_input.ONE) == str(solutions.test_input.EXPECTED_OUTPUT)\nprint(solution(solutions.input.INPUT))\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 12 6\n\n2\n2 9\n\n7\n2 1000000000 4 6 8 4 2\n\n6\n13 52 0 13 26 52\n\n''') == '5 3\\n12 13'\nprint('Solution: ', solution('''\n7\n2 1000000000 4 6 8 4 2\n\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3 12 6\n\n''') == '5 3'\n\nassert solution('''2\n2 9\n\n''') == '1 7'\n\nassert solution('''7\n13 52 0 13 26 52\n\n''') == '12 13'\n\nassert solution('''6\n13 52 0 13 26 52\n\n''') == '12 13'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n3 12 6\n\"\"\") == \"5 3\"\nassert solution(\"\"\"\n2\n2 9\n\"\"\") == \"1 7\"\nassert solution(\"\"\"\n7\n2 1000000000 4 6 8 4 2\n\"\"\") == \"2999999987 2\"\nassert solution(\"\"\"\n6\n13 52 0 13 26 52\n\"\"\") == \"12 13\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data\nprint(solution(input_data))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '3'\nassert solution('''\n4\n3 1 4 1\n''') == '4'\nassert solution('''\n5\n1 1 1 2 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(\"\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == \"3\"\nassert solution(example_input_2) == \"1\"\nassert solution(input) == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 1 4\n''') == '2'\n\nassert solution('''\n4\n3 1 4 2\n''') == '3'\n\nassert solution('''\n5\n3 1 1 4 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('''\n3\n1 1 4 1\n''') == '3'\nassert solution('''\n5\n1 1 1 2 2\n''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 1 1\n2 1\n3 2\n''') == '3'\nassert solution('''\n5\n1 1 1 2 2\n3 1 1 2 1\n3 1 2 1 1\n3 2 2 1 2\n4 2 1 2 1\n4 3 1 1 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3 1 4 1') == '3'\nassert solution('3\\n3 1 4 1') == '1'\nassert solution('4\\n3 1 4 1') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1 4 1\\n') == '3'\nassert solution('3\\n3 1 4 1\\n') == '2'\nassert solution('5\\n1 1 1 2 2\\n') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1\n1 2\n2 3''') == \"2\"\nassert solution('''2 0\n3 2\n4 5''') == \"2\"\nassert solution('''3 2\n1 3\n2 3''') == \"1\"\n\nassert solution('''4 3\n1 2\n2 3\n3 4''') == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 0') == '1'\nassert solution('1 0') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n') == '2'\nassert solution('2 0\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 51
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '2'\nassert solution('3 2') == '4 2'\nassert solution('2 0') == '1'\nassert solution('2 0') == '1 2'\nassert solution('1 2') == '1 2'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"3 2\") == \"4 2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('3 2\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 2\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"11\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\n\nstdin = \"\"\"\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == 11\nassert solution(\"5 1 2 3 4 5\") == 11\nassert solution(\"7 2 1 2 1 2 1 1\") == 4\n\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"11\"\nassert solution(\"7 2\") == \"4\"\nassert solution(\"1 2 1 2 1 2 1 1\") == \"11\"\nassert solution(\"6 4\") == \"4\"\nassert solution(\"1 5\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n1 2 3\n1 2\n2 3\n3 4\n''') == '11'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"11\"\nassert solution(input(\"\")) == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\n''') == '11'\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1 5\\n2 1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 3\") == \"1 1\"\nassert solution(\n    \"2 2\") == \"2 2\"\nassert solution(\n    \"3 3\") == \"1 3\"\n\nprint(solution(\n    input()))",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'\n\nassert solution('''\n3 2\n6 2 5\n3 1 9999999999\n''') == '1 1\\n1 9999999994\\n2 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\nassert solution('''3 6\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1 5\\n2 1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6\n10 15 12\n1 9 12 23 26 37\n\n3 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1 5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 6\n10 15 12\n1 9 12 23 26 37\n\"\"\") == \"\"\"1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n\"\"\".strip()\n\nassert solution(\"\"\"2 3\n5 10000000000\n5 6 9999999999\n\"\"\") == \"\"\"1 5\n2 1\n2 9999999994\n\"\"\".strip()",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 2 6\n2 4 4 5''') == '3 1 2'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 6 5 4\") == \"2 1 3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 2 3\n\"\"\") == \"2 1 3\"\nassert solution(\"\"\"\n3 4 5\n\"\"\") == \"4 5 3\"\nassert solution(\"\"\"\n1 2 3 4 5\n\"\"\") == \"1 2 5 3 4\"\nassert solution(\"\"\"\n10 10 20 20\n\"\"\") == \"1 20 10 2\"\nassert solution(\"\"\"\n6 5 5 5 6\n\"\"\") == \"1 6 5 5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"2 1 3\"\n\nassert solution(sys.stdin.read()) == \"20 20 20\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 1 3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nprint(solution(input()))\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\nBBBGBRRR\n''') == '2'\nassert solution('''9\nRBGRRBRGG\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '7'\nassert solution('9') == '9'\nassert solution('13') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\nBBBGBRRR\n''') == 'BRBGBRGR'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1\n    RBGRRBRGG\n    \"\"\") == \"RBGRGBRGR\"\n\nassert solution(\n    \"\"\"\n    8\n    BBBGBRRR\n    \"\"\") == \"BRBGBRGR\"\n\nassert solution(\n    \"\"\"\n    13\n    BBRRRRGGGGGRR\n    \"\"\") == \"BGRBRBGBGBGRG\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\n\nassert solution(input()) == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''9\nRBGRRBRGG''') == '2'\nassert solution('''8\nBBBGBRRR''') == '2'\nassert solution('''13\nBBRRRRGGGGGRR''') == '6'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\nassert solution('ABCDE') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 3 4 7 5 6 8\n''') == \"4\"\n\nassert solution('''\n6\n1 3 5 2 4 6\n''') == \"2\"\n\nassert solution('''\n4\n10 9 8 7\n''') == \"1\"\n\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == \"6\"\n\nassert solution('''\n10\n10 11 12 13 14 15 16 17 18 19\n''') == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n10 9 8 7\n''') == '2'\nassert solution('''7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''6\n1 3 5 2 4 6\n''') == '1'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n''') == '1'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'\nassert solution('''\n1\n10\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('8') == '2'\nassert solution('10') == '1'\nassert solution('1000000') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n''') == '1'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'\nprint('All tests passed!')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n\n''') == '6'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n\n''') == '6'\nassert solution('''\n7\n7 8 6 5 3 4 2 1\n\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3\n4\n7\n5\n6\n8''') == '4'\nassert solution('''6\n7\n8\n9\n10\n11''') == '2'\nassert solution('''9\n10\n11\n12\n13''') == '1'\nassert solution('''8\n9\n10\n11''') == '1'\n\nassert solution('''4\n10\n9\n8\n7''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 3 4 7 5 6 8''') == '4'\nassert solution('''6\n1 3 5 2 4 6''') == '2'\nassert solution('''9\n10 9 8 7''') == '1'\nassert solution('''4\n10 9 8 7''') == '6'\nassert solution('''5\n10 9 8 7''') == '1'\n\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n2 3 5 6\"\nassert solution() == \"6\\n1 2 3 7 8 9\"\nassert solution() == \"6\\n1 4\"\nassert solution() == \"1\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 53
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 1') == 'No'\n\n\"\"\"\n\nimport math\n\nA = int(input())\nB = int(input())\n\nC = int(math.pow(3, A) * math.pow(1, B) * math.pow(3, C))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"3 1 1\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == 'Yes'\nassert solution('5 6') == 'No'\nassert solution('3 2') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('3 4') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"2 2\n\"\"\") == \"No\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == \"Yes\", \"test 1 failed\"\nassert solution('6 1') == \"No\", \"test 2 failed\"\nassert solution('9 1') == \"Yes\", \"test 3 failed\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n3''') == 'Yes'\nassert solution('''3 1\n3\n3''') == 'No'\nassert solution('''4 1\n3\n4''') == 'No'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('4 5') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('1 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 2') == '8'\nassert solution('1') == '1'\nassert solution('99 1') == '99'\nassert solution('5 2') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('81 58') == '110'\nassert solution('13 65') == '132'\nassert solution('123 6') == '123'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 10') == '100'\nassert solution('5 50') == '50'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"110\"\nprint(solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"10 10\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1\n1 2''') == '1'\nassert solution('''5 15\n3 8''') == '11'\nassert solution('''3 8\n3 10''') == '11'\nassert solution('''3 8\n4 6''') == '11'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"12 10\") == \"16\"\nassert solution(\"5 5\") == \"10\"\n\"\"\"\n\nx,y=map(int,input().split())",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '3'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"110\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"8\"\nprint(solution(\"2\"))\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '8'\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()\n\nN = int(stdin)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"10\") == \"716\"\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\n\n\"\"\"\n\nimport math\n\ninput_lines = stdin.readlines()\n\nlength = int(input_lines[0])\n\nn = math.ceil(length / 3)\n\ncount = 0\n\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            count += 1\n\nprint(count)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '8'\nassert solution('10') == '3628800'\n\"\"\"\n\nimport itertools\n\nimport pytest",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"8\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n''') == '8'\nassert solution('''3\n''') == '8'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '8'\nassert solution('5') == '79'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '8'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'NO'\nassert solution('5') == 'YES'\nassert solution('10') == 'YES'\nassert solution('12') == 'NO'\nassert solution('18') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"NO\"\nassert solution(\"2\\n\") == \"YES\"\nassert solution(\"1\\n\") == \"YES\"\nassert solution(\"1\\n\") == \"NO\"\nassert solution(\"5\\n\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('4') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('15') == 'NO'\nassert solution('12') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('999') == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABC001') == 'ABC'\nassert solution('ABC002') == 'ABD'\nassert solution('ABC003') == 'ABD'\nassert solution('ABC004') == 'ABD'\nassert solution('ABC005') == 'ABD'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('999') == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n99\n''') == 'ABC'\nassert solution('''\n999\n''') == 'ABC'\nassert solution('''\n12\n''') == 'DEF'\nassert solution('''\n13\n''') == 'GHI'\nassert solution('''\n1\n''') == 'ABC'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC'\nassert solution('998') == 'ABC'\nassert solution('997') == 'ABC'\nassert solution('996') == 'ABC'\nassert solution('995') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1') == 'AB'\nassert solution('2') == 'BC'\nassert solution('3') == 'BD'\nassert solution('4') == 'BE'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"123\"\nassert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('999') == 'ABC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"5\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'Yay!'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Nay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"5\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n1\\n4\\n8\\n9\\n15') == 'Nay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 'Yay!'\nassert solution('1\\n1\\n2\\n3\\n4\\n5') == 'Nay!'\nassert solution('1\\n1\\n2\\n3\\n4\\n5') == 'Yay!'\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3200') == 'pink'\nassert solution('1234') =='red'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3200') == 'pink'\nassert solution('1234') =='red'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == 'pink'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3200\") == \"pink\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"25\") == \"red\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2800\") == \"red\"\nassert solution(\"3300\") == \"red\"\nassert solution(\"1200\") == \"blue\"\nassert solution(\"5000\") == \"blue\"\nassert solution(\"3200\") == \"red\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3200') == 'pink'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a = 3200 is not less than 3200, so we print s = pink.\\n\") == \"pink\"\nprint(solution(\"a = 3200 is not less than 3200, so we print s = pink.\\n\"))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\nred\nblue\ngreen\nyellow\n''') =='red'\nassert solution('''2800\npink\n''') == 'pink'\nassert solution('''16\nblack\nwhite\nblue\ngreen\nyellow\n''') == 'black'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3200\") == \"pink\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('-199') == 'ARC'\nassert solution('-1199') == 'ARC'\nassert solution('-1250') == 'ARC'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'ABC'\nassert solution('5') == 'ARC'\nassert solution('16') == 'AGC'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1201\") == \"ARC\"\nassert solution(\"1202\") == \"AGC\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"R\") == \"ABC\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1300') == 'ARC'\nassert solution('1120') == 'AGC'\n\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\nassert solution(\"123\") == \"ARC\"\n\nassert solution(\"154\") == \"AGC\"\n\nassert solution(\"1234567890\") == \"ARC\"\n\nassert solution(\"124\") == \"ARC\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\", \"Should return ABC\"\nassert solution(\"1112\") == \"ARC\", \"Should return ARC\"\nassert solution(\"1111\") == \"AGC\", \"Should return AGC\"\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == 'ARC'\nassert solution('1199') == 'ARC'\nassert solution('1299') == 'ARC'\nassert solution('1199') == 'ARC'\nassert solution('1200') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1196') == 'ARC'\nassert solution('1195') == 'AGC'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1197') == 'ARC'\nassert solution('1192') == 'AGC'\nassert solution('1191') == 'ABC'\nassert solution('1201') == 'ARC'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"321\") == \"3111\"\nassert solution(\"921\") == \"921\"\nassert solution(\"1221\") == \"1221\"\nassert solution(\"3121\") == \"3112\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"991\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123\") == \"120\"\nassert solution(\"999\") == \"999\"\nassert solution(\"119\") == \"991\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('119') == '991', 'Should return 991'\nassert solution('9') == '1', 'Should return 1'\n\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('119') == '991'\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '991'\nassert solution('999') == '991'\nassert solution('1') == '9'\nassert solution('9999') == '99999'\nassert solution('1111') == '999'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('119') == '991'\nassert solution('1') == '9'\nassert solution('22') == '11'\nassert solution('9') == '1'\nassert solution('1234') == '91234'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"999\"\nassert solution(\"122\") == \"992\"\nassert solution(\"112\") == \"100\"\nassert solution(\"111\") == \"101\"\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n2\n\nOutput:\n10\n11\n\nInput:\n3\n\nOutput:\n12\n13\n14\n\nInput:\n5\n\nOutput:\n15\n16\n17\n18\n19\n\nInput:\n7\n\nOutput:\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\nInput:\n5\n\nOutput:\n15\n24\n35\n46\n57\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n5\n\nOutput:\n15\n24\n35\n46\n57\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\nInput:\n6\n\nOutput:\n12\n22\n32\n42\n52\n62\n72\n82\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n4\n\nOutput:\n11\n22\n33\n44\n\nInput:\n2\n\nOutput:\n10\n11\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\nInput:\n5\n\nOutput:\n15\n24\n35\n46\n57\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n6\n\nOutput:\n12\n22\n32\n42\n52\n62\n72\n82\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n5\n\nOutput:\n15\n24\n35\n46\n57\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n6\n\nOutput:\n12\n22\n32\n42\n52\n62\n72\n82\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n5\n\nOutput:\n15\n24\n35\n46\n57\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n6\n\nOutput:\n12\n22\n32\n42\n52\n62\n72\n82\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n5\n\nOutput:\n15\n24\n35\n46\n57\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n6\n\nOutput:\n12\n22\n32\n42\n52\n62\n72\n82\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n5\n\nOutput:\n15\n24\n35\n46\n57\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1\n\nInput:\n6\n\nOutput:\n12\n22\n32\n42\n52\n62\n72\n82\n\nInput:\n7\n\nOutput:\n11\n22\n33\n44\n55\n66\n77\n88\n\n---\n\ncatSnuke\n\na.    1,1,9 -> 9,9,1\nb.    1,1,9,9 -> 9,9,1\nc.    9,9,9 -> 9,9,1\nd.    9,9,9,9 -> 9,9,1",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"991\") == \"991\"\nassert solution(\"1234\") == \"91234\"\nassert solution(\"1345\") == \"91345\"\nassert solution(\"1345678901\") == \"91345678901\"\nassert solution(\"9999\") == \"99999\"\n",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"991\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"abbaac\"\nassert solution(input()) == \"abac\"\nassert solution(input()) == \"bcdaf\"\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"4\\nac\\nabac\\nbccddaaf\\nzzzzzzzzzz\") == \"bcdaf\"\nassert solution(\"4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"bcdaf\"",
        "num_ids_2": 63,
        "num_ids_4": 126
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\naba\nbca\ncab\nacb\naba''') == \"aba\"\nassert solution('''8\na\nab\nabc\nabcd\ne\na\nacb\nb''') == \"abcd\"\nassert solution('''1\nb\nac\nacb\nb''') == \"acb\"\nassert solution('''2\naba\nbca\ncab\nacb\naba''') == \"aba\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == 'abac'\nassert solution('1') == 'ac'\nassert solution('2') == 'bcdaf'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\nabac\nac\nbcdaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n2\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"ac\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\naba\nac\nbcdaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n3\nabac\nac\nzzzzzzzzzzzzzzzzzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n3\nac\nac\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n5\nz\nabc\nxy\nxyy\n''') == 'abc'\nassert solution('''\n1\na\n''') == 'a'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n2\nabbaac\nac\nbcdaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n3\nabbaac\nac\nbcdaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n4\nabbaac\nac\nbcdaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n5\nabbaac\nac\nbcdaf\nzzzzzzzzzz\n''') == \"abac\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"abac\"\nassert solution(\"1\") == \"abac\"\nassert solution(\"4\") == \"abac\"\nassert solution(\"3\") == \"bcdaf\"\nassert solution(\"0\") == \"bcdaf\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n') == '2\\n5\\n4\\n333\\n0\\n', solution('5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n')\nassert solution('3\\n11 3\\n123 456\\n92 46\\n') == '0\\n0\\n', solution('3\\n11 3\\n123 456\\n92 46\\n')\nassert solution('3\\n21 2\\n123 456\\n92 46\\n') == '1\\n1\\n', solution('3\\n21 2\\n123 456\\n92 46\\n')",
        "num_ids_2": 123,
        "num_ids_4": 172
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10 4\") == \"5\"\nassert solution(\"100 13\") == \"4\"\nassert solution(\"123 456\") == \"0\"\nassert solution(\"92 46\") == \"333\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n100 13\n123 456\n92 46\n''') == '0'\nassert solution('''\n100 13\n123 456\n92 46\n''') == '333'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '333'\n\nassert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '5'\n\nassert solution('''\n100 100\n123 456\n92 46\n''') == '0'\n\nassert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '333'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    10 4\n    13 9\n    100 13\n    123 456\n    92 46\n''') == '333'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\"\nassert solution(\"3\\n5 5\\n5 5\\n9 9\\n1 1\") == \"0\\n1\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n3\n6 8\n18 18\n432 432\n43 4\n432 4\n432 4\n''') == '5'\nassert solution('''\n2\n12 4\n16 7\n12 4\n''') == '0'\nassert solution('''\n3\n18 18\n4 8\n5 6\n''') == '3'\nassert solution('''\n4\n12 32\n16 6\n12 4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('10 4') == '5'\nassert solution('13 9') == '4'\nassert solution('100 13') == '3'\nassert solution('123 456') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n5 3\n2 3\n2 5\n3 2\n3 2\n''') == '1'\nassert solution('''\n5 10\n10 13\n13 5\n5 4\n8 4\n''') == '2'\nassert solution('''\n8 10\n8 13\n8 5\n8 3\n8 2\n''') == '1'\nassert solution('''\n5 10\n10 13\n13 5\n5 3\n8 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n3 4 1 2') == '2.666666666666667'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 1 2') == '2.666666666666667'\nassert solution('1 4 1 2') == '2.5'\nassert solution('1 1 1 2') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4 3\\n'\n    '3 4 1 2') == '2.666666666666667'\nassert solution(\n    '20\\n'\n
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n3 4 1 2\\n') == '2.666666666666667'\nassert solution('10 10\\n10 20 10\\n10 20 20\\n10 20 20 20\\n10 20 20 20 20\\n10 20 20 20 20 20\\n10 20 20 20 20 20 20\\n10 20 20 20 20 20 20 20\\n') == '3.333333333333333'\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '2.5'\nassert solution('1') == '0'\nassert solution('5') == '1.5'\nassert solution('10') == '2.5'\nassert solution('6') == '1.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8''') == '2.666666666666667'\nassert solution('''5\n10\n20\n30\n40\n50\n60\n70\n80\n90\n100\n120\n130\n140\n150\n160\n170\n180\n190\n200\n220\n240\n250\n260\n270\n280\n290\n300\n320\n340\n350\n360\n370\n380\n390\n400\n430\n450\n460\n470\n480''') == '3.000000'\nassert solution('''3\n1\n2\n3\n4\n5\n6''') == '4.000000'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2.5'\nassert solution('8 5') == '7.0'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''4 2\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''4 2\n1 1 1 1\n''') == '1.0'\nassert solution('''4 2\n1 1 1 1\n''') == '1.0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2.666666666666667'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 2\n''') == '2.666666666666667'\nassert solution('''\n2 3\n1 2\n''') == '1.6'\nassert solution('''\n2 3\n1 1\n''') == '1.5'\nassert solution('''\n5 10\n15 8 9 5 2 1\n''') == '4.166666666666666'\nassert solution('''\n1 5\n1 5 1 3 2\n''') == '1.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == \"YES\"\n\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == \"NO\"\n\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3''') == 'YES'\nassert solution('''6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3''') == 'NO'\nassert solution('''3\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3''') == 'NO'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3 2 1\n1 2''') == 'YES', 'example test'\nassert solution('''4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES', 'another example'\nassert solution('''5 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO', 'another example'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n3 2 1\n1 2''') == 'YES'\nassert solution('''4 2\n4 1 2 3\n3 2''') == 'NO'\nassert solution('''5 1\n1 2 3 4 5\n1 3\n4 2 3 1\n3 2''') == 'YES'\nassert solution('''5 1\n1 2 3 4 5\n3 2''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n    \"\"\"\n) == \"YES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\\\n1\n1\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\\\n3\n4\n3 2 1\n4 2\n1 2\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\\\n2\n4\n4 1 2 3\n3 2\n\"\"\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"z\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'b'\nassert solution('5') == 'a'\nassert solution('1') == 'z'\nassert solution('4') == 'o'\nassert solution('9') == 'p'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nbaabbb\") == \"bab\"\nassert solution(\"10\\noopppppsss\") == \"oops\"\nassert solution(\"1\\nz\") == \"z\"\n",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"z\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"./tests/test_solution.in\") == \"./tests/test_solution.out\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'z'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"z\"\nassert solution(input()) == \"z\"\nassert solution(input()) == \"z\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\nz\n''') == 'z'\nassert solution('''9\nzz\n''') == 'zz'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == input\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'bab'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n\"\"\"\n\nfrom collections import deque\n\nn, m = list(map(int, input().split()))\nedges = []\nfor _ in range(m):\n    u, v, w = list(map(int, input().split()))\n    edges.append([u, v, w])",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"1\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3''') == '1'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\nassert solution('4 3') == '0'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 10') == '1'\nassert solution('4 3') == '0'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3\n2 1 3\n4 3 4\n2 4 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n1 2 1\n2 3 2\n1 3 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\nassert solution('10') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\n\nprint(solution(stdin))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nBRB\n''') == 'GRB'\nassert solution('''\n7\nRGBGRBB\n''') == 'RGBRGBR'\n\nassert solution('''\n5\nRRBB\n''') == 'RRBB'\nassert solution('''\n3\nRRBB\n''') == 'RRBB'\nassert solution('''\n1\nRBBB\n''') == 'RBBB'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nR\\n\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\\n\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nRRB\n''') == '1'\nassert solution('''\n7\nRBGRB\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\nBRB\n\"\"\") == \"GRB\"\nassert solution(\"\"\"\n3\nRBR\n\"\"\") == \"GB\"\n\nassert solution(\"\"\"\n3\nBRB\n\"\"\") == \"GB\"\nassert solution(\"\"\"\n3\nRBR\n\"\"\") == \"GB\"\n\nassert solution(\"\"\"\n3\nRBR\n\"\"\") == \"GB\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\nBRB''') == 'GRB'\nassert solution('''7\nRGBGRBB''') == 'RGBRGBR'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n10000 JPY\n0.10000000 BTC''') == \"48000.0\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '48000'\nassert solution('1') == '48000.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('3\\n1.10000000 JPY\\n0.10000000 BTC\\n') == '1.0'\nassert solution('1\\n0.10000000 JPY\\n1.10000000 BTC\\n') == '0.1000000000000001'\nassert solution('3\\n0.10000000 JPY\\n1.10000000 BTC\\n') == '0.10000000'\n",
        "num_ids_2": 56,
        "num_ids_4": 118
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''\n2\n100000 JPY\n0.00000001 BTC\n''') == '91801.0'\nassert solution('''\n2\n0.10000000 BTC\n0.00000001 JPY\n''') == '0.10000000'\nassert solution('''\n1\n100000 JPY\n100000 JPY\n''') == '0.0'\nassert solution('''\n1\n100000 JPY\n100000 JPY\n''') == '1.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '48000.0'\nassert solution('2') == '48000.0'\nassert solution('2') == '48000.0'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == '48000.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''\n2\n100000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''\n2\n100000000 JPY\n10000000.0 BTC\n''') == '48000.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('4\\n1 1000000\\n1 BTC\\n') == '10000000.0'\nassert solution('5\\n1 1000000000\\n1 BTC\\n') == '10000000.00000000'\nassert solution('6\\n1 1000000000\\n1 BTC\\n') == '10000000.00000000'\nassert solution('6\\n1 1000000000\\n1 BTC\\n') == '10000000.00000000'\n",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"20\") == \"48000.0\"\nassert solution(\"1\") == \"1.0\"\nassert solution(\"10\") == \"0.1\"\nassert solution(\"100\") == \"0.000001\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\n\n---\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---\n\n---",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '3'\nassert solution('5 2') == '3'\nassert solution('5 2') == '3'\nassert solution('5 2') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"1000\") == \"9\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"10 10\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"3\", \"Wrong\"\nassert solution(\"6 3\") == \"3\", \"Wrong\"\nassert solution(\"4 1\") == \"1\", \"Wrong\"\nassert solution(\"4 3\") == \"2\", \"Wrong\"\nassert solution(\"3 3\") == \"1\", \"Wrong\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '3'\n\"\"\"\nimport sys\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"10 3\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2') == '3'\nassert solution('4\\n2') == '3'\nassert solution('4\\n3') == '2'\nassert solution('4\\n4') == '1'\nassert solution('4\\n5') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'abcde', \"Should return 'abcde'\"\nassert solution('6') == 'bcdea', \"Should return 'bcdea'\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nip cc\n\n''') == 'icpc'\nassert solution('''\n3\nabc\nabc\n''') == 'bac'\nassert solution('''\n1\nab\n\n''') == 'ab'\nassert solution('''\n2\naa bb\naa bb\n\n''') == 'baaabb'\nassert solution('''\n2\naa bb\naa bb\n''') == 'baaabb'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"icpc\"\n\n\nN = int(input())\n\nS = input()\nT = input()\n\nanswer = \"\"\n\nfor i in range(N):\n    answer += S[i] + T[i]\n    \nprint(answer)\n\nsolution(stdin())\n\nThe second solution uses an extra memory space of O(N) and has a time complexity of O(N).\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nip cc\\n\") == \"icpc\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"ppp\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"icpc\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('ip') == 'icpc'\nassert solution('cc') == 'icpc'\nassert solution('abcdefgh') == 'acpcbaecdefgh'",
        "num_ids_2": 19,
        "num_ids_4": 47
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"icpc\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nip cc\n''') == 'icpc'\nassert solution('''3\nhp dp\n''') == 'hpdp'\nassert solution('''1\na\n''') == 'a'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'ppp', solution('3')\nassert solution('4') == 'pppppp', solution('4')\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('BAA') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABA') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABAA\") == \"Yes\"\nassert solution(\"BABA\") == \"No\"\n\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BAB\") == \"No\"\nassert solution(\"ABC\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABBA\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''ABA''') == 'Yes'\nassert solution('''BAB''') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRS') == '2'\nassert solution('RSR') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRS') == '2'\nassert solution('RS') == '1'\nassert solution('RR') == '2'\nassert solution('R') == '1'\nassert solution('RR') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"SSRR\") == \"3\"\nassert solution(\"RRSS\") == \"1\"\nassert solution(\"RSSSS\") == \"0\"\nassert solution(\"SSSSR\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRRS\") == \"2\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RRSR\") == \"2\"\nassert solution(\"RRSRSRS\") == \"4\"\nassert solution(\"RRRRRRRR\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRSRR\") == \"3\"\nassert solution(\"RRSRRRRR\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRRS') == '2'\nassert solution('RRSRRR') == '3'\nassert solution('RRSSSSSSSSSSSSSS') == '1'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"R\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRSRR') == '2'\nassert solution
        "num_ids_2": 23,
        "num_ids_4": 1827
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3 1 2'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"4 3 1 2\"\nassert solution(\"1 2 3 4 5\") == \"5 4 1 2 3\"\nassert solution(\"1 2 3 4 5 6\") == \"6 5 4 1 2 3\"\nassert solution(\"1 2 3 4 5 6 7\") == \"7 6 5 4 1 2 3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"2 3 1\"\nassert solution(\"5 2 7\") == \"7 5 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 6 7\") == \"7 5 6\"\nassert solution(\"3 2 1\") == \"1 3 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('5 2 3') == '3 1 2'\nassert solution('5 2 3') == '3 1 2'\nassert solution('3 1 2') == '5 2 3'\nassert solution('6 1 2') == '5 2 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 4\") == \"4 1 2\"\nassert solution(\"5 6 7\") == \"7 6 5\"\nassert solution(\"2 1 3\") == \"3 1 2\"\nassert solution(\"5 1 2\") == \"2 5 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3 1 2'\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == output_string\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"100\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\nassert solution('0 100') == '100'\nassert solution('100 0') == '100'\nassert solution('200 120') == '200'\nassert solution('100 200') == '200'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input().split()) == \"100\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('30 100\\n') == '100'\nassert solution('100 100\\n') == '100'\nassert solution('5 10\\n') == '10'\nassert solution('5 20\\n') == '50'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"100\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"15 12\") == \"80\"\nassert solution(\"15 11\") == \"80\"\nassert solution(\"8 16\") == \"75\"\nassert solution(\"11 10\") == \"25\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([30, 100]) == '100'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 20\") == \"30\"\nassert solution(\"2 5\") == \"25\"\nassert solution(\"30 10\") == \"50\"\nassert solution(\"2 4\") == \"20\"\nassert solution(\"20 6\") == \"50\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Takahashi, who is A years old, is riding a Ferris wheel.\\nIt costs B yen (B is an even number).\\nTakahashi, who is 13 years old or older, can ride it for half the cost if you are 6 or less years old, and children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (Yen is the currency of Japan.)') == '100'",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-++') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\nassert solution('--+++-') == '2'\nassert solution('-+++-') == '2'\nassert solution('++++++-') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == '2'\nassert solution(\"++--\") == '1'\nassert solution(\"++--\") == '1'\nassert solution(\"+++++++\") == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++--\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+-++') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"-++\") == \"0\"\nassert solution(\"++\") == \"1\"\nassert solution(\"+--\") == \"1\"\nassert solution(\"++-\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\nassert solution('+-++') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2019/04/30') == 'Heisei'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/10/10\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"Sample test 1 failed\"\nassert solution(\"2020/03/31\") == \"TBD\", \"Sample test 2 failed\"\nassert solution(\"2020/04/29\") == \"Heisei\", \"Sample test 3 failed\"\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/03/31\") == \"TBD\"\nassert solution(\"2019/03/30\") == \"Heisei\"\nassert solution(\"2019/02/29\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/28') == 'Heisei'\nassert solution('2019/04/27') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2019/04/30''') == 'Heisei'\nassert solution('''2019/04/29''') == 'TBD'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"Houston, we have a problem.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/31\") == \"TBD\"\nassert solution(\"2019/05/31\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/28\") == \"TBD\"\nassert solution(\"2019/04/27\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/29/') == 'TBD'\nassert solution('2019/04/29/2019/04/30/') == 'Heisei'\nassert solution('2019/04/29/2019/04/30/2019/04/29') == 'Heisei'\n",
        "num_ids_2": 31,
        "num_ids_4": 70
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6''') == '9'\nassert solution('''3\n1337 1337 1337''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('18\\n
        "num_ids_2": 1486,
        "num_ids_4": 1486
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'\n",
        "num_ids_2": 62,
        "num_ids_4": 80
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n
        "num_ids_2": 1486,
        "num_ids_4": 1486
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"18\") == \"14\"\nassert solution(\"10\") == \"9\"\nassert solution(\"3\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2\n1 2 3\n\n''') == '3'\n\nassert solution(\n'''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n\n''') == '9'\n\nassert solution(\n'''\n3\n1337 1337 1337\n\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\n''') == \"14\"\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == \"9\"\nassert solution('''\n3\n1337 1337 1337\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 2 1 3 2') == '2 1 3 2'\nassert solution('10 4') == '3 1 2'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"10 0\") == \"0\"\nassert solution(\"100 0\") == \"100\"\nassert solution(\"10 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\nassert solution('''\n5 5\n2 3 4 5 2\n''') == '2'\nassert solution('''\n6 6\n1 2 1 1 2 1 2\n''') == '3'\nassert solution('''\n6 4\n1 2 2 3 4 4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 2') == '3'\nassert solution('10 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '7 2\\n'\n    '1 2 3 2 1 3 2\\n'\n    ) == '2\\n'\n\nassert solution(\n    '10 4\\n'\n    '2 3 3 1 1 2 1 2 3 3\\n'\n    ) == '3\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2\n\n''') == '2 1 3 2 1 3 2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3\n\n''') == '3 1 3 2'\nassert solution('''10 4\n1 2 3 2 1 3 2\n\n''') == '2 1 3 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution() == '1 3 2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == \"2 1 2 3\"\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == \"3 1 2 3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 4') == '1'\nassert solution('10 4') == '3'\nassert solution('100 4') == '2'\nassert solution('5 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1 3 2\\n-1\"\nassert solution(\"5 4\\n2 4 8 2 4\\n1\\n5\\n14\\n10\") == \"2 1\\n1\"\nassert solution(\"5 4\\n2 4 8 2 4\\n3\\n5\\n14\\n10\") == \"1\\n1\\n3\\n2\"\n",
        "num_ids_2": 70,
        "num_ids_4": 109
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1\n3\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n2\n4\n2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n2\n4\n2\n8\n5\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"3 2\"\nassert solution(\n\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"2 1\"\nassert solution(\n\"\"\"\n5 4\n1 2 3 4 5\n8\n\"\"\"\n) == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '3 2'\nassert solution('''3\n1\n1\n1\n''') == '-1'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n8 2 4 2 4') == '3'\nassert solution('10\\n1') == '1'\nassert solution('10\\n2') == '-1'\nassert solution('100\\n1') == '100'\nassert solution('100\\n2') == '-1'\n",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"3\n2\n\"\"\"\n\nassert solution(\"\"\"\n1\n5\n14\n10\n\"\"\") == \"\"\"1\n-1\n3\n2\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"3\\n2\\n\"\nassert solution(\"3 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"2\\n\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"3\\n2\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 100
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n3\\n1') == '1\\n3\\n3\\n1'\nassert solution('2\\n1\\n4\\n5\\n3') == '1\\n2\\n2\\n1'\nassert solution('3\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('4\\n1\\n3\\n2\\n4') == '4\\n2\\n2\\n2\\n2'\nassert solution('5\\n2\\n4\\n1\\n2\\n2\\n3\\n3') == '3\\n2\\n2\\n2\\n1\\n1\\n1\\n1'\n",
        "num_ids_2": 59,
        "num_ids_4": 121
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"3 2\\n3 2\\n-1\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n2\n5\n''') == '1'\n\nassert solution('''\n2\n5\n2\n3\n''') == '2'\n\nassert solution('''\n2\n6\n2\n2\n''') == '1'\n\nassert solution('''\n2\n5\n3\n3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"21\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 3\\n\"\n    \"1 3 2 8 5 5 8 2 2 8 5 2\\n\"\n    \"1 2 2 5\\n\"\n    \"2 6 7\\n\"\n) == \"21\"\n\nassert solution(\n    \"3 3\\n\"\n    \"9 9 9 9 9 9 9 9 9\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '21'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\") == \"21\"\nassert solution(\"\"\"3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n\"\"\") == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '21'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == 21\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n''') == 0\nassert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == 21\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n2 6 7\\n\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n2 6 7\\n\") == \"0\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n2 6 7\\n\") == \"0\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n2 6 7\\n\") == \"0\"",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 4 6 6 6\n''') == '2'\nassert solution('''\n3\n2 8 10\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 3\n1 1 2\n1 3 2\n''') == '2 1 3 2 1'\nassert solution('''\n4\n1 1 1 1\n2 2 2 2\n1 1 2 3\n''') == '0'\nassert solution('''\n4\n0 0 0 1\n0 2 3 0\n0 0 0 1\n''') == '2 3 1 0 0 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"1 2 2 1 1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6 6 6') == '2'\nassert solution('3 4 6 6 6') == '1 2 3'\nassert solution('1 1 1 1') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 43
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"3 2 8 10\") == \"2\"\nassert solution(\"2 3 4 2\") == \"1 1 2\"\nassert solution(\"4 4 4 4\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n10\n10 10 10 10 10 10 10 10\n''') == '3'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '10'\nassert solution('''\n100\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 4 6 6 6\") == \"2\\n1 2 3\"\nassert solution(\"3\\n2 8 10\") == \"2\\n2 3 2\"\nassert solution(\"5\\n10 10 10 10\") == \"2\\n3 3 2\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"3 2 8 10\") == \"2 3 2 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 4 6 6 6\n\n''') == '2'\nassert solution('''\n4\n2 8 10 0\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 6 6 6') == '2'\nassert solution('3 8 10') == '2'\nassert solution('4') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == '1'\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n0\\n1\\n0\") == '0'\nassert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1\\n1\\n0\") == '2'",
        "num_ids_2": 104,
        "num_ids_4": 157
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\n''') == \"1\"\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\n''') == \"2\"\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\n''') == \"1\"\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n0\n0\n\n''') == \"0\"\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == \"1\"\nassert solution('6 2') == \"0\"\nassert solution('5 1') == \"2\"\nassert solution('10101') == \"3\"\nassert solution('3 1') == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n100010\") == \"1\"\nassert solution(\"6 2\\n000000\") == \"1\"\nassert solution(\"5 1\\n10101\") == \"1\"\nassert solution(\"3 1\\n001\") == \"1\"\nassert solution(\"2 2\\n00\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n100010\") == \"1\"\nassert solution(\"6 2\\n000000\") == \"2\"\nassert solution(\"5 1\\n10101\") == \"1\"\nassert solution(\"3 1\\n001\") == \"1\"\nassert solution(\"2 2\\n00\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '7 2\\n'\n    '11 11\\n'\n    '9 11\\n'\n    '7 8\\n'\n    '8 9\\n'\n    '7 8\\n'\n) == '3\\n'\nassert solution(\n    '5 1\\n'\n    '29 30\\n'\n    '30 30\\n'\n    '29 29\\n'\n    '28 30\\n'\n    '30 30\\n'\n) == '4\\n'\nassert solution(\n    '6 1\\n'\n    '2 3\\n'\n    '3 3\\n'\n    '2 3\\n'\n    '2 2\\n'\n    '2 3\\n'\n) == '4\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '1 4 5'\nassert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5 6'\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '4 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n'\n) == '3\\n1 4 5 6'\nassert solution(\n    '6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n'\n) == '4\\n1 3 5 6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == '4'\nassert solution('6 1') == '5'\nassert solution('7 1') == '6'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 5 6\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"4\\n1 3 5 6\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\"\nassert solution(\"1\\n5\\n1\\n4\\n3\") == \"2\\n1 4\"\n\n'''\n",
        "num_ids_2": 82,
        "num_ids_4": 149
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '3\\n4\\n1 3 5 6'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4'\nassert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\nprint(solution(*tuple(map(int, input().split()))))",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == \"30\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"30\"\nassert solution(\"\"\"\n1\n5\n10\n5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n5\n10\n5\n\"\"\") == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '30'\nassert solution('1\\n2\\n3\\n') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n\nassert solution('''\n2\n2\n1 2\n''') == '2'\n\nassert solution('''\n1\n2\n1\n''') == '1'\n\nassert solution('''\n2\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\n\nassert solution('''3\n6\n30 6\n30 30''') == '31'\n\nassert solution('''10\n10\n0 0\n0 0''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '30'\nassert solution('3') == '30'\nassert solution('4') == '31'\nassert solution('5') == '31'\nassert solution('6') == '30'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('2 10') == '11'\nassert solution('2 5 6 15 30') == '36'\nassert solution('2 4 6') == '7'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\nassert solution('''6\n5\n2 3 4 99 100\n1\n12\n4\n3\n5\n7\n''') == '1'\nassert solution('''6\n3\n1\n3\n4\n5\n4\n''') == '2'\nassert solution('''6\n3\n1\n3\n4\n5\n4\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == \"2\\n1\\n2\"\nassert solution('3\\n1\\n6\\n7\\n5\\n1\\n5\\n') == \"3\"\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\") == \"2\"\nassert solution(\"3\\n5\\n2 3 4 99 100\\n1\\n42\\n\") == \"1\"\nassert solution(\"8\\n6\\n4 7 6 3 5 8\\n3 4 6 5 7\\n4 5 6 7 8\\n3 4 5 6 7\\n2 8 4 6 5 7\\n2 7 8 5 6 4\\n3 6 7 8 5 4\\n2 5 4 6 7 8\\n2 5 6 8 4 7\\n1 5 6 7 8 4\\n2 5 6 7 8 4\\n\") == \"2\"\nassert solution(\"\") == \"1\"\n",
        "num_ids_2": 50,
        "num_ids_4": 159
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 1 2 2\n    1\n    3 3\n    2\n    4 5\n    4\n    3\n    \"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n    4\n    2 10 1 20\n    2\n    3 6\n    5\n    2 3 4 99 100\n    1\n    42\n    \"\"\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"2\\n1\"\nassert solution(\"2\") == \"1\\n2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"42\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1\n10\n''') == \"1\"\nassert solution('''\n3\n2\n10\n''') == \"1\"\nassert solution('''\n3\n1\n9\n''') == \"2\"\nassert solution('''\n10\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\nassert solution('''\n2\n10\n1\n20\n''') == '1'\nassert solution('''\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\nassert solution('''\n1\n12\n5\n3 4 5 6 7 8 10 11 12\n2\n1 3 5\n1\n4\n4\n3\n4\n3\n3\n1\n''') == '2'\nassert solution('''\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"1\"\nassert solution('''5\n5\n2 3 4 9 100\n1\n2 5 7\n4\n1 2 3\n1\n4\n''') == \"2\"\nassert solution('''8\n8\n2 3 4 9 100\n1\n2 5 7\n4\n1 2 3\n1\n4\n5\n2 3\n1\n''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\\n\"\nassert solution('''\n2 3 4\n2 3 6\n4 5 9\n1 1 6\n''') == \"NO\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 2 4') == 'YES'\nassert solution('3 2 3 4') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('5 2 6 18') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == \"YES\"\nassert solution('1 1 1 1\\n1 1 1 1\\n1 1 1 1') == \"YES\"\nassert solution('3 3 5 18\\n1 1 1 1\\n3 3 5 18') == \"YES\"\nassert solution('3 3 5 18\\n1 1 1 1\\n3 3 5 18\\n3 3 5 18\\n3 3 5 18') == \"NO\"\n",
        "num_ids_2": 56,
        "num_ids_4": 118
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 'YES', '2nd example'\nassert solution('1 2 3 6') == 'NO', '3rd example'\nassert solution('5 2 6 27') == 'YES', '4th example'\nassert solution('3 3 5 18') == 'YES', '5th example'\n\nfor i in range(int(input())):\n    print(\"YES\" if solution(input()) else \"NO\")\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\nassert solution(\"9 9 9 9\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n1 1 1 1''') == 'NO'\n\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n10 2 1 1''') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'YES'\n\n\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'YES', 'Test #1'\nassert solution('1 2 3 6') == 'NO', 'Test #2'\nassert solution('5 2 6 27') == 'YES', 'Test #3'\nassert solution('3 3 5 18') == 'YES', 'Test #4'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"7 2 7 3 3 1 4\") == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n\n''') == 'YES'\nassert solution('''\n5\n4 3 1 5 3\n\n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n\n''') == 'YES'\nassert solution('''\n5\n4 3 1 5 3\n\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n\n''') == 'NO'\nassert solution('''5\n4 3 2 1 0\n\n''') == 'YES'\nassert solution('''5\n4 3 2 1 0\n\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 2 5 1\n3\n1 2\n1 3\n''') == \"NO\"\nassert solution('''5\n1 2 3 4 5\n2 5 4 3 1\n3 4 5 2 1\n3 5 4 2 1\n1 2 3 4 5\n''') == \"YES\"\nassert solution('''5\n1 2 3 4 5\n3 2 1 4 5\n1 4 2 3 5\n1 5 2 3 4\n''') == \"YES\"\nassert solution('''5\n2 3 5 1\n2 3 1 5\n3 5 1 2\n1 5 2 3\n''') == \"NO\"\nassert solution('''5\n2 3 5 1\n2 3 1 5\n3 5 1 2\n1 5 2 3\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'YES'\nassert solution('5') == 'YES'\nassert solution('7') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '7 2 7 3 3 1 4') == 'YES'\nassert solution(\n    '5 4 3 1 5 3') == 'YES'\nassert solution(\n    '5 0 1 2 3 4') == 'NO'\nassert solution(\n    '5') == 'YES'\nassert solution(\n    '3 1 2 3 4') == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"YES\"\nassert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"4 3 1 5 3\") == \"YES\"\nassert solution(\"5 4 3 2 1\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''\n5\n4 3 1 5 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 2 7 3 3 1 4\n''') == 'YES'\n\nassert solution('''\n5 4 3 2 1 0\n''') == 'YES'\n\nassert solution('''\n0 1 2 3 4\n''') == 'NO'\n\nassert solution('''\n5\n4 3 2 1 0\n''') == 'YES'\n\nassert solution('''\n3\n1 2 3\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''\n5 4 3 2 1 0\n''') == 'YES'\nassert solution('''\n5\n4 3 2 1 0\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '18'\nassert solution('''\n7 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '8'\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\n''') == '8'\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 4') == '18'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '8'\nassert solution('5 3') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"\n",
        "num_ids_2": 89,
        "num_ids_4": 127
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 4') == '18'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"18\", \"Wrong\"\nassert solution(\"5 2\") == \"8\", \"Wrong\"\nassert solution(\"3 2\") == \"-1\", \"Wrong\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 4') == '18'\nassert solution('5 2') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\n\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\n\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test_input_1) == \"6\"\nassert solution(test_input_2) == \"7\"\nassert solution(test_input_3) == \"8\"\nassert solution(test_input_4) == \"7\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '7'\nassert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '6'\nassert solution('3\\n4 3\\n6 7\\n2 2\\n1 6\\n3 5\\n5 2 5') == '-1'\nassert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '7'\n",
        "num_ids_2": 86,
        "num_ids_4": 167
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1 2 3\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2'\n\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '6'\n\nassert solution('''2\n1 6\n3 5\n5 2 5''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10 2\\n1 3\\n3 2\") == \"7\"\nassert solution(\"3\\n10 2\\n1 3\\n3 2\") == \"7\"\nassert solution(\"3\\n10 2\\n1 3\\n3 2\") == \"7\"\nassert solution(\"3\\n10 2\\n1 3\\n3 2\") == \"7\"\nassert solution(\"3\\n10 2\\n1 3\\n3 2\") == \"7\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n\") == \"2\"\nassert solution(\"2\\n10 10\\n3 3\\n5 2 5\\n2 2\\n4 4\\n5 2 5\\n\") == \"-1\"\nassert solution(\"3\\n12 3\\n10 3\\n2 2\\n4 2\\n5 2\\n\") == \"5\"\n",
        "num_ids_2": 88,
        "num_ids_4": 120
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '2'\nassert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5') == '7'\nassert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '6'\nassert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n7 7') == '-1'\n",
        "num_ids_2": 76,
        "num_ids_4": 171
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5 1\") == \"6\"\nassert solution(\"4 2\") == \"7\"\nassert solution(\"6 4 8 5\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"2\"\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"6\"\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"7\"\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n4 8 15 16 23\n\"\"\") == \"5\"\nassert solution(\"\"\"\n12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n\"\"\") == \"0\"\nassert solution(\"\"\"\n15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4 8 15 16 23\n''') == '5'\nassert solution('''\n15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nassert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"12\") == \"0\"\nassert solution(\"12\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 8 15 16 23\\n') == '5'\nassert solution('4 8 4 8 15 16 8 16 23 15 16 42 23 42\\n') == '0'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\nassert solution(\"4 8 15 16 23\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n4 8 15 16 23\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5\\n'\n    '4 8 15 16 23'\n    ) == '5'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n1 2\n3 4\n''') == '1'\nassert solution('''\n4 3\n5 6\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('10') == '91'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n5 5\n23 45\n32 10\n743 20\n1234 999999999 99998\n101100 101000\n''') == '1'\nassert solution('''\n5 5\n22 7\n5 6\n45 42\n3 9\n7 43\n10 4\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"6\") == \"0\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n5 5\\n13 42\\n18 4') == '0'\nassert solution('2\\n5 5\\n13 42\\n18 4') == '3'\nassert solution('3\\n5 5\\n13 42\\n18 4') == '2'\nassert solution('4\\n5 5\\n13 42\\n18 4') == '91'\nassert solution('5\\n5 5\\n13 42\\n18 4') == '92'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution('''\n4\n1\n2\n3\n4\n''') == '1'\nassert solution('''\n3\n5\n2\n1\n''') == '3'\nassert solution('''\n3\n4\n3\n''') == '2'\nassert solution('''\n1\n4\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '0'\nassert solution('5 1') == '1'\nassert solution('1 1') == '1'\n\n------",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n5 5\") == \"0\\n3\"\nassert solution(\"2\\n10 50\") == \"9150\"\nassert solution(\"3\\n1337 420\") == \"92\"\nassert solution(\"4\\n100500 9000\") == \"0\"\nassert solution(\"5\\n123456789 1000000000\") == \"9150\"",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"0\"\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '12339'\nassert solution('8 2\\n7 4\\n10 5\\n17 8\\n99999999\\n2 4\\n') == '0'\nassert solution('7 5\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '12339'\nassert solution('7 5\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '12339'\nassert solution('7 5\\n9999999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n') == '0'\n",
        "num_ids_2": 87,
        "num_ids_4": 157
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"0\"\n\n'''\n\nFor the second test case of the example, the answer is $0 = 5 \\cdot 5$ (thus, $0 \\bmod 5 = 5$). It is obvious that there is no greater integer not exceeding $12345$ which has the remainder $5$ modulo $5$.\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n5\n0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n10\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '5'\nassert solution('''\n10\n0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '15'\nassert solution('''\n10\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '54306'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n3 5 12345\n5 0 4\n10 5 15\n\"\"\") == \"12339\"\nassert solution(\"\"\"\n5\n0 4\n10 5 15\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n0 5\n499999993 9 1000000000\n10 5 187\n\"\"\") == \"999999998\"\nassert solution(\"\"\"\n8\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\"\"\") == \"54306\"\nassert solution(\"\"\"\n2\n0 999999999\n499999993 9 1000000000\n10 5 187\n\"\"\") == \"999999998\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\"\nassert solution(\"2 0 999999999\") == \"999999995\"\nassert solution(\"7 5 187\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"999999998\"\n",
        "num_ids_2": 68,
        "num_ids_4": 103
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n\nprint(solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n'''))\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n10 5 187\n2 0 999999999\n''') == '999999998'\n\nassert solution('''\n1 1 1\n''') == '1'\nassert solution('''\n1 2 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6'\nassert solution() == '8'\nassert solution() == '4'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6\"\nassert solution() == \"8\"\nassert solution() == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\n\n\n\"\"\"\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''\n8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''\n7 3\n1 2 2 3 2 4 5\n''') == '4'\nassert solution('''\n7 4\n1 2 2 3 2 4 5 6\n''') == '6'\nassert solution('''\n7 5\n1 2 2 3 2 4 5 6 7\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\nassert solution('''5 6\n2 3 4 5 2 5''') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '6'\nassert solution('7 2') == '8'\nassert solution('8 3') == '4'\nassert solution('10 3') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"aBC\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399\nprint(solution(stdin))\n",
        "num_ids_2": 410,
        "num_ids_4": 410
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"aBC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 1') == 'aBC'\nassert solution('6 7 5') == 'ZYXWV'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 1') == \"ABC\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"aBC\"\nassert solution(\"3 5\") == \"aABC\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"aBc\"\nassert solution(\"1 2\") == \"aBc\"\nassert solution(\"2 2\") == \"aBC\"\nassert solution(\"3 2\") == \"abc\"",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('4 2 3') == '4 3 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"10 11 12 13 14 15\") == \"10 11 12 13 14 15\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\nABC') == 'bca'\nassert solution('3 5\\nABC') == 'bca'\nassert solution('1 3\\nABC') == 'aC'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3 4 6 1 5 2'\nassert solution('10') == '3 4 6 1 5 2 7 8 9 10'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n', \"Sample Test Failed\"\nassert solution('3\\nmoscow 10\\nkhabarovsk 20\\nmoscow 60\\nkazan 35\\n') == '1\\n2\\n3\\n', \"Sample Test Failed\"\nassert solution('6\\nmoscow 10\\nkazan 50\\nkazan 35\\nkhabarovsk 20\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n', \"Sample Test Failed\"\n",
        "num_ids_2": 118,
        "num_ids_4": 188
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == '3,4,6,1,5,2'\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"1\\n3\\n5\\n4\\n6\\n2\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '3 4 6 1 5 2'\nassert solution('3') == '1 2 3'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\nmoscow 10\nkhabarovsk 20\nmoscow 60\nkazan 35\nmoscow 50\nkazan 20\n''') == '''\n1\n5\n3\n4\n2\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\nprint('You passed!')",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '''3\n4\n6\n1\n5\n2'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 20\nkazan 40\n''') == '3 4 6 1 5 2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('5 100') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1000') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 900') == 'Yes', solution('2 900')\nassert solution('10 0') == 'No', solution('10 0')\n\n--\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"Yes\"\nassert solution(\"3 5\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('1 100') == 'No'\nassert solution('5 10') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 8\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"10 20\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n\"\"\"\n\nN, K = map(int, stdin.readline().split())",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('7 100') == '0.009565217391304'\nassert solution('4 16') == '0.222222222222'\nassert solution('7 6') == '0.0'\n",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('2 10') == '0.145833333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 10''') == '0.145833333333'\nprint(solution('''5 1'''))",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == '0.145833333333'\n\"\"\"\n\nimport math",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n\"\"\"\n\nN, K = map(int, input().split())\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3 10\n    ''') == '0.145833333333'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 10\n\"\"\") == \"0.145833333333\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == '1'\nassert solution(\"SUN\") == '1'\nassert solution(\"MON\") == '2'\nassert solution(\"TUE\") == '3'\nassert solution(\"WED\") == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"WED\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('SUN') == \"1\"\nassert solution('SAT') == \"1\"\nassert solution('WED') == \"2\"\nassert solution('THU') == \"2\"\nassert solution('FRI') == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"SAT\") == \"2\"\nassert solution(\"MON\") == \"1\"\nassert solution(\"TUE\") == \"2\"\nassert solution(\"WED\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"1\"\nassert solution(\"TUE\") == \"1\"\nassert solution(\"WED\") == \"1\"\nassert solution(\"THU\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"1\"\nassert solution(\"THU\") == \"2\"\nassert solution(\"SUN\") == \"4\"\nassert solution(\"WED\") == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 20') == \"30\\n50\"\nassert solution('3 10 20') == \"90\\n170\\n330\"\nassert solution('4 10 20') == \"1290\\n2570\\n5130\\n10250\"\n",
        "num_ids_2": 33,
        "num_ids_4": 58
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\nassert solution(\"3 10 20\") == \"60\\n90\"\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('1 5 10') == '5\\n20\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''2 10 20''') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''5\n1 3 2 1 4\n''') == '4'\nassert solution('''3\n4 1 2\n''') == '0'\nassert solution('''3\n4 1 2\n''') == '4'\nassert solution('''6\n1 3 2 1 4 5\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\nassert solution('''\n3\n4 1 2\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\nassert solution('''\n3\n4 1 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 1 1 4''') == '5'\nassert solution('''5\n1 3 2 1 4''') == '4'\nassert solution('''3\n4 1 2''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('2\\n2 2\\n') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\n\nassert solution('''\n3\n4 1 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('3\\n4 1 2') == '4'\nassert solution('3\\n-1 2\\n') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''5\n1 3 2 1 4\n''') == '4'\nassert solution('''3\n4 1 2\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 3 1 1 4\n''') == '5'\nassert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''3\n4 1 2\n''') == '0'\nassert solution('''1\n1\n''') == '1'\nassert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\\n1 2 1\\nYES\\n100 100 100\\nNO\\nYES\"\nassert solution(\"10\") == \"YES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 2 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n100 100 100\\nYES\\n100 100 100\\nNO\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nNO\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100\\nYES\\n100 100 100",
        "num_ids_2": 1641,
        "num_ids_4": 1641
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 2 3') == 'YES'\nassert solution('5\\n100 100 100') == 'NO'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 3''') == 'YES'\nassert solution('''100 100 100''') == 'YES'\nassert solution('''50 49 49''') == 'YES'\nassert solution('''10 30 20''') == 'YES'\nassert solution('''1 1000000000 1000000000''') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n1 1 1000000000\\n'\nassert solution('''\n5\n3 2 3\n200 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\n3 2 1\\n'\nassert solution('''\n5\n3 2 3\n1 1 1\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\n3 2 1\\n'\nassert solution('''\n5\n3 2 3\n1 1 1\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\n3 2 1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2 3\n100 100 100''') == 'YES'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'NO'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'NO'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 2\n''') == 'YES'\nassert solution('''\n2 2 1\n''') == 'YES'\nassert solution('''\n1 1 3\n''') == 'NO'\nassert solution('''\n1 1 1\n''') == 'YES'\n\nsolution('''\n3 3 1\n''') == 'YES'\n\nsolution('''\n3 3 3\n''') == 'NO'\n\nsolution('''\n10 1 2\n''') == 'YES'\n\nsolution('''\n5 1 2\n''') == 'YES'\n\nsolution('''\n5 1 1\n''') == 'NO'\n\nsolution('''\n1 1 3\n''') == 'YES'\n\nsolution('''\n2 1 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n5\n10\n10 10 10\n''') == \"YES\"\nassert solution('''\n3\n1\n2\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n3\n2 1\n2 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n\"\n\nassert solution('''\n2 4 6\n5 10 5\n12 40 12\n1 1000000000 1000000000\n''') == \"NO\\n1 1 1000000000\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\n\"\n\nassert solution('''\n3 2 3\n10 10 10\n1 1000000000 1000000000\n''') == \"NO\\n1 1 1000000000\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 6\n5 2 1 4 2\n''') == \"4\"\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == \"1\"\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == \"5\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n5 2 6\n5 2 1 4 2\n    \"\"\"\n    ) == \"4\"\nassert solution(\n    \"\"\"\n5 1 4\n4 2 3 4 1\n    \"\"\"\n    ) == \"5\"\nassert solution(\n    \"\"\"\n5 3 3\n1 2 3 1 1\n    \"\"\"\n    ) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1''') == '5'\nassert solution('''5 3 3\n1 2 3 1 1''') == '5'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == \"4\"\nprint(solution(input_string))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2') == '4'\nassert solution('5 1 4\\n4 2 3 4 1') == '1'\nassert solution('5 3 3\\n1 2 3 1 1') == '5'",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\nassert solution('''10 4\nsadfaasdda\na b\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '12'\nassert solution('7 2') == '21'\nassert solution('10 3') == '0'\nassert solution('10 1') == '0'\nassert solution('10 2') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 2\naaaaaaaaaaaaaaaa\na b''') == '12'\nassert solution('''7 1\naaaaaaaa\nb\n''') == '0'\nassert solution('''7 1\naaaaaaaa\nb''') == '0'\nassert solution('''7 1\naaaaaaaa\na''') == '0'\nassert solution('''7 1\naaaaaaaa\naa''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2\\nabacaba\\na b') == '12'\nassert solution('10 3\\nsadfaasdda\\f a d') == '21'\nassert solution('7 1\\naaaaa\\b') == '0'\nassert solution('10 1\\nabacaba\\nabacaba') == '0'\n",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\nabacaba\\nf a d\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaa\") == \"0\"\nassert solution(\"7 2\\nabbcdd\") == \"0\"\nassert solution(\"7 3\\nbaaadaa\") == \"0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 75
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"12\"\nassert solution(\"10 3\") == \"21\"\nassert solution(\"7 1\") == \"0\"\nassert solution(\"20 15\") == \"45\"\nassert solution(\"20 30\") == \"45\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"4 4\") == \"16\"\nassert solution(\"3 2\") == \"7\"\n\nassert solution(\"7 2\") == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\na b c\nc c\n''') == '0'\nassert solution('''5 1\na\n''') == '12'\nassert solution('''10 1\naaaa\n''') == '21'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '12'\n\nassert solution(\"7 2\") == '12'\nassert solution(\"10 3\") == '21'\nassert solution(\"7 1\") == '0'\n\nprint(\"Cool\")",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('1 2 3 -1 -2') == '2'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\\n\"\n    \"5\\n\"\n    \"1 2 3 -1 -2\\n\"\n    \"4\\n\"\n    \"-1 -2 -1 -3\\n\"\n    \"10\\n\"\n    \"-2 8 3 8 -4 -15 5 -2 -3 1\\n\"\n    \"6\\n\"\n    \"1 -1000000000 1 -1000000000 1 -1000000000\\n\"\n) == \"2\\n\"\nassert solution(\n    \"4\\n\"\n    \"5\\n\"\n    \"1 2 3 -1 -2\\n\"\n    \"4\\n\"\n    \"-1 -2 -1 -3\\n\"\n    \"10\\n\"\n    \"-2 8 3 8 -4 -15 5 -2 -3 1\\n\"\n    \"6\\n\"\n    \"1 -1000000000 1 -1000000000 1 -1000000000\\n\"\n) == \"6\\n\"\nassert solution(\n    \"4\\n\"\n    \"5\\n\"\n    \"1 2 3 -1 -2\\n\"\n    \"4\\n\"\n    \"-1 -2 -1 -3\\n\"\n    \"10\\n\"\n    \"-2 8 3 8 -4 -15 5 -2 -3 1\\n\"\n    \"6\\n\"\n    \"1 -1000000000 1 -1000000000 1 -1000000000\\n\"\n) == \"-2999999997\\n\"\nassert solution(\n    \"4\\n\"\n    \"5\\n\"\n    \"1 -1000000000 1 -1000000000 1 -1000000000\\n\"\n    \"4\\n\"\n    \"-1 -2 -1 -3\\n\"\n    \"10\\n\"\n    \"-2 8 3 8 -4 -15 5 -2 -3 1\\n\"\n    \"6\\n\"\n    \"1 -1000000000 1 -1000000000 1 -1000000000\\n\"\n) == \"1\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n4\\n-1\\n-2') == '2'\nassert solution('4\\n5\\n1 2 3 -1 -2') == '2'\nassert solution('10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '-2999999997'\n\nprint(solution(*(input().split())))\n",
        "num_ids_2": 43,
        "num_ids_4": 74
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''10\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1 -2 -3\n1\n-1",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"6\"\nassert solution(\"6\") == \"-2999999997\"\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''\n5\n1 -1000000000 1 -1000000000 1 -1000000000\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nprint(solution(input()))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\\n\") == \"2\"\nassert solution(\"4\\n-1 -2 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\\n\") == \"6\"\nassert solution(\"4\\n-1 -2 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\\n\") == \"2999999997\"",
        "num_ids_2": 137,
        "num_ids_4": 200
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-1'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 2') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1\\n1 2\\n1 3\\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n",
        "num_ids_2": 96,
        "num_ids_4": 176
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1\\n1 2\\n1 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"3 5\"\nassert solution(\"4 6\") == \"4 1\"\nassert solution(\"8 9\") == \"3 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_small) == example_output_small\nassert solution(example_input) == example_output\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\nprint(solution(input_))\n\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\") == \"4 1\\n1 2\\n1 3\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"40\"\nassert solution(input()) == \"41664916690999888\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('3\\n2') == '40'\nassert solution('4\\n2') == '41664'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1\n5\n3\n4\n''') == '0'\nassert solution('''\n3\n1\n3\n4\n3\n''') == '40'\nassert solution('''\n3\n1\n3\n4\n3\n''') == '41664916690999888'\nassert solution('''\n3\n1\n10\n4\n''') == '80'\nassert solution('''\n3\n1\n1000000000\n4\n''') == '144'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4\n5\n2 4 1 4\n2 3 3 3''') == '0'\nassert solution('''5\n5\n3\n1 2 1 3\n1 2 2 3''') == '41664916690999888'\nassert solution('''10\n20\n30\n1 4 1 4 1 4 1 4 1 4 1''') == '40'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '40'\nassert solution('4') == '41664916690999888'\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 1526
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '40'\nassert solution('5') == '41664916690999888'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n5\n499993\n\"\"\") == \"40\"\nassert solution(\"\"\"\n2\n3\n499993\n\"\"\") == \"40\"\nassert solution(\"\"\"\n3\n5\n499993\n\"\"\") == \"40\"\nassert solution(\"\"\"\n4\n5\n1000000000\n\"\"\") == \"40\"\nassert solution(\"\"\"\n5\n5\n10000001\n\"\"\") == \"40\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n5\n499993\n''') == '0'\nassert solution('''\n3\n1\n5\n499993\n''') == '40'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1\n    5\n    1000000000''') == '40'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n5\n499993\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n5\n10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n5\n10\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == stdin\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nprint(solution(input()))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n2 4 5 7\\n') == '1 1 2 -1 1 1 3 1 1', 'First example'\nassert solution('10\\n6 5 7 6 7 5 4 4 6 4\\n') == '1 1 1 2 2 1 1 3 1 1', 'Second example'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 1 2 -1'\nassert solution('1') == '1 -1 -1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 1 1 2 -1 1 1 3 1 1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n\nassert solution('''\n10\n7 1 1 1 1 1 1 2 1 1\n''') == '3 4 3 3 4 3 2 1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''\n10\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n12\n8\n''') == 'YES\\n2 4 8'\nassert solution('''\n2\n8\n12\n''') == 'NO\\nNO\\nNO\\nYES'\nassert solution('''\n3\n5\n123\n''') == 'YES\\n3 5 823'\nassert solution('''\n5\n8\n123\n1\n''') == 'NO\\nNO\\nNO\\nNO\\nNO'\nassert solution('''\n5\n1\n2\n''') == 'NO\\nNO\\nNO\\nNO\\nYES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10\n3\n1\n10\n''') == 'NO'\n\nassert solution('''\n2\n16\n4\n2\n12\n''') == 'YES'\n\nassert solution('''\n5\n16\n4\n2\n12\n''') == 'YES'\n\nassert solution('''\n5\n10\n4\n2\n12\n''') == 'YES'\n\nassert solution('''\n5\n10\n4\n2\n12\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('64') == '2 4 8'\nassert solution('32') == 'NO'\nassert solution('97') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n3\n6\n6\n1\n2\n''') == 'YES'\nassert solution('''4\n4\n2\n4\n1\n3\n''') == 'YES'\nassert solution('''3\n4\n2\n3\n1\n''') == 'NO'\nassert solution('''3\n1\n1\n2\n''') == 'YES'\nassert solution('''4\n2\n2\n2\n1\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\nassert solution('''\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution('''\n8\n7\n8\n4\n8\n8\n''') == 'NO'\nassert solution('''\n10\n7\n8\n4\n8\n8\n8\n''') == 'YES'\nassert solution('''\n6\n7\n8\n4\n8\n8\n''') == 'NO'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    4\n    1 2 3 4\n    1\n    0\n    ''') == 'YES'\n\nassert solution('''\n    5\n    10 5 1 2\n    5\n    1\n    1\n    0\n    ''') == 'NO'\n\nassert solution('''\n    5\n    8 12 13 8\n    8\n    1\n    1\n    0\n    ''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5\n123\n1\n2\n''') == \"YES\"\nassert solution('''\n7\n5\n2\n2\n1\n1\n1\n''') == \"YES\"\nassert solution('''\n7\n3\n8\n''') == \"NO\"\nassert solution('''\n10\n12\n2\n5\n8\n2\n''') == \"NO\"\nassert solution('''\n7\n2\n1\n2\n3\n5\n''') == \"NO\"\n'''\nfrom itertools import permutations\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n\n    a_b_c = False\n    for i in permutations([2,3,5],3):\n        a,b,c = i\n        if n == a*b*c:\n            print(\"YES\")\n            a_b_c = True\n            break\n    if not a_b_c:\n        print(\"NO\")\n'''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\n\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10\nababab\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\naaa\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\nbbbb\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\nbbbb\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nbbbb\") == \"abba\"\nassert solution(\"6\\nababab\") == \"ba\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'abba'\nassert solution('5') == 'abba'\nassert solution('6') == 'abba'\nassert solution('7') == 'abba'\nassert solution('8') == 'abba'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'a'\nassert solution('3') == 'ba'\nassert solution('5') == 'abba'\nassert solution('6') == 'ababab'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"abba\"\nassert solution(\"4\") == \"abba\"\nassert solution(\"6\") == \"ababab\"\nassert solution(\"10\") == \"ababab\"\nassert solution(\"100\") == \"ababab\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"0\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nbbbb''') == '2'\nassert solution('''6\nababab''') == '0'\nassert solution('''2\naa''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"15\"\nassert solution(\"1\") == \"9\"\nassert solution(\"5\") == \"9\"\nassert solution(\"2 2\") == \"15\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2\n1 4\n2 3\n3 1\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '9'\nassert solution(input('\\n')) == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == \"15\"\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('4\\n2 1\\n1 0\\n2 0\\n3 2\\n1 1\\n') == '15'\nassert solution('2\\n2 1\\n1 0\\n2 0\\n3 2\\n1 1\\n') == '15'\n",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"2 1\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2''') == '15'\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == \"15\"\nassert solution('''5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == \"9\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\n\n\"\"\"\n\n\"\"\"\ncode:",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n\n\"\"\"\n\nn = int(stdin.readline())\na, b = map(int, stdin.readline().split())\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.166666666666666'\nassert solution('3') == '0.416666666666666'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"4\") == \"1.000000000000\"\nassert solution(\"5\") == \"1.000000000000\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1.000000000000'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1.000000000000'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0.8, 1, 1.2\n1, 1, 1\n1, 1, 1''') == '1.000000000000'\nassert solution('''5\n1, 1, 1\n1, 1, 1\n1, 1, 1\n1, 1, 1\n1, 1, 1''') == '0.96'\nassert solution('''5\n1, 2, 2\n2, 2, 2\n2, 2, 2\n2, 2, 2\n2, 2, 2''') == '2.000'\n''' == '0.96000000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1.0000000000000000000000000001\"\nassert solution(\"4\") == \"0.99999999999999999999999999999999999999999999999999999\"\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('4') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2.00000000000000\"\nassert solution(\"5\") == \"2.00000000000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"1.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\nassert solution(\"2\") == \"1.000000000000\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"3\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '1+2'\nassert solution('3') == '1+2'\n\nassert solution('4') == '1+2'\nassert solution('5') == '1+2'\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'Hello World'\nassert solution('1') == 'Hello World'\nassert solution('2') == 'Hello World'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Hello World'\nassert solution(input('2\\n')) == '2+2'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Hello World\"\nassert solution(input(\"2\")) == \"1+1\"\nassert solution(input(\"1\")) == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"Hello World\"\n\nassert solution(\"2\") == \"2+2\"\nassert solution(\"1\") == \"1+1\"\nassert solution(\"0\") == \"\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"12\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+2\"\n\nfor N in range(1, 3):\n    print(solution(str(N)))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"Hello World\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 3\n\"\"\") == \"3333\"\nassert solution(\"\"\"\n4 4\n\"\"\") == \"4444\"\nassert solution(\"\"\"\n10 10\n\"\"\") == \"0001\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n''') == '3333'\n\nassert solution('''\n3 3\n''') == '3333'\n\nassert solution('''\n8 7\n''') == '1111'\n\nassert solution('''\n8 7\n''') == '3333'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3333'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('3 4 1 2') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3333'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"4 3\") == \"3333\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"44\"\nassert solution(\"3 4\") == \"3444\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '3333'\nassert solution('4 4') == '4444'\nassert solution('3 3') == '3333'\nassert solution('3 2') == '2333'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == 'None'\nassert solution(1) == '1'\nassert solution(2) == '11'\nassert solution(3) == '333'\nassert solution(4) == '4444'\n\n\"\"\"\n\nfrom math import log10\n\na, b = map(int, input().split())\n\nprint(str(a * int(log10(b)) + a) if a < b else str(b * int(log10(a)) + b))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234\") == \"1234\", \"failed test 1\"\nassert solution(\"123\") == \"123\", \"failed test 2\"\nassert solution(\"\") == \"\", \"failed test 3\"\nassert solution(\"12\") == \"\", \"failed test 4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 59
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == 'b'\nassert solution('b') == 'c'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'a'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'b'\n\n\"\"\"\n\nimport sys\n\nC = sys.stdin.readline().strip()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"c\"\nassert solution(\"c\") == \"d\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'b'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"b\"\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"z\") == \"a\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'\nassert solution('A') == 'B'\nassert solution('Z') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"abc\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('oder atc') == 'atcoder'\n\"\"\"\n\nstring = input()\nstring += input()\nprint(string)\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'atcoder'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('oder', 'atc') == 'atcoder'\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"atcoder\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 5 7 8 2\") == \"0\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"1000000\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 5 7 8 2\\n') == '0'\nassert solution('6\\n5 1 2 4 6 3\\n') == '1000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n1000000 1000000') == '1000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '1000000'\nassert solution('2\\n1000000 1000000') == '1000000'\n",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '0'\nassert solution('7\\n1000000 1000000') == '1000000'\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '1000000'\nassert solution('2\\n1000000 1000000') == '1000000'\nassert solution('1\\n1000000 1000000') == '1000000'\nassert solution('0') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1000000 1000000\") == \"1000000\"\n",
        "num_ids_2": 19,
        "num_ids_4": 33
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 1\n1 2''') == '1'\nassert solution('''3 3 1\n1 2 3\n''') == '3'\nassert solution('''5 5 2\n3 5 4 4\n''') == '3'\nassert solution('''8 2 1\n1 2 3 4 5 6 7\n''') == '6'\nassert solution('''1 1 3\n2 3 5 6\n''') == '3'\n\ninput_file = open('input.txt')\ninput_data = input_file.read()\ninput_file.close()\n\nprint(solution(input_data))",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('7 4 2 1') == '6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution(\"2 1 100 99\") == \"6\"\nassert solution(\"1 1 100 99\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 100 99\") == \"5\"\nassert solution(\"7 4 2 1\") == \"6\"\nassert solution(\"2 2 2 1\") == \"1\"\nassert solution(\"2 2 1 1\") == \"1\"\nassert solution(\"6 6 1 1\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''\n1 1 100 99\n100\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''\n1 1 100 99\n100\n''') == '1'\nassert solution('''\n7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\nassert solution('''\n1 1 100 99\n1 2 100 99\n''') == '2'\nassert solution('''\n1 1 100 99\n1 1 100 99\n''') == '1'\n\nstdin = open('input.txt').read()\nprint(solution(stdin))\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 10 50 12 1 8\") == \"6\"\nassert solution(\"1 1 100 99\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"7 10 50 12 1 8\") == \"6\"\nassert solution(\"1 1 100 99\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n7 10 50 12 1 8') == '6'\nassert solution('6\\n7 10 50 12 1 8') == '6'\n\n\"\"\"\n\nfrom typing import List\nimport sys\nimport math\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\n\nassert solution('''\n6 2\n0 1 2 3\n''') == '0 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6 3\",\n    \"3 2 0 6 10 12\"\n    ) == \"3 2 0 7 10 14\"\nassert solution(\n    \"4 2\",\n    \"0 1 2 3\"\n    ) == \"0 1 2 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3') == '3'\nassert solution('4 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n4 2 2 4 2\n''') == '1'\nassert solution('''\n5 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n7 3\n0 1 2 3 4 5 6\n''') == '1'\nassert solution('''\n6 3\n4 2 0 6 10 12\n''') == '3'\nassert solution('''\n6 4\n4 2 0 6 10 12\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 3\n3 2 0 6 10 12\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 2\n0 1 2 3\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3\n\nassert solution('''\n4 2\n0 1 2 3\n''') == '0 1 2 3'\n\nprint(solution('''\n1 1\n1 1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12') == '3 2 0 7 10 14'\nassert solution('4 2\\n0 1 2 3') == '0 1 2 3'\nassert solution('1000000000 729000000\\n10000000 - 729000000') == '0'\n",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '3 2 0 6 10 12'\nassert solution('4 2') == '0 1 2 3'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12') == '3 2 0 7 10 14'\nassert solution('4 2\\n0 1 2 3') == '0 1 2 3'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n3\n3\n2\n\"\"\") == \"20\"\n\nassert solution(\"\"\"\n2\n2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n1\n3\n2\n2\n\"\"\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6\\n'\n                '1 2 0 2 0\\n'\n                '2 4\\n'\n                '3 3\\n'\n                '1 5\\n'\n                '1 2\\n'\n                '1 5\\n'\n                '2 3\\n') == '8'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == \"8\"\n\nassert solution([]) == \"0\"\n\nassert solution([1]) == \"1\"\n\nassert solution([1, 2, 0, 2, 0]) == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 47
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"8\"\n\nassert solution('''\n5 3\n4 2\n2 5\n''') == \"20\"\n\nassert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"20\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3') == '8'\nassert solution('3 4\\n3 3') == '4'\nassert solution('1 5\\n1 2') == '5'\nassert solution('5 4\\n4 2') == '2'\n",
        "num_ids_2": 41,
        "num_ids_4": 71
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n'''\n) == '8'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '8'\nassert solution('3 3') == '2'\nassert solution('5 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4') == '8'\nassert solution('5 3\\n4 3\\n2 5') == '20'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"8\"\n\nassert solution('''\n5 3\n4 2\n2 5\n''') == \"20\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5''') == 'NO'\n\nassert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5''') == 'YES'\n\nassert solution('''1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\n\nassert solution('''1\n1 1 1 1 1 1 1 1\n2\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''1\n1 1 1 1 1 1 1 1\n2\n10000 10000 10000 10000\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('1') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 100 100 100\n''') == 'YES'\nassert solution('''3\n3 3 3 3\n3\n''') == 'NO'\nassert solution('''3\n3 3 3 3\n3\n''') == 'NO'\n\n'''\nConsider the example of the above input.\n\nFirst, let's see if the first query can create exactly 3 rectangles of equal area or not.\n\nIn this example, the first query asks for a size of the first rectangle.\nSo, the answer to this query is 3.\n\nThe first, second and third queries ask for the lengths of the sides of rectangles.\nSo, the answer to the third query is NO.\n\nBecause the lengths of the sides of the 3 rectangles are not equal, the answer is NO.\n\nNow, let's see if the second query can create exactly 3 rectangles of equal area or not.\nSo, the second query asks for the lengths of the sides of the 4 rectangles.\nSo, the answer to this query is 2.\n\nThe first, third and fourth queries ask for the lengths of the sides of rectangles.\nSo, the answer to the fourth query is NO.\n\nBecause the lengths of the sides of the 4 rectangles are not equal, the answer is NO.\n\nNow, let's see if the third query can create exactly 3 rectangles of equal area or not.\nSo, the third query asks for the lengths of the sides of the 5 rectangles.\nSo, the answer to this query is NO.\n\nBecause the lengths of the sides of the 5 rectangles are not equal, the answer is NO.\n\nHence, the answer is NO.\n\nIf you see the fourth query, the answer is YES, because the 4 rectangles are equal, so it is true.\n\nIf you see the fifth query, the answer is NO.\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n\nprint(solution(input()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1 1 10 10\\n2') == 'YES'\nassert solution('5\\n10\\n1 1 1 1 1 1 1 1\\n2') == 'YES'\nassert solution('5\\n1\\n1 1 1 1 1 1 1\\n2') == 'NO'\nassert solution('5\\n10000 10000 10000 10000\\n2') == 'YES'\nassert solution('5\\n10000 10000 10000 10000\\n2') == 'NO'\n",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution('''\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n''') == \"YES\"\nassert solution('''\n1\n1\n1\n''') == \"NO\"\n'''",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100000 100000 100000 100000\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"\n",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 10 5\") == \"3\"\nassert solution(\"6 15 18\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n\n''') == '3 1\nassert solution('''\n6\n1 5 12 13 2 15\n\n''') == '7 2\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\n''') == '7486 3\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'",
        "num_ids_2": 41,
        "num_ids_4": 67
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5\\n'\n    '1 1 3 4 2'\n    ) == '3 1'\nassert solution(\n    '6\\n'\n    '1 5 12 13 2 15'\n    ) == '7 2'\nassert solution(\n    '10\\n'\n    '1 2 5 129 185 581 1041 1909 1580 8150'\n    ) == '7486 3'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '7486 3'\nassert solution(input) == '7486 3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 1 3 4 2\n\"\"\") == \"3 1\"\nassert solution(\"\"\"\n6\n1 5 12 13 2 15\n\"\"\") == \"7 2\"\nassert solution(\"\"\"\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\"\"\") == \"7486 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"7486 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3 1\"\nassert solution(\"6\") == \"7 2\"\nassert solution(\"10\") == \"7486 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '4'\nassert solution('10') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == \"2\"\nassert solution('7') == \"1\"\nassert solution('9876') == \"4\"\nassert solution('10000') == \"1\"\nassert solution('10') == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '5'\nassert solution('100') == '6'\nassert solution('1000') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n5009\\n7\\n9876\\n10000\\n10') == '2\\n5000 9\\n1\\n7 \\n4'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n5009\n7\n9876\n10000\n10''') == \"2\"\nassert solution('''3\n20\n7\n5''') == \"2\"\nassert solution('''4\n10\n100\n50\n20''') == \"3\"\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10''') == \"4\"\nassert solution('''8\n5\n10\n5\n5''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2'\nassert solution('1') == '1'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5') == '2\\n3\\n4\\n5\\n7'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7') == '1\\n7\\n7\\n7\\n7\\n7\\n7'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7\\n7') == '1\\n7\\n7\\n7\\n7\\n7\\n7\\n7'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7\\n7') == '1\\n7\\n7\\n7\\n7\\n7\\n7\\n7'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7\\n7') == '1\\n7\\n7\\n7\\n7\\n7\\n7\\n7'\n",
        "num_ids_2": 71,
        "num_ids_4": 175
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 2 1 3'\n\nassert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1'\n\nassert solution('''\n6\n4 6 2 1 5 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 2 2 1 2 1 1'\n\nassert solution('''\n6\n4 6 2 1 5 3\n2\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 2 1 2 3 1'\n\nassert solution('''\n6\n4 6 2 1 5 3\n2\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 2 1 2 3 1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 3 3 1 2 3 1 3 4'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5\\n5 1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution(\n    '5\\n5 1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n5\\n5 1 2 4 3\\n'\nassert solution(\n    '5\\n5 1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n5\\n5 1 2 4 3\\n'\n\nsolution('''6\n5\n5 1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''')\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == \"3 3 3 2 1 3\"\nassert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == \"1 2 3 4 1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1 1 1 1 1\"\nassert solution(\"3\") == \"3 3 3\"\nassert solution(\"4\") == \"2 2 2 2\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 2 3 2 1 3'\nassert solution('''\n4\n1 2 3 4\n2\n3 3 2 1\n3 3 1 2\n4 4 1 2\n''') == '2 2 2 2 2'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1 1 1 1 1\\n3 3 3\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1 1 1 1 1\\n3 3 3 2 1 3\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1 1 1 1 1\\n3 3 3 2 1 3\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1 1 1 1 1\\n3 3 3 2 1 3\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1 1 1 1 1\\n3 3 3 2 1 3\"\n",
        "num_ids_2": 77,
        "num_ids_4": 157
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == \"1 1 1 1 1\"\nassert solution('6') == \"3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n4 3 1 2\\n5') == '1 2 3 4 5'\nassert solution('5\\n5 1 2 4 3') == '1 2 3 4 5'\nassert solution('4\\n4 3 1 2') == '2 3 3 2 1'\nassert solution('6\\n6 2 1 5 3') == '1 2 3 4 5'\n\n\n--------------------------------------------------------------------------------------------------------------------------\n----------------------------------BINARY SEARCH TREE------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n\nhttps://leetcode.com/problems/find-mode-in-binary-search-tree/solution/\n\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n\nclass Solution:\n    def findMode(self, root: 'Node') -> List[int]:\n        if root is None:\n            return []\n        \n        max_count = 0\n        max_val = None\n        curr_count = 0\n        curr_val = None\n        \n        q = [root]\n        \n        while q:\n            node = q.pop(0)\n            curr_count = 0\n            curr_val = node.val\n            if node.left:\n                q.append(node.left)\n                if node.left.val == curr_val:\n                    curr_count += 1\n            if node.right:\n                q.append(node.right)\n                if node.right.val == curr_val:\n                    curr_count += 1\n            if curr_count > max_count:\n                max_count = curr_count\n                max_val = curr_val\n            \n        \n        if max_count == 0:\n            return []\n        \n        freq = 1\n        curr_count = 0\n        curr_val = None\n        \n        q = [root]\n        \n        while q:\n            node = q.pop(0)\n            curr_count = 0\n            curr_val = node.val\n            if node.left:\n                q.append(node.left)\n                if node.left.val == curr_val:\n                    curr_count += 1\n            if node.right:\n                q.append(node.right)\n                if node.right.val == curr_val:\n                    curr_count += 1\n            if curr_count == max_count:\n                freq += 1\n                if freq > 1:\n                    return []\n            else:\n                freq = 1\n                curr_val = None\n            \n        return [max_val]\n        \n\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 2 2 2 4 4 '\n\nassert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 3 4 4 '\n\nassert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 2 2 2 4 4 '",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '3'\nassert solution('''2\n1 2\n3\n1 1''') == '1'\nassert solution('''6\n1 2 3 4 5 6\n4\n1 2 3 4''') == '2'\nassert solution('''4\n1 2 3 4\n5\n1 2 3''') == '2'\nassert solution('''6\n1 2 3 4 5 6\n4\n1 2 3 4''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == \"2\\n\"\nassert solution('2') == \"1\\n\"\nassert solution('3') == \"1\\n\"\nassert solution('4') == \"0\\n\"\nassert solution('5') == \"1\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n4\\n1 2 2\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('10') == '1'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2\n3\n4''') == '3'\n\nassert solution('''2\n1 2\n3\n4''') == '4'\n\nassert solution('''6\n1 2 3 4 5 6\n3\n1 2 2\n4\n1 1 1\n5\n2 3 5\n2\n3\n5\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\nassert solution('''2\n4\n1 1\n4\n1 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5\\n3\\n1 2 2') == '2\\n1\\n1'\nassert solution('3\\n1 2 3 4 5\\n3\\n1 2 2') == '1\\n1\\n1'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\") == \"3\\n2\\n1\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10 4\n10 4 10 15\n1 2\n4 3\n\"\"\") == \"\"\"0 0 1 2 \n\"\"\".strip()\n\nassert solution(\"\"\"\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\"\"\") == \"\"\"5 4 0 5 3 3 9 0 2 5 \n\"\"\".strip()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"5 4 0 5 3 3 9 0 2 5\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 \n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4') == '5 4 0 5 3 3 9 0 2 5'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 2\\n\"\n    \"10 4 10 15\\n\"\n    \"1 2\\n\"\n    \"4 3\\n\"\n) == \"0 0 1 2\"\n\nassert solution(\n    \"10 4\\n\"\n    \"5 4 1 5 4 3 7 1 2 5\\n\"\n    \"4 6\\n\"\n    \"2 1\\n\"\n    \"10 8\\n\"\n    \"3 5\\n\"\n) == \"5 4 0 5 3 3 9 0 2 5\"\n\nprint(solution(\n    \"4 2\\n\"\n    \"10 4 10 15\\n\"\n    \"1 2\\n\"\n    \"4 3\\n\"\n))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \n\nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 ",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 \n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"0 0 1\"\nassert solution(\"10 4\") == \"0 0 1 2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n10 4 10 15\\n4 6\\n2 1\\n10 8\\n3 5') == '5 4 0 5 3 3 9 0 2 5', 'First'\nassert solution('4 2\\n10 4 10 15\\n4 6\\n2 1\\n10 8\\n3 5') == '0 0 1 2 ', 'Second'\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 2 4 3\n1 3 2 4\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n1 2 3\n1 3 2\n''') == \"YES\"\nassert solution('''\n3 2\n1 2 3\n1 3 4\n''') == \"NO\"\nassert solution('''\n3 3\n1 2 3\n1 3 4\n''') == \"NO\"\n'''\n\nn, k = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\n\np.sort()\nq.sort()",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == 'YES', 'test 1 fail'\nassert solution('1 2') == 'NO', 'test 1 fail'\n\n'''\n\n\nfrom collections import deque\n\n\nclass Solution:\n    def restoreString(self, s, p, q):\n        p = deque(p)\n        q = deque(q)\n        res = []\n        while len(p) > 0 and len(q) > 0:\n            if p[0] > q[0]:\n                return 'NO'\n            res.append(s[p.popleft()])\n            res.append(s[q.popleft()])\n        while len(p) > 0:\n            res.append(s[p.popleft()])\n        while len(q) > 0:\n            res.append(s[q.popleft()])\n        return ''.join(res)\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"NO\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 2 3\n1 3 2\n''') == 'YES'\n\nassert solution('''\n3 2\n1 2 3\n1 3 4\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 2 3\n1 3 2\n''') == 'NO'\nassert solution('''\n3 2\n1 2 3\n1 3 2\n''') == 'YES'\nassert solution('''\n3 2\n1 3 2\n1 3 2\n''') == 'YES'\nassert solution('''\n4 3\n1 2 3 4\n1 3 4 2\n1 4 3 2\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n1 2 3\n1 3 2\n''') == \"YES\"\n\n\nassert solution('''\n5 2\n1 3 4 2\n1 3 4 2\n''') == \"NO\"\n\n\nassert solution('''\n6 3\n3 5 6 4 1\n1 3 4 2\n''') == \"NO\"\n\n\nassert solution('''\n6 2\n3 5 6\n1 3 4 2\n''') == \"NO\"\n\n\nassert solution('''\n10 1\n1 1 2 3 4 5 6 7 8 9 10\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'NO'\nassert solution('1 2 3') == 'YES'\nassert solution('1 3 2') == 'YES'\nassert solution('1 3 2') == 'YES'\nassert solution('3 2') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 3 4\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('1 2 3') == 'abb'\nassert solution('1 3 2') == 'NO'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n20 10 20\\n') == '43'\nassert solution('4\\n10 10 10 10 10\\n') == '69'\nassert solution('6\\n5 4 5 4 4 5\\n') == '69'\nassert solution('2\\n1 4\\n') == '3'\nassert solution('0\\n5\\n') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"43\"\nassert solution(input_2) == \"6 1 3 5 2 4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('6') == '69'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '43\\n2 1 4 3 5 2 4'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n20 10 20\n\"\"\") == \"43\"\n\nassert solution(\"\"\"4\n10 10 10 10\n\"\"\") == \"69\"\n\nassert solution(\"\"\"6\n5 4 5 4 4 5\n\"\"\") == \"6 1 3 5 2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n20 10 20\n''') == \"43\"\nassert solution('''\n4\n10 10 10 10\n''') == \"64\"\nassert solution('''\n6\n5 4 5 4 4 5\n''') == \"69\"\nassert solution('''\n2\n1 4\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '69'\nassert solution('2') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n20 10 20\n''') == \"43\"\n\nassert solution('''4\n10 10 10 10\n''') == \"64\"\n\nassert solution('''6\n5 4 5 4 4 5\n''') == \"69\"\n\nassert solution('''2\n1 4\n''') == \"3\"\n\nassert solution('''2\n1 4\n''') == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2\"\nassert solution('3') == \"1\"\nassert solution('4') == \"4\"\nassert solution('5') == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nassert solution(\"5\\n1 1 2 3 4 4\") == \"4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2 5 1 3') == '3'\nassert solution('5 1 3 2 4') == '3'\nassert solution('10 1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '18'\nassert solution
        "num_ids_2": 28,
        "num_ids_4": 78
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5,4,2,3,1]) == '3'\nassert solution([2,1,3,4,5]) == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4 2 5 1 3''') == '''3'''\nassert solution('''1\n2''') == '''0'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 2 5 1 3') == '3'\nassert solution('5 5 3 5 4 2 1') == '3'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"1\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"10\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"0\"\nassert solution(\"0\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n4 2 5 1 3') == \"3\"\nassert solution('5\\n4 2 5 1 3') == \"3\"\nassert solution('5\\n4 2 5 1 3') == \"3\"\nassert solution('5\\n4 2 5 1 3') == \"3\"\nassert solution('5\\n4 2 5 1 3') == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 3 3 3\\n') == '1'\nassert solution('5\\n1 2 1 3 3\\n') == '4'\n\n\"\"\"\n\nn = int(input())\ninput_array = list(map(int, input().split()))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4\\n\"\n    \"3 3 3 3\\n\"\n    ) == \"1\"\nassert solution(\n    \"3\\n\"\n    \"3 3 3 3\\n\"\n    ) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 3 3 3\\n\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n3 3 3 3\n''') == '1'\nassert solution('''5\n3 1 1 2 4\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n4') == '1'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('6\\n1 2 3 4 5 6') == '2'\nassert solution('13\\n1 2 2 3 3 4 3 5 5 6 6 7 7 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9') == '11'\n",
        "num_ids_2": 29,
        "num_ids_4": 90
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3 3 3 3\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 3 3 3\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 4 3 1\\n') == '1'\nassert solution('5\\n1 2 3\\n') == '4'\nassert solution('5\\n1 2 3\\n') == '3'\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 2 3 4 5') == '1'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('0 2 3 4 5') == '3'\nassert solution('0 1 2 3 4 5') == '2'\nassert solution('1 1 2 3 4 5') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 0 0 0 0\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '1', \"Should be '1'\"\nassert solution('0 0 0 0 0') == '0', \"Should be '0'\"\nassert solution('1 1 1 1 1') == '0', \"Should be '0'\"\nassert solution('1 1 1 1 1') == '0', \"Should be '0'\"\nassert solution('0 0 0 0 1') == '0', \"Should be '0'\"\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"2 1 3 4 5\") == \"2\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 0 0 0 0\") == \"5\"\nassert solution(\"5 5 5 5 5\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"2 2 2 3 4\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"20 20\") == \"0\"\nassert solution(\"30 30\") == \"0\"\nassert solution(\"80 80\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 5]) == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nassert solution('10 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\nassert solution('2 10') == '10'\nassert solution('5 12') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n\"\"\"\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"10 5\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 10 100\\n\") == \"Yes\"\nassert solution(\"2 20 100\\n\") == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"No\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"Yes\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 10 100\n''') == 'Yes'\nassert solution('''\n4\n1 100 2 2\n''') == 'Yes'\nassert solution('''\n2\n1 2\n''') == 'No'\nassert solution('''\n1\n1\n''') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 10 100\n''') == 'Yes'\nassert solution('''1\n1 10 100\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('2 1 3') == 'No'\nassert solution('3 1 2') == 'Yes'\nassert solution('4 1 2 3') == 'No'\nassert solution('5 1 2 3 4') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Yes'\nassert solution('1') == 'No'\nassert solution('4') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 10 100\n''') == 'Yes'\nassert solution('''2\n1 2\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''yx\naxy''') == 'Yes'\nassert solution('''aabcdefg''') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"xy\") == \"No\"\nassert solution(\"yy\") == \"Yes\"\nassert solution(\"yx\") == \"Yes\"\nassert solution(\"x\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('axx') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 15 1\") == \"YES\"\nassert solution(\"7 16 1\") == \"NO\"\nassert solution(\"7 16 1\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 2') == 'NO'\nassert solution('7 5 3') == 'NO'\n\"\"\"\n\nfrom math import gcd\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 7\") == \"YES\"\nassert solution(\"10 1 7\") == \"NO\"\nassert solution(\"9 1 7\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 7 1') == 'YES'\nassert solution('15 10 10') == 'NO'\nassert solution('10 20 10') == 'YES'\nassert solution('10 20 20') == 'YES'\nassert solution('10 20 30') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 2 1\") == \"NO\"\nassert solution(\"2 1 2\") == \"YES\"\nassert solution(\"2 3 3\") == \"YES\"\nassert solution(\"4 5 5\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 2 1') == 'NO'\nassert solution('1 2 1') == 'YES'\nassert solution('8 1 1') == 'NO'\nassert solution('1 2 2') == 'NO'\n\n---\n\na=int(input(\"enter a value:\"))\nb=int(input(\"enter b value:\"))\nc=int(input(\"enter c value:\"))\nd=a%b\ne=a%c\nf=d+e\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('1 0 0') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n\"\"\"\n\nfrom math import gcd\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 4 5\n''') == 'YES'\n\nassert solution('''\n3 5 1\n''') == 'NO'\n\nassert solution('''\n4 6 1\n''') == 'NO'\n\nassert solution('''\n7 7 1\n''') == 'YES'\n\nassert solution('''\n16 17 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == '1\\n'\nassert solution('1\\n4') == '1\\n'\nassert solution('1\\n5') == '1\\n'\nassert solution('2\\n4') == '1\\n'\nassert solution('2\\n6') == '1\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"10 20\") == \"160\"\nassert solution(\"10 20\") == \"160\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"3 4 5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1, 1) == 1\nassert solution(2, 1) == 1\nassert solution(1, 2) == 1\nassert solution(2, 2) == 2\nassert solution(3, 2) == 2\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('10 10 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 1') == '3'\nassert solution('10 10 10') == '10'\nassert solution('3 3 1') == '2'\nassert solution('1 1 1') == '1'\nassert solution('3 3 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('10 5 1') == '2'\n\"\"\"\n\nX, Y, Z = list(map(int, input().split()))\n\nfor i in range(1, X + 1):\n    if (Y + 2 * Z) < i <= X:\n        print(i - 1)\n        break",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('5 2 1') == '2'\nassert solution('1 2 1') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nX Y Z\n''') == '3'\nassert solution('''\n7 6 4\n''') == '1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '3'\nassert solution('13 3 1') == '3'\nassert solution('12 1 1') == '2'\nassert solution('14 3 1') == '2'\nassert solution('14 3 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''13 3 1\n''') == '3'\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '3'\nassert solution('3 1 1') == '2'\nassert solution('3 1 1 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n0 1\n1 3\n0 4\n5 5''') == '2'\nassert solution('''5\n0 5\n1 4\n2 3\n0 2\n3 5\n1 3''') == '1'\nassert solution('''1\n0 1\n1 3\n0 2\n3 5\n0 4\n5 4''') == '1'\n'''\n\nimport sys\nsys.stdin = open('input.txt')\n\nN = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nr_sorted = sorted(r)\nb_sorted = sorted(b)",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('10\\n1 1\\n2 2\\n1 5\\n6 6\\n5 8\\n4 7\\n5 5\\n5 4\\n8 8\\n8 7\\n7 6\\n') == '1'\nassert solution('1\\n1\\n1') == '0'\n\"\"\"",
        "num_ids_2": 90,
        "num_ids_4": 106
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\") == \"2\"\nassert solution(\"4\\n0 4\\n5 5\\n1 3\") == \"3\"\nassert solution(\"3\\n3 3\\n1 2\\n1 2\") == \"1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution(\n'''\n4\n5 4\n2 3\n3 1\n5 5\n''') == '1'\n\nassert solution(\n'''\n5\n3 5\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution(\n'''\n5\n5 4\n3 1\n2 3\n2 1\n0 4\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n\n''') == '2'\nassert solution('''\n1\n1 1\n\n''') == '1'\nassert solution('''\n4\n2 2\n3 3\n3 4\n4 4\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2,\n                 1, 3,\n                 1, 4,\n                 0, 4,\n                 5, 5]) == 2\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"7\"\nassert solution(\"1 5\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '7'\nassert solution('2 4') == '7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '7'\n\n\"\"\"\nfrom sys import stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"2 4\n0 3\n\"\"\") == \"7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1 2\"\"\") == \"7\"\nassert solution(\"\"\"4 2\"\"\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2\n0 3\"\"\") == \"7\"\n\nassert solution(\"\"\"\n5 10\n0 5\"\"\") == \"10\"\n\nassert solution(\"\"\"\n4 10\n0 2\n3 5\"\"\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\"\nassert solution(\"2\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\nL 110\\n? 100\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"1\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\nL 110\\n? 100\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"2\"\n",
        "num_ids_2": 121,
        "num_ids_4": 200
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '2'",
        "num_ids_2": 95,
        "num_ids_4": 148
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"8\\n\"\n    \"L 1\\n\"\n    \"R 2\\n\"\n    \"R 3\\n\"\n    \"? 2\\n\"\n    \"L 4\\n\"\n    \"? 1\\n\"\n    \"L 5\\n\"\n    \"? 1\\n\"\n) == \"1\"\n\nassert solution(\n    \"10\\n\"\n    \"L 100\\n\"\n    \"R 100000\\n\"\n    \"R 123\\n\"\n    \"L 101\\n\"\n    \"? 123\\n\"\n    \"L 10\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"L 110\\n\"\n    \"R 115\\n\"\n    \"? 115\\n\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\n\nimport sys\nimport io\n\nsys.stdin = io.BytesIO(b'''\n3\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nprint(solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == \"1\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == \"1\"\n\nassert solution('''8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == \"1\"\n\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == \"1\"\nassert solution(\"10\\n100\\n100000\\n123\\n101\\n100\\n100000\\n123\\n115\\n110\") == \"2\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2\n5\n2\n3\n1\n''') == '4'\nassert solution('''\n5\n1\n2\n2\n3\n1\n''') == '6'\nassert solution('''\n7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n8\\n1\\n') == '0'\nassert solution('4\\n1\\n3\\n') == '4'\nassert solution('4\\n1\\n5\\n') == '-1'",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\nassert solution('''\n2\n3\n8\n2\n9\n4\n10000000000000\n''') == '4'\nassert solution('''\n5\n3\n4\n3\n8\n2\n10000000000000\n''') == '3'\nassert solution('''\n2\n3\n8\n2\n9\n4\n10000000000000\n''') == '3'\nassert solution('''\n4\n3\n5\n4\n5\n6\n1000000000000000000\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '5'\nassert solution('5') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1\\n10\\n25\\n30') == '4'\nassert solution('5\\n1\\n10\\n25\\n30') == '6'\nassert solution('2\\n1\\n10\\n25\\n30') == '72'\nassert solution('1\\n1\\n10\\n25\\n30') == '-1'\n",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('7') == '6'\nassert solution('100') == '76'\nassert solution('19') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution(\"1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000\\n\") == \"4\"\nassert solution(\"1\\n100000\\n10000000\\n10000000000\\n1000000000000000000\\n\") == \"72\"\nassert solution(\"1\\n10000000\\n10000000000\\n1000000000000000000\\n\") == \"72\"\n",
        "num_ids_2": 40,
        "num_ids_4": 96
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n20\n30\n40\n50\n60\n70\n80\n90\n''') == '6'\nassert solution('''\n10\n20\n30\n40\n50\n60\n70\n80\n90\n''') == '8'\nassert solution('''\n10\n10\n20\n30\n40\n50\n60\n70\n80\n90\n''') == '4'\nassert solution('''\n0\n1000000000000000000\n''') == '-1'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''\n3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\n\"\"\"\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    while a.count(0) > 0:\n        a.remove(0)\n    a.reverse()\n    for i in range(n):\n        a[i] -= 1\n    if all(x > 0 for x in a):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"YES\"\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'NO'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'NO'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(\"3\\n1 1 3\\n4\\n1 1 2 1\\n2\") == \"YES\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\") == \"YES\"\nassert solution(\"4\\n100\\n1 1 2 1\\n2\") == \"NO\"\nassert solution(\"100\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\") == \"YES\"\n",
        "num_ids_2": 35,
        "num_ids_4": 87
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"7\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\nabacaba\nbacabaa\n''') == \"4\"\nassert solution('''\n5\nzcabd\ndbacz\n''') == \"0\"\n\nassert solution('''\n13\naabcdbcab\nabacdbbab\n''') == \"2\"\n\nassert solution('''\n30\naabbbbccbbaaa\nbbbbccbbaaaab\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == 4\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('5\\nzcabd\\dbacz\\n') == '0'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\nabacaba\nbacabaa\n''') == 4\nassert solution('''\n5\nzcabd\ndbacz\n''') == 0\nassert solution('''\n4\nzzxgvv\nxegzvlj\n''') == 1\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\dbacz\\n\") == \"0\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('6') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == 4\nassert solution('5\\nzcabd\\ndbacz') == 0\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nzcabd\ndbacz\n''') == \"0\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 4\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == 4",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5 2 3') == '8'\nassert solution('1\\n100 1 4') == '198'\nassert solution('1\\n1 1 1000000000') == '0'\nassert solution('1\\n1 1 999999999') == '1'\nassert solution('1\\n1 1 999999999') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''4 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''3 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''1000000000 1 6\n1 1000000000 999999999\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n1 1 999999999 1\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 10 5\") == \"2999999997\"\nassert solution(\"1 1 1000000000\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10 2\\n5 1\\n1 1000000000\\n1 1 999999999\\n\") == \"198\"\nassert solution(\"2\\n100 1\\n1 1000000000\\n1 1 999999999\\n\") == \"198\"\nassert solution(\"3\\n1 1\\n1 1 999999999\\n\") == \"1\"\nassert solution(\"4\\n10 1\\n1 1000000000\\n1 1 999999999\\n\") == \"2999999997\"\nassert solution(\"5\\n1 1\\n1 1000000000\\n1 1 999999999\\n\") == \"1\"\n",
        "num_ids_2": 60,
        "num_ids_4": 114
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 10 5\") == \"2999999997\"\nassert solution(\"1 1 1000000000\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('1 10 5') == '198'\nassert solution('1 1 1000000000') == '2999999997'\nassert solution('1 1 999999999') == '0'\nassert solution('1 1 999999999') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '198\\n-17\\n2999999997\\n0\\n1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"2999999997\"\nassert solution('''\n5 2 3\n100 1 4\n1 1000000000 5\n1 1000000000 1\n1 1000000000 999999999\n1 1 999999999 1\n1 1 999999999 1\n''') == \"0\"\nassert solution('''\n5 2 3\n100 1 4\n1 1000000000 5\n1 1000000000 1\n1 1000000000 999999999\n1 1 999999999 1\n1 1 999999999 1\n''') == \"1\"\n\ninput()\nprint(solution(stdin))\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"198\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"10\"\nassert solution(\"1\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n5\n3\n''') == '3'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n''') == '7'\nassert solution('''8\n3\n5\n2\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '9'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1\n2''') == '3'\nassert solution('''1\n2\n3''') == '3'\nassert solution('''1\n5\n6''') == '7'\nassert solution('''8\n1\n3\n3''') == '8'\nassert solution('''5\n3\n6''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '9'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '13'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '27'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '6561'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '3\\n9\\n13\\n27\\n6561\\n19683'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\nassert solution(\"14\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '3'\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '9'\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '13'\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '27'\nassert solution('''8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000''') == '6561'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n\"\"\") == \"9\"\nassert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n\"\"\") == \"13\"\nassert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n\"\"\") == \"27\"\nassert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n\"\"\") == \"6561\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\nprint(solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1000000000\\n2') == '3'\nassert solution('1\\n7') == '2'\nassert solution('100000000\\n7') == '2'\nassert solution('1000000000000\\n7') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '70'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '70'\nassert solution('''\n6\n10 11 2 1 5\n10 11 9 1 10\n''') == '55'\nassert solution('''\n5\n10 11 2 1 5\n10 11 9 1 10\n''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5') == '70'\nassert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5') == '77'\nassert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5') == '177177'\nassert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5') == '999999999000000000'\nassert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5') == '999999999'\n",
        "num_ids_2": 126,
        "num_ids_4": 257
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"77777000000000000000\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"70\"\nassert solution(\"10 10 8 5 3\") == \"77\"\nassert solution(\"12343 43 4543 39 123212\") == \"999999999000000000\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"999999999\"\n",
        "num_ids_2": 24,
        "num_ids_4": 65
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '77'\nassert solution(\"2\") == '70'\nassert solution(\"3\") == '77'\nassert solution(\"4\") == '70'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == \"1\"\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == \"0\"\nassert solution('''\n5\n2 4\n10 10\n2 4\n7 4\n9 3\n''') == \"2\"\nassert solution('''\n5\n7 4\n10 10\n2 4\n7 4\n9 3\n''') == \"1\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('''\n3\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n1\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n4\n2 2\n5 5\n2 2\n7 5\n9 2\n''') == '1'\nassert solution('''\n5\n2 2\n5 5\n2 2\n7 5\n9 2\n''') == '0'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 0 1 2 1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n2 3\n20 15\n2 4\n9 4\n1 4\n''') == '2'\nassert solution('''\n5\n2 3\n3 3\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1 0 2 1'\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"2 6\") == \"1\"\nassert solution(\"4 6\") == \"2\"\nassert solution(\"5 10\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2\\n7777') == '90'\nassert solution('2\\n22\\n1111') == '13'\nassert solution('3\\n4\\n999') == '1'\nassert solution('4\\n2\\n1') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n22\n777\n\n''') == '1'\nassert solution('''2\n9999\n\n''') == '9'\nassert solution('''2\n1\n1\n\n''') == '9'\nassert solution('''2\n7777\n\n''') == '10'\nassert solution('''3\n22\n22\n\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''2\n2\n2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('22') == '13'\nassert solution('999') == '90'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2\n1\n''') == '1'\nassert solution('''\n3\n22\n22\n''') == '1'\nassert solution('''\n2\n22\n22\n''') == '1'\nassert solution('''\n2\n22\n22\n''') == '1'\nassert solution('''\n3\n11\n111\n111\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777\\n') == '13'\nassert solution('4\\n1\\n11\\n22\\n1\\n22\\n') == '5'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"13\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n22\") == \"13\"\nassert solution(\"1\\n11\") == \"1\"\nassert solution(\"2\\n22\") == \"1\"\nassert solution(\"3\\n111\") == \"2\"\nassert solution(\"4\\n2\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"13\"\nassert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"777\") == \"1\"\nassert solution(\"9999\") == \"3\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''\n4\n6\n2 2 2 2 2\n5\n2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2\n5\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''5\n2 2 2 2 2\n5\n2 2 2\n5\n2 2 2 2 2\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n5\n2 3 1 3 2''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n5\n2 3 1 3 2\n\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n4\n1\n5\n5\n1 1 1 1 1\n2\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n5\n2 3 1 3 2''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2 2''') == 'YES'\nassert solution('''5\n2\n2 2 2 2 2''') == 'NO'\nassert solution('''6\n2\n2 2 2''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == \"YES\"\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == \"NO\"\nassert solution('''4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == \"YES\"\nassert solution('''5\n2\n2 2 2 2 2\n1\n2 2\n3\n2 2 2\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('4') == 'YES'\nassert solution('6') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('[4,2,3] 1') == '5'\nassert solution('[3,-1,0,2] 3') == '6'\nassert solution('[2,-3,-1,5,-4] 2') == '13'\nassert solution('[2,-3,-1,5,-4] 0') == '5'\nassert solution('[2,-3,-1,5,-4] 1') == '4'\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == str(expected_output)\nprint(solution(input))\n\"\"\"\n\nA = [4,2,3]\nK = 1",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('[4,2,3]') == '5'\nassert solution('[3,-1,0,2]') == '6'\nassert solution('[2,-3,-1,5,-4]') == '13'\nassert solution('[1,0,0,0]') == '0'\nassert solution('[-1,0,-2,3]') == '6'\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n[3,-1,0,2]\n1\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[4,2,3]\\n1\") == \"5\"\nassert solution(\"[3,-1,0,2]\\n3\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4]\\n2\") == \"13\"",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"[4,2,3]\") == 5\nassert solution(\"[3,-1,0,2]\") == 6\nassert solution(\"[2,-3,-1,5,-4]\") == 13\n\n\n\"\"\"\n\n\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        n = len(A)\n        A.sort(reverse=True)\n        while K:\n            if K > n:\n                K -= n\n                A[:] = [-i for i in A]\n            else:\n                K -= 1\n                A[:] = [-i for i in A[:K]]\n        return sum(A)\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[4,2,3]') == 5\nassert solution('[3,-1,0,2]') == 6\nassert solution('[2,-3,-1,5,-4]') == 13\nassert solution('[2,2,2]') == 4\n\n\n\nfrom collections import Counter\n\nclass Solution:\n    def solve(self, A, K):\n        count = Counter(A)\n        ans = 0\n        for key in sorted(count.keys()):\n            if count[key] > 0:\n                ans += key * count[key]\n                count[key] -= 1\n        return ans\n\n\nimport collections\n\nclass Solution:\n    def solve(self, A, K):\n        return sum(a * (i+1) for i, a in enumerate(collections.deque(A) * K))\n\n\nclass Solution:\n    def solve(self, A, K):\n        # sliding window\n        sum_t, sum_l = A[0], 0\n        for idx in range(1, len(A)):\n            sum_t, sum_l = sum_t + A[idx], max(sum_l, sum_t)\n        return max(sum_l, sum_t * K)\n\nclass Solution:\n    def solve(self, A, K):\n        # sliding window\n        sum_t, sum_l = A[0], 0\n        for idx in range(1, len(A)):\n            sum_t, sum_l = sum_t + A[idx], max(sum_l, sum_t)\n        return max(sum_l, sum_t * K)\n\n\nclass Solution:\n    def solve(self, A, K):\n        # sliding window\n        sum_t, sum_l = A[0], 0\n        for idx in range(1, len(A)):\n            sum_t, sum_l = sum_t + A[idx], max(sum_l, sum_t)\n        return max(sum_l, sum_t * K)\n\n\nclass Solution:\n    def solve(self, A, K):\n        # sliding window\n        sum_t, sum_l = A[0], 0\n        for idx in range(1, len(A)):\n            sum_t, sum_l = sum_t + A[idx], max(sum_l, sum_t)\n        return max(sum_l, sum_t * K)\n\n\nclass Solution:\n    def solve(self, A, K):\n        # sliding window\n        sum_t, sum_l = A[0], 0\n        for idx in range(1, len(A)):\n            sum_t, sum_l = sum_t + A[idx], max(sum_l, sum_t)\n        return max(sum_l, sum_t * K)\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"16\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\n4 2 3\n''') == '5'\nassert solution('''\n3 -1 0 2\n''') == '6'\nassert solution('''\n2 -3 -1 0 2\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"[4,2,3] 1\") == \"5\"\nassert solution(\"[3,-1,0,2] 3\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4] 2\") == \"13\"\nassert solution(\"[2,-3,-1,5,-4] 1\") == \"10\"\nassert solution(\"[2,-3,-1,5,-4] 2\") == \"13\"\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true'\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'false'\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true'\n\n'''\n\nSolution:\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n0 2 1\n\"\"\") == \"true\"\nassert solution(\"\"\"\n0 2 1\n\"\"\") == \"false\"\nassert solution(\"\"\"\n0\n\"\"\") == \"true\"\nassert solution(\"\"\"\n-1\n\"\"\") == \"false\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true'\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'false'\nassert solution('''\n3 3 6 5 -2 2 5 1 -9 4\n''') == 'true'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == 'true'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == 'true'\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == 'false'\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == 'true'\n",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 + 3 = 6\") == \"true\"\nassert solution(\"0 + 2 = 2\") == \"false\"\nassert solution(\"3 + 3 = 6\") == \"false\"\nassert solution(\"0 + 2 = 2\") == \"false\"\nassert solution(\"3 + 3 = 6\") == \"true\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true'\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'false'\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n[0,2,1,-6,6,-7,9,1,2,0,1]\n[0,2,1,-6,6,7,9,1,2,0,1]\n[3,3,6,5,-2,2,5,1,-9,4]\n[0,2,1,-6,6,7,9,-1,2,0,1]\n[1,1,1,-1,1,1,1,-1,1,1]\n''') == 'true'\nassert solution('''\n[0,2,1,-6,6,7,9,1,2,0,1]\n[0,2,1,-6,6,7,9,1,2,0,1]\n[3,3,6,5,-2,2,5,1,-9,4]\n[0,2,1,-6,6,7,9,1,2,0,1]\n[1,1,1,-1,1,1,1,-1,1,1]\n''') == 'false'\n'''\nclass Solution:\n    def canThreePartsEqualSum(self, A):\n        sums = sum(A)\n        if sums % 3!= 0:\n            return False\n        sums_count = sum(A) // 3\n        if sums_count!= 0:\n            for i in range(len(A)):\n                if A[i] == sums_count:\n                    break\n                if i == len(A) - 1:\n                    return False\n        for i in range(len(A) - 1):\n            if A[i] + A[i + 1]!= sums:\n                return False\n        return True\n\ns = Solution()\nprint(s.canThreePartsEqualSum([0,2,1,-6,6,-7,9,1,2,0,1]))\nprint(s.canThreePartsEqualSum([0,2,1,-6,6,7,9,-1,2,0,1]))\nprint(s.canThreePartsEqualSum([3,3,6,5,-2,2,5,1,-9,4]))\nprint(s.canThreePartsEqualSum([0,2,1,-6,6,7,9,1,2,0,1]))\nprint(s.canThreePartsEqualSum([1,1,1,-1,1,1,1,-1,1,1]))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('[0,2,1,-6,6,-7,9,1,2,0,1]') == 'true'\nassert solution('[0,2,1,-6,6,7,9,-1,2,0,1]') == 'false'\nassert solution('[3,3,6,5,-2,2,5,1,-9,4]') == 'true'\nassert solution('[3,3,6,5,0,2,5,1,-9,4]') == 'false'",
        "num_ids_2": 64,
        "num_ids_4": 124
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0\n2\n1\n-6\n6\n-7\n9\n1\n2\n0\n1\n''') == 'true'\nassert solution('''\n0\n2\n1\n-6\n6\n-7\n9\n1\n2\n0\n1\n''') == 'false'\nassert solution('''\n3\n3\n6\n5\n-2\n2\n5\n1\n-9\n4\n''') == 'true'\n\nstdin = '''\n0\n2\n1\n-6\n6\n-7\n9\n1\n2\n0\n1\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"Empty input\"\nassert solution(\"7\") == \"\", \"No input\"\nassert solution(\"7\\nbeat\") == \"beat\", \"First line\"\nassert solution(\"7\\nbeat\\n\") == \"beat\", \"Second line\"\nassert solution(\"7\\nbeat\\n:\") == \"beat\", \"Third line\"\n",
        "num_ids_2": 25,
        "num_ids_4": 61
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8\nbeet\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet', solution('''\n8\nbeet\nvet\nbeet\nbed\nvet\nbet\nbeet\n''')\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"beet\"\nassert solution(\"2\") == \"beet and vet\"\nassert solution(\"3\") == \"bet and beet\"\nassert solution(\"4\") == \"bet and beet\"\nassert solution(\"5\") == \"vet and beet\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beat, bed, bet, beet, vet'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\nbeet\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == 'beet and vet'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\nbeat') == 'beat'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n\") == \"et\"\nassert solution(\"6\\n\") == \"et\"\nassert solution(\"5\\n\") == \"et\"\nassert solution(\"6\\n\") == \"et\"\nassert solution(\"10\\n\") == \"et\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"8\", \"First\"\n\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"6\", \"Second\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '10'\nassert solution('4') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"10\") == \"24\"\nassert solution(\"1\") == \"0\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"-20\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\nassert solution('4') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == ''\nassert solution('2') == '8'\nassert solution('3') == '36'\nassert solution('4') == '72'\nassert solution('5') == '108'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 8') == '8'\nassert solution('5 6') == '14'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n4\\n8\\n') == '8'\nassert solution('1\\n2\\n3\\n4\\n') == '11'\nassert solution('2\\n4\\n3\\n2\\n') == '17'\nassert solution('3\\n4\\n2\\n5\\n') == '21'\nassert solution('3\\n4\\n2\\n5\\n') == '23'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n1\\n3') == '8'\nassert solution('1234\\n150\\n100') == '84'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('100') == '1084'\nassert solution('123456789') == '1084'\nassert solution('1234') == '84'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234\\n150\\n100') == '84'\nassert solution('0\\n0\\n0') == '0'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '84'\nassert solution(input()) == '84'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\nassert solution(\"123\") == \"0\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1234) == '84'\nassert solution(150) == '84'\nassert solution(100) == '84'\nassert solution(10000) == '84'\nassert solution(1234) == '84'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"6\"\nassert solution(\"8\") == \"10\"\nassert solution(\"10\") == \"8\"\nassert solution(\"10\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n4\\n1\") == \"3\"\nassert solution(\"1\\n1\\n2\") == \"1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"4 4\") == \"24\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 2\n''') == '8'\nassert solution('''10 2\n10 2\n''') == '1220'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == 8\nassert solution(\"2 2\") == 8\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"8\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"4 2\") == \"8\"\n\nclass Solution:\n    def solve(self, n, m):\n        '''\n        We are trying to find a solution for a problem with m monkeys and n dogs.\n\n        We want to arrange the monkeys and dogs in a row where there are neither adjacent monkeys nor adjacent dogs.\n\n        Let S(n, m) be the number of such arrangements.\n\n        We can solve this problem recursively.\n\n        Let X(n, m) be the number of arrangements for a configuration where there are neither adjacent monkeys nor adjacent dogs.\n        X(n, m) = X(n - 1, m) + X(n - 1, m - 1) +... + X(1, 1) = X(n, m) = S(n, m) - S(n - 1, m) -... - S(1, 1)\n        We can see that X(n, m) = S(n - 1, m) + S(n - 1, m - 1) +... + S(1, 1) - S(n, m) - S(n - 1, m - 1) -... - S(1, 1).\n\n        By rearranging the following properties we obtain X(n, m) = 2 * S(n, m) - S(n - 1, m) - S(n - 1, m - 1) + S(1, 1) - S(1, 1).\n\n        This generalizes to n = m = 2, n = m = 3, n = m = 4,..., n = m = n, n = m,..., n = m + 1.\n        '''\n\n        def dfs(n, m):\n            if n <= 1 or m <= 1:\n                return 0\n            if n == m:\n                return 1\n            res = 0\n            for i in range(m - 1):\n                res += dfs(n - 1, m - 1) + dfs(n - 1, i) + dfs(n - 1, m - i - 2)\n            return res\n\n        return 2 * dfs(n, m) - dfs(n - 1, m) - dfs(n - 1, m - 1) + dfs(1, 1) - dfs(1, 1)\n\nassert Solution().solve(2, 2) == 8\nassert Solution().solve(4, 2) == 8\nassert Solution().solve(10, 10) == 37769660845\n\nclass Solution:\n    def solve(self, n, m):\n        '''\n        We are trying to find a solution for a problem with m monkeys and n dogs.\n\n        We want to arrange the monkeys and dogs in a row where there are neither adjacent monkeys nor adjacent dogs.\n\n        Let S(n, m) be the number of such arrangements.\n\n        We can solve this problem recursively.\n\n        Let X(n, m) be the number of arrangements for a configuration where there are neither adjacent monkeys nor adjacent dogs.\n        X(n, m) = X(n - 1, m) + X(n - 1, m - 1) +... + X(1, 1) = X(n, m) = S(n, m) - S(n - 1, m) -... - S(1, 1)\n        We can see that X(n, m) = S(n - 1, m) + S(n - 1, m - 1) +... + S(1, 1) - S(n, m) - S(n - 1, m - 1) -... - S(1, 1).\n\n        By rearranging the following properties we obtain X(n, m) = 2 * S(n, m) - S(n - 1, m) - S(n - 1, m - 1) + S(1, 1) - S(1, 1).\n\n        This generalizes to n = m = 2, n = m = 3, n = m = 4,..., n = m = n, n = m,..., n = m + 1.\n        '''\n\n        def dfs(n, m):\n            if n <= 1 or m <= 1:\n                return 0\n            if n == m:\n                return 1\n            res = 0\n            for i in range(m - 1):\n                res += dfs(n - 1, m - 1) + dfs(n - 1, i) + dfs(n - 1, m - i - 2)\n            return res\n\n        return 2 * dfs(n, m) - dfs(n - 1, m) - dfs(n - 1, m - 1) + dfs(1, 1) - dfs(1, 1)",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"10\"\nassert solution(\"5 4\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"8\"\nassert solution(\"5 3\") == \"23\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"8\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('4 1') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'POSSIBLE'\nassert solution('3 2') == 'POSSIBLE'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"4 3\") == \"IMPOSSIBLE\"\nassert solution(\"5 4\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\") == \"IMPOSSIBLE\"\nassert solution(\"7 3\") == \"POSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == 'POSSIBLE'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"10 0\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\n\nassert solution(\"3 1\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 5\\n1 3\\n2 3\\n3 3\\n4 4\\n4 5\\n5 5\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 3\\n2 1\\n1 2\\n3 3\\n2 3\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 61,
        "num_ids_4": 91
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"6 4\") == \"IMPOSSIBLE\"\nassert solution(\"15 3\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"3 5\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\") == \"IMPOSSIBLE\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('aab') == 'ab'\nassert solution('aaab') == 'ab'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('atcoder') == 'acdr'\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'acdr'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"acdr\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcd') == 'abcd'\nassert solution('abc') == 'ab'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('apple') == 'pe'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'acdr'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng apple gorilla\") == \"NO\"\nassert solution(\"rng gort gorilla apple\") == \"YES\"\nassert solution(\"rng gor tob gorilla apple\") == \"NO\"\nassert solution(\"rng gor tob gorilla apple\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('abc') == 'YES'\nassert solution('abcdefgh') == 'NO'\nassert solution('abcdefghijklmnop') == 'NO'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng rng dog\") == \"YES\"\nassert solution(\"rng rng dog\") == \"NO\"\nassert solution(\"rng rng dog\") == \"YES\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('rng ') == 'YES'\nassert solution('gorilla ') == 'YES'\nassert solution('apple ') == 'NO'\n\n\"\"\"\n\nfrom itertools import combinations",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"YES\"\nassert solution(\"rng\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('ab cc dd ef') == 'YES'\nassert solution('abc') == 'NO'\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla apple') == 'NO'\nassert solution('rng gorilla apple') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('ab ab ab ab') == 'YES'\nassert solution('abc abc abc') == 'YES'\nassert solution('a ab ab ab') == 'YES'\nassert solution('a b ab ab') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == 'GREATER'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3') == 'GREATER'\nassert solution('4\\n5') == 'EQUAL'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'LESS', \"Should be 'GREATER'\"\nassert solution('1') == 'EQUAL', \"Should be 'LESS'\"\nassert solution('18') == 'EQUAL', \"Should be 'GREATER'\"\nassert solution('0') == 'GREATER', \"Should be 'LESS'\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n''') == 'GREATER'\nassert solution('''\n1\n3\n''') == 'EQUAL'\nassert solution('''\n0\n1\n''') == 'LESS'\nassert solution('''\n4\n5\n''') == 'LESS'\nassert solution('''\n0\n1\n''') == 'GREATER'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n''') == \"GREATER\"\nassert solution('''1\n0\n''') == \"GREATER\"\nassert solution('''1\n1\n''') == \"EQUAL\"\nassert solution('''2\n1\n''') == \"LESS\"\nassert solution('''5\n4\n''') == \"LESS\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"LESS\"\nassert solution(\"0\") == \"EQUAL\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'LESS'\nassert solution('2') == 'GREATER'\nassert solution('3') == 'EQUAL'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == 'GREATER'\nassert solution('1\\n3') == 'LESS'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"GREATER\"\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n3\napple\norange\napple\n1\ngrape\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n4\ncoder\natcoder\natcoderr\nxcode\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n7\nguru\ncoder\natcoder\natcoderr\nxcode\ncoder\natcoderr\n\"\"\") == \"6\"\nassert solution(r\"\"\"\n7\nguru\ncoder\natcoder\natcoderr\nxcode\ncoder\natcoderr\n\"\"\") == \"7\"\nassert solution(r\"\"\"\n6\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\naa\\npp\\ne\\n') == '2'\nassert solution('3\\nab\\nac\\n') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '1'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '1'\nassert solution('11') == '1'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\napple\\norange\\napple\") == \"2\"\nassert solution(\"2\\ngrape\\ngrape\") == \"0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\n\"\"\"\nfrom collections import deque\nfrom collections import defaultdict\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"G\") == \"C\"\nassert solution(\"C\") == \"G\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"C\") == \"T\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"G\"\nassert solution(\"A\") == \"C\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A') == 'T'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"T\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('G') == 'C'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"14\"\nassert solution([\n    '3',\n    '2',\n    '2',\n    '4',\n    '1',\n]) == \"14\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '14'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 2 4 1\") == \"14\"\nassert solution(\"10\\n1 1 1 1 1\") == \"1\"\nassert solution(\"1\\n1 1 1 1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 2 2 4 1\") == \"14\"\nassert solution(\"1\\n1 1\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('5') == '14'\nassert solution('10') == '16'\nassert solution('20') == '20'\nassert solution('25') == '26'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3 2 2 4 1') == '14'\nassert solution('4\\n2 2 2 4 1') == '8'\nassert solution('100\\n2 2 2 4 1') == '100'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '14'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 2 2 4 1\\n1 2 2 2 1\") == '14'\nassert solution(\"2\\n5 2 5 5 2\\n2 2 2 2 2\") == '10'\nassert solution(\"3\\n4 4 4 4 4\\n2 2 2 2 2\") == '12'\nassert solution(\"2\\n1 1 1 1\\n1 1 1 1\") == '1'\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"14\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"10\") == \"21\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 2 2') == '1'\nassert solution('6 8\\n3 2 3 3 3 5 5 5\\n5 5 5 5 5') == '4'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 3') == '1'\nassert solution('3 3') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"4 3\\n2 1 2 3\") == \"1\"\nassert solution(\"4 5\\n2 2 2 2 3\") == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 51
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n2 2 2') == '1'\nassert solution('2 4\\n3 2 3') == '2'\nassert solution('1 2\\n2 1 2') == '1'\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n2 2 2''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"1\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 1\\n') == '2'\nassert solution('10\\n10 20 20 10 10 20 10\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\n'''\nfrom typing import List\n\nN = int(input())\ncandies = list(map(int, input().split()))\nx = int(input())\n",
        "num_ids_2": 38,
        "num_ids_4": 62
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 2\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == 'Yes'\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == 'Yes'\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == 'Yes'",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n1 1 1') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n1 1 1') == 'No'",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 2 1\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 0 0\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 0 1\n2 1 2\n1 0 1\n''') == 'Yes'\nassert solution('''\n1 1 1\n2 1 2\n1 1 1\n''') == 'No'\nassert solution('''\n1 0 1\n2 0 2\n1 0 1\n''') == 'Yes'\nassert solution('''\n1 1 1\n2 1 2\n1 0 1\n''') == 'No'\nassert solution('''\n1 1 1\n2 1 2\n1 1 1\n''') == 'Yes'\n\nfrom collections import Counter",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 1 1\\n2 2 2\\n1 2 1') == 'No'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 1 1\\n2 2 2\\n1 1 1\\n\") == \"No\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1 0 1\n2 1 2\n1 0 1\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 1 1\\n2 1 2\\n1 1 1\") == \"No\"\nassert solution(\"1 2 1\\n2 1 2\\n1 1 1\") == \"Yes\"\nassert solution(\"1 0 1\\n1 1 1\\n1 1 1\") == \"No\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\") == \"No\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"0 0 1\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"0 0 1\\n2 1 2\\n1 1 1\") == \"Yes\"\nassert solution(\"0 0 1\\n0 0 1\\n1 1 1\") == \"Yes\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'ARC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABCABC') == 'ARC'\nassert solution('ABCARC') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ARC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'ABC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABCA') == 'ARC'\nassert solution('ABCB') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"ARC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC', \"Failed sample test\"\nassert solution('ARC') == 'ABC', \"Failed sample test\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"3 7 5\") == \"2\"\nassert solution(\"5 5 5 5\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n') == '3'\nassert solution('2 2 3\\n') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2\") == \"3\"\nassert solution(\"4 8 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"5 8 1\", \"4 8 2\", \"4 8 3\", \"4 8 4\"]) == \"3\"\nassert solution([\"5 8 2\", \"4 8 2\", \"4 8 3\", \"4 8 4\"]) == \"4\"\nassert solution([\"5 8 3\", \"4 8 2\", \"4 8 3\", \"4 8 4\"]) == \"5\"\nassert solution([\"5 8 4\", \"4 8 2\", \"4 8 3\", \"4 8 4\"]) == \"0\"\nassert solution([\"5 8 2\", \"4 8 3\", \"4 8 4\"]) == \"0\"\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 0 1\n''') == '3'\nassert solution('''1 0 2\n''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 8 2\") == \"3\", \"Should be 3\"\nassert solution(\"20 10 3\") == \"3\", \"Should be 3\"\nassert solution(\"1 10 5\") == \"1\", \"Should be 1\"\nassert solution(\"0 10 10\") == \"10\", \"Should be 10\"\nassert solution(\"8 20 5\") == \"3\", \"Should be 3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 4\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([4, 8, 2]) == \"3\"\nassert solution([4, 9, 2]) == \"3\"\nassert solution([4, 10, 2]) == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 1 2') == '2'\nassert solution('10 10 5') == '2'\nassert solution('20 20 2') == '2'\nassert solution('20 30 2') == '0'\n\n---Type hints---\n\n----Comments----\n----PEP8----\n\n---My solution---\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\nassert solution('12') == 'Christmas Eve Eve Eve Eve'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\nassert solution('24') == 'Christmas Eve Eve Eve Eve'\nassert solution('24') == 'Christmas Eve Eve Eve Eve Eve'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('25') == 'Christmas'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1\n2\n''') == 'Christmas'\nassert solution('''3\n1\n2\n''') == 'Christmas Eve'\nassert solution('''4\n1\n2\n''') == 'Christmas Eve Eve'\nassert solution('''5\n1\n2\n''') == 'Christmas Eve Eve Eve'\nassert solution('''6\n1\n2\n''') == 'Christmas Eve Eve Eve Eve'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1) == \"Christmas\"\nassert solution(4) == \"Christmas Eve\"\nassert solution(7) == \"Christmas Eve Eve\"\nassert solution(9) == \"Christmas Eve Eve Eve\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"Christmas\"\nassert solution(\"23\") == \"Christmas Eve Eve Eve\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Christmas'\nassert solution(stdin) == 'Christmas Eve'\nassert solution(stdin) == 'Christmas Eve Eve'\nassert solution(stdin) == 'Christmas Eve Eve Eve'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"8\"\nassert solution(\"14\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('8') == '2'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '4'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"16\") == \"4\"\nassert solution(\"9\") == \"3\"\nassert solution(\"20\") == \"3\"\nassert solution(\"15\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '4'\nassert solution('7') == '4'\nassert solution('20') == '1'\nassert solution('6') == '4'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"4\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"8\") == \"4\"\nassert solution(\"14\") == \"4\"\nassert solution(\"16\") == \"2\"\nassert solution(\"24\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '4'\nassert solution('10000') == '1000'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 2 3 4\"\"\") == \"Yes\"\nassert solution(\"\"\"4 4 7 5\"\"\") == \"No\"\nassert solution(\"\"\"3 4 1 5\"\"\") == \"Yes\"\nassert solution(\"\"\"4 4 7 5\"\"\") == \"Yes\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4 2') == 'Yes'\nassert solution('1 1 2 2') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 7 9 3') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('4 7 9 3') == 'No'\nassert solution('-1 1 1 1') == 'Yes'\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"4 5 9 2\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == \"Yes\"\nassert solution('1 2 3 4') == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 4 3') == 'Yes'\nassert solution('0 0 2 4') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('3 3 3 3') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('6 6 6 6') == 'No'\nassert solution('7 8 9 3') == 'Yes'\nassert solution('7 8 9 6') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\n\"\"\"\n\nx = int(input())\ny = int(input())\nz = int(input())\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'ABC'\nassert solution('beginner') == 'BC'\nassert solution('contest') == 'C'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nprint(solution('atcoder beginner contest'))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC', \"Wrong result\"\nassert solution('ACEG') == 'ACEG', \"Wrong result\"\n\"\"\"\n\n\ns_1 = input()\ns_2 = input()\ns_3 = input()\nprint(s_1.capitalize() + s_2.capitalize() + s_3.capitalize())",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"ABC\"\n\nassert solution(\"atcoder beginner contest\") == \"ABC\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ABC\"\n'''\n\ns_1 = input()\ns_2 = input()\ns_3 = input()\n\nprint(s_1[0].upper()+s_2[0].upper()+s_3[0].upper())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''atcoder\nbeginner\ncontest''') == \"ABC\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"0 0 0\") == \"No\"\nassert solution(\"1 2 5\") == \"Yes\"\nassert solution(\"1 0 5\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 20 100\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10 100') == 'Yes'\nassert solution('10 5 120') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 10 12\") == \"Yes\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"100 200 300\") == \"No\"\nassert solution(\"100 50\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == \"Yes\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"100 200 10\") == \"No\"\nassert solution(\"1 3 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"30 20 40\") == \"Yes\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"15\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"0 0 0\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"3 3 3\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"500 100 120\") == \"No\"\nassert solution(\"500 100 100\") == \"Yes\"\nassert solution(\"500 100 100 120\") == \"Yes\"\nassert solution(\"5 0 2 0\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"50\",\"100\",\"120\"]) == \"Yes\"\nassert solution([\"50\",\"60\",\"120\"]) == \"No\"\nassert solution([\"50\",\"100\",\"110\"]) == \"Yes\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 8') == '5'\nassert solution('4 4') == '2'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 8\") == \"5\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 8\n7 9 8 9\n''') == \"5\"\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 5\") == \"1\"\nassert solution(\"10 8\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 8\") == \"5\", \"Wrong result!\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 8') == '5'\nassert solution('15 5') == '10'\nassert solution('9 4') == '1'\nassert solution('3 5') == '1'\nassert solution('8 4') == '0'\nprint('You passed all the tests!')",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 8\n7 9 8 9''') == '5'\nassert solution('''4 8\n7 9 8 9''') == '5'\nassert solution('''5 8\n7 9 8 9''') == '4'\nassert solution('''6 8\n7 9 8 9''') == '1'\nassert solution('''10 8\n7 9 8 9''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"4 8\n7 9 8 9\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"10 10\n7 8 9 8 8 8 8 8\n\"\"\"\n) == \"15\"\n\nassert solution(\n\"\"\"3 4\n1 2 1 3\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"100 100\n
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 8') == '5'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"3 1 2\"\nassert solution(\"4\") == \"4 2 1 3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2 2'\nassert solution('5') == '2 1 2 1 1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4 2 1 3'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3 4') == '1 2 3 4'\nassert solution('4\\n1 2 3 4') == '4 2 1 3'\nassert solution('6\\n1 2 3 4 5 6') == '1 2 3 4 5 6'\n",
        "num_ids_2": 37,
        "num_ids_4": 60
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4') == \"4 2 1 3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1,2'\nassert solution('3') == '2,1,3'\nassert solution('4') == '3,1,2,4'\nassert solution('5') == '4,2,1,3,5'\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 33
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '4 2 1 3'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('10 0') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == 'Yes'\nassert solution('10 3') == 'No'\n\n'''\nimport sys\nfrom collections import defaultdict",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('20 3') == 'No'\nassert solution('50 3') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('7 5') == 'No'\nassert solution('4 8') == 'Yes'\nassert solution('2 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('5 1') == 'No'\nassert solution('100 100') == 'Yes'\nassert solution('10 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 3\n4 5 6\n''') == 'Yes','sample test'\nassert solution('''\n2 1\n1 2\n''') == 'No', 'another sample test'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == 'No'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2\\n3') == 'Yes'\nassert solution('5\\n2\\n3') == 'Yes'\nassert solution('5\\n1\\n3') == 'Yes'\nassert solution('10\\n3\\n5') == 'Yes'\nassert solution('10\\n3\\n1') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"10 3\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('10 4') == 'No'\n\n\"\"\"\nimport sys\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcdefgh\") == \"12\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"a\") == \"1\"\nassert solution(\"\") == \"0\"\nassert solution(\"ab\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 42
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abc') == 'abc'\nassert solution('abc') == 'abc'\nassert solution('abc') == 'abc'\nassert solution('abc') == 'abc'\nassert solution('abc') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '3'\nassert solution('abaababa') == '2'\nassert solution('abaabab') == '1'\nassert solution('abaaba') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''abaababaab''') == '6'\nassert solution('''abaababaa''') == '6'\nassert solution('''abaababa''') == '3'\nassert solution('''abaabab''') == '2'\nassert solution('''abaabaa''') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"3\"\nassert solution(\"abaababa\") == \"4\"\nassert solution(\"abaabab\") == \"4\"\nassert solution(\"abaaba\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 3\nassert solution('abaabab') == 4\nassert solution('abaab') == 2\nassert solution('abc') == 0\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '8'\nassert solution('abaabab') == '7'\nassert solution('abaaba') == '6'\nassert solution('aba') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == -1\nassert solution(\"\") == -1\nassert solution(\"ba\") == -1\nassert solution(\"aabaaba\") == 6\nassert solution(\"abbababa\") == 5\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"2\"\nassert solution(\"abaababa\") == \"2\"\nassert solution(\"abaabab\") == \"2\"\nassert solution(\"abaaba\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('aba') == 2\nassert solution('abaab') == 6\nassert solution('abbabab') == 5\nassert solution('aaaaa') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"aabc\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bab') == 'No'\nassert solution('abc') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cba') == 'No'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"ac\") == \"No\"\nassert solution(\"cba\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'Yes'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'Yes'\nassert solution('b') == 'No'\nassert solution('c') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cat') == 'No'\nassert solution('cat') == 'No'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''bac''') == 'Yes'\nassert solution('''aaaa''') == 'Yes'\nassert solution('''abac''') == 'No'\nassert solution('''baca''') == 'No'\nassert solution('''bacb''') == 'Yes'",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3\\n4 2\\n\") == \"2\"\nassert solution(\"2\\n3 4\\n1 2\\n\") == \"2\"\n\nassert solution(\"4\\n1 2 3\\n4 2\\n\") == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1000000\n1000000\n\"\"\") == \"757402647\"\nassert solution(\"\"\"\n5\n1 8 7 2 4\n9 7 2 9 3\n\"\"\") == \"646\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"646\"\nassert solution(\"1\") == \"757402647\"\nassert solution(\"2\") == \"20\"\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n1 1\n\n''') == '1'\nassert solution('''\n4\n1 2\n2 1\n1 3\n\n''') == '2'\nassert solution('''\n6\n6 3\n2 2 2 2 2 2\n\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '20'\nassert solution('3') == '61'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '646'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '646'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''5\n1000000\n1000000\n''') == '757402647'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '646'\n\na = [1, 8, 7, 2, 4]\nb = [9, 7, 2, 9, 3]\nprint(min(a) + min(b))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('5\\n1 3 5 2 1\\n1 3 5 2 1\\n1 3 5 2 1\\n1 3 5 2 1\\n1 3 5 2 1') == '3211'\nprint(solution(input()))\n",
        "num_ids_2": 32,
        "num_ids_4": 78
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n\") == \"7\"\nassert solution(\n    \"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\"\nassert solution(\n    \"5 1 4\\n2 5 7 4 6\\n5 4\") == \"17\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7 4 5\\n\"\n    \"2 5 4 2 6 3 1\\n\"\n    \"2 1\\n\"\n    \"6 5\\n\"\n    \"2 1\\n\"\n    \"3 1\\n\"\n    ) == \"7\"\n\nassert solution(\n    \"9 4 8\\n\"\n    \"6 8 5 1 8 1 1 2 1\\n\"\n    \"9 2\\n\"\n    \"8 4\\n\"\n    \"5 3\\n\"\n    \"9 7\\n\"\n    ) == \"17\"\n\nassert solution(\n    \"5 1 4\\n\"\n    \"2 5 7 4 6\\n\"\n    \"5 4\\n\"\n    ) == \"17\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == \"17\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '17'\n\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'\n\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4\\n') == '17'",
        "num_ids_2": 80,
        "num_ids_4": 105
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2\") == \"2\"\nassert solution(\"5 4 8\") == \"17\"\nassert solution(\"9 4 8\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"7\"\nassert solution(\"7 4 5\") == \"17\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 4 5\") == \"7\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == \"2\"\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == \"0\"\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7\") == \"0\"\n",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '1'\nassert solution('7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"2\"\nassert solution(\"1\\n1\\n2\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7\\n\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '15'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '1999999999'\nassert solution('1000000000 1000000000') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '15'\nprint(solution('''\n5 5\n6 7\n1 2\n3 4\n1 3\n2 2\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n2\\n4\") == \"1\"\nassert solution(\"2\\n2\\n3\") == \"1\"\nassert solution(\"2\\n2\\n4\") == \"1999999999\"\nassert solution(\"3\\n4\\n5\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 7\") == \"10\"\nassert solution(\"4 12\") == \"1999999999\"\nassert solution(\"2 1000000000\") == \"1000000001\"\nassert solution(\"7 97\") == \"113\"\nassert solution(\"1000000000 1000000000\") == \"1000000001\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '15'\nassert solution('''\n3 7\n4 12\n2 1\n''') == '1999999999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7') == '10'\nassert solution('4 12') == '15'\nassert solution('2 1000000000') == '1999999999'\nassert solution('7 97') == '113'\nassert solution('1000000000 1000000000') == '1000000001'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000001\n2 1''') == '1999999999'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000001\n3 1''') == '113'\n\n##First we need to find the only number that is not divisible by 3:\n\n##We can do this using binary search\n\n##We can use a heap to store the numbers from 1 to 10^4. At the end of each turn, we remove the smallest item from the heap and divide it by 2.\n\n##The function we will need to compute the sum of numbers that are divisible by 3.\n\n##We can use the below function to do this:\n\n##def solution(stdin: str) -> str:\n##    pass\n##\n##\n##assert solution('''3 7\n##4 12\n##2 1000000000\n##7 97\n##1000000001\n##2 1''') == '10'\n##\n##assert solution('''3 7\n##4 12\n##2 1000000000\n##7 97\n##1000000001\n##3 1''') == '1999999999'\n##\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 7\n3 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\nassert solution('''\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '113'\nassert solution('''\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n2 5\n2 2\n1 2\n''') == '3'\nassert solution('''\n2 2\n1 2\n''') == '2'\nassert solution('''\n2 4\n1 2\n3 2\n''') == '3'\nassert solution('''\n100000000000 1000\n''') == '1000000001'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 2\") == \"2 1\"\nassert solution(\"10 4\") == \"3 1 2\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n1 2 3 2 1 3 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2 1 3 2 1 3 2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 2 1 3 2') == '2 1 3 2'\nassert solution('10 4') == '3 1 2'\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2 3 2 1 3 2\\n\") == \"2 1 2\\n1 3 2\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3 1 2\\n1 3 2\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\") == 263\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\") == 100\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == 60000\n",
        "num_ids_2": 75,
        "num_ids_4": 381
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 263\nassert solution(\"\"\"\n2\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 265\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n\n'''\n--- Part Two ---\n\nDuring the final boss battle, you have no choice but to defeat the boss.\n\nYou will now be playing the final version of the card game. This game is exactly the same as the previous game, except that during each turn, you can increase the damage you deal by doubling it. If you play a card that would increase the damage by more than $2$, you will instead play that card. If you play a card that would increase the damage by more than $3$, then it will be played twice. This way you can play any number of cards.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of turns.\n\nThen $n$ blocks of input follow, the $i$-th block representing the cards you get during the $i$-th turn.\n\nEach block begins with a line containing one integer $k_i$ ($1 \\le k_i \\le 2 \\cdot 10^5$) \u2014 the number of cards you get during $i$-th turn. Then $k_i$ lines follow, each containing two integers $c_j$ and $d_j$ ($1 \\le c_j \\le 3$, $1 \\le d_j \\le 10^9$) \u2014 the parameters of the corresponding card.\n\nIt is guaranteed that $\\sum \\limits_{i = 1}^{n} k_i \\le 2 \\cdot 10^5$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum damage you can deal during $n$ turns.\n\n\n-----Example-----\nInput\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\nOutput\n110\n\n\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100''') == 263",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100''') == 263\n\n\"\"\"\n\n\"\"\"\nThe best course of action will be as follows:\n\nDuring the first turn, play all 3 cards in any order and deal $18$ damage.\n\nDuring the second turn, play all 2 cards and deal $7$ damage.\n\nDuring the third turn, play all 2 cards and deal $13$ damage.\n\nDuring the fourth turn, play the 1st and the 3rd card and deal $25$ damage.\n\nDuring the fifth turn, play the first and the 3rd card and deal $200$ damage.\n\"\"\"\n\nimport sys",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == \"263\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3''') == '263'\nassert solution('''1\n100\n1\n1\n1\n1''') == '200'\nassert solution('''2\n3\n3''') == '1'\nassert solution('''5\n2\n2\n2\n2\n2''') == '2'\nassert solution('''10\n10\n10\n10\n10''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\nassert solution(\"dfcbbcfeeedbaea\") == \"3\"",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    'abacaba') == '3'\nassert solution(\n    'dfcbbcfeeedbaea') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '5'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\nassert solution('aabb') == '1'\nassert solution('abbac') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 51
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"2\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"abacaba\"\n    , 5\n    , \"2 1 4\"\n    , \"1 4 b\"\n    , \"1 5 b\"\n    , \"2 4 6\"\n    , \"2 1 7\"\n    ) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"1\\n2\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '-1'\nassert solution('13') == '17'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n''') == '\\n'.join(map(str, [['154873396', '386592714', '729641835', '863725149', '975314628', '412968357', '631457982', '598236471', '247189563'],\n['154873396', '336592714', '729645835', '863725145', '979314628', '412958357', '631457992', '998236471', '247789563']])\n)\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n''') == '\\n'.join(map(str, [['1']]))\n\nassert solution('''\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97\n98\n\n11\n22\n33\n44\n55\n66\n77\n88\n99\n\n20\n31\n42\n53\n64\n75\n86\n97",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n87694448\\n765271496\\n87694448\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n87694448\\n765271496\\n87694448\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n87694448\\n765271496\\n87694448\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n87694448\\n765271496\\n87694448\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n",
        "num_ids_2": 286,
        "num_ids_4": 632
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n[0, 0, 0, 2, 6, 0, 7, 0, 1]\n[6, 7, 2, 0, 0, 0, 0, 0, 0]\n[1, 0, 0, 0, 0, 5, 0, 0, 0]\n[8, 0, 0, 1, 0, 0, 0, 6, 5]\n[0, 0, 5, 0, 0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 0, 4]\n[0, 5, 0, 0, 0, 0, 0, 3, 0]\n[0, 0, 0, 0, 0, 0, 0, 1, 0]\n[0, 0, 0, 4, 1, 0, 0, 0, 0]\n\"\"\") == \"[4, 5, 6, 2, 7, 1, 8, 3, 9]\"\nassert solution(\"\"\"\n[0, 0, 0, 0, 0, 0, 0, 0, 6]\n[0, 7, 0, 0, 0, 0, 2, 5, 0]\n[8, 0, 0, 1, 0, 0, 0, 0, 0]\n[0, 0, 3, 0, 0, 6, 0, 0, 0]\n[0, 5, 0, 0, 0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 1, 0]\n[0, 0, 0, 0, 0, 0, 4, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 0, 3]\n\"\"\") == \"[2, 3, 1, 5, 7, 4, 6, 8, 0]\"\nassert solution(\"\"\"\n[0, 0, 0, 0, 0, 0, 0, 0, 0]\n[0, 7, 0, 0, 0, 0, 2, 5, 0]\n[8, 0, 0, 1, 0, 0, 0, 0, 0]\n[0, 0, 3, 0, 0, 6, 0, 0, 0]\n[0, 5, 0, 0, 0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 1, 0]\n[0, 0, 0, 0, 0, 0, 4, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 0, 3]\n\"\"\") == \"[3, 4, 1, 6, 7, 5, 2, 0, 0]\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '154873296'\nassert solution('2') == '154873296'\nassert solution('3') == '154873296'\nassert solution('4') == '154873296'\nassert solution('5') == '154873296'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873296\\n386592714\\n729641835\\n863725145\\n979314628\\n412968357\\n631457992\\n598236471\\n247789563\\n'\nprint(solution('''1\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"154873296\"\nassert solution(\"2\") == \"729641835\"\nassert solution(\"3\") == \"863725149\"\nassert solution(\"4\") == \"975314628\"\nassert solution(\"5\") == \"412968357\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873296\\n386592714\\n729641835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n1\\n5\\n4\\n2\\n8\\n6\\n3\\n7\\n0\\n9\\n\") == \"1\\n5\\n4\\n2\\n8\\n6\\n3\\n7\\n9\\n0\\n\"\n\n\"\"\"\n",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '154873296'\nassert solution('2') == '386592714'\nassert solution('3') == '729641835'\nassert solution('4') == '863725149'\nassert solution('5') == '975314628'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873296'\nassert solution('''\n386592714\n154873296\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '863725149'\nassert solution('''\n729641835\n154873296\n386592714\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '863725149'\nassert solution('''\n863725149\n154873296\n386592714\n729641835\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '863725149'\nassert solution('''\n975314628\n154873296\n386592714\n863725149\n729641835\n412968357\n631457982\n598236471\n247189563\n''') == '863725149'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == \"6\"\nassert solution('''\n9 5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == \"3\"\n\nassert solution('''\n9 5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == \"8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '-1'\nassert solution('2 3') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '3'\nassert solution('6 3') == '6'\nassert solution('7 7') == '7'\nassert solution('4 9') == '9'\nassert solution('1 4') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n\"\"\") == \"9\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 7\n1 2\n3 4\n5 6\n7 1\n9 8\n10 7\n\n''') == '6'\nassert solution('''\n9 7\n1 2\n3 4\n5 6\n7 1\n9 8\n10 7\n\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '6'\n\nassert solution('''\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '-1'\n\nassert solution('''\n2\n1 1\n3 3\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n') == '3'\nassert solution('3 4\\n') == '6'\nassert solution('3\\n') == '-1'\nassert solution('6\\n') == '4'\nassert solution('5\\n') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 1 1 3 5 3 5 7\\n3 1\") == \"6\"\nassert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"8\"\nassert solution(\"5 3\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"-1\"\n",
        "num_ids_2": 72,
        "num_ids_4": 119
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '8 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n'\n) == '4'\n\nassert solution(\n    '9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n'\n) == '6'\n\nassert solution(\n    '9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n'\n) == '-1'\n\nassert solution(\n    '10 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n'\n) == '-1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES', 'First Test'\nassert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO', 'Second Test'\nassert solution('''\n5 5 5 5\n100 101 101 101 101\n3 2 1 100000000\n10 20 15 14\n101 101 101 101 101\n''') == 'YES', 'Third Test'\nassert solution('''\n4 4 4 4\n100 101 101 101 101\n3 2 1 100000000\n10 20 15 14\n101 101 101 101 101\n''') == 'NO', 'Fourth Test'\nassert solution('''\n4 4 4 4\n100 101 101 101 101\n3 2 1 100000000\n10 20 15 14\n101 101 101 101 101\n''') == 'NO', 'Fifth Test'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5 3 2 8') == 'YES'\nassert solution('2\\n10 20 15 14') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"101 101 101 3\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n\") == \"YES\"\nassert solution(\"3 2 1 100000000\\n101 101 101 3\\n\") == \"NO\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3''') == 'YES'\nassert solution('''10 10 10 1\n100 100 100 1\n100 100 100 1\n100 100 100 1\n100 100 100 1''') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES\\nYES\\nNO\\nNO\\nYES\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\nassert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n2 1 2 1 2 2 2 2 2 2 2\") == \"3 3\"\nassert solution(\"2 5\\n2 1 5 3 5 5 5 5 5 5 5\") == \"9 8 12 6 8\"\nassert solution(\"3 3\\n2 1 5 3 5 5 5 5 5 5 5\") == \"6 5\"\nassert solution(\"4 4\\n1 2 3 4\") == \"3 4 6 5\"",
        "num_ids_2": 53,
        "num_ids_4": 98
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n2 1 5 3 5\n''') == '3 3 \n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '9 8 12 6 8'\nassert solution('4 4') == '3 4 6 5 ",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5', solution('''4 4\n1 2 3 4\n''')\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8', solution('''5 5\n2 1 5 3 5\n''')\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3', solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''')",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n2 1 5 3 5') == '3 3\\n'\nassert solution('4 4\\n1 2 3 4') == '3 4 6 5\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2 2') == '9 8 12 6 8\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 73
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n1 2 3 4''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"3 3\"\nassert solution(\"3 3\") == \"3 3\"\nassert solution(\"2 10\") == \"3 3\"\nassert solution(\"1 1\") == \"2 2\"\nassert solution(\"1 1 1 1 1\") == \"3 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5 \nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"3 4 6 5\"\nassert solution(\"5 5\") == \"9 8 12 6 8\"\nassert solution(\"2 10\") == \"3 3\"",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '3 4 6 5 '\nassert solution('5 5') == '9 8 12 6 8 '\nassert solution('2 10') == '3 3 '\n",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example) == 'YES'\nassert solution(long) == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 6\\n'\n                '1 2\\n'\n                '1 3\\n'\n                '1 4\\n'\n                '2 5\\n'\n                '2 6\\n'\n                '3 7\\n'\n                '7 8\\n'\n                '7 9\\n'\n                '9 10\\n'\n                '4 3 8 9 10\\n'\n                '3 2 4 6\\n'\n                '3 2 1 5\\n'\n                '3 4 8 2\\n'\n                '2 6 10\\n'\n                '3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n\n----\n\nimport sys\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n5 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n5 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n5 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n5 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 2 2 1 3\\n\"\n    \"3\\n\"\n    \"1 1 1\\n\"\n    \"4\\n\"\n    \"1 2 3 4\\n\"\n    ) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\n\"\n\nassert solution(\n    \"5\\n\"\n    \"1 2 2 1 3\\n\"\n    \"3\\n\"\n    \"1 1 1\\n\"\n    \"4\\n\"\n    \"1 2 3 4\\n\"\n    ) == \"NO\\n1 3\\n3 5\\n5 4\\n1 2\\n\"\n\nassert solution(\n    \"10\\n\"\n    \"1 2\\n\"\n    \"3 4\\n\"\n    \"5 6\\n\"\n    \"7 8\\n\"\n    \"9 10\\n\"\n    \"11 12\\n\"\n    \"13 14\\n\"\n    \"15 16\\n\"\n    \"17 18\\n\"\n    \"19 20\\n\"\n    \"21 22\\n\"\n    \"23 24\\n\"\n    \"25 26\\n\"\n    \"27 28\\n\"\n    \"29 30\\n\"\n    \"31 32\\n\"\n    \"33 34\\n\"\n    \"35 36\\n\"\n    \"37 38\\n\"\n    \"39 40\\n\"\n    \"41 42\\n\"\n    \"43 44\\n\"\n    \"45 46\\n\"\n    \"47 48\\n\"\n    \"49 50\\n\"\n    \"51 52\\n\"\n    \"53 54\\n\"\n    \"55 56\\n\"\n    \"57 58\\n\"\n    \"59 60\\n\"\n    \"61 62\\n\"\n    \"63 64\\n\"\n    \"65 66\\n\"\n    \"67 68\\n\"\n    \"69 70\\n\"\n    \"71 72\\n\"\n    \"73 74\\n\"\n    \"75 76\\n\"\n    \"77 78\\n\"\n    \"79 80\\n\"\n    \"81 82\\n\"\n    \"83 84\\n\"\n    \"85 86\\n\"\n    \"87 88\\n\"\n    \"89 90\\n\"\n    \"91 92\\n\"\n    \"93 94\\n\"\n    \"95 96\\n\"\n    \"97 98\\n\"\n    \"99 100\\n\"\n    \"101 102\\n\"\n    \"103 104\\n\"\n    \"105 106\\n\"\n    \"107 108\\n\"\n    \"109 110\\n\"\n    \"111 112\\n\"\n    \"113 114\\n\"\n    \"115 116\\n\"\n    \"117 118\\n\"\n    \"119 120\\n\"\n    \"121 122\\n\"\n    \"123 124\\n\"\n    \"125 126\\n\"\n    \"127 128\\n\"\n    \"129 130\\n\"\n    \"131 132\\n\"\n    \"133 134\\n\"\n    \"135 136\\n\"\n    \"137 138\\n\"\n    \"139 140\\n\"\n    \"141 142\\n\"\n    \"143 144\\n\"\n    \"145 146\\n\"\n    \"147 148\\n\"\n    \"149 150\\n\"\n    \"151 152\\n\"\n    \"153 154\\n\"\n    \"155 156\\n\"\n    \"157 158\\n\"\n    \"159 160\\n\"\n    \"161 162\\n\"\n    \"163 164\\n\"\n    \"165 166\\n\"\n    \"167 168\\n\"\n    \"169 170\\n\"\n    \"171 172\\n\"\n    \"173 174\\n\"\n    \"175 176\\n\"\n    \"177 178\\n\"\n    \"179 180\\n\"\n    \"181 182\\n\"\n    \"183 184\\n\"\n    \"185 186\\n\"\n    \"187 188\\n\"\n    \"189 190\\n\"\n    \"191 192\\n\"\n    \"193 194\\n\"\n    \"195 196\\n\"\n    \"197 198\\n\"\n    \"199 200\\n\"\n    \"201 202\\n\"\n    \"203 204\\n\"\n    \"205 206\\n\"\n    \"207 208\\n\"\n    \"209 210\\n\"\n    \"211 212\\n\"\n    \"213 214\\n\"\n    \"215 216\\n\"\n    \"217 218\\n\"\n    \"219 220\\n\"\n    \"221 222\\n\"\n    \"223 224\\n\"\n    \"225 226\\n\"\n    \"227 228\\n\"\n    \"229 230\\n\"\n    \"231 232\\n\"\n    \"233 234\\n\"\n    \"235 236\\n\"\n    \"237 238\\n\"\n    \"239 240\\n\"\n    \"241 242\\n\"\n    \"243 244\\n\"\n    \"245 246\\n\"\n    \"247 248\\n\"\n    \"249 250\\n\"\n    \"251 252\\n\"\n    \"253 254\\n\"\n    \"255 256\\n\"\n    \"257 258\\n\"\n    \"259 260\\n\"\n    \"261 262\\n\"\n    \"263 264\\n\"\n    \"265 266\\n\"\n    \"267 268\\n\"\n    \"269 270\\n\"\n    \"271 272\\n\"\n    \"273 274\\n\"\n    \"275 276\\n\"\n    \"277 278\\n\"\n    \"279 280\\n\"\n    \"281 282\\n\"\n    \"283 284\\n\"\n    \"285 286\\n\"\n    \"287 288\\n\"\n    \"289 290\\n\"\n    \"291 292\\n\"\n    \"293 294\\n\"\n    \"295 296\\n\"\n    \"297 298\\n\"\n    \"299 300\\n\"\n    \"301 302\\n\"\n    \"303 304\\n\"\n    \"305 306\\n\"\n    \"307 308\\n\"\n    \"309",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n'''\nassert solution('''\n2\n3\n1 2\n1 2\n1 2\n''') == 'YES\\n1 3\\n3 5\\n5 4\\nYES\\n1 2\\nNO\\nYES\\n1 2\\nNO\\nYES\\n1 2\\nYES\\n'''\nassert solution('''\n5\n5\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == 'YES\\n1 3\\n3 5\\n5 4\\nYES\\n1 2\\nNO\\nYES\\n1 2\\nNO\\nYES\\n1 2\\nYES\\n'''\nassert solution('''\n4\n5\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == 'NO\\n1 3\\n3 5\\n5 4\\nYES\\n1 2\\nYES\\n1 2\\nYES\\n1 2\\nNO\\nYES\\nYES\\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n2\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n3\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES",
        "num_ids_2": 1409,
        "num_ids_4": 1409
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution([4, 5, 1, 2, 2, 1, 3, 3, 1, 4]) == 'YES'\nassert solution([4, 5, 1, 2, 2, 1, 3, 3, 1, 4, 4, 3, 2]) == 'YES'\nassert solution([5, 1, 1, 2, 2, 1, 3, 3, 1, 4, 4, 3, 2]) == 'YES'",
        "num_ids_2": 36,
        "num_ids_4": 104
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"01011110\"\nassert solution(\n    \"1\\n10 1\\n111111111\\n\") == \"01\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '01011110'\nassert solution(input()) == '0101111'\nassert solution(input()) == '0011111'\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n11011010''') == '01011110'\nassert solution('''4 1\n1111100''') == '0011111'\nassert solution('''3 1\n11011010''') == '0101111'\n\n\"\"\"\n\nfrom math import gcd\n\nq = int(input())\nfor _ in range(q):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # print(n, k, a)\n\n    if k == 0:\n        print(\"\".join(sorted(list(map(str, a)))))\n        continue\n\n    a.sort()\n\n    # print(a)\n\n    count = 0\n\n    while k:\n        if count >= n:\n            break\n        a.pop(0)\n        a.pop(0)\n        count += 1\n        k -= 1\n\n    # print(a, count)\n\n    if count < n:\n        print(\"\".join(sorted(list(map(str, a)))))\n    else:\n        print(a)\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\nassert solution('''\n3\n4 4\n11111\n1111\n''') == '11111'\nassert solution('''\n2\n4 4\n11111\n1111\n''') == '11111'\nassert solution('''\n4\n4 4\n11111\n1111\n''') == '11111'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '01011110'\n\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n001100\n0111''') == '0101'\nassert solution('''5\n3\n10111\n10101\n0011\n1111''') == '01011'\nassert solution('''4\n3\n1001\n1101\n0111''') == '00011'\nassert solution('''10\n10\n1101110111\n1101110111\n1101110111\n1101110111\n1101110111\n1101110111\n1101110111\n1101110111\n1101110111''') == '000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"01011110\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"11011010\"\n) == \"01011110\"\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 5\") == \"01011110\"\nassert solution(\"7 9\") == \"0101111\"\nassert solution(\"1111100\") == \"0011111\"\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\nassert solution('''\n4 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '5'\nassert solution('''\n8 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 2 3 4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"1 2 4\"\nassert solution(\"6 1\") == \"4\"\n\n\nimport itertools\nimport functools\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1') == '3'\nassert solution('5 1') == '4'\nassert solution('7 1') == '6'\nassert solution('6 1') == '5'\nassert solution('7 1') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8') == '3\\n1 4 7'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 2 4'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '4'\nassert solution('5 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution(\"3 1\") == \"1 2 3\"\nassert solution(\"4 1\") == \"1 3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 2 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8') == '3'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '4'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution() == \"19\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\nassert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('5 1 2 3 5') == '7'\nassert solution('2 1') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3 1\n-100 2 3\n\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n\n''') == '19'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''2\n2 1\n-3 0\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n\n''') == '19'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 3 2\\n\"\n    \"-100 2 3\\n\"\n    \"\\n\"\n    \"2 1\\n\"\n    \"2 2\\n\"\n    \"\\n\"\n    \"2 1\\n\"\n    \"-3 0\\n\"\n    \"\\n\"\n    ) == \"19\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '19'\nassert sorted(solution()) == list(range(1, 21))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 3 3'\nassert solution('1 2') == '0 0'\nassert solution('3 2') == '1 3 3'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3 3'\nassert solution('1 2') == '0 0'\nassert solution('1 2') == '0 0'\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5') == '21 7 15 21 3'\nassert solution('1 2') == '0 0'\nassert solution('3 3') == '1 3 3'\n\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == stdin.strip().split()\n\n\n\"\"\"\n\nfrom typing import List\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"0 0\"\nassert solution(\"1 2\") == \"0 0\"\nassert solution(\"3 3\") == \"1 3 3 \nassert solution(\"1 2\") == \"1 3 3 \nassert solution(\"1 2\") == \"1 3 3 \n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5') == '21 7 15 21 3'\nassert solution('1 2') == '0 0'\n\n'''\nfrom heapq import heappush, heappop\nimport sys",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '21 3 3'\nassert solution('''\n1 2\n1 2\n''') == '0 0'\nassert solution('''\n1 2\n2 3\n1 3\n''') == '1 3 3'\nassert solution('''\n1 2\n2 3\n3 4\n2 4\n1 4\n''') == '2 4 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 28
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '21 3 3'\nassert solution() == '15 7 15 3'\nassert solution() == '0 0'\nassert solution() == '0 0'\nassert solution() == '0 0'\n",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''\n2 1\n2 1\n''') == '0 0'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\n'''\n\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 5') == '21 7 15 21 3'\nassert solution('1 2') == '0 0'\nassert solution('3 3') == '1 3 3'",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 2\") == \"YES\"\nassert solution(\"4\\n5 5 5 5\") == \"NO\"\nassert solution(\"3\\n1 2 2\") == \"YES\"\nassert solution(\"3\\n1 2 4\") == \"NO\"\nassert solution(\"3\\n1 3 4 4\") == \"YES\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n\"\"\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n4\n1 2 3 4\n1\n2\n3\n4\n5\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"3\\n1 2 2\") == \"YES\"\nassert solution(\"3\\n1 2 2\\n3\") == \"NO\"\nassert solution(\"3\\n1 2 2\\n3\\n4\") == \"YES\"\nassert solution(\"3\\n1 2 2\\n3\\n4\\n5\") == \"NO\"\n",
        "num_ids_2": 25,
        "num_ids_4": 64
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5''') == 'YES'\nassert solution('''5\n1 2 2\n4\n5 5 5 5''') == 'NO'\nassert solution('''1\n100''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'NO'\nassert solution('''4\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"12\"\nprint(solution(input_))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1010\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '12'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    input_string=\"4 4\"\n) == \"12\"\nassert solution(\n    input_string=\"4 5\"\n) == \"11\"\nassert solution(\n    input_string=\"1001\"\n) == \"1\"\nassert solution(\n    input_string=\"10101\"\n) == \"11\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '12'\nassert solution('4 5') == '11'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_1) == \"12\"\nassert solution(input_2) == \"11\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == \"12\"\nprint(solution(INPUT))\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n1010\n1101\n\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n4 5\n1001\n10101\n\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n1\n10001\n\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == '12'\nassert solution(input_data2) == '11'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n4\\n6\\n8\\n') == '2 4 1 5'\nassert solution('5\\n2\\n4\\n6\\n8\\n') == 'NO'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n2\n3\n4\n\"\"\") == \"\"\"NO\"\"\", \"Wrong answer in test case #1\"\nassert solution(\"\"\"5\n10\n20\n30\n\"\"\") == \"\"\"YES\"\"\", \"Wrong answer in test case #2\"\nassert solution(\"\"\"5\n10\n11\n12\n\"\"\") == \"\"\"NO\"\"\", \"Wrong answer in test case #3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4\") == \"NO\"\nassert solution(\"2\\n2\") == \"YES\"\nassert solution(\"2\\n6\") == \"NO\"\nassert solution(\"2\\n8\") == \"YES\"\nassert solution(\"10\\n100\") == \"YES\"\n\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n\n\n\n'''\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    even = 0\n    odd = 0\n    count = 0\n    array = []\n    evenSum = 0\n    oddSum = 0\n    for j in range(n):\n        x = int(input())\n        array.append(x)\n        if(x%2 == 0):\n            even += 1\n            evenSum += x\n        if(x%2!= 0):\n            odd += 1\n            oddSum += x\n        if(j%2 == 0 and even < odd):\n            even = 0\n            odd = 0\n        if(j%2!= 0 and even > odd):\n            even = 0\n            odd = 0\n    if(even == odd):\n        print(f\"YES\")\n    else:\n        print(f\"NO\")\n    print(f\"{evenSum} {oddSum} {even} {odd}\")\n    ",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n''') == 'NO'\nassert solution('''\n2\n4\n''') == 'YES'\nassert solution('''\n2\n3\n''') == 'NO'\nassert solution('''\n2\n3\n''') == 'YES'\nassert solution('''\n10\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2') == 'NO'\nassert solution('5\\n4') == 'YES'\nassert solution('5\\n6') == 'YES'\nassert solution('5\\n8') == 'YES'\nassert solution('5\\n10') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == '2 4 1 5'\nassert solution('''10\n2\n4\n6\n8\n10''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == '2 4 1 5\\nNO'\nassert solution('''5\n2\n4\n6\n8\n10''') == '2 4 6 8 1 3 5 11\\nYES'\nassert solution('''5\n2\n4\n6\n8\n10''') == 'NO'\n\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('10') == 'YES'\nassert solution('12') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '1'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '0'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''3\n4\n4 2\n2\n''') == '1'\nassert solution('''2\n6\n5\n4\n1\n2\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n7\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n5\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\nassert solution('''\n10\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n5\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\n\n'''\n--Solution by @StefanPochmann\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n = int(stdin.split()[0])\n        a = list(map(int, stdin.split()[1].split(' ')))\n        count = 0\n        for i in range(n):\n            temp = a[i]\n            for j in range(i + 1, n):\n                if (temp + a[j]) == a[j]:\n                    count += 1\n        return str(count)\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1') == '5'\nassert solution('2\\n3\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '0'\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5') == '4'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5') == '0'\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '4'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\n",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == \"1\"\nassert solution('''4\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n10\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\nassert solution('''\n1\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n1\n2\n1 2\n2 3\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\n\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n\nassert solution('''\n10\n1 10\n2 2\n3 2\n4 2\n5 2\n6 2\n7 2\n8 2\n9 2\n10 10\n10 2\n1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n1 10\n2 10\n3 10\n4 10\n5 10\n6 10\n7 10\n8 10\n9 10\n10 10\n1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n1 10\n2 10\n3 10\n4 10\n5 10\n6 10\n7 10\n8 10\n9 10\n10 10\n1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n1 1000\n2 1000\n3 1000\n4 1000\n5 1000\n6 1000\n7 1000\n8 1000\n9 1000\n10 1000\n1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3') == '4'\nassert solution('4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3') == '4'\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4\n3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"3\"\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"4\"\nassert solution('''\n2\n2 5\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"4\"\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"7\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '4'\nassert solution(input()) == '2'\nassert solution(input()) == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3 1 5\n3 4\n2 1\n2 3\n3 5\n4\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n4\n3 1 5\n3 4\n2 1\n2 3\n3 5\n4\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '4'\nassert solution(input()) == '2'\nassert solution(input()) == '7'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '60'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1439'\nassert solution('3') == '1180'\nassert solution('4') == '60'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"60\"\nassert solution(\"\"\"\n3\n1 1\n2 2\n1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1\n1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n1 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"60\"\nassert solution(\"1\") == \"1439\"\nassert solution(\"2\") == \"1180\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1439\"\nassert solution(\"4\") == \"1180\"\nassert solution(\"6\") == \"1\"\nassert solution(\"8\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"60\"\nassert solution([0, 10, 5, 20, 15]) == \"1439\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '5'\nassert solution('''\n2\n100 -11\n59 -1\n''') == '60'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"60\"\nassert solution(\"5\") == \"1439\"\nassert solution(\"5\") == \"1180\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"60\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '60'\nassert solution('10') == '1439'\nassert solution('1') == '1'\nassert solution('23') == '23'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n\") == \"60\\n1439\\n1180\\n1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    LRUD\n    4\n    LURD\n    ''') == '1 2'\nassert solution('''\n    5\n    RRUDU\n    5\n    LLDDR\n    ''') == '3 4'\nassert solution('''\n    4\n    LRUD\n    4\n    LURD\n    ''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '2'\nassert solution('5') == '1'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'\nassert solution() == '1 2'\nassert solution() == '3 4'\nassert solution() == '1 4'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2'\nassert solution('''4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '3 4'\nassert solution('''5\nRRUDU\n5\nLLDDR\n''') == '-1'\nassert solution('''5\nRRUDU\n5\nLLDDR\n''') == '3 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n5\\nRRUDU\\n5\\nLLDDR\\n\") == \"1 2\"\nassert solution(\"2\\n2\\nLLUD\\n2\\nRRDDD\\n2\\nLLDDR\\n\") == \"-1\"\nassert solution(\"3\\n3\\nLURD\\n3\\nRUDD\\n3\\nLLDDD\\n3\\nRRDDD\\n\") == \"1 4\"\n",
        "num_ids_2": 71,
        "num_ids_4": 116
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''5\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '3 4'\nassert solution('''3\n3\nLRDU\n5\nRRUDU\n5\nLLDDR''') == '3 4'\nassert solution('''3\n3\nRDU\n5\nRRUDU\n5\nLLDDR''') == '3 4'\nassert solution('''6\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 2'\nassert solution() == '1 4'\nassert solution() == '3 4'\nassert solution() == '-1'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 4') == '1 3'\nassert solution('3 4') == '2 3'\nassert solution('-1') == '-1'\nassert solution('-1') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2'\nassert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '3 4'\nassert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4'\nassert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '-1'\nassert solution('''\n1\nRRUDU\n5\nLLDDR\n''') == '1 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 2\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"5\") == \"3 4\"\nassert solution(\"10\") == \"9 10\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"1\"\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"2\"\nassert solution('''\n4\n6\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"2\"\nassert solution('''\n10\n9 4 9 4 6 6 6 9 9 9\n3\n2 4 7 8 9\n2\n8\n''') == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n4 2 4 1 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1', \"First\"\nassert solution('''3\n2 5 2 1 1 1 2\n4\n5 5 5 5 5 5\n5\n2 1 5 4 3\n1\n1\n3\n1 1 1 3\n''') == '2', \"Second\"\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1', \"Third\"\nassert solution('''4\n2\n2 2 2 2\n2\n2\n2\n2\n''') == '0', \"Fourth\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n7 4 2 4 1 4 3 4\\n5\\n2 1 5 4 3') == '3\\n1\\n0'\nassert solution('4\\n7 4 2 4 1 4 3 4\\n5\\n1\\n1 1 1 3') == '2\\n0\\n2'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n4\n4 2 4 1 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n5\n1 2 3 4 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n3\n2 2 4 1 4 3\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n3\n5\n1 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '2'\nassert solution('''4\n3\n5\n1 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '1'\nassert solution('''2\n5\n5\n1 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '1'\nassert solution('''2\n3\n5\n1 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1337\n''') == '0'\nassert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\nprint('\"Run\" is good. Great job!')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\") == \"121\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('8') == '121'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1337\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('8') == '121'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n8 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n\"\"\") == \"121\"\nassert solution(\"\"\"\n3\n1337\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n1000\n\"\"\") == \"0\"\nassert solution(\"\"\"\n8\n8 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n\"\"\") == \"121\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '9'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '121'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\\n4\\n9\\n10\\n1\\n6\\n5\") == \"121\"\nassert solution(\"1\\n1337\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 52
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6'\nassert solution('''\n5 10\n10 20 20 30 50\n10 30 20 10 50 30 20\n20 20 10 20 30 50 30 20\n30 20 20 10 20 30 50 30 20\n50 30 20 10 20 30 20 20 30 20\n''') == '6'\nassert solution('''\n3\n1 2\n3\n5\n''') == '0'\nassert solution('''\n4\n1 2 3\n10 6\n8 7 1 8\n''') == '27'\nassert solution('''\n1\n100 50\n20 100\n''') == '22'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5 10\n1 2 3 4 5 6 7 8\n10 25\n24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n10 25\n24 24 24 24 24 24 24 24 24''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '0'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''5 10\n1 2 1 3\n4 5\n6 7 8 9\n10 20\n7 8 9 10\n11 12\n13 14\n15 16\n17 18''') == '0'\nassert solution('''5 10\n1 2 1 3\n4 5\n6 7 8 9\n10 20\n7 8 9 10\n11 12\n13 14\n15 16\n17 18''') == '227'\nassert solution('''5 10\n1 2 1 3\n4 5\n6 7 8 9\n10 20\n7 8 9 10\n11 12\n13 14\n15 16\n17 18''') == '8'\nassert solution('''5 10\n1 2 1 3\n4 5\n6 7 8 9\n10 20\n7 8 9 10\n11 12\n13 14\n15 16\n17 18''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"18\"\nassert solution(input()) == \"227\"\nassert solution(input()) == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '21'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 5\n2 5\n''') == '5'\nassert solution('''\n2\n7 2\n2 3\n''') == '3'\nassert solution('''\n3\n10 6\n8 7 1 8 3 7 5 10 8 9\n''') == '227'\nassert solution('''\n4\n10 6\n8 7 1 8 3 7 5 10 8 9\n''') == '8'\nassert solution('''\n5\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n''') == '227'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\") == \"6\"\nassert solution(\"5\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\") == \"227\"\nassert solution(\"5\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\") == \"8\"\n\nstdin = \"5\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n20 100 50 20 100500\"\nassert solution(stdin) == \"6\"\n",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '22'\nassert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1,2,3\") == \"1\"\nassert solution(\"1,2\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n1\\n') == '2'\nassert solution('2\\n3\\n') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n3\n1 1\n2 1\n3 2\n4 5\n1 2\n2 4\n3 4\n1 1\n2 2\n1 3\n4 5\n1 2\n2 4\n3 4\n''') == \"2\"\nassert solution('''\n1\n2\n3\n1 2\n2 1\n3 2\n1 1\n2 2\n1 3\n4 5\n1 2\n2 4\n3 4\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n2\\n1\") == '2'\nassert solution(\"3\\n2\\n1\\n4\") == '3'\nassert solution(\"7\\n1\\n2\\n3\\n5\\n6\\n7\\n8\") == '7'\n",
        "num_ids_2": 38,
        "num_ids_4": 69
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n''') == '1'\nassert solution('''\n1\n2\n1\n''') == '2'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 1\") == \"1\"\nassert solution(\"1 2\\n1 1\\n\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('7') == '7'\nassert solution('8') == '8'\nassert solution('9') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1]) == [1], '1'\nassert solution([1, 2, 3, 4, 5]) == [1,2,3,4,5], '2'\nassert solution([1, 2, 3, 4, 5, 6]) == [1,2,3,6,10,15,21,28,45,55], '3'\nassert solution([1, 2, 3, 4, 5, 6, 7]) == [1,2,3,6,11,16,23,34,45,56,67], '4'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == [1,2,3,6,11,16,23,34,45,56,67,78], '5'\n",
        "num_ids_2": 42,
        "num_ids_4": 128
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '\\n'.join(['1', '3', '3', '1'])\n\n\n\"\"\"\n\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        # if rowIndex == 0:\n        #     return [1]\n\n        # rv = [1]\n        # for i in range(1, rowIndex + 1):\n        #     prev = rv[-1]\n        #     cur = prev + prev\n        #     rv.append(cur)\n        # return rv\n\n        res = [1]\n\n        for i in range(1, rowIndex + 1):\n            # res = res + prev + prev\n            res = [n + n + 1 for n in res]\n\n        return res\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1,2\"\nassert solution(\"3\") == \"1,3,3,1\"\nassert solution(\"4\") == \"1,4,6,4,1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1\n1''') == '1,1,3,3,1,1,3,1\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == '[1,3,3,1,1,1]', 'Should return the first 6 rows of Pascal triangle'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(3) == [1,3,3,1]\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == [1, 3, 3, 1]\nassert solution('5') == [1, 5, 10, 10, 5]\nassert solution('1') == [1]\nassert solution('4') == [1, 4, 6, 4, 1]",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == ['1', '1', '1', '1', '1']\nassert solution('6') == ['1', '1', '1', '1', '1', '1']\nassert solution('7') == ['1', '1', '1', '1', '1', '1', '1']\n",
        "num_ids_2": 47,
        "num_ids_4": 75
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0000000000001011\") == 3\nassert solution(\"0000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        return sum([bin(n >> i).count('1') for i in range(32)])\n\nassert Solution().hammingWeight(int('0000000000001011', 2)) == 3\nassert Solution().hammingWeight(int('0000000010000000', 2)) == 1\n",
        "num_ids_2": 21,
        "num_ids_4": 56
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n\"\"\"\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        res = 0\n        while n!= 0:\n            res += 1\n            n = n & (n - 1)\n        return res",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\"\nassert solution(\"000000000000000000000000000000000000\") == \"32\"\nassert solution(\"0000000000000000000000000000000000\") == \"32\"\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00000000000000000000000000001011\") == '3'\nassert solution(\"00000000000000000000000010000000\") == '1'\nassert solution(\"11111111111111111111111111111101\") == '31'\n'''\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        result = 0\n        while n:\n            if n & 1:\n                result += 1\n            n >>= 1\n        return result\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test_case_1) == '3'\nassert solution(test_case_2) == '1'\nassert solution(test_case_3) == '31'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '42'\nassert solution(input()) == '123'\nassert solution(input()) == '104'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12345\") == \"12345\"\nassert solution(\"11111\") == \"12110\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1,2,3]) == '123'\nassert solution([4,3,2,1]) == '4321'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '5'\nassert solution('5') == '5'\nassert solution('123') == '124'\nassert solution('-1') == '-2'\nassert solution('-1-2') == '-2-3'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == ['1','0']\nassert solution('100') == ['1','0','0']\nassert solution('100') == ['1','0','0']\nassert solution('10000') == ['1','0','0','0']\nassert solution('10000') == ['1','0','0','0']\n\n\"\"\"\nimport collections\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        if len(digits) == 0:\n            return []\n        tmp = digits[::-1]\n        cur = 0\n        for i, v in enumerate(tmp):\n            cur += v*pow(10, i)\n        cur += 1\n        res = []\n        while cur!= 0:\n            res.append(cur % 10)\n            cur = cur // 10\n        return res[::-1]\n\ns = Solution()\nprint(s.plusOne([1,2,3]))\nprint(s.plusOne([4,3,2,1]))",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"101\"\nassert solution(\"1, 2\") == \"1, 2\"\nassert solution(\"1, 2, 3\") == \"1, 2, 4\"\nassert solution(\"1, 2, 3, 4\") == \"1, 2, 3, 4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 52
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    [\"0\", \"1\", \"9\", \"9\", \"9\", \"9\", \"9\"]\n) == [\"1\", \"0\", \"9\", \"9\", \"9\", \"9\", \"9\"]\nassert solution(\n    [\"0\", \"1\", \"9\", \"9\", \"9\", \"9\", \"9\"]\n) == [\"1\", \"0\", \"0\", \"9\", \"9\", \"0\", \"9\"]\nassert solution(\n    [\"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\"]\n) == [\"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\"]\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"5 10\") == \"15\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1\n''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4', \"Wrong result\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '4'\nassert solution('5 4') == '5'\nassert solution('1 2') == '3'\n\n\"\"\"\n\nA, B = list(map(int, input().split()))\nprint(max(A + B, A - B, A * B))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 1\") == \"2\"\n\n--Sample Test Cases--\n\nSample test case 1\n\nSample Output\n\n1\n3\n3 1\n3+1=4, 3-1=2 and 3 \\times 1=3. The largest among them is 4.\n\nSample test case 2\n\nSample Output\n\n1\n3\n3 1\n3+1=4, 3-1=2 and 3 \\times 1=3. The largest among them is 4.\n\"\"\"\nfrom typing import List\n\n\"\"\"\nThe solution below uses the max function in python to solve the problem.\nHere is a Python comment describing what this solution does:\n\nIn the below solution, we have used the max function and\nthe min function to solve the problem. We use the built-in function\nfor the same purpose.\n\nWhat is a built-in function? A built-in function is an operation built into a language.\nA Python built-in function is an operation that is built into the interpreter.\n\nThere are many built-in functions in the Python language.\nFor example, the max() function takes three inputs (x, y, and z)\nand returns the largest of the values.\n\nAnother example is min(), which takes three inputs (x, y, and z)\nand returns the smallest of the values.\n\nThe built-in functions are described here:\nhttps://docs.python.org/3/library/functions.html\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"5 5\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"5 -2\") == \"7\"\nassert solution(\"7 -6\") == \"9\"\nassert solution(\"4 -5\") == \"-1\"\nassert solution(\"1 -1\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"3\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"3\"\nassert solution('''3 3\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12''') == \"3\"\nassert solution('''1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n1 100\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == '3'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '3'\nassert solution('5 10') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n2 2') == '1'\nassert solution('5 5\\n0 5') == '5'\nassert solution('5 5\\n-2 4\\n3 4\\n4 -4') == '3'",
        "num_ids_2": 30,
        "num_ids_4": 55
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3\"\nassert solution(\"1 5\") == \"3\"\nassert solution(\"2 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"8 9\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"12\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('200') == 'Yes'\nassert solution('111') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('13') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == 'Yes'\nassert solution('8') == 'No'\nassert solution('9') == 'No'\nassert solution('5') == 'Yes'\nassert solution('11') == 'Yes'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '12'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n5 -1\"\"\") == \"12\"\n\nassert solution(\"\"\"3\n-1 5 3\"\"\") == \"10\"\n\nassert solution(\"\"\"5\n3 5 -1\"\"\") == \"11\"\n\nassert solution(\"\"\"5\n-1 3 5 -1\"\"\") == \"11\"\n\nassert solution(\"\"\"6\n3 5 1 5 1\"\"\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"5\") == \"18\"\nassert solution(\"4\") == \"22\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5 -1\n    \"\"\"\n) == \"12\"\nassert solution(\n    \"\"\"\n    3\n    3 5 -1\n    \"\"\"\n) == \"10\"\nassert solution(\n    \"\"\"\n    3\n    1 2 3\n    \"\"\"\n) == \"12\"\nassert solution(\n    \"\"\"\n    3\n    3 3 4\n    \"\"\"\n) == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '12'\nassert solution('3\\n3 5 -1') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 5 1 1\n''') == '20'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"12\"\nassert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"10\"\n\"\"\"\nfrom typing import List\n\ninput_data = input()\nN = int(input_data)",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n3 5 -1\"\"\") == \"\"\"12\n8\n10\"\"\"[::-1]\nassert solution(\"\"\"3\n-1 3 -1\"\"\") == \"\"\"8\n10\n12\"\"\"[::-1]",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BBBWW') == \"1\"\nassert solution('BWBWBW') == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    'BBBWW') == '1'\nassert solution(\n    'WBBWW') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nBBBWW\n''') == '1'\nassert solution('''\nWWWBB\n''') == '3'\nassert solution('''\nWWWWWW\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '1'\nassert solution('B') == '1'\nassert solution('BW') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBWWWBB\") == \"2\"\nassert solution(\"BBBWWWWBB\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BWWBB') == '2'\nassert solution('WWBB') == '2'\nassert solution('BWB') == '3'\nassert solution('WB') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"ABBWW\") == \"2\"\nassert solution(\"ABBBA\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nBBBWW\n''') == '1'\nassert solution('''\nWWWWBB\n''') == '2'\nassert solution('''\nBBBWWW\n''') == '0'\nassert solution('''\nWWWWWW\n''') == '0'\nassert solution('''\nWWWWWWW\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '1'\nassert solution('BBBWW') == '1'\nassert solution('BBBBBWW') == '3'\nassert solution('BBBBBBWW') == '1'\nassert solution('BBBBBBBWW') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('3 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"7 4\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 11') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 22') == 'No'\n\"\"\"\n\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"7 19\") == \"Yes\"\nassert solution(\"9 9\") == \"Yes\"\nassert solution(\"9 21\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"-1 -9\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5 1 2 3 4\") == \"4\"\nassert solution(\"5 1 2 3 4 5\") == \"4\"\nassert solution(\"5 1 2 3 4 5 5\") == \"3\"\nassert solution(\"5 1 2 3 4 5 5 5\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"9\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('15') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 4 1 5 9 2') == \"4\"\nassert solution('10') == \"10\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 1 2\n''') == '4'\nassert solution('''4\n1 1 2\n''') == '3'\nassert solution('''2\n1 1\n''') == '0'\nassert solution('''1\n1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'\nassert solution('5\\n1 1 1 2 2') == '3'\nassert solution('10\\n3 1 4 1 5 9 2') == '4'\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"25\"\nassert solution(\"6\") == \"36\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"5\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '5'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '5'\nassert solution('2') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '5'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 4 2') == 'NO'\nassert solution('3 2 3') == 'NO'\n\"\"\"\na, b, c = map(int, input().split())\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 4 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 2\n3 4 5\n7 8 9''') == \"YES\"\nassert solution('''1 1 1\n1 2 3\n2 3 4''') == \"NO\"\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'YES'\nassert solution('2 4 6') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('1 5 3') == 'NO'\nassert solution('1 6 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Sample tests Failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 1 4 3') == 'NO'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 5 7\") == \"NO\"\nassert solution(\"8 5 9\") == \"YES\"\nassert solution(\"6 5 6\") == \"YES\"\nassert solution(\"1 2 1\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"2 3 4\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 5 3') == 'NO'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('29') == 'Yes'\nassert solution('10') == 'No'\nassert solution('12') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('9') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''29\n''') == \"Yes\"\nassert solution(\n'''35\n''') == \"No\"\nassert solution(\n'''1\n''') == \"Yes\"\nassert solution(\n'''1\n''') == \"Yes\"\n\nprint('Runtime:', time.time() - start)",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('29') == 'Yes'\nassert solution('28') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'No'\nassert solution('23') == 'Yes'\nassert solution('99') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == 'No'\nassert solution('12') == 'Yes'\nassert solution('91') == 'Yes'\nassert solution('29') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('29') == 'Yes'\nassert solution('98') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('28') == 'No', 'Should be No'\nassert solution('29') == 'Yes', 'Should be Yes'\nassert solution('30') == 'No', 'Should be No'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('26') == 'Yes'\nassert solution('21') == 'No'\nassert solution('29') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('3 2 3') == '1'\nassert solution('5 1 2') == '1'\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '1'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"5 5 3\") == \"2\"\nassert solution(\"5 5 2\") == \"4\"\nassert solution(\"7 2 4\") == \"3\"\nassert solution(\"7 7 7\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3 3') == '1'\nassert solution('5 3 4') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 3\n1 2 4\n''') == '1'\nassert solution('''10 7 6\n2 6 2\n1 8 6\n2 3 2\n3 5 6\n4 8 7\n5 1 2\n4 6 5\n6 2 3\n5 2 7\n6 4 8\n7 6 8\n''') == '5'\n\n###########################\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 3') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"7 5 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('5 5 3') == '2'\nassert solution('5 3 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('10 1 5') == '11'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"1 2 4\") == \"2\"\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 2') == 'Yes'\nassert solution('1 3') == 'Yes'\nassert solution('1 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n.#.\n###\n.#.\n''') == 'Yes'\nassert solution('''\n3 4\n.##.\n.###\n.#..\n''') == 'No'\nassert solution('''\n4 4\n.##.\n.###\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'Yes'\n\"\"\"\n\nH, W = list(map(int, input().split()))\n\nfor i in range(1, H+1):\n    print('.'*W if (i, 1) in {(i, w) for w in range(W)} else '*'*(W-1)+('.*' if (i, W-1) in {(i, w) for w in range(W)} else '*'))\n\nfor j in range(1, W+1):\n    print('.'*H if (1, j) in {(h, j) for h in range(H)} else '*'*(H-1)+('.*' if (H-1, j) in {(h, j) for h in range(H)} else '*'))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n#.\\n###\\n#.\\n\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 4\") == \"Yes\"\n\n\"\"\"\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"10 9\") == \"Yes\"\nassert solution(\"20 8\") == \"Yes\"\nassert solution(\"11 11\") == \"Yes\"\nassert solution(\"19 17\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.\n\n''') == 'Yes'\nassert solution('''5 5\n.#.\n..#\n.#.\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('30 10 20') == 'No'\nassert solution('1 2 3') == 'Yes'\nassert solution('1') == 'No'\nassert solution('') == 'Yes'\n\n##Coding Exercise\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\n\nassert solution(\"5 2 5\") == \"No\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\"\nassert solution(\"100 100 100\") == \"Yes\"\nassert solution(\"10 20 10\") == \"Yes\"\nassert solution(\"10 20 20\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == \"Yes\"\nassert solution('1 2 3') == \"No\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 30 10\") == \"No\"\nassert solution(\"10 10 10\") == \"Yes\"\n\nprint(solution(input()))\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 30 20\n''') == 'Yes'\n\nassert solution('''1 2 3\n''') == 'No'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n\n-------------------------------------------------------------",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"100 10 30 20\") == \"No\"\nassert solution(\"10 20 30 40\") == \"Yes\"\nassert solution(\"1 100 100\") == \"Yes\"\n\"\"\"\n\na,b,c = map(int, input().split())",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"6 9 12 7\") == \"Left\"\nassert solution(\"10 1 2 3\") == \"Left\"\nassert solution(\"8 5 3 2\") == \"Left\"\nassert solution(\"7 7 7 7\") == \"Balanced\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 8 7 1''') == 'Left'\nassert solution('''5 6 5 1''') == 'Balanced'\nassert solution('''2 1 4 5''') == 'Left'\n",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 8 7 1\n''') == 'Left'\nassert solution('''5 2 9 4\n''') == 'Left'\nassert solution('''7 3 1 5\n''') == 'Right'\nassert solution('''1 2 2 4\n''') == 'Right'\nassert solution('''6 5 1 8\n''') == 'Right'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 1 1 1\") == \"Left\"\nassert solution(\"1 2 3 4\") == \"Right\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2 4\") == \"Left\"\nassert solution(\"2 2 2 2\") == \"Right\"\nassert solution(\"1 1 1 2\") == \"Left\"\nassert solution(\"1 2 1 1\") == \"Left\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"2 2 2 2\") == \"Balanced\"\nassert solution(\"1 1 1 1\") == \"Left\"\nassert solution(\"4 1 1 1\") == \"Right\"\nassert solution(\"3 1 1 1\") == \"Right\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 8 6 1\") == \"Left\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Left\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"8 8 7 1\") == \"Left\"\nassert solution(\"3 8 3 1\") == \"Left\"\nassert solution(\"6 9 7 1\") == \"Left\"\nassert solution(\"8 8 3 1\") == \"Left\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('5\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '14'\n\n\"\"\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '10'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1()) == sample_output_1(), f\"sample_input_1:{sample_input_1()} sample_output_1:{sample_output_1()}\"\nassert solution(sample_input_2()) == sample_output_2(), f\"sample_input_2:{sample_input_2()} sample_output_2:{sample_output_2()}\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '10'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('2\\n1 1 1 1 1 1 1 1 1\\n0 1 1 1 1 1 1 1 1 1\\n') == '9'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '8'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n2\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nprint(solution(input()))\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'No', 'Tests 1 failed'\nassert solution('2') == 'Yes', 'Tests 2 failed'\nassert solution('3') == 'Yes', 'Tests 3 failed'\nassert solution('4') == 'No', 'Tests 4 failed'\nassert solution('5') == 'No', 'Tests 5 failed'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"0\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 40
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3456') == 'Yes'\nassert solution('3 4\\n1191') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"5 5\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n') == 'Yes'\nassert solution('10\\n') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'Yes'\nassert solution('2\\n') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n') == 'Yes'\nassert solution('3 3\\n') == 'No'\n\n'''\n\nimport re\n\nA, B = map(int, input().split())\n\nfor _ in range(A):\n    if re.match(r'-', input()):\n        print('Yes')\n    else:\n        print('No')\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\\n\") == \"1\"\nassert solution(\"4 3 4\\n\") == \"1\"\nassert solution(\"5 5 5\\n\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '1'\nprint(solution(input))\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('10 20 10') == '10'\nassert solution('20 20 20 20') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1 10 10 1') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"2 2 3\") == \"0\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"6 5 2\") == \"0\"\nassert solution(\"10 10 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('5 5 6') == '1'\nassert solution('3 2 6') == '1'\nassert solution('1 1 6') == '0'\nassert solution('1 1 6') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('1 2 6') == '1'\nassert solution('1 1 10') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 6\") == \"1\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"4 2 6\") == \"2\"\nassert solution(\"4 2 7\") == \"2\"\nassert solution(\"2 4 7\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 1''') == '1'\nassert solution('''3 2 1''') == '2'\nassert solution('''3 2 3''') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"4 4 4\") == \"0\"\nassert solution(\"5 2 6\") == \"1\"\nassert solution(\"6 4 6\") == \"0\"\n\"\"\"\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3\n    1 2\n    1 2''') == '3 2 1'\nassert solution('''2 3 1\n    2 3\n    2 1''') == '1 1 2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('10 100 5') == '5'\nassert solution('5 10 10 5') == '5'\nassert solution('4 4 7 6 6 6 4 3 4') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"3 8 1\") == \"3\"\nassert solution(\"3 8 2\") == \"3 4 7 8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4 2\n5 4 2''') == '2 5 4 7 8'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5 7\"\nassert solution(\"10 2 1\") == \"10\"\nassert solution(\"10 7 2\") == \"10\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('3 8 3') == '3'\nassert solution('3 8 4') == '3'\nassert solution('3 8 5') == '4'\nassert solution('3 8 6') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('10 5 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '3 4 7 8'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"-2 -2 -2\") == \"-2\"\nassert solution(\"1000000000 2\") == \"9\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"7 8 2\") == \"7\"\nassert solution(\"9 8 2\") == \"8\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('AtCoder s Contest') == 'AXC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\n\n'''",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ACB\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest 2\") == \"ABC2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Advanced Contest\") == \"ARC\"\nassert solution(\"AtCoder Beginner World Finals\") == \"ABF\"\n",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AtCoder s Contest') == 'AxC', solution('AtCoder s Contest')\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Advanced Contest') == 'AXC'\nassert solution('AtCoder Beginner') == 'ABC'\nassert solution('AtCoder ADVANCED') == 'AXC'\nassert solution('AtCoder BEGINNER') == 'ABC'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder CLUber Contest\") == \"ACB\"\nassert solution(\"AtCoder CLUber\") == \"ACB\"\nassert solution(\"AtCoder CLUber Contest\") == \"ACB\"\n\"\"\"\n\nstdin = input()\n\nprint(stdin[0].upper() + stdin[1:])\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"2 1 5\") == \"NO\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3\n''') == 'NO'\nassert solution('''\n1 2 1\n''') == 'YES'\nassert solution('''\n1 1 3\n''') == 'YES'\nassert solution('''\n1 2 5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n4\\n') == 'YES'\nassert solution('3\\n5\\n4\\n') == 'NO'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 1\") == \"YES\"\nassert solution(\"1 2 1\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == \"YES\"\nassert solution(\"1 2 1\") == \"NO\"\nassert solution(\"1 5 1\") == \"YES\"\nassert solution(\"1 5 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('1 2 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"5 5 4\") == \"NO\"\n\"\"\"\n\nA, B, X = [int(i) for i in input().split()]\ncats = A + B",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2\") == \"YES\"\nassert solution(\"1 2 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 1 2\") == \"YES\"\nassert solution(\"2 1 1 2\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 5 2') == 'NO'\nassert solution('3 4 4') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 2') == '3'\nassert solution('1 1') == '1'\nassert solution('1 3') == '4'\nassert solution('3 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 50') == '83'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"100 17\\n\") == \"83\"\nassert solution(\n    \"300 20\\n\") == \"800\"\nassert solution(\n    \"200 60\\n\") == \"3400\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4') == '7'\nassert solution('2 3') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7\") == \"83\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"15\"\nassert solution(\"10 10\") == \"50\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '83'\nassert solution('1 2') == '3'\nassert solution('1 10') == '11'\nassert solution('10 10') == '10'\nassert solution('10 100') == '110'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '3'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100 17') == '83'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100 17') == '83'\nassert solution('20 13') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1000000000000000000\"\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1000000000 1000000000\\n') == '1000000000000000000'\nassert solution('4\\n1 2 3 4\\n') == '-1'\nassert solution('2\\n5 8 9 2\\n') == '-1'\n\n\"\"\"\n\n\nimport math",
        "num_ids_2": 40,
        "num_ids_4": 59
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '1000000000'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1000000000000000000'\nassert solution('3') == '1000000000000000000'\n\"\"\"\nimport sys\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1000000000 1000000000\n''') == '1000000000000000000'\nassert solution('''\n3\n10000000 1000000000 1000000000\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1000000000 1000000000\n''') == '1000000000000000000'\nassert solution('''\n3\n1000000000000 1000000000\n''') == '1000000000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"1000000000 1000000000\") == -1\nassert solution(\"0\") == -1\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1000000000000000000\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1000000000000\n''') == '1000000000000000000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"10000\") == \"Yes\"\nassert solution(\"1000\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"2000\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"100\") == \"Yes\"\nassert solution(\"30\") == \"No\"\nassert solution(\"300\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2020\\n10\\n') == 'Yes'\nassert solution('2018\\n218\\n') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"869120\") == \"Yes\"\nassert solution(\"20\") == \"No\"\nassert solution(\"869120\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input('Yes\\n')) == 'Yes'\nassert solution(input('Yes\\nNo\\n')) == 'Yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n2') == 'No'\nassert solution('10\\n1\\n2') == 'No'\nassert solution('1000\\n500\\n20') == 'Yes'\nassert solution('1000\\n500\\n21') == 'No'\nassert solution('1000\\n500\\n500') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\\n\") == \"Yes\"\nassert solution(\"12\\n\") == \"No\"\nassert solution(\"3\\n\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 6') =='safe'\nassert solution('2 2 5') == 'dangerous'\nassert solution('3 3 2') == 'dangerous'\nassert solution('4 1 5') == 'dangerous'\nassert solution('5 3 1') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 6\n''') =='safe'\nassert solution('''\n2 4 8\n''') == 'dangerous'\nassert solution('''\n1 5 8\n''') == 'dangerous'\nassert solution('''\n2 2 2\n''') == 'dangerous'\nassert solution('''\n4 3 2\n''') == 'dangerous'\n''') == 'dangerous'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == 'dangerous'\nassert solution('4 5 6') =='safe'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6 3\n''') =='safe'\nassert solution('''5 6 2\n''') == 'dangerous'\nassert solution('''5 7 2\n''') == 'dangerous'\nassert solution('''4 6 3\n''') == 'dangerous'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 0 1\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 2 3\") == \"dangerous\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') =='safe'\nassert solution('1 1 2') == 'dangerous'\nassert solution('1 1 3') == 'dangerous'\nassert solution('2 1 1') == 'dangerous'\nassert solution('2 3 1') =='safe'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 'dangerous'\nassert solution('1 2 4') =='safe'\nassert solution('4 5 6') == 'delicious'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('1 1 2') == 'dangerous'\nassert solution('0 0 1') == 'dangerous'\n\"\"\"\n\nx, a, b = map(int, stdin.split())\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('6 5 8') == 'dangerous'\nassert solution('10 1 3') =='safe'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10000') == '9999'\nassert solution('100000') == '99999'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('100') == '99'\nassert solution('99') == '99'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '9'\nprint('Done!')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"5\") == \"9\"\nassert solution(\"4\") == \"4\"\nassert solution(\"20\") == \"10\"\nassert solution(\"25\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"9\"\nassert solution(\"10\\n\") == \"9\"",
        "num_ids_2": 17,
        "num_ids_4": 29
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n''') == '4'\nassert solution('''\n10\n''') == '9'\n\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '9'\nassert solution('16') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"100\") == \"100\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '9'\nassert solution('2') == '2'\nassert solution('12') == '12'\nassert solution('9') == '9'\nassert solution('13') == '13'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '10'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3\\n3 1\\n4 2') == '10'\nassert solution('2\\n3 1\\n3 2') == '10'\nassert solution('3\\n3 2\\n4 1') == '10'\nassert solution('4\\n4 1\\n5 3') == '10'\nassert solution('5\\n5 3\\n6 4') == '10'\n",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n1 1\") == \"10\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 3\\n1 1\\n3 2\\n') == '10'\nassert solution('20\\n0 0\\n0 0\\n') == '0'\nassert solution('3\\n5 2\\n1 1\\n3 1\\n') == '10'",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('10') == '10'\nassert solution('3') == '2'\nassert solution('30') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3\\n1 1\\n3 2\\n') == '10'\nassert solution('6\\n3 1\\n4 2\\n3 1\\n5 2\\n6 1\\n') == '17'\nassert solution('5\\n3 1\\n2 4\\n2 1\\n3 2\\n') == '9'\nassert solution('3\\n1 1\\n2 1\\n') == '2'\nassert solution('9\\n1 1\\n2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '5'\n",
        "num_ids_2": 56,
        "num_ids_4": 104
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"3\\n1 3\\n2 2\\n1 1\") == \"8\"\nassert solution(\"100\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\") == \"1210\"",
        "num_ids_2": 44,
        "num_ids_4": 115
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3\\n1 1\") == \"10\"\nassert solution(\"1\\n2 2\\n3 3\") == \"10\"\n\"\"\"\nfrom math import gcd\nfrom math import sqrt\n\nN = int(stdin)\nT = []\nA = []\nT_idx = []\nA_idx = []\n\nfor i in range(N):\n    a, b = map(int, input().split())\n    T.append(a)\n    A.append(b)\n    T_idx.append(i)\n    A_idx.append(i)",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2 3\n1 1\n''') == '10'\nassert solution('''3\n2 3\n1 1\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'no'\nassert solution('no') == 'no'\nassert solution('1234567890') == 'yes'\nassert solution('1234567890123456') == 'yes'\nassert solution('1234567890123456abcdef') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"yes\"\nassert solution(\"abc\") == \"yes\"\nassert solution(\"\") == \"no\"\nassert solution(\"ab\") == \"no\"\nassert solution(\"unp\") == \"no\"\n",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('ahjkl;kdv!@#$%^&*()_+=-') == 'no'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('leetcode') == 'no'\nassert solution('codewars') == 'no'\nassert solution('abcde') == 'yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('copyrightable') == 'no'\nassert solution('''') == 'yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"\") == \"yes\"\nassert solution(\"fdfdg\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'yes'\nassert solution('c') == 'no'\nassert solution('ccc') == 'yes'\nassert solution('cccc') == 'yes'\nassert solution('cccccc') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"kangaroo\") == \"yes\"\nassert solution(\"lucifer\") == \"yes\"\nassert solution(\"mountain\") == \"no\"\nassert solution(\"saints\") == \"yes\"\nassert solution(\"thisisnotic\") == \"no\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('uncopyrightable') == 'yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nWEEWW') == '1'\nassert solution('4\\nWEEW') == '2'\nassert solution('4\\nWEEW') == '1'\nassert solution('5\\nWEEWWEWWEWEW') == '1'",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"2\"\n\n---> Explanation:\nN = 5\nS = WEEWW\n\nInput:\n5\nWEEWW\nOutput:\n1\n\nInput:\n6\nWEEWW\nOutput:\n1\n\nInput:\n7\nWEEWW\nOutput:\n1\n\nInput:\n10\nWEEWW\nOutput:\n1\n\nInput:\n100\nWEEWW\nOutput:\n2\n\n-------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------TASK 1 ---------------------------------------------------------------\n--------------------------------------------SOLUTION----------------------------------------------------\n\nA person is walking along a row of N people. Each person has an attribute A and he/she is facing east or west. \nPeople who are facing east are of class 1 and people who are facing west are of class 2. \nThere are N people who are always in front of him, except for people who are faceing east or west. \nIt is guaranteed that all N people are either standing on the left side or on the right side. \nHowever, they are not in the same class.\n\nGiven the location of the head of each person, where the people are standing on the left side and on the right side, \nhow many people are in class 1 and how many are in class 2?\n\nInput:\n4\n2 2\n1 2\n2 1\n2 2\nOutput:\n4 2\n\n----------------------------------------------------------TASK 2----------------------------------------------------------\n----------------------------------------------------------SOLUTION------------------------------------------------------\n\nGiven the location of the head of each person, where the people are standing on the left side and on the right side, \nhow many people are in class 1 and how many are in class 2?\n\nInput:\n4\n2 2\n1 2\n2 1\n2 2\nOutput:\n1 3\n\n----------------------------------------------------------TASK 3----------------------------------------------------------\n----------------------------------------------------------SOLUTION------------------------------------------------------\n\nTASK\n\nInstructions:\n\n1. Create a class Person with attribute name and attribute age, and initialize its values using the values given in the initializer.\n\n2. Create a class Student with attribute major and initialize its value using the major given in the initializer.\n\n3. Create a class Faculty with attribute name and attribute age, and initialize its values using the values given in the initializer.\n\n4. Create a class of N Students and N Faculties.\n\n5. Create a class Student and Faculty with attribute student_id and faculty_id, and initialize their values using the student_id and faculty_id given in the initializer.\n\n6. Write a program to create objects of each of the 3 classes and assign values to them.\n\n7. Display the details of the created objects in the appropriate format.\n\n8. Write a program to create objects of each of the 3 classes and assign values to them.\n\n9. Write a program to create objects of each of the 3 classes and assign values to them.\n\n10. Write a program to create objects of each of the 3 classes and assign values to them.\n\n11. Write a program to create objects of each of the 3 classes and assign values to them.\n\n12. Write a program to create objects of each of the 3 classes and assign values to them.\n\n13. Write a program to create objects of each of the 3 classes and assign values to them.\n\n14. Write a program to create objects of each of the 3 classes and assign values to them.\n\n15. Write a program to create objects of each of the 3 classes and assign values to them.\n\n16. Write a program to create objects of each of the 3 classes and assign values to them.\n\n17. Write a program to create objects of each of the 3 classes and assign values to them.\n\n18. Write a program to create objects of each of the 3 classes and assign values to them.\n\n19. Write a program to create objects of each of the 3 classes and assign values to them.\n\n20. Write a program to create objects of each of the 3 classes and assign values to them.\n\n21. Write a program to create objects of each of the 3 classes and assign values to them.\n\n22. Write a program to create objects of each of the 3 classes and assign values to them.\n\n23. Write a program to create objects of each of the 3 classes and assign values to them.\n\n24. Write a program to create objects of each of the 3 classes and assign values to them.\n\n25. Write a program to create objects of each of the 3 classes and assign values to them.\n\n26. Write a program to create objects of each of the 3 classes and assign values to them.\n\n27. Write a program to create objects of each of the 3 classes and assign values to them.\n\n28. Write a program to create objects of each of the 3 classes and assign values to them.\n\n29. Write a program to create objects of each of the 3 classes and assign values to them.\n\n30. Write a program to create objects of each of the 3 classes and assign values to them.\n\n31. Write a program to create objects of each of the 3 classes and assign values to them.\n\n32. Write a program to create objects of each of the 3 classes and assign values to them.\n\n33. Write a program to create objects of each of the 3 classes and assign values to them.\n\n34. Write a program to create objects of each of the 3 classes and assign values to them.\n\n35. Write a program to create objects of each of the 3 classes and assign values to them.\n\n36. Write a program to create objects of each of the 3 classes and assign values to them.\n\n37. Write a program to create objects of each of the 3 classes and assign values to them.\n\n38. Write a program to create objects of each of the 3 classes and assign values to them.\n\n39. Write a program to create objects of each of the 3 classes and assign values to them.\n\n40. Write a program to create objects of each of the 3 classes and assign values to them.\n\n41. Write a program to create objects of each of the 3 classes and assign values to them.\n\n42. Write a program to create objects of each of the 3 classes and assign values to them.\n\n43. Write a program to create objects of each of the 3 classes and assign values to them.\n\n44. Write a program to create objects of each of the 3 classes and assign values to them.\n\n45. Write a program to create objects of each of the 3 classes and assign values to them.\n\n46. Write a program to create objects of each of the 3 classes and assign values to them.\n\n47. Write a program to create objects of each of the 3 classes and assign values to them.\n\n48. Write a program to create objects of each of the 3 classes and assign values to them.\n\n49. Write a program to create objects of each of the 3 classes and assign values to them.\n\n50. Write a program to create objects of each of the 3 classes and assign values to them.\n\n51. Write a program to create objects of each of the 3 classes and assign values to them.\n\n52. Write a program to create objects of each of the 3 classes and assign values to them.\n\n53. Write a program to create objects of each of the 3 classes and assign values to them.\n\n54. Write a program to create objects of each of the 3 classes and assign values to them.\n\n55. Write a program to create",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nWEEWW\") == \"1\"\nassert solution(\"10\\nWEEWWEEWEWWEEWE\") == \"2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nWEEWW\\n\") == \"1\"\nassert solution(\"5\\nWEEWW\\n\") == \"1\"\n\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nWEEWW\n''') == '1'\nassert solution('''5\nWEEWW\n''') == '0'\nassert solution('''5\nWEEWW\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2\\n2\\n1\\n1'\nassert solution('4 3') == '2\\n2\\n1\\n1'\nassert solution('6 4') == '3\\n3\\n2\\n2\\n1\\n1'\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n",
        "num_ids_2": 40,
        "num_ids_4": 66
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2'\nassert solution('''5 3\n1 2\n2 3\n1 4\n1 5\n''') == '1'\nassert solution('''8 3\n1 2\n2 3\n1 4\n1 5\n2 6\n3 7\n''') == '3'\nassert solution('''12 3\n1 2\n2 3\n1 4\n1 5\n2 6\n3 7\n4 8\n5 9\n6 10\n7 11\n8 12\n''') == '8'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '2'\nassert solution('5 2') == '2'\nassert solution('4 5') == '1'\nassert solution('5 5') == '1'\nassert solution('6 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1'\nassert solution('10 10') == '10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 3') == '2'\nassert solution('6 6') == '1'\nassert solution('10 10') == '10'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 4\\n\") == \"2 2\\n1 2\\n1 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"12\") == \"30\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"25\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '25'\nassert solution('10') == '25'\nassert solution('15') == '0'\nassert solution('20') == '30'\nassert solution('30') == '30'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '0'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"4\") == \"30\"\nassert solution(\"5\") == \"25\"\nassert solution(\"7\") == \"30\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '25', 'Wrong answer'\nassert solution('1') == '0', 'Wrong answer'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '20'\nassert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '40'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"4\") == \"30\"\nassert solution(\"5\") == \"0\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n10\\n15') == '25'\nassert solution('2\\n5\\n10\\n15') == '30'\n\n'''\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"4\\n5\\n10\\n15\") == \"30\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\naxbycz') == '1'\nassert solution('6\\nabca') == '1'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"3\"\nassert solution(\"5\\n\") == \"2\"\nassert solution(\"6\\n\") == \"4\"\nassert solution(\"6\\n\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\naabbca''') == '2'\nassert solution('''12\nacabcdaaacc''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('10') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"5\\nab\") == \"1\"\nassert solution(\"8\\nabcd\") == \"0\"\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\nabab\n''') == '1'\nassert solution('''\n4\nababa\n''') == '2'\nassert solution('''\n5\nabcabc\n''') == '3'\nassert solution('''\n10\nababbababab\n''') == '2'\nassert solution('''\n100\naabaaabbaaaabbbbbbbaabaaaaaabbbabbbbbbbbbbbbbabbaaababbaaaabaaabbbbabbaaaaaaaaaaaabbaaaaabbbbbbbbbbbbbbbbbabbbbbbbbbbbbbbaaaaaaabbaaaabbaaaaababaaaaabbababbababbababbabaaaaaabbbaababbbaaababbbbaaaaaaaabbaaaaababbaaabbabaaaaabbabaaaaaabbaaabaabaaaaabaaabaaaabbbbbababbabbbbbbbabbbbbbbaaaabababaaabaabaaababaaaaaabaaaaaabbaaabaabaaaaaaaabbbaabbbaaaabaaabaabaaabaaaaaabbbaaabababaaaaaabbaaaaababaaabaaaaaaaabaaaabbbaaaaaabaaabaaaaaabbabbabaaabbabaaaaabbabaaaaaaabbaaababaaaaaaabaaabbabaaabbabaaaaabaaabaaaaaaabbabababaaaaabbabababbbbababababbabaaaaabababbbbbbbababbbbbbbbaabaaabababaaaaababbaaaaababbbbaababababbbabbabababbbaaaaababbbbbbaaabbabaaabbaaaaaaababbabaaabbbbbaaababaaabaaaaabaaababababababaaaaaabbabababaaabababaaaaaabaaabbababbababaaaaabababaaaaababababababababaaaaaababaaaaabbaaababaaaaabbbbbbbbbaaaaabbabbbabaaaaababaaabaaaaaabababbabaaaabaabababbabababbabaaababbabaaaaabaaaaaaabbababaaaaabbababababaaabaaaaaababaaabaabaaaaaababbbabaaaaababaaaaaabaaaaababaaaaaabbabbbaabababaaaababaaaababaaabbaaaaaabaaabbbaaaabababbbbbaaaaabaaaaaabbbbabababaaabbbbbbaaaaaaabbaaaaabbbbabaaaaabababaaaaaababbabaaaaabaaaaaabbaaaaaaaaaabaaaaaaaababaaaaabbaaabbbbbbbbaaaabaaaaabbababbbbbbbbaaababaaabaaaaababbaaaaaabbabbababbaaaaabbababababaaabbabababbbbaaabaaaaabbabbbbaabbaaabaaababbabababaaaaabbbbbbbabbbbabaaaaabbbbaaaaabbbbabbbbbbbbbabbaaabaaaaaabbababababaaaaaaabbbaaaaaabbabbbbbbbbbbabbbbbbbbbaaaaabbabbbbbababababbabbbabbabbbbbabbbbbabaaabababbabaaaaaaababaaaaaabababbbbbaaaababaaaaabaaabbababababababbbaaaabababbbabaaaaaabababbbbaabbabababaaabbbbbbbbaaaaaaabbaaaaaaaabbaaaaaaaaaaaaaaaaaaaabaaaaaaaaaababaaaaaabaaaaabbbbaaaabaaaaaabbaaaaaabbbbbbabbabaaaaaaaaaaaaaabbbababaaabbababbbbbbaaaaaabbbbbbbbbbbbbbbbbbbbbbbabaaababaaaaaabbbbbbbbaaaaaaabbababaaaaaababaaaaabbbbbbaaaababaaaaaabaaaaaababaaaaabbabbabbbbbbbbbaaaaabbabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaabababbbaaabbabbababbbbbbbbbbaaaabababbabbaaaaaabbbbaaaabaabababaaabaababaaaaaabbbbbbbbbababababbbabbbbaaaabababaaaaaabababbbbaaaabaaabbbaaaabababaaaaababbbabaaaabababbaaabbaaaaaabaaaaaabbabbbababbbaabbbbbaaababbbbaabbabbabbbbaaabababaaababaaaaabbbbbababaaabaaaaabaaaaaaaaaababababaaabababbaaabbbaaababaaaaabbabaaaaabbabababaaaaaabababaaaaaababababaaabababaaabbababbbbaaabababababbbbbbbbbbaaaababababababaaaaaaabababaaabbababbbbbaaaabababababbbbaaababaaaabbbbbbaaaaabbbabababaaabbbababbabababbbbbbbbbbbaaabababaaaaaabbbbbbbbbaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaabababbbbaaababababbbbaaaaaaabbbbbbbbbaaaaabbabbababbbbababaaabbaaabaaaabababaaaabaababbabababababaaaaaabababaaaabababababbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbabaaaaaabababaaabaabaaabbabaaaabbbbabababaaababababbbbabaaabbabaaabbabaaababababababaaaaaabbabbbbaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\nprint(\"You passed the test\")\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"aa\") == 2\nassert solution(\"ab\") == 1\nassert solution(\"aabbca\") == 2\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"12\") == \"2\"\nassert solution(\"13\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Sunny\nCloudy\nSunny\nRainy\nCloudy\nSunny\nCloudy\n''') == 'Cloudy'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Sunny\nCloudy\nRainy''') == 'Cloudy'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\n\nstdin = input()\nprint(solution(stdin))\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Cloudy\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Snowy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Sunny') == 'Cloudy'\n\nassert solution('Cloudy') == 'Sunny'\n\nassert solution('Rainy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Sunny') == 'Cloudy'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"\nprint(\"You're a smart cookie!\")\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 17 120') == '119', 'Try again'\nassert solution('10 10 10') == '10', 'Try again'\nassert solution('20 20 20') == '20', 'Try again'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 5') == '6'\nassert solution('2 6 4') == '10'\nassert solution('5 10 5') == '12'\nassert solution('2 2 4') == '16'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\") == \"3\"\nassert solution(\"5 2 4\") == \"8\"\nassert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 5 5\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 10\") == \"22\"\nassert solution(\"10 4 10\") == \"30\"\nassert solution(\"5 6 10\") == \"15\"\nassert solution(\"1 1 10\") == \"11\"\nassert solution(\"2 2 10\") == \"21\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '119'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('30 7 170') == '170'\nassert solution('20 10 100') == '100'\nassert solution('20 15 120') == '120'\nassert solution('10 0 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 0\") == \"0\"\nassert solution(\"5 3 1\") == \"1\"\nassert solution(\"8 5 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"7 10 120\") == \"119\"\nassert solution(\"7 20 120\") == \"119\"\nassert solution(\"7 10 120\") == \"119\"\nassert solution(\"7 10 120\") == \"119\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"3800\"\nassert solution(\"\"\"\n2 2\n\"\"\") == \"2800\"\nassert solution(\"\"\"\n3 3\n\"\"\") == \"1900\"\nassert solution(\"\"\"\n4 4\n\"\"\") == \"9000\"\nassert solution(\"\"\"\n5 5\n\"\"\") == \"9800\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n') == '3800'\n\nInput:\n2 3\n\nOutput:\n7\n\nInput:\n4 1\n\nOutput:\n3\n\nInput:\n2 2\n\nOutput:\n1\n\nInput:\n1 1\n\nOutput:\n19\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '29400'\nassert solution('3 3') == '375000'\nassert solution('4 4') == '450400'\nassert solution('5 5') == '450900'\n\"\"\"\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '3800'\nassert solution('0 0') == '0'\nassert solution('1 1') == '3800'\n\"\"\"\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '3800'\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(100000)\nimport math\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n''') == '3800'\n\n'''\nUsing file input\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"3800\"\nassert solution(\"1 1\") == \"3600\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 1') == '10473428'\nassert solution('2 3') == '1367'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 2\") == \"3750\"\n\n\"\"\"\n\nN, M = list(map(int, input().split()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 2\") == \"7800\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest\") == \"b\"\n\"\"\"\n\nfrom string import ascii_lowercase\n\ns = input()\n\nfor i in ascii_lowercase:\n    if s.find(i) == -1:\n        print(i)\n        break\nelse:\n    print(None)\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\") == None\nassert solution(\"abc\") == \"c\"\nassert solution(\"abcd\") == \"b\"\nassert solution(\"bacd\") == None\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('a') == 'b'\nassert solution('b') == 'a'\nassert solution('c') == 'd'\nassert solution('d') == 'c'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('asdfghjkl') == 'n'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('ab') == 'b'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"pokemon\") == None\n\"\"\"\n\nfrom collections import Counter",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('a') == 'b'\nassert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 18,
        "num_ids_4": 33
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 3\") == \"4 3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"10\") == \"8\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 4 4 3\\n') == '4\\n3\\n3\\n4\\n'\nassert solution('3\\n4 4 4 3\\n') == '3\\n4\\n4\\n4\\n'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n2 4 4 3\n\"\"\") == \"\"\"4\n3\n3\n4\"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n4\\n1\\n\") == \"1\\n3\\n3\\n4\\n\"\nassert solution(\"4\\n1\\n4\\n4\\n\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\\n4\\n4\\n4\\n\"\nassert solution(\"10\") == \"8\\n8\\n8\\n8\\n\"\n\n----------------------------------",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 2 4 2 1\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"2\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('1') == '0'\nassert solution('10') == '0'\nassert solution('100') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '2'\nassert solution('3') == '1\\n1\\n1'\nassert solution('100') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1 2 1 1') == '0'\nassert solution('4\\n1 1 1 2') == '1'\nassert solution('4\\n1 1 2 3') == '2'\nassert solution('4\\n1 2 3 4') == '1'\nassert solution('4\\n1 2 3 4') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 1 2 4 2 1\\n\") == \"2\"\nassert solution(\"5\\n3 1 2 4 2 1\\n\") == \"0\"\nassert solution(\"2\\n3 1 2 4 2 1\\n\") == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 1 2 4 1\n''') == '2'\nassert solution('''\n4\n2 1 2 4 2\n''') == '0'\nassert solution('''\n3\n1 1 2 4 2\n''') == '2'\nassert solution('''\n2\n2 4\n''') == '0'\nassert solution('''\n6\n3 1 2 4 2 1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 7, 1, 2, 5, 10]) == '8'\nassert solution([2, 5, 4, 9, 3, 7, 5, 10]) == '8'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '8'\nassert solution('4') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"7\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"10\") == \"55\"\nassert solution(\"100\") == \"66510\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n2\\n3\\n4\") == \"6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\") == \"7\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"7\") == \"11\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"5\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"7\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3\", \"2\", \"3\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\"]) == \"3\"\nassert solution([\"2\", \"3\", \"1\"]) == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\\n\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 2, 2, 100]) == 2\nassert solution([2, 2, 2, 100, 50]) == 2\nassert solution([2, 2, 2, 100, 50, 10]) == 4\nassert solution([2, 2, 2, 100, 50, 5]) == 4\nassert solution([2, 2, 2, 100, 50, 5, 3, 1]) == 2\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n2\n100\n''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"20\\n20\\n20\\n100\") == \"20\"\nassert solution(\"5\\n5\\n5\\n20\") == \"0\"\nassert solution(\"10\\n10\\n10\\n20\") == \"10\"\n\n--------------------------------------------------\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n200\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([int(x) for x in input().split()]) == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == \"Yes\"\nassert solution('-1 3 2') == \"No\"\nassert solution('-100 3 2') == \"No\"\nassert solution('-101 3 2') == \"Yes\"\nassert solution('0 3 2') == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 2 3') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('4 5 2') == 'No'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 2 2') == 'No'\nassert solution('-1 -1 2') == 'Yes'\nassert solution('-1 1 -2') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('-5 6 8') == 'No'\n\ninput_values = []\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"Yes\"\nassert solution(solution.__name__) == \"Yes\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    1 3 2\n    ''') == 'Yes'\nassert solution('''\n    -1 3 2\n    ''') == 'No'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1000\") == \"9\"\nassert solution(\"1 1000\") == \"1\"\nassert solution(\"4 100\") == \"3\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1000') == '9'\nassert solution('2 100') == '2'\nassert solution('1 1') == '1'\nassert solution('6 100') == '2'\nassert solution('2 200') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nprint(solution(\"3 1000\\n120\\n100\\n140\"))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"5 2\\n1\\n1\\n2\\n2\") == \"4\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1000\n120\n100\n140\n''') == '9'\nassert solution('''3 1000\n120\n100\n140\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\n\"\"\"\n\nfrom typing import List\nimport unittest\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\") == \"2\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 2 4\") == \"3\"\nassert solution(\"1 2 3 3 4\") == \"4\"\nassert solution(\"1 2 2 4 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 1\n3\n4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 0\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\nassert solution('''2\napple\norange\napple''') == '2'\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2\"\nassert solution('3') == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\napple\\norange\\napple\") == \"2\"\nassert solution(\"2\\napple\\norange\\napple\") == \"2\"\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 1\nassert solution(\"1\\n1\") == 2\nassert solution(\"2\\n1\\n1\\n1\") == 3\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\") == 4\n",
        "num_ids_2": 15,
        "num_ids_4": 43
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\n\n---",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nprint(solution())\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\n\"\"\"\nimport sys\nimport re\nfrom itertools import combinations\n\nN: int = int(sys.stdin.readline().strip())\n\nstrs = []\nfor i in range(N):\n    strs.append(sys.stdin.readline().strip())\n\nres = 0\nfor s in combinations(strs, 3):\n    res += 1\nprint(res)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\nassert solution('''10\na\napple\nb\norange\na\napple\na\na\na\norange\norange\na''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == \"1 2\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2'\nassert solution('1\\n1') == '1'\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 2\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == ''\nassert solution('4\\n2100 2500 2700 2700') == '2 2'\nassert solution('3\\n100 99 200\\n') == '1 1'\nassert solution('5\\n1 2 3 4\\n') == '2 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 2'\nassert solution('4') == '1 2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'\nassert solution('5\\n2100 2501 2700 2700\\n') == '2 2'\nassert solution('5\\n2100 2600 2700 2700\\n') == '2 2'\nassert solution('3\\n2200 2400 2700 2700\\n') == '1 1'\nassert solution('1\\n2200 2400 2700 2700\\n') == '1 1'\n",
        "num_ids_2": 45,
        "num_ids_4": 88
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2 2'\nassert solution(input()) == '2 2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('xo') == '900'\nassert solution('xox') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '700'\nassert solution('oox') == '900'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('oxo') == '900'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('oxo') == '900'\nassert solution('xxx') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('oxo') == '900'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ooxx') == '900'\nassert solution('xxx') == '700'\nassert solution('ooo') == '700'\nassert solution('ooooxo') == '1000'\nassert solution('xooxx') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"0\"\nassert solution(\"ooxx\") == \"0\"\nassert solution(\"xxo\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xoo\") == \"0\"\nassert solution(\"xxx\") == \"0\"\nassert solution(\"xxo\") == \"0\"\nassert solution(\"xoo\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('o') == '700'\nassert solution('x') == '700'\nassert solution('oxo') == '900'\nassert solution('xxo') == '900'\nassert solution('xooo') == '900'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"o\") == \"700\"\nassert solution(\"x\") == \"900\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D D\") == \"D\"\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n'''\n\na, b = stdin.split()",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H', 'Sample test 1 failed'\nassert solution('D D') == 'D', 'Sample test 2 failed'\nassert solution('H D') == 'D', 'Sample test 3 failed'\nassert solution('D H') == 'D', 'Sample test 4 failed'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H', \"Should be H\"\nassert solution('D D') == 'D', \"Should be D\"\n\"\"\"\n\n\"\"\"\n---Solution---\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('H H\\n') == 'H'\nassert solution('H D\\n') == 'D'\nassert solution('D H\\n') == 'D'\nassert solution('D D\\n') == 'D'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1112') == '1+1+1=6'\nassert solution('122') == '1+2=3'\nassert solution('12') == '1+2=3'\nassert solution('00') == '0+0=0'\n",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1222''') == '1+2+2+2=7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0\n0\n1\n2''') == '1+2+2=7'\nassert solution('''0\n0\n1\n-2''') == '1-2=5'\nassert solution('''0\n0\n1\n3''') == '1+2+3=7'\nassert solution('''0\n0\n1\n4''') == '1+2+3+4=7'\nassert solution('''0\n0\n1\n5''') == '1+2+3+4+5=7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1+2+2+2=7\"\nassert solution(input(\"\")) == \"0+0=0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nprint(solution(input()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABCD') == '1+2+2+2=7'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABCD') == '1+2+2+2=7'\nassert solution('0') == '1'\n\n\"\"\"\n\nstdin = input()\n\nprint(f\"{int(stdin[0]) + int(stdin[1]) + int(stdin[2]) + int(stdin[3]) = 7}\")\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 1 2 2\n''') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2\\n0\\n0\\n0\\n0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution('5') == '2\\n2\\n0\\n0\\n0\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 1 2 2\n''') == '2 2'\nassert solution('''\n5\n1 1 2 2\n''') == '2 2 0 0 0'\nassert solution('''\n5\n1 1 2 2\n''') == '2 2 0 0 0'\nassert solution('''\n5\n1 1 1 2 2\n''') == '2 2 0 0 0'\nassert solution('''\n5\n1 1 1 1 2 2\n''') == '2 2 0 0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2 2'\nassert solution('5\\n1 2 3 4 5\\n') == '0 0 0 0 0'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('1') == '0'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 1, 2, 2]) == '2'\nassert solution([5, 1, 2, 3]) == '2'\nassert solution([5, 1, 4, 3]) == '0'\nassert solution([5, 1, 4, 4]) == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2 2 0 0 0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2 2\\n0 0\\n0 0\\n0 0\\n'\nassert solution('6\\n1 1 2 2\\n') == '0 2\\n0 0\\n0 0\\n0 0\\n'\nassert solution('10\\n1 1 2 2\\n') == '2 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n'\nassert solution('1\\n1\\n') == '1\\n'\n",
        "num_ids_2": 66,
        "num_ids_4": 148
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('3') == '3'\nassert solution('5') == '4'\nassert solution('8') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"10\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '3'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '0'\nassert solution('5\\n') == '3'\nassert solution('1\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '3'\nassert solution('6') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"5\"\nassert solution(\"8\") == \"6\"\nassert solution(\"9\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1110') == 'No'\nassert solution('1101') == 'No'\nassert solution('1101') == 'Yes'\nassert solution('1101') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1118') == \"Yes\"\n\nassert solution('1111') == \"No\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'\nassert solution('1312') == 'No'\nassert solution('1314') == 'Yes'\nassert solution('1316') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1118') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1111') == 'Yes', \"Wrong answer\"\nassert solution('1118') == 'Yes', \"Wrong answer\"\nassert solution('1811') == 'No', \"Wrong answer\"\nassert solution('1') == 'Yes', \"Wrong answer\"\nassert solution('112') == 'No', \"Wrong answer\"\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\nn = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"101\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1118') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'Yes'\nassert solution('1111') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('2345') == 'No'\nassert solution('1111') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''1\n2\n3\n4''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '4'\nassert solution('10') == '8'\nassert solution('5') == '1'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == \"3\"\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 5\n2 4\n3 6\n\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('1') == '3'\nassert solution('0') == '3'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '2'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"<\"\n\nprint(solution(input))\n\"\"\"\n\nx = input()\ny = input()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \"<\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A B') == '<'\nassert solution('C D') == '<'\nassert solution('D E') == '<'\nassert solution('E F') == '<'\nassert solution('F G') == '<'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('X Y') == 'X Y'\nassert solution('A B') == 'A B'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''A B\n        ''') == '<'\nassert solution('''B A\n        ''') == '<'\nassert solution('''A C\n        ''') == '<'\nassert solution('''C A\n        ''') == '<'\nassert solution('''A D\n        ''') == '>'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"X A\") == \"X A\"\nassert solution(\"A A\") == \"A A\"\nassert solution(\"X Y\") == \"X Y\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A B\") == \"<\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"C D\") == \">\"\nassert solution(\"B A\") == \"<\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"X\"\n\n---",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"A C\") == \"<\"\nassert solution(\"B A\") == \">\"\nassert solution(\"A D\") == \">\"\nassert solution(\"A E\") == \">\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"11211\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"11211\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '11211'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"3 5\",\n\".....\",\n\".....\",\n\".#..\",\n\"....\"]) == \"11211\", \"First\"\nassert solution([\"3 5\",\n\".....\",\n\".....\",\n\"..#.\",\n\".#..\"]) == \"111211\", \"Second\"\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"11211\"\nassert solution(\"3 5\") == \"1#2#1\"\nassert solution(\"3 2\") == \"1#1#1\"",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '11211'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1#2#1'\nassert solution('3 5') == '1#2#1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '1#3'\nassert solution('2 5') == '1#2#1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '1#2#1'\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''3 5 300\n60 90 120\n80 150 80 150\n20 90 120\n20 100 100 100''') == '3'\nprint(solution('''8 9 1200\n8 9 1206\n8 8 9 1206\n8 8 8 8'''))\nprint(solution('''8 5 8\n5 5 5 5\n8 5 8\n8 5 8\n8 5 8'''))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('10 10 10') == '10'\nassert solution('100 1 2 3') == '100'\nassert solution('100 100 100') == '100'\nassert solution('200 200 200') == '200'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"3\"\n\nimport math\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"5 8 200\") == \"5\"\nassert solution(\"9 8 280\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 240') == '3'\nassert solution('6 6 240') == '2'\nassert solution('7 6 240') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('3 2 250') == '2'\n\"\"\"\nimport sys\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 4, 240], 60, 90, 120) == 3\nassert solution([3, 4, 240], 60, 90, 120) == 3\nassert solution([3, 4, 240], 60, 90, 120) == 3\nassert solution([3, 4, 240], 60, 90, 120) == 3\nassert solution([3, 4, 240], 60, 90, 120) == 3\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 0\") == \"1\"\nassert solution(\"3 5 10\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('3 4 240') == '3'\nassert solution('3 5 30') == '3'\nassert solution('5 5 30') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150\n''') == '3'\nassert solution('''10 4 2341\n60 90 120\n80 150 80 150\n''') == '11'\nassert solution('''7 6 100\n12 11 13 12 12\n''') == '11'\nassert solution('''4 1 1\n1\n''') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"./test_solution.txt\") == \"7900\"\n\"\"\"\nA, B, C = list(map(int, stdin().split()))\nprint(min(A*500 + 2*B*500 + 2*C*500, A*500 + 2*B*500 + C*500, A*500 + 2*C*500 + B*500))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == \"7900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1520 2000 1630 3 2') == '7900'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"0 0 0 0\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1500 2000 1600 3 2\n''') == '7900'\nassert solution('''2000 1500 1600 3 2\n''') == '7900'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1234 5678 9012 3 4 5 6\") == \"2345\"\n\nprint(solution(input()))\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('10 20 30 40 50 60 70 80 90 100') == '7445'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1000000 500 1000') == '104000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('9') == '5'\nassert solution('4') == '4'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4', \"Wrong result\"\nassert solution('5') == '3', \"Wrong result\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '3'\nassert solution('10') == '5'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '6'\nassert solution('10') == '10'\nassert solution('25') == '28'\nassert solution('100') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4', 'TEST ERROR'\nassert solution('4') == '4', 'TEST ERROR'\nassert solution('5') == '5', 'TEST ERROR'\nassert solution('6') == '4', 'TEST ERROR'\nassert solution('7') == '6', 'TEST ERROR'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('10') == '10'\nassert solution('100') == '100'\nassert solution('10000') == '10000'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(4) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n5\n10\n''') == '9'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"20\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '9'\nprint(solution('10'))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\nassert solution('10') == '9'\nassert solution('1') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '9'\nassert solution('9') == '9'\nassert solution('100') == '100'\n\n----------------------------------------------------------------------\n\n16. Multiplication Table\n\n-----Task-----\nWrite a program that prints the multiplication table of a positive integer n.\n\n-----Input-----\nn\n\n-----Output-----\nPrint the table using the following format:\nn x 1 = n\nn x 2 = 2n\nn x 3 = 3n\nn x 4 = 4n\nn x 5 = 5n\n...\nn x n = nn\n\n-----Sample Input-----\n3\n\n-----Sample Output-----\n3 x 1 = 3\n3 x 2 = 6\n3 x 3 = 9\n3 x 4 = 12\n3 x 5 = 15\n...\n3 x 3 = 15\n\n----------------------------------------------------------------------\n\n17. Swap Nodes in Pairs\n\n-----Task-----\nGiven a singly linked list L: L0\u2192L1\u2192\u2026\u2192Ln-1\u2192Ln, swap every two adjacent nodes and return its head.\n\nExample:\n\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\n\n-----Input-----\nListNode head\n\n-----Output-----\nListNode head\n\n----------------------------------------------------\n\n18. Remove Nth Node from End of List\n\n-----Task-----\nWrite a function which takes a linked list and an integer n and returns a linked list of length n-1.\n\n-----Input-----\nListNode head\nn\n\n-----Output-----\nListNode head\n\n----------------------------------------------------\n\n19. Remove Duplicates from Sorted List II\n\n-----Task-----\nWrite a function which takes a sorted linked list and returns a new sorted linked list which is the same as the original linked list with the duplicates removed.\n\nExample 1:\n\nInput: 1->1->2\nOutput: 1->2\n\nExample 2:\n\nInput: 1->1->2->3->3\nOutput: 1->2->3\n\n-----Input-----\nListNode head\nInteger n\n\n-----Output-----\nListNode head\n\n----------------------------------------------------\n\n20. Minimum Swaps to Make Strings Equal\n\n-----Task-----\nGiven a string text, you need to use the characters of text to form a square. Each character should have an equal opportunity to be selected.\n\nNow you need to make the square. The place of a character is called an \"anchor\". On each step you should choose the character in the text that is closest to the anchor and move the anchor to that location.\n\nReturn the square's area.\n\nThe distance between two adjacent characters is 1.\n\n\n-----Input-----\ntext\n\n-----Output-----\n3\n\n\n-----Explanation-----\n\nFirst step:\n\nThe anchor is the first character in the text ('a').\n\nMove the anchor to the right: The character to the right is 'a' and the character to the left is 'b' so the distance between them is 1.\n\nSecond step:\n\nThe anchor is now at the right again so the distance between it and the character to the left is now 2.\n\nMove the anchor to the right: The character to the right is 'b' and the character to the left is 'c' so the distance between them is 1.\n\nThird step:\n\nThe distance between these two characters is 1, the anchor is now at the right again so the distance between it and the character to the left is now 2.\n\nYou need 3 steps to get the square.\n\n\n-----Explanation-----\n\nExample 1:\n\nInput: text = \"aabcc\"\nOutput: 3\n\nExample 2:\n\nInput: text = \"attata\"\nOutput: 4\n\n-----Input-----\nString text\n\n-----Output-----\nInteger\n\n----------------------------------------------------\n\n21. Merge Sorted Array\n\n-----Task-----\nGiven two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.\n\nNote:\n\nThe number of elements initialized in nums1 and nums2 are m and n respectively.\nYou may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.\n\n-----Input-----\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\n-----Output-----\nnums1 = [1,2,2,3,5,6]\n\n----------------------------------------------------\n\n22. Remove Duplicates from Sorted List II\n\n-----Task-----\nWrite a program that takes a sorted linked list and returns a new sorted linked list with all the duplicates removed.\n\nExample 1:\n\nInput: 1->1->2->3->3\nOutput: 1->2->3\n\nExample 2:\n\nInput: 1->1->2->3->3->3\nOutput: 1->2->3\n\n-----Input-----\nListNode head\n\n-----Output-----\nListNode head\n\n----------------------------------------------------\n\n23. Merge k Sorted Lists\n\n-----Task-----\nWrite a function which takes a list of n sorted linked lists, merge all the linked lists into a single sorted linked list and return it.\n\n-----Input-----\n[1->3->4,2->6->4,1->5]\n\n-----Output-----\n1->1->2->3->4->4->5->6\n\n----------------------------------------------------\n\n24. Find Minimum in Rotated Sorted Array\n\n-----Task-----\nWrite a function that takes a sorted integer array and returns the minimum element in the array.\n\nIf the input array is empty or null, the function should return -1.\n\n-----Input-----\n[0,0,0,0,1,2,2,3,4,5,5]\n\n-----Output-----\n0\n\n----------------------------------------------------\n\n25. Find First and Last Position of Element in Sorted Array\n\n-----Task-----\nWrite a function that takes a sorted array and two integers as arguments, one less than the size of the array, and the other less than or equal to the size of the array, and returns an array containing the first and last occurrences of the specified element in the input array. If the element doesn't exist in the array, return [-1, -1].\n\n-----Input-----\narray = [0,0,1,1,1,2,2,3,3,4]\nelement = 2\n\n-----Output-----\n[3,7]\n\n-----Input-----\narray = [0,0,1,1,1,2,2,3,3,4]\nelement = 0\n\n-----Output-----\n[0,8]\n\n-----Input-----\narray = []\nelement = 0\n\n-----Output-----\n[-1, -1]\n\n-----Input-----\narray = []\nelement = -1\n\n-----Output-----\n[-1, -1]\n\n-----Input-----\narray = [1,1,1,1,1,1,1,1]\nelement = 1\n\n-----Output-----\n[0,6]\n\n----------------------------------------------------------------------\n\n26. Remove Duplicates from Sorted List\n\n-----Task-----\nWrite a function that takes a sorted linked list and returns a new sorted linked list with all duplicate elements removed.\n\n-----Input-----\nListNode head\n\n-----Output-----\nListNode head\n\n----------------------------------------------------\n\n27. Remove Intersection of Two Linked Lists\n\n-----Task-----\nWrite a function that takes two sorted linked lists and returns a new sorted linked list that contains only the elements that are common between the two lists.\n\n-----Input-----\nListNode head1\nListNode head2\n\n-----Output-----\nListNode head\n\n----------------------------------------------------\n\n28. Check Subset\n\n-----Task-----\nWrite a function that takes two sets of integers and returns true if the first set contains the second set.\n\n-----Input-----\nset1 = {1,2,3,4,5,6}\nset2 = {4,5,6,7,8,9}\n\n-----Output-----\nTrue\n\n----------------------------------------------------\n\n29. Group Anagrams\n\n-----Task-----\nWrite a function that takes a list of strings and group anagrams together.\n\n-----Input-----\n['eat', 'tea', 'tan', 'ate', 'nat', 'bat",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"123\") == \"12\"\nassert solution(\"101\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('4\\n20\\n20\\n20\\n20') == '1'\nassert solution('4\\n10\\n20\\n20\\n20') == '2'\nassert solution('4\\n1\\n20\\n20\\n20') == '1'\nassert solution('4\\n1\\n1\\n20\\n20\\n20') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4\\n10\\n8\\n6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n10\\n8\\n6\") == \"1\"\nassert solution(\"1\\n10\\n8\\n6\") == \"1\"\n",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('3\\n20\\n20\\n20') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '3'\nassert solution('6') == '2'\nassert solution('9') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1\n''') == '1'\nassert solution('''1\n1\n3\n''') == '3'\nassert solution('''4\n8\n7\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('6') == '3'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"qwertyasdfzxcv\") == \"5\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"1\"\nassert solution(\"12345\") == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n\nIn our sample case, s is QWERTYASDFZXCV. The output should be 5.\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"26\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == 5, \"Wrong answer\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nprint('solution() function is working!')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '1'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('12') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n8 12 40\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n3\n\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n\"\"\"\n\nfrom typing import List\n\nimport unittest\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 6\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('5') == '12'\nassert solution('10000000') == '12'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '12'\nassert solution('5') == '18'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '60'\nassert solution('10') == '505050505'\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"1\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\"\n) == \"\"\"836\"\"\"\n\nassert solution(\n    \"\"\"1\n3\n5\n7\n9\n11\n\"\"\"\n) == \"\"\"184571\"\"\"\n\nassert solution(\n    \"\"\"1\n3\n10\n11\n\"\"\"\n) == \"\"\"2966817\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '12'\nassert solution('4') == '20'\nassert solution('5') == '32'\nassert solution('6') == '40'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('12') == '84'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '36'\nassert solution('10') == '27216'\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(3) == 6\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3''') == '6'\nassert solution('''1''') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '10'\nassert solution('100') == '600'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1') == '2'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('2\\n1 2') == '1'\nassert solution('3\\n2 1') == '0'\nassert solution('4\\n5 1 2 3') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('2 1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 4\") == \"2\"\nassert solution(\"1\\n3 2\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3 1') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n3 1''') == '2'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '2 2'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n3 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n4 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\"\"\") == \"2 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\nprint('Takahashi passed all tests!')\n\n\n\"\"\"\n1. Write function solution with the below constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n2. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n3. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n4. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n5. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n6. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n7. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n8. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n9. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n10. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\n    The number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\n\n11. Write the function solution without the constraint:\n    Takahashi participated in a contest on AtCoder.\n    The contest had N problems.\n    Takahashi made M submissions during the contest.\n    The i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\n    The number",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"2 4\") == \"2 1\"\n\"\"\"\n\nfrom collections import Counter\n\nN, M = map(int, input().split())\nproblems = list(map(int, input().split()))\nsubmissions = list(map(int, input().split()))\n\nsubmissions = Counter(submissions)\npenalties = 0\nfor prob_idx in range(N):\n    if submissions[problems[prob_idx]] == 1:\n        penalties += 1\n\nprint(penalties, penalties)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''5 1\nAC\nWA\nWA\nAC\nAC''') == '1 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"2 2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"3 3\") == \"1 1\"\nassert solution(\"3 4\") == \"0 0\"\nassert solution(\"1 5\") == \"1 5\"\nassert solution(\"1 3\") == \"0 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 10\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n2 WA\\n3 AC\\n3 WA\\n3 AC\\n3 WA') == '2 2'\nassert solution('1 1\\n1 AC\\n2 WA\\n2 AC\\n1 AC\\n2 WA') == '1 1'\nassert solution('1 1\\n1 WA\\n2 AC\\n2 WA\\n1 AC\\n2 WA') == '1 1'\nassert solution('1 1\\n1 WA\\n2 AC\\n2 WA\\n1 AC\\n2 WA\\n1 WA\\n2 AC') == '1 2'\n",
        "num_ids_2": 84,
        "num_ids_4": 148
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n3 WA\") == \"2 2\"\nassert solution(\"3 3\\n1 WA\\n2 WA\\n1 WA\\n2 AC\\n3 AC\") == \"3 3\"\n",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 1\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"3 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2\n3\n5 6\n1\"\"\") == \"5\"\nassert solution(\"\"\"3\n2\n1\n3\n5\n3\"\"\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 1\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 2') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 1') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1 5') == '5'\nassert solution('3 1 2') == '5'\nassert solution('2 3 2') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 2') == '5'\nassert solution('3 3') == '6'\nassert solution('3 4') == '5'\nassert solution('3 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 2') == '-1'\nassert solution('3 2') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1\n4 1 5\n''') == '5'\nassert solution('''5 1\n4 1 5\n''') == '0'\nassert solution('''5 2\n2 1 2 2\n''') == '1'\nassert solution('''6 6\n1 2 4 3 5 2\n''') == '1'\nassert solution('''6 2\n1 2 4 3 5 2\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n3\\n') == '10'\nassert solution('2\\n10\\n5\\n') == '12'\nassert solution('2\\n10\\n7\\n') == '10'\nassert solution('2\\n100\\n101\\n') == '100'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n10\n2\n''') == \"4\"\nassert solution('''\n1\n10\n1\n''') == \"1\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"16\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10\n2 3\n''') == '4'\nassert solution('''\n1\n100\n2\n''') == '50'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"10\"\nassert solution(\"10 20\") == \"20\"\nassert solution(\"10 20 30\") == \"30\"\nassert solution(\"20\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"20\") == \"6\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n3\\n') == '8'\nassert solution('1\\n10\\n3\\n') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '16'\nassert solution('5') == '8'\nassert solution('5') == '8'\nassert solution('50') == '13'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('1\\n2\\n3\\n4') == '5'\n\n\"\"\"\n\nA, B, C, D = map(int, input().split())",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '200'\nassert solution('420') == '300'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '220'\nassert solution('420') == '420'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('30') == '30'\nassert solution('20') == '20'\nassert solution('55') == '55'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\nassert solution(\"111\") == \"111\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '520'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('600\\n300\\n220\\n420') == '520'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('0\\n1\\n2\\n3') == '3'\nassert solution('0\\n0\\n0\\n0') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 4 4 0 2\n''') == '4'\nassert solution('''\n5\n3 4 0 2 1\n''') == '2'\nassert solution('''\n3\n1 2 2\n''') == '0'\nassert solution('''\n3\n0 2 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4', \"Wrong answer\"\nprint('You are correct!')",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"23\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 4 0 2\n''') == '4'\nassert solution('''4\n2 4 4 0 2\n''') == '0'\nassert solution('''3\n2 4 4 0 2\n''') == '2'\nassert solution('''2\n2 4 4 0 2\n''') == '4'\nassert solution('''2\n2 4 4 0 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 4 0 2\\n') == '4'\nassert solution('5\\n3 1 3 1 1\\n') == '5'\nassert solution('5\\n3 1 3 1 3\\n') == '5'\nassert solution('5\\n4 0 3 2 1\\n') == '4'\nassert solution('5\\n4 1 3 2 1\\n') == '4'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('5\\n2 4 4 0 2') == '0'\nassert solution('5\\n2 4 4 0 2') == '0'\nassert solution('5\\n2 4 4 0 2') == '4'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('4\\n2 4 4 0 2') == '0'\nassert solution('3\\n2 4 4 0 2') == '0'\nassert solution('10\\n2 4 4 0 2') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('5\\n5 1 2 3 4') == '0'\nassert solution('10\\n3 4 0 2 1') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 5\n\n''') == '84'\nassert solution('''3 7\n\n''') == '3'\nassert solution('''1 1\n\n''') == '2'\nassert solution('''2 5\n\n''') == '5'\nassert solution('''10 20\n\n''') == '26'\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 10\") == \"\"\nassert solution(\"20 2 5\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"20 5\") == \"44\"\nassert solution(\"2 5\") == \"24\"\nassert solution(\"1 9\") == \"45\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 0 5\") == \"4\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3') == 8\nassert solution('7 7 5') == 14\nassert solution('10 3 15') == -1\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('50 2 5') == '50'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 5\\n') == '84'\nassert solution('10 2 6\\n') == '35'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 2 5') == 84\nassert solution('50 2 13') == 92\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '84'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'ABC100'\nassert solution('10') == 'ABC10'\nassert solution('100') == 'ABC100'\nassert solution('1000') == 'ABC1000'\nassert solution('10000') == 'ABC10000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"100\") == \"ABC100\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == 'ABC0'\nassert solution('1') == 'ABC1'\nassert solution('2') == 'ABC2'\nassert solution('3') == 'ABC3'\nassert solution('4') == 'ABC4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"ABC100\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123') == 'ABC123'\nassert solution('789') == 'ABC789'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == 'ABC4'\nassert solution('2') == 'ABC2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"ABC100\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100') == 'ABC100'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"1\") == \"ABC1\"\nassert solution(\"123\") == \"ABC123\"\nassert solution(\"1000\") == \"ABC1000\"\nassert solution(\"1001\") == \"ABC1001\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123') == 'ABC123'\nassert solution('321') == 'ABC321'\nassert solution('10') == 'ABC10'\nassert solution('0') == 'ABC0'\nassert solution('123') == 'ABC123'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '5'\nassert solution('10 2') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"4 5\") == \"10\"\nassert solution(\"5 5\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '5'\nassert solution('5 1') == '4'\nassert solution('5 2') == '3'\nassert solution('5 3') == '2'\nassert solution('5 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '5'\nassert solution('4 1') == '4'\nassert solution('4 1') == '4'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"5 5\") == \"5\"\n\"\"\"\n\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"5\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '5'\nassert solution('2 2') == '2'\nassert solution('2 1') == '1'\nassert solution('1 2') == '0'\nassert solution('3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"5 5\") == \"0\"\n\"\"\"\n\na, b = map(int, input().split())\n\ndays_takahashi = 0\n\nfor i in range(a, 100):\n    if i % 100 == a % 100:\n        if (i % 400 == 0) or (i % 100!= 0):\n            if i % 4 == 0:\n                days_takahashi += 366\n            else:\n                days_takahashi += 365\n        else:\n            days_takahashi += 365\n    elif i % 4 == 0:\n        days_takahashi += 366\n    else:\n        days_takahashi += 365\n\nfor i in range(b, 100):\n    if i % 100 == b % 100:\n        if (i % 400 == 0) or (i % 100!= 0):\n            if i % 4 == 0:\n                days_takahashi += 366\n            else:\n                days_takahashi += 365\n        else:\n            days_takahashi += 365\n    elif i % 4 == 0:\n        days_takahashi += 366\n    else:\n        days_takahashi += 365\n\nprint(days_takahashi)",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5'\nassert solution('1 1\\n') == '0'\nassert solution('5 5\\n') == '5'\nassert solution('5 5\\n') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '-1', solution('3')\nassert solution('1') == '0', solution('1')\nassert solution('1') == '0', solution('1')",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1\\n3\\n3\\n5\\n\") == \"2\"\n\"\"\"\n\nimport sys\nsys.stdin = open('input.txt')\n\nn = int(input())\n\nfor i in range(1, n + 1):\n    if i == 1:\n        if i == 2:\n            print(-1)\n    elif i == 2:\n        print(i)\n    else:\n        print(i)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '-1'\nassert solution('12') == '2'\nassert solution('2') == '0'\nassert solution('10') == '-1'\nassert solution('5') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '-1'\nassert solution('1') == '2'\nassert solution('3') == '1'\nassert solution('2 1 2 3') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"3\\n2\\n1\") == \"-1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('3 3 3') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n2\\n') == '2'\nassert solution('3\\n3\\n1\\n2\\n') == '1'\nassert solution('4\\n2\\n2\\n2\\n') == '-1'\nassert solution('5\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n') == '2'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 97
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '3'\nassert solution('3\\n2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\"\nassert solution(\"3\\n6\\n2\\n7\") == \"2\"\nassert solution(\"4\\n6\\n2\\n5\") == \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n6\n2\n6\n''') == '1'\nassert solution('''\n2\n5\n1\n5\n''') == '2'\nassert solution('''\n4\n4\n3\n4\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n6\n2\n6\n''') == '1'\n\nassert solution('''4\n9\n5\n3\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6\\n2\\n6\\n\") == \"1\"\nassert solution(\"2\\n4\\n1\\n1\\n\") == \"2\"\nassert solution(\"3\\n5\\n2\\n3\\n\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n2\n2''') == '2'\nassert solution('''2\n4\n3\n1''') == '2'\nassert solution('''4\n5\n2\n6''') == '3'\nassert solution('''5\n10\n9\n10''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2\n2\n''') == '1'\nassert solution('''\n3\n2\n2\n''') == '1'\nassert solution('''\n3\n2\n1\n''') == '2'\nassert solution('''\n3\n1\n1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"100 3\\n1 2 3\\n\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\n\nprint(\"Test is done\")\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"10 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"1 1 2 2 5\\n\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"10 5\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n3\\n3\\n2\\n3') == '1'\nassert solution('5\\n2\\n1\\n2\\n1') == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 1\\n1 1 2 2 3') == '2'\nassert solution('5 2\\n1 1 2 2 5') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3') == '1'\nassert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 5\\n1 1 2 2 3') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\nassert solution(input('')) == '1'\n\nsolution()\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"12 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"3 1 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('1\\n5 5 5\\n1 1 1 1 1') == 'No'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n3 1 2\n6 1 1\n''') == 'Yes'\nassert solution('''2\n4 1 2\n6 1 1\n''') == 'No'\nassert solution('''2\n1 1 2\n4 1 2\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3 1 2\n6 1 1\n''') == 'Yes'\nassert solution('''2\n3 1 2\n10 10 10\n''') == 'No'\nassert solution('''1\n10 10 10\n''') == 'Yes'\nassert solution('''1\n10 10 10\n''') == 'Yes'\nassert solution('''1\n10 10 10\n''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yes\\n'\nassert solution('2') == 'No\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3 1 2\n6 1 1\n''') == 'Yes'\nassert solution('''4\n1 1 1\n2 1 2\n3 2 2\n4 2 1\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"4\\n3 1 2\\n6 1 1\\n3 4 3\") == \"No\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2 2 1\n''') == \"Yes\"\nassert solution('''\n2\n1 1 1\n''') == \"No\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3\n''') == '2'\nassert solution('''\n0 3\n''') == '1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 3\n''') == '2'\nassert solution('''1 2\n''') == '2'\nassert solution('''3 4\n''') == '4'\nassert solution('''1 2\n''') == '2'\nassert solution('''5 6\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"1 1.5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"1 1\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('-1 3') == '-1'\nassert solution('1.5 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3\n''') == '2'\nassert solution('''\n2 5\n''') == '3'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n1 2\n''') == '3'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 3\n''') == '2'\nassert solution('''2 3\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 6') == '1'\nassert solution('1 7') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"6 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\n\"\"\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\nassert solution('10 3\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16') == '0'\nassert solution('1 2\\n3 5\\n2 4\\n3 6\\n4 7\\n5 8\\n6 9') == '3'\n'''",
        "num_ids_2": 82,
        "num_ids_4": 117
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 7\") == \"4\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"7 7\") == \"4\"\nassert solution(\"4 4\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7\") == \"4\"\nassert solution(\"9 8\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 7') == '4'\nassert solution('10 10') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 7') == '4'\nassert solution('1 3') == '1'\nassert solution('2 7') == '0'\nassert solution('1 3') == '1'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 7\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin := \"2 2 2\") == \"1\"\n\"\"\"\n\nA, B, C = [int(x) for x in stdin.split(\" \")]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"2\"\n\n\"\"\"\n\na, b, c = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"7\"\nprint(solution(stdin))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == '7'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 1 1\") == \"2\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == '7'\n\n\"\"\"\nA, B, C = map(int, stdin.split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 7 2') == '2'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 1 2 2 5 8') == '100 2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 1 10 20 15 200\") == \"100 10\"\nassert solution(\"1 1 1 10 20 15 200\") == \"100 10\"\nassert solution(\"1 1 1 1 10 20 15 200\") == \"100 10\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip().split()\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2 10 20 15 200''') == '110 10'\nassert solution('''1 2 10 20 15 200 1''') == '110 10'\nassert solution('''1 2 10 20 15 200 1 2''') == '110 10'\nassert solution('''1 2 10 20 15 200 1 2 3''') == '110 10'\nassert solution('''1 2 10 20 15 200 1 2 3 4''') == '110 10'\n",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200 100') == '110 10'\nassert solution('1 2 10 20 15 200 100 50') == '110 50'\nassert solution('1 2 10 20 15 200 100 200') == '110 200'\nassert solution('1 2 10 20 15 200 100 200 50') == '110 150'\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\nIn this example, the maximum possible sugar water that can be obtained with the minimum number of operations is 110.\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 10 20 15 200''') == '110 10'\nassert solution('''1 2 10 20 15 200''') == '110 10'\nassert solution('''1 2 10 20 15 200''') == '110 10'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"2 1 10 10 20 15 200\") == \"110 10\"\n\"\"\"\nfrom typing import Dict, List, Tuple",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('enquiry') == 'qry'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"one\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"i18n\"\nprint(\"You're a smart cookie!\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('hello') == 'hll'\nassert solution('hello world') == 'hllw'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('Internationalization') == 'i18n'\nassert solution('Internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nprint(\"Test passed\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    'pot'\n) == 'YES'\nassert solution(\n    'top'\n) == 'NO'\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n\nimport string",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('pot') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('o') == 'YES'\nassert solution('t') == 'NO'\nassert solution('1') == 'NO'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abac') == 'abc'\nassert solution('ababc') == 'ababc'\nassert solution('ababc')!= 'bcab'\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ababab\") == \"a\"\nassert solution(\"aaaaaaaaaa\") == \"a\"\nassert solution(\"ababc\") == \"b\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abcd\") == \"c\"\nassert solution(\"a\") == \"a\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"baba\") == \"b\"\nassert solution(\"baba\") == \"b\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"acb\") == \"c\"\nassert solution(\"z\") == \"z\"\nassert solution(\"zaba\") == \"z\"\nassert solution(\"zabca\") == \"z\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aba') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aba') == 'b'\nassert solution('abab') == 'ab'\nassert solution('abac') == 'ab'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"ababbbb\") == \"bb\"\nassert solution(\"abababababab\") == \"abababababab\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abc\"\n",
        "num_ids_2": 22,
        "num_ids_4": 65
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcd') == 'b'\nassert solution('abcbba') == 'b'\nassert solution('abcabc') == 'a'\nassert solution('abcabcabc') == 'c'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == \"9\"\nassert solution('5 5 2') == \"50\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4 2\n2 1 1\n3 3 4\n''') == \"9\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('6 4 4') == '48'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 5 1\") == \"15\"\nassert solution(\"5 1 2\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\nassert solution('3 3 4\\n2 1 1\\n3 3 4') == '12'\nassert solution('3 3 4\\n2 1 1\\n3 3 4') == '12'\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('1 1 1') == '1'\nassert solution('4 6 5') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''7 4 6\n4 1 1\n5 3 3\n3 1 1\n1 5 5''') == '23'\nassert solution('''7 7 6\n1 1 1\n5 3 3\n3 1 1\n1 5 5''') == '42'\nassert solution('''10 10 6\n2 1 1\n5 3 3\n3 1 1\n1 5 5\n3 1 1\n1 4 4''') == '30'\nassert solution('''4 6 6\n1 1 1\n5 3 3\n3 1 1\n1 5 5\n3 1 1\n1 4 4''') == '30'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('5 5 3') == '9'\nassert solution('5 5 3 2') == '12'\nassert solution('5 5 4 2 3 4') == '12'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"12 11 0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 2 1\\n2 3 3\") == \"0\\n0\\n0\"\nassert solution(\"3\\n3 3 1\\n3 2 3\") == \"0\\n0\\n0\"\nassert solution(\"1\\n5 10 1\\n5 10 3\") == \"12\\n11\\n12\"\n",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"3\\n10 10 0\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"3\\n10 10 10\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"3\\n10 10 10 10\\n1 10 1\\n\") == \"12\\n11\\n0\"\n\n'''",
        "num_ids_2": 56,
        "num_ids_4": 113
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"12\\n11\\n0\\n\"\nassert solution(\"5\") == \"12\\n11\\n0\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"12\"\nassert solution(\"6\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"0\"\n\nprint(solution(\"3\"))\nprint(solution(\"4\"))\nprint(solution(\"5\"))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0'\nassert solution('10') == '5'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '11'\n\"\"\"\n\nfrom math import gcd",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '12\\n11\\n0\\n'\nassert solution('6') == '12\\n11\\n0\\n'\nassert solution('1') == '0\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 48
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n*.\\n.*\") == \"*.\\n*.\\n*.\\n*.\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"**.**.**.***\"\nassert solution(\"2 2\") == \"***\"\nassert solution(\"3 5\") == \"****\"\nassert solution(\"3 6\") == \"*****\"\nassert solution(\"5 5\") == \"*****\"\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \".*\\n.*\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n.\\n.\\n.\\n.\\n') == '..\\n..\\n.\\n.\\n.'\nassert solution('1 1\\n.\\n.\\n.\\n.\\n') == '..\\n..\\n.\\n.\\n.'\nassert solution('10 10\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *\\n* * * * * * * *') == '**\\n***\\n*****\\n*******\\n*****\\n***\\n**\\n***\\n*****\\n****\\n***\\n**\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n'\n",
        "num_ids_2": 72,
        "num_ids_4": 286
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '**\\n**\\n**\\n**\\n', 'Wrong answer'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\n*.\\n') == '*.\\n*.\\n*.\\n*.\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n*.\\n*.\\n') == '*.\\n*.\\n*.\\n*.\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '.*\\n.*\\n.*\\n.*'\nassert solution('2 1') == '.*\\n.*'\nassert solution('3 3') == '.*\\n.*\\n.*'\nassert solution('4 4') == '.*\\n.*\\n.*\\n.*'\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \".\\n.\\n*.\\n*.\\n.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n2 6 1 4 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4\n5 1 4 2\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n3 6 2 1 4\") == \"NO\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"2 3\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'NO'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 6 1 4 5') == \"YES\"\nassert solution('1\\n3') == \"NO\"\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 'YES'\nassert solution('5\\n2 4 1 3 5') == 'NO'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n2 6 1 4 5\") == \"NO\"\nassert solution(\"5\\n2 5 1 4\") == \"YES\"\n",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n8\\n6 6 6 6 6 6 8 8') == '2'\nassert solution('5\\n6 6 6 6 6 6 8 8') == '4'\nassert solution('5\\n8\\n1 2 3 4 5') == '3'\nassert solution('5\\n3\\n1 3 3') == '4'\nassert solution('5\\n6\\n1 2 3 4 5') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 81
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8') == '2'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n1 1 3 4 2 2\\n6\\n1 1 3 4 2 2') == '3'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n4\\n1 1 3 4 2 2') == '4'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n5\\n1 1 3 4 2 2') == '1'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n4\\n1 1 3 4 2 2') == '2'\n",
        "num_ids_2": 72,
        "num_ids_4": 134
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2\\n4\\n1\\n2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3\\n4\\n1\\n2'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2\\n4\\n1\\n2'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4\\n1\\n2\\n3'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '1\\n2\\n3\\n4'",
        "num_ids_2": 120,
        "num_ids_4": 194
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n\nassert solution('''4\n4\n4\n5\n1\n''') == '2'\n\nassert solution('''6\n4\n2\n2\n1\n3\n1\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"4\"\nassert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\n\n\"\"\"\nimport math\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''2\n4 5\n4 5''') == '2'\nassert solution('''1\n1 5\n2 3''') == '1'\nassert solution('''1\n7 3\n6 8''') == '4'\nassert solution('''6\n6 6\n4 5''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2\n1 5\n22 5\n987 13''') == '3'\nassert solution('''4 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''5 2\n1 5\n22 5\n987 13''') == '2'\nassert solution('''6 1\n1 5\n22 5\n987 13''') == '1'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('7 3') == '3'\nassert solution('22 5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''4\n7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''5\n7 3\n1 5\n22 5\n987 13''') == '2'\n''')\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\\n\") == \"3\"\nassert solution(\"1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n3\n''') == '2'\nassert solution('''1\n2\n''') == '2'\nassert solution('''3\n6\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\n\nassert solution('2\\n9 3\\n1 5\\n22 5\\n987 13') == '1'\n\nassert solution('3\\n15 3\\n1 5\\n22 5\\n987 13') == '5'\n\nassert solution('4\\n10 3\\n1 5\\n22 5\\n987 13') == '77'\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 3\n1 5\n22 5\n987 13\n1 5\n22 5\n987 13\n1 5\n22 5\n987 13''') == '3'\nassert solution('''1 2\n1 2\n1 1\n1 2''') == '1'\nassert solution('''4 3\n1 5\n22 5\n987 13\n1 5\n22 5\n987 13''') == '1'\nassert solution('''2 3\n1 5\n22 5\n987 13\n1 5\n22 5\n987 13''') == '1'\nassert solution('''1 2\n1 2\n1 1\n1 2''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3\n2 4\n5''') == '1'\nassert solution('''3 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''1 7\n22 5\n987 13\n3 4\n7 5\n4''') == '3'\nassert solution('''7 7\n1 5\n22 5\n987 13\n3 4\n7 5\n4''') == '3'\nassert solution('''9 2\n5 1\n2 3\n4 5\n7 8\n3 5\n1''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(input()) == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(input()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''\n3\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n4 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2') == '4 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('4 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2') == '4 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\nassert solution('3 2\\nabc\\ndef') == '3 2\\n0 0 0\\n1 1 1\\n2 2 2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 320,
        "num_ids_4": 1035
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '4 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"4 2\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"4 5 3 2\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n",
        "num_ids_2": 72,
        "num_ids_4": 110
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4 2\\nabca\\n1 3\\n10 5\\ncodeforces\\n2 8 3 2 9\\n26 10\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('4\\n2 8 3 2 9\\n26 10\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('3\\n4 2\\nabca\\n1 3\\n10 5\\ncodeforces\\n2 8 3 2 9\\n26 10\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('3\\n4 2\\nabca\\n1 3\\n10 5\\ncodeforces\\n2 8 3 2 9\\n26 10\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\nassert solution('3\\n4 2\\nabca\\n1 3\\n10 5\\ncodeforces\\n2 8 3 2 9\\n26 10\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\n",
        "num_ids_2": 288,
        "num_ids_4": 598
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 ''' == solution('''20 10 1 2 3 5 10 5 9 4\nqwertyuioplkjhgfdsazxcvbnm\n26 10\ncodeforces''')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5') == '0'\nassert solution('5\\n3 2 5\\n3 2 6\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5') == '2'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 3 4\\n10 20 30') == '0'\nassert solution('2\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n') == '1999999994'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '0'\nassert solution('3 3 4') == '36'\nassert solution('10 20 30') == '1999999994'\nassert solution('5 5 5') == '2'\nassert solution('2 4 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"4\"\nassert solution(\"2 4 3\") == \"0\"\nassert solution(\"1 1000000000 1000000000\") == \"1999999994\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 3 4\"\n) == \"0\"\nassert solution(\n    \"10 20 30\"\n) == \"36\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"2 4 3\") == \"2\"\nassert solution(\"1 1000000000 1000000000\") == \"9999999994\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n''') == '0'\nassert solution('''\n2\n1\n4\n''') == '0'\nassert solution('''\n2\n5\n7\n''') == '0'\nassert solution('''\n2\n3\n5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 4') == '36'\nassert solution('1 1000000000 1000000000') == '1999999994'\nassert solution('3 2 5') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'\n\nassert solution('''\n8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES', 'First Test Case Failed'\nassert solution('''\n5\n7\n2 8 9 4 5\n4\n1 2 3 4 5\n5\n1 8\n9\n1 4\n6\n5\n9\n''') == 'YES', 'Second Test Case Failed'\nassert solution('''\n4\n2\n1 2 3\n1\n2\n1\n''') == 'YES', 'Third Test Case Failed'\nassert solution('''\n4\n1 1 1 1\n1\n2\n''') == 'NO', 'Fourth Test Case Failed'\nassert solution('''\n4\n2\n1 2 3\n1\n2\n1\n''') == 'YES', 'Fifth Test Case Failed'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n1 2 3 4\\n2') == 'YES'\nassert solution('3\\n4\\n2 1 1 1\\n1') == 'NO'\nassert solution('3\\n4\\n2 1 1 1\\n1') == 'YES'\nassert solution('6\\n10\\n12 13 5 4 2 5 7\\n2') == 'YES'\nassert solution('3\\n4\\n1 2 3 4\\n2') == 'YES'",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n1 2\n1''') == 'YES'\nassert solution('''2\n3\n1 2\n1''') == 'NO'\nassert solution('''4\n4\n1 2 3\n1''') == 'YES'\nassert solution('''4\n2\n1 2\n1''') == 'YES'\nassert solution('''4\n4\n1 2 3\n1''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"6\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"22\"\nassert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == \"13\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('6 5 2') == '22'\nassert solution('10 50 2') == '138'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''\n4 4 6\n1 2 3\n2 4 5\n3 4 4\n1 4 5\n3 5 1\n4 2 5\n3 3 3\n3 1 2\n3 1 4\n1 2 3\n1 4 2\n''') == '33'\nprint(solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"13\"\nassert solution([4, 2, 5]) == \"22\"\nassert solution([5, 4, 2]) == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 4\") == \"13\"\nassert solution(\"6 5 2\") == \"22\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('6 5 2') == '22'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"\nassert solution(\"3 3 3\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n3 5 2\\n1 5\\n1 3\") == \"13\"",
        "num_ids_2": 54,
        "num_ids_4": 94
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '13'\nassert solution('5 5 4') == '13'\nassert solution('1 2 5') == '22'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n2\") == \"3\\n3\"\nassert solution(\"6\\n1\\n2\\n4\\n5\\n9\\n1\\n1\\n5\") == \"9\\n9\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"4\\n1\\n2\\n3\") == \"4\"\nassert solution(\"1\\n2\\n3\") == \"1\"\n",
        "num_ids_2": 56,
        "num_ids_4": 91
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\nassert solution(\"14\") == \"27\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '13'\nassert solution() == '27'\n\"\"\"\n\nstdin = input()\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '3\nassert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '9\nassert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '13\nassert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '27\nassert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '6561\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1\n2\n6\n13\n14\n3620\n10000\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n7\n1\n2\n6\n13\n14\n3620\n10000\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n4\n1\n2\n6\n13\n14\n3620\n10000\n\"\"\") == \"13\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '61'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"3\\n9\\n13\\n27\\n6561\\n19683\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"6\\n\") == \"9\\n\"\nassert solution(\"13\\n\") == \"27\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1'\n) == '1'\nassert solution(\n    '2'\n) == '3'\nassert solution(\n    '6'\n) == '9'\nassert solution(\n    '13'\n) == '27'\nassert solution(\n    '14'\n) == '27'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"3 3 3 2 1 2 4 4 1\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n2\n2\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 3 1\n3\n2 3 1\n5\n5 1 2 4 3\n''') == '2 2 2 2 2'\nprint(solution('''5\n4 6 2 1 5 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''))\nassert solution('''6\n5\n4 6 2 1 5 3\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 2 2 2 2 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n5 1 2 3 4\n1''') == '1 1 1 1 1'\nassert solution('''5\n5 1 2 3 4\n1''') == '1 1 1 1 1'\nassert solution('''6\n5 1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1''') == '3 3 3 2 1 3'\nassert solution('''6\n5 1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1''') == '2 2 2 2 2 1 2'\nassert solution('''5\n5 1 2 3 4\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1''') == '2 2 2 2 2 1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 2 1 3'\n\nprint(solution('''\n10\n1 3 5 9 4 7 8 2 6 5 8\n2\n5 4 3 6 1 8 7 9 2 3 4\n1\n3 2 9 8 5 4 1 7 6\n4\n3 3 6 1 5 7 9 8 2 4\n5\n8 9 4 4 3 2 6 7 1\n'''))\n\n\"\"\"\n\nfrom functools import reduce",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1 3 3 2 2 2 3 4 4 4 1 4\\n2 3 3 2 1 2 3 1 3\\n3 3 3 2 1 2 3 1 3\\n1\\n2 2 2 2 1 4 3\\n4 4 4 1 4 4 3 3\\n5 5 5 2 2 4 3 2 3\\n5 5 5 2 2 4 3 2 3\\n\\n\"\"\", \"solution(input)\")\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '5 1 1 1 1'\nassert solution(input()) == '3 3 3'\nassert solution(input()) == '2 3 3 2 1 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\"\n) == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n5 5 5 1 2 4 3\"\nassert solution(\n    \"6\\n4\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\"\n) == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n5 5 5 1 2 4 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3\n1 2 3\n5\n5 1 2 4 3\n''') == '2 2 2 2 1'\nassert solution('''5\n5\n4 4 1 2 3\n2\n3 3 1''') == '1 1 1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 2 2 2 1 3'\nassert solution() == '2 3 3 2 1 3'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1 1 1 1\"\nassert solution(\"5\") == \"3 3 3\"\nassert solution(\"6\") == \"2 3 3 2 1 3\"\nassert solution(\"4\") == \"4 4 4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '-1 2 6 4 0 3'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 6\\n\"\n    \"1 5\\n\"\n) == \"8\"\nassert solution(\n    \"3 5\\n\"\n    \"0 3 1\\n\"\n) == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 3\n0 3 2 4 5 1 6 7 8 9 10\n''') == '15'\nassert solution('''\n15 5\n5 1 0 2 3 4 6 7 8 9 10 11 12 13 14 15\n''') == '17'\nassert solution('''\n2 5\n1 5\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7'\nassert solution('-1 2 6 4 0 3') == '5 -2 4 -1 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7'\nassert solution('''\n4 5\n4 3 2 1 0\n''') == '-1 -2 2 4 0 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7'\nassert solution() == '-1 2 6 4 0 3'\nassert solution() == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 30
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n1 5\n''') == '7'\nassert solution('''\n2 5\n1 5\n''') == '-1'\nassert solution('''\n3 5\n0 3 1\n''') == '5 -2 4 -1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7 5 -2 4 -1 2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 6\\n\"\n    \"1 5\\n\"\n) == \"8\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\nassert solution('''\n3\n3\n1 2\n1 3\n2 3\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n10\n3 1\n4 2\n3 5\n7 6\n8 9\n4 7\n9 8\n6 7\n5 8\n6 9\n5 7\n3 2\n1 2\n''') == 'YES'\nassert solution('''\n10\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\nassert solution('''\n4\n1 3\n2 4\n3 6\n4 8\n''') == 'YES'\nassert solution('''\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == 'YES'\n\n'''\n\n'''\n    #input()\n    #output()\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3''') == 'YES'\n\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\n\nassert solution('''5\n5\n1 0\n0 1\n1\n3 3\n4 3\n2''') == 'YES'\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(open(0).read()) == 'YES'\nassert solution(open(1).read()) == 'RUUURRRRUU'\nassert solution(open(2).read()) == 'NO'\nassert solution(open(3).read()) == 'RRRRUUU'\n\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\n\"\"\"\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\n\nassert solution('''5\n5\n4 3\n3 1\n0 5\n5 5\n4 3\n2\n1 0\n0 1\n1\n3 3\n''') == \"YES\"\n\nassert solution('''5\n0\n0\n1\n4\n5\n4 3\n2\n1 0\n0 1\n1\n3 3\n''') == \"NO\"\n\nassert solution('''3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n3 3\n''') == \"YES\"\n\nassert solution('''3\n1 1\n2 1\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n3 3\n''') == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'RUUURRRRUU'\nassert solution('''\n3\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '8'\nassert solution('2\\n2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '0'\nassert solution('2\\n1\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '500'\nassert solution('10\\n5\\n9\\n1\\n2\\n3\\n5\\n7\\n13\\n17\\n19\\n') == '0'\n",
        "num_ids_2": 76,
        "num_ids_4": 154
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '8'\nassert solution('2\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '0'\nassert solution('1\\n3 4\\n4 5\\n8 7\\n3 8\\n') == '8'",
        "num_ids_2": 72,
        "num_ids_4": 100
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(t := int(input())) == str(\n    min(\n        [int(i) for i in range(int(input()), 0, -1)],\n        key=lambda i: sum([int(d) for d in str(i)])\n        )\n    )\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2 1\\n'\n    '1 1\\n'\n    '500 4\\n'\n    '217871987498122 10\\n'\n    '100000000000000001 1\\n'\n) == '8'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"500 4\") == \"0\"\nassert solution(\"217871987498122 10\") == \"2128012501878\"\nassert solution(\"100000000000000001 1\") == \"899999999999999999\"",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"500 4\") == \"500\"\nassert solution(\"217871987498122 10\") == \"2128012501878\"\nassert solution(\"100000000000000001 1\") == \"999999999999999999\"",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\n\nassert solution('''\n4 6\n1 1\n1 1\n1 1\n1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"500\"\nassert solution(input()) == \"2128012501878\"\nassert solution(input()) == \"99999999999999999\"\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution(stdin) == \"500\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\nassert solution('''\n5\n1 1 0 0 1\n3\n0 0 1\n4\n0 0 1\n5\n1 1 0 0 1\n''') == '2'\nassert solution('''\n5\n0 0 1 0 1\n3\n0 0 1\n4\n0 0 1\n5\n1 1 0 0 1\n''') == '4'\nassert solution('''\n5\n0 0 1 0 1\n3\n0 0 1\n4\n0 0 1\n5\n1 1 0 0 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '2'\nassert solution('2\\n1\\n0\\n0\\n0\\n1\\n0\\n0') == '2'\nassert solution('3\\n1\\n0\\n0\\n0\\n1\\n0\\n0') == '4'\nassert solution('3\\n1\\n0\\n0\\n0\\n1\\n0\\n0') == '1'\nassert solution('3\\n1\\n0\\n0\\n0\\n1\\n0\\n0') == '0'\n",
        "num_ids_2": 92,
        "num_ids_4": 154
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\") == \"2\"\nassert solution(\"4\\n7\\n1 0 0\\n5\\n1 1 0\\n6\\n1 0 0\\n5\\n1 1 0\") == \"4\"\nassert solution(\"3\\n7\\n1 0 0\\n5\\n1 1 0\\n6\\n1 0 0\\n5\\n1 1 0\") == \"0\"\nassert solution(\"2\\n7\\n1 0 0\\n5\\n1 1 0\\n6\\n1 0 0\\n5\\n1 1 0\") == \"1\"\nassert solution(\"1\\n7\\n1 0 0\\n5\\n1 1 0\\n6\\n1 0 0\\n5\\n1 1 0\") == \"0\"\n",
        "num_ids_2": 93,
        "num_ids_4": 177
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(open('test.in').read()) in ('0', '1')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"2 1 1\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n\") == \"2\"\nassert solution(\"4\\n3\\n0 0 1 0\\n5\\n1 1 0 0\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n\") == \"4\"\nassert solution(\"3\\n1\\n0\\n1\\n\") == \"1\"\nassert solution(\"5\\n7\\n1 1 0 0 0 1\\n3\\n0 0 1 0 1\\n5\\n1 1 0 1 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n\") == \"3\"\nassert solution(\"5\\n7\\n1 1 0 0 0 1\\n3\\n0 0 1 0 1\\n5\\n1 1 0 1 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n\") == \"2\"\n",
        "num_ids_2": 114,
        "num_ids_4": 199
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\nassert solution('''\n3\n1 0 0\n2\n0 1\n''') == '0'\nassert solution('''\n3\n1 0 0\n2\n1 1\n''') == '2'\nassert solution('''\n1\n0 1\n''') == '2'\nassert solution('''\n6\n0 0 0 0 0 1\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0') == '2'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '4'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n1 1 0 0 1') == '1'\n",
        "num_ids_2": 70,
        "num_ids_4": 117
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '2'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '0'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '4'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '1'\n\nsolution('''\n10\n1 2 3 4 5 6 7 8 9 10\n2\n2 3\n2\n5\n5\n3\n2 1\n2 4\n4\n4\n2\n4\n4\n3\n\n''')",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open('test.txt').read()) == '2'\nassert solution(open('input.txt').read()) == '4'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3\n3\n4\n1''') == \"cbcaca\"\nassert solution('''4\n3\n2\n4\n1''') == \"abcd\"\nassert solution('''4\n2\n2\n2\n1''') == \"ababa\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"cbcacab\"\nassert solution(input()) == \"abcd\"\nassert solution(input()) == \"baabab\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\"\nassert solution(\n    \"3\\n7 3\\n4 4\\n6 2\\n\") == \"abcd\"\nassert solution(\n    \"3\\n7 3\\n4 4\\n6 2\\n\") == \"baabab\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'aa'\nassert solution('3') == 'aba'\nassert solution('4') == 'baab'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1\\n3 5\\n4 1\\n') == 'abab'\nassert solution('2 3\\n3 3\\n') == 'abab'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\"\nassert solution(\"2\\n4 4\\n7 2\\n\") == \"abcd\"\nassert solution(\"3\\n7 4\\n6 2\\n\") == \"baabab\"\n",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == ''\nassert solution('2') == 'c'\nassert solution('3') == 'baabab'\n\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 30
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'a'\nassert solution('3') == 'ba'\nassert solution('4') == 'bb'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n7 3\n4 4\n6 2\n''') == 'cbcacab'\nassert solution('''\n3\n7 3\n4 4\n6 2\n''') == 'abcd'\nassert solution('''\n3\n7 3\n4 4\n6 2\n''') == 'baabab'\n\nimport collections\nimport itertools\nimport re\nimport stdin\n\nstdin = stdin.stdin.read()\nt = int(stdin.split()[0])\n\nfor i in range(1, t+1):\n    n, k = map(int, stdin.split()[i].split())\n    result = \"\"\n    count = collections.Counter(stdin.split()[i])\n    for k,v in count.items():\n        if v == k:\n            result += k\n    print(result)\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n\nassert solution(\"10\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0'\nassert solution('''\n6\n10\n1 2 1 2 2 1\n1\n6\n1 1 1 1 1 1\n2\n2 1\n3\n1 1 1\n2\n2 1\n''') == '2 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '2 2 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n\"\"\") == \"6 23 21\"\n\nassert solution(\"\"\"\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n\"\"\") == \"6 23 21\"\n\nassert solution(\"\"\"\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n\"\"\") == \"6 23 21\"\n\nassert solution(\"\"\"\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n\"\"\") == \"6 23 21\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '''6 23 21'''\nassert solution('''\n5\n1 2 1 3 1\n4\n1 1 1 1\n4\n2 1 1 1\n3\n1 1 1 1\n''') == '''5 5'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"6 23 21\"\nassert solution(\"1\") == \"1 1000 0\"\nassert solution(\"2\") == \"2 1 2\"\nassert solution(\"6\") == \"6 45 46\"\nassert solution(\"7\") == \"6 23 21\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\n11\n3 1 4 1 5 9 2 6 5 3 5''') == '6 23 21'\nassert solution('''\n1\n1000\n3\n1 1 1''') == '1 1000 0'\nassert solution('''\n2\n2 1\n6\n1 1 1''') == '2 1 2'\nassert solution('''\n7\n1 1 1 1 1 1 1\n1\n1 1 1 1 1 1''') == '4 4 3'",
        "num_ids_2": 13,
        "num_ids_4": 25
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '''\n6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''\n6\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''\n10\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6 23 21\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n8\n1 1 1\n9\n1 1 1\n10\n1 1 1\n11\n1 1 1\n12\n1 1 1\n13\n1 1 1\n14\n1 1 1\n15\n1 1 1\n16\n1 1 1\n17\n1 1 1\n18\n1 1 1\n19\n1 1 1\n20\n1 1 1\n21\n1 1 1\n22\n1 1 1\n23\n1 1 1\n24\n1 1 1\n25\n1 1 1\n26\n1 1 1\n27\n1 1 1\n28\n1 1 1\n29\n1 1 1\n30\n1 1 1\n31\n1 1 1\n32\n1 1 1\n33\n1 1 1\n34\n1 1 1\n35\n1 1 1\n36\n1 1 1\n37\n1 1 1\n38\n1 1 1\n39\n1 1 1\n40\n1 1 1\n41\n1 1 1\n42\n1 1 1\n43\n1 1 1\n44\n1 1 1\n45\n1 1 1\n46\n1 1 1\n47\n1 1 1\n48\n1 1 1\n49\n1 1 1\n50\n1 1 1\n51\n1 1 1\n52\n1 1 1\n53\n1 1 1\n54\n1 1 1\n55\n1 1 1\n56\n1 1 1\n57\n1 1 1\n58\n1 1 1\n59\n1 1 1\n60\n1 1 1\n61\n1 1 1\n62\n1 1 1\n63\n1 1 1\n64\n1 1 1\n65\n1 1 1\n66\n1 1 1\n67\n1 1 1\n68\n1 1 1\n69\n1 1 1\n70\n1 1 1\n71\n1 1 1\n72\n1 1 1\n73\n1 1 1\n74\n1 1 1\n75\n1 1 1\n76\n1 1 1\n77\n1 1 1\n78\n1 1 1\n79\n1 1 1\n80\n1 1 1\n81\n1 1 1\n82\n1 1 1\n83\n1 1 1\n84\n1 1 1\n85\n1 1 1\n86\n1 1 1\n87\n1 1 1\n88\n1 1 1\n89\n1 1 1\n90\n1 1 1\n91\n1 1 1\n92\n1 1 1\n93\n1 1 1\n94\n1 1 1\n95\n1 1 1\n96\n1 1 1\n97\n1 1 1\n98\n1 1 1\n99\n1 1 1\n100\n1 1 1\n101\n1 1 1\n102\n1 1 1\n103\n1 1 1\n104\n1 1 1\n105\n1 1 1\n106\n1 1 1\n107\n1 1 1\n108\n1 1 1\n109\n1 1 1\n110\n1 1 1\n111\n1 1 1\n112\n1 1 1\n113\n1 1 1\n114\n1 1 1\n115\n1 1 1\n116\n1 1 1\n117\n1 1 1\n118\n1 1 1\n119\n1 1 1\n120\n1 1 1\n121\n1 1 1\n122\n1 1 1\n123\n1 1 1\n124\n1 1 1\n125\n1 1 1\n126\n1 1 1\n127\n1 1 1\n128\n1 1 1\n129\n1 1 1\n130\n1 1 1\n131\n1 1 1\n132\n1 1 1\n133\n1 1 1\n134\n1 1 1\n135\n1 1 1\n136\n1 1 1\n137\n1 1 1\n138\n1 1 1\n139\n1 1 1\n140\n1 1 1\n141\n1 1 1\n142\n1 1 1\n143\n1 1 1\n144\n1 1 1\n145\n1 1 1\n146\n1 1 1\n147\n1 1 1\n148\n1 1 1\n149\n1 1 1\n150\n1 1 1\n151\n1 1 1\n152\n1 1 1\n153\n1 1 1\n154\n1 1 1\n155\n1 1 1\n156\n1 1 1\n157\n1 1 1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nprint(solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n'''))\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n5 3\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n5 4 5 1 2\n5 3 5 1 2\n''') == '39'\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n5 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3') == '6'\nassert solution('4 0\\n2 2 4 3') == '27'\nassert solution('4 4\\n2 4 5 4') == '11'\nassert solution('10 9 10 10 9\\n4 0') == '17'\nassert solution('4 4\\n2 4 5 4') == '17'\n",
        "num_ids_2": 54,
        "num_ids_4": 89
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\") == \"27\"\nassert solution(\"2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\") == \"39\"\nassert solution(\"2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 4\\n2 2 4 3\") == \"11\"\nassert solution(\"2 2\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 4\\n2 2 4 3\") == \"17\"\nassert solution(\"2 2\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 4\\n2 2 4 3\") == \"27\"\n",
        "num_ids_2": 89,
        "num_ids_4": 219
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\"\n    ) == \"6\\n27\\n39\\n11\\n17\"\nassert solution(\n    \"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\"\n    ) == \"6\\n27\\n39\\n11\\n17\"\nassert solution(\n    \"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\"\n    ) == \"6\\n27\\n39\\n11\\n17\"\nassert solution(\n    \"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\"\n    ) == \"6\\n27\\n39\\n11\\n17\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n1 2\n3 4''') == '27'\nassert solution('''2 1\n1 2\n3 4''') == '39'\nassert solution('''5 5\n5 5 6 6 5''') == '11'\nassert solution('''4 0\n2 2 4 3''') == '17'\nassert solution('''4 4\n1 2 5 4 3''') == '17'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"6\"\nassert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"27\"\nassert solution(\"2 1 2 1\") == \"39\"\nassert solution(\"1 2 5 4 3\") == \"11\"\n",
        "num_ids_2": 15,
        "num_ids_4": 39
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n1 2\n3 4''') == '6'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '39'\nassert solution('''5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3''') == '11'\nassert solution('''5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3''') == '17'\nassert solution('''4 0\n2 2 4 3''') == '27'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nprint('Tests passed')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1\") == \"6\"\nassert solution(\"5\\n1 2\") == \"27\"\nassert solution(\"5\\n3 4\") == \"39\"\nassert solution(\"5\\n5 5\") == \"11\"\nassert solution(\"5\\n5 5 6 6 5\") == \"17\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n\"\"\") == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 2 3 4 1 2 1 3\\n\" +\n    \"1 2 3 4 1 2 1 3\\n\"\n) == \"0 7 13 18 24 35 36 37 40 45\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"0 7 13 18 24 35 36 37 40 45\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3 4') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"10 2\\n\"\n    \"7 6 18 6 16 18 1 17 17\\n\"\n    \"6 9 3 10 9 1 10 1 5\\n\"\n) == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n10 3\n8 9 8 7 7 7 7 7 7\n2 5 3 3 4 1 5 2 3\n''') == '0 4 12 14 16 20 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 7",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0 7 13 18 24 35 36 37 40 45'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100') == 'aaabb'\nassert solution('7\\n5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100') == 'baaba'\n\n\"\"\"\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n5 1\n5 2\n5 8\n5 10\n''') == \"aaabb\"\n\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == \"aaaaabaaaaabaaaaaaaa\"\n\nassert solution('''\n1\n1\n''') == \"a\"\n\nassert solution('''\n1\n2\n''') == \"ab\"\n\nassert solution('''\n5\n2\n''') == \"ba\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2''') == 'aaabb'\nassert solution('''3 1\n3 2\n20 100''') == 'aaaaabaaaaabaaaaaaaa'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n2 5\n3 10\n''') == \"aaaaabaaaaabaaaaaaaa\"\nassert solution('''\n1 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == \"aaaaabaaaaabaaaaaaaa\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n    \"\"\"\n) == \"aaabb\"\nassert solution(\n    \"\"\"\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 10\n    \"\"\"\n) == \"aabab\"\nassert solution(\n    \"\"\"\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 10\n    \"\"\"\n) == \"babaa\"\nassert solution(\n    \"\"\"\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n    \"\"\"\n) == \"bbaaa\"\nassert solution(\n    \"\"\"\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 10\n    \"\"\"\n) == \"bbabb\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaaaabaaaaabaaaaaaaa'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2''') == 'aaabb'\nassert solution('''20 100\n3 1\n3 2\n20 200\n''') == 'aaaaabaaaaabaaaaaaaa'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 1\") == \"aaabb\"\nassert solution(\"5 2\") == \"aabab\"\nassert solution(\"5 8\") == \"baaba\"\nassert solution(\"5 10\") == \"bbaaa\"\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    1\n    3 1\n    5 1\n    5 2\n    5 8\n    5 10\n    3 1\n    3 2\n    20 100\n    \"\"\"\n    ) == \"aaaaabaaaaabaaaaaaaa\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'aaaaabaaaaabaaaaaaaa'\n\n\n'''\n\n\nfrom math import factorial, sqrt",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1''') == '5'\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10''') == '10'\nassert solution('''5\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n1 1''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '12'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '0'\nassert solution('''\n3\n1 2\n1 2\n1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution() == '5'\nassert solution() == '10'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 1\n1 5 2 3\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n1\n10\n10 10\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n2\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4') == '1'\nassert solution('2\\n5 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4') == '5'\nassert solution('3\\n10 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4') == '10'\nassert solution('4\\n10 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4') == '10'\nassert solution('5\\n1000000000\\n1000000000\\n1000000000') == '1000000000'\n",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\") == \"1\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\"\nassert solution(\"7 3\\n1\\n2\\n1\\n2\\n0\\n0\") == \"2\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n0\\n0\") == \"3\"\n",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n0\n1\n2\n2\n0''') == '1'\nassert solution('''4 3\n1\n2\n1\n2''') == '2'\nassert solution('''5 3\n0\n1\n2\n2\n0''') == '3'\nassert solution('''4 3\n1\n2\n1\n2''') == '3'\nassert solution('''5 3\n0\n1\n2\n2\n0''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1'\nassert solution('2 3') == '0'\nassert solution('3 3') == '3'\nassert solution('4 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n4\\n4\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\n",
        "num_ids_2": 80,
        "num_ids_4": 148
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1\n2\n1\n2''') == '1'\nassert solution('''6 3\n1\n2\n3\n4\n5\n6''') == '2'\nassert solution('''2 3\n1\n2\n3''') == '3'\nassert solution('''4 3\n1\n2\n3\n4''') == '4'\nassert solution('''8 3\n1\n2\n3\n4\n5\n6\n7\n8''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3\\n0') == '1'\nassert solution('4 3\\n1\\n2\\n1\\n2') == '2'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n0') == '3'\n",
        "num_ids_2": 37,
        "num_ids_4": 63
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\n\n'''\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\\n\") == \"1 49 20 40 30 50 10\\n26 32 20 38 44 50 1 10 13 4 19 22 25 16 7\"\nprint(solution(input()))\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49 20 40 30 50 10 20 30 50 16 7'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '20 40 30 50 10 26 32 20 38 44 50'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '20 40 30 50 10 21 32 21 23'\n\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49 20 40 30 50 10 20 30 50 16 7'\nassert solution('''5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '1 49 20 40 30 50 10 20 30 50 16 7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '1 1 1'\nassert solution('2 2 2') == '2 2 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n1 3\n5 6\n5 3\n''') == '1 3\\n1 3\\n1 3\\n1 3\\n'\n\nassert solution('''\n1 1\n5 6\n5 3\n''') == '5 6\\n5 6\\n5 6\\n5 6\\n'\n\nassert solution('''\n4\n5 10\n3 6\n4 8\n2 7\n''') == '6\\n12\\n6\\n6\\n'\n\nassert solution('''\n3\n1 10\n2 9\n3 8\n''') == '8\\n8\\n8\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 2\n''') == '1 2\\n'\n\nassert solution('''\n4\n1 5\n2 6\n3 7\n4 8\n''') == '1 2 3 4 5 6 7 8\\n'\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '1 2 3 4 5 6\\n'\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '1 2 3 4 5 6 7\\n'\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n7 8\n''') == '1 2 3 4 5 6 7 8\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10'\nassert solution(\n'''\n5 2 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '6 20 50 1 8 9 13 22'\nassert solution(\n'''\n5 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '6 20 50 2 8 9 13 22'\nassert solution(\n'''\n2 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '5 20 50'\nassert solution(\n'''\n1 1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '6 20 50'\n\n'''\nInput\n2\n3 10\n3 10\n\nOutput\n3 10\n3 10\n\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10 26 32 20 38 44 50 8 23 18 13 3 1 10 13 4 19 22 25 16 7'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 49 20 40 30 50 10\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 49\n5 20 50\n''') == '1 49'\nassert solution('''5\n20 50\n25 20 40 30 50 10\n6 20 50\n5 3 8\n9 13 22\n''') == '25 20 40 30 50 10'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '20 40 30 50 10'\nassert solution('5 3 8') == '8 23 18 13 3'\nassert solution('9 13 22') == '13 22 21 16 19 25'\nprint(solution(input()))\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 2 3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 1 2''') == '1 2 3'\n\n\n---------------------------------------------------------------------------------------------------------------------\n\n\nYou are developing a new feature for the website which sells airline tickets: being able to sort tickets by price! You have already extracted the tickets' prices, so there's just the last step to be done...\n\nYou are given an array of integers. Sort it in non-descending order.\n\n\n-----Input-----\n\nThe input consists of a single line of space-separated integers. The first number is n (1 \u2264 n \u2264 10) \u2014 the size of the array. The following n numbers are the elements of the array (1 \u2264 a_{i} \u2264 100).\n\n\n-----Output-----\n\nOutput space-separated elements of the sorted array.\n\n\n-----Example-----\nInput\n3 3 1 2\n\nOutput\n1 2 3 \n\n\n\n-----Note-----\n\nRemember, this is a very important feature, and you have to make sure the customers appreciate it!\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('4 4 3 2') == '2 3 4'\nassert solution('4 5 5 3 2') == '3 4 5'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"4 1 2 3\") == \"1 2 3 4\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\nassert solution('3 3 1 2') == '1 2 3'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"100 50 2 4\") == \"4 2 3 50\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 1 2\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4\") == \"4 3 2 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2 3\") == \"1 2 3 4\"\nassert solution(\"3 3 1 2\") == \"1 2 3 3\"\nassert solution(\"3 2 1 3\") == \"1 2 3 3\"\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nprint(solution(\"3 3 1 2\"))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('1 2 3') == '1 2 3'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4\n2\n2 2 4\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4\n1\n2 2 4\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n1\n2 2 4\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''\n5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''\n5\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('6') == 'YES'\nassert solution('1') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3\\n4\\n2 2 8 8') == 'YES'\nassert solution('5\\n3 3\\n4\\n5 5 5 5') == 'YES'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == \"YES\"\nassert solution('''\n2\n3\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == \"YES\"\nassert solution('''\n5\n1 2 3 4\n4\n1 2 2 8\n3\n1 1 1 1\n''') == \"NO\"\nassert solution('''\n5\n2 2 8 8\n3\n3 3 3\n4\n1 1 1 1\n''') == \"NO\"\nassert solution('''\n5\n1 1 1 1\n2\n1 1 1 1\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2\\n4\\n6\\n7\") == \"9 6 10 8 4 7 3 1 5 2\"\n\nassert solution(\"5\\n2\\n4\\n6\\n7\") == -1\n\n\"\"\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n10') == '9 6 10 8 4 7 3 1 5 2', 'incorrect'\nassert solution('4\\n3') == '1 2 3', 'incorrect'\nassert solution('5\\n2') == '4 5', 'incorrect'\n",
        "num_ids_2": 45,
        "num_ids_4": 63
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n1\n1\n1\n1\n''') == '1 1 1 1 1'\n\nassert solution('''2\n2\n''') == '2 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    2\n    4\n    6\n    ''') == '''\n    9 6 10 8 4 7 3 1 5 2 \n    '''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '-1'\nassert solution('10') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('12') == '12 15 21 30 36 45 54 65 78 96 96'\nassert solution('20') == '20 20 10 10 20 20 20 20 20 20 20 20 20 20'\n\n\"\"\"\n\nn = int(input())\n\nfor i in range(n):\n    n = int(input())\n    p = [0]*n\n    for j in range(1,n+1):\n        p[j-1] = j\n    p2 = p.copy()\n    p3 = p.copy()\n    p4 = p.copy()\n    p5 = p.copy()\n    p6 = p.copy()\n    p7 = p.copy()\n    p8 = p.copy()\n    p9 = p.copy()\n    p10 = p.copy()\n    p11 = p.copy()\n    p12 = p.copy()\n    p13 = p.copy()\n    p14 = p.copy()\n    p15 = p.copy()\n    p16 = p.copy()\n    p17 = p.copy()\n    p18 = p.copy()\n    p19 = p.copy()\n    p20 = p.copy()\n    p21 = p.copy()\n    p22 = p.copy()\n    p23 = p.copy()\n    p24 = p.copy()\n    p25 = p.copy()\n    p26 = p.copy()\n    p27 = p.copy()\n    p28 = p.copy()\n    p29 = p.copy()\n    p30 = p.copy()\n    p31 = p.copy()\n    p32 = p.copy()\n    p33 = p.copy()\n    p34 = p.copy()\n    p35 = p.copy()\n    p36 = p.copy()\n    p37 = p.copy()\n    p38 = p.copy()\n    p39 = p.copy()\n    p40 = p.copy()\n    p41 = p.copy()\n    p42 = p.copy()\n    p43 = p.copy()\n    p44 = p.copy()\n    p45 = p.copy()\n    p46 = p.copy()\n    p47 = p.copy()\n    p48 = p.copy()\n    p49 = p.copy()\n    p50 = p.copy()\n    p51 = p.copy()\n    p52 = p.copy()\n    p53 = p.copy()\n    p54 = p.copy()\n    p55 = p.copy()\n    p56 = p.copy()\n    p57 = p.copy()\n    p58 = p.copy()\n    p59 = p.copy()\n    p60 = p.copy()\n    p61 = p.copy()\n    p62 = p.copy()\n    p63 = p.copy()\n    p64 = p.copy()\n    p65 = p.copy()\n    p66 = p.copy()\n    p67 = p.copy()\n    p68 = p.copy()\n    p69 = p.copy()\n    p70 = p.copy()\n    p71 = p.copy()\n    p72 = p.copy()\n    p73 = p.copy()\n    p74 = p.copy()\n    p75 = p.copy()\n    p76 = p.copy()\n    p77 = p.copy()\n    p78 = p.copy()\n    p79 = p.copy()\n    p80 = p.copy()\n    p81 = p.copy()\n    p82 = p.copy()\n    p83 = p.copy()\n    p84 = p.copy()\n    p85 = p.copy()\n    p86 = p.copy()\n    p87 = p.copy()\n    p88 = p.copy()\n    p89 = p.copy()\n    p90 = p.copy()\n    p91 = p.copy()\n    p92 = p.copy()\n    p93 = p.copy()\n    p94 = p.copy()\n    p95 = p.copy()\n    p96 = p.copy()\n    p97 = p.copy()\n    p98 = p.copy()\n    p99 = p.copy()\n    p100 = p.copy()\n    p101 = p.copy()\n    p102 = p.copy()\n    p103 = p.copy()\n    p104 = p.copy()\n    p105 = p.copy()\n    p106 = p.copy()\n    p107 = p.copy()\n    p108 = p.copy()\n    p109 = p.copy()\n    p110 = p.copy()\n    p111 = p.copy()\n    p112 = p.copy()\n    p113 = p.copy()\n    p114 = p.copy()\n    p115 = p.copy()\n    p116 = p.copy()\n    p117 = p.copy()\n    p118 = p.copy()\n    p119 = p.copy()\n    p120 = p.copy()\n    p121 = p.copy()\n    p122 = p.copy()\n    p123 = p.copy()\n    p124 = p.copy()\n    p125 = p.copy()\n    p126 = p.copy()\n    p127 = p.copy()\n    p128 = p.copy()\n    p129 = p.copy()\n    p130 = p.copy()\n    p131 = p.copy()\n    p132 = p.copy()\n    p133 = p.copy()\n    p134 = p.copy()\n    p135 = p.copy()\n    p136 = p.copy()\n    p137 = p.copy()\n    p138 = p.copy()\n    p139 = p.copy()\n    p140 = p.copy()\n    p141 = p.copy()\n    p142 = p.copy()\n    p143 = p.copy()\n    p144 = p.copy()\n    p145 = p.copy()\n    p146 = p.copy()\n    p147 = p.copy()\n    p148 = p.copy()\n    p149 = p.copy()\n    p150 = p.copy()\n    p151 = p.copy()\n    p152 = p.copy()\n    p153 = p.copy()\n    p154 = p.copy()\n    p155 = p.copy()\n    p156 = p.copy()\n    p157 = p.copy()\n    p158 = p.copy()\n    p159 = p.copy()\n    p160 = p.copy()\n    p161 = p.copy()\n    p162 = p.copy()\n    p163 = p.copy()\n    p164 = p.copy()\n    p165 = p.copy()\n    p166 = p.copy",
        "num_ids_2": 30,
        "num_ids_4": 73
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n7') == '1 3 5 7 2 4'\nassert solution('9\\n7') == '1 3 5 7 2 4 6 8'\nassert solution('6\\n7') == '1 3 5 7 2 4 6 8 9'\nassert solution('5\\n8') == '1 3 5 8 2 4 7 6'\nassert solution('5\\n8') == '1 3 5 8 2 4 7 6'\n",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1\n2\n3\n4\n6\n\"\"\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"\"\"\n2\n5\n6\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n\"\"\") == \"3 1 4 2 \n5 3 6 2 4 1 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\") == \"11 9 7 11 8 4 1 3 5 2 6 10 12 13\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"3 1 4 2\"\nassert solution(\"3\") == \"5 1 3 6 2 4 7\"\nassert solution(\"4\") == \"5 1 3 6 2 4 7 3 1 5 2\"\nassert solution(\"5\") == \"13 9 7 11 8 4 1 3 5 2 6 10 12\"\n",
        "num_ids_2": 23,
        "num_ids_4": 59
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4\n3\n3\n2\n4\n1\n5\n''') == '-1'\nprint(solution('''3\n1\n3\n4\n2\n2\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3 1 4 2'\nassert solution('10') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('14') == '1 2 13 4 6 3 8 9 10 12 7 14'\nassert solution('-4') == '-1'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 5 4 1\n1 5 2 4 3\n5 2 1 3 4\n4 5 1 3 2\n''') == '2'\n\nassert solution('''8\n1 2 3 4 5 6 7 8\n1 5 1 4 3 2 8 7\n1 8 5 7 2 1 4 3\n8 4 5 3 1 2 7 6\n1 6 8 5 7 3 2 4\n1 3 8 5 2 7 6 4\n1 4 7 2 6 8 5 3\n3 6 5 8 1 7 4 2\n8 1 5 3 6 4 7 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''\n3\n6\n3 4 5 2 7\n''') == '2'\nassert solution('''\n2\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\nassert solution('''\n4\n4\n3 2 7 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\nassert solution('''\n4\n4\n3 2 7 6\n3\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == \"2\"\nassert solution('''3\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == \"1\"\nassert solution('''5\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == \"0\"\nassert solution('''3\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n4\\n3 2 7 6\\n3') == '1'\nassert solution('3\\n4\\n3 2 6\\n3') == '0'\nassert solution('3\\n4\\n3 2 6\\n3') == '-1'\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(t) == str(-1 if solution(t) == 1 else -1)\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''\n3\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''\n3\n1\n2\n3\n''') == \"0\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2 2 2 2 2 1 1 0 2'\nassert solution('6') == '1 -1 1 -1 1 -1 1 -1 1 -1 1'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\"\nassert solution(\"5\\n0 0 1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0 -1 1 -1\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 2 -1 0 0 1 -1 0 2 -1 0 3 1 -1 0 4 2 -1 0 5 2 -1 0 6 -1 7 8 -1 0 9 2 -1 1 10 2 -1 11 12 -1 0 0 13 -1 0 14 -1 15 0 -1 16 17 -1 0 0 18 -1 0 19 -1 20 0 -1 21\nassert solution('''\n2\n0 0 1\n1 2\n''') == '0 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0 1 -1 2 1 1 -1 -1 -1 0 2 0 0 2 -1 -1 -1 -1 -1 -1 -1 0 1 2 0 0",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n5\n0 1 1 1 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\"\"\") == \"2 2 2 2 1 1 0 2\"\nassert solution(\"\"\"\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\"\"\") == \"0 -1 1 -1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 2 2 2 2 1 1 0 2\"\nassert solution([3, 0, 1, 1, 0, 0, 0, 0, 1, 0]) == \"0 -1 1 -1\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 1 1 0 -1'\nassert solution('''\n5\n0 0 1 0 0\n1 2\n1 3\n1 4\n3 5\n''') == '0 -1 -1 1 1 1 -1'\nassert solution('''\n5\n0 0 1 0 0\n1 2\n1 3\n1 4\n3 5\n''') == '0 -1 1 -1 -1 1 -1 -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '0 -1 1 -1'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '1 1 1 1 1 1 1 1 0 1 2 2 2 2 2'\n",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\nprint('all tests passed')",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1 2 3'\nassert solution('4') == '0 -1 1 -1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"2\"\nassert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"0\"\nassert solution('''\n1\n3\n12\n12345\n15116544\n387420489\n''') == \"1\"\nassert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"36\"\nassert solution('''\n1\n4\n12\n12345\n15116544\n387420489\n''') == \"36\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '0'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4') == '-1'\nassert solution('2\\n7') == '2'\nassert solution('3\\n3') == '0'\nassert solution('4\\n6') == '1'\nassert solution('5\\n10') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1\n2\n3\n12\n12345\n15116544\n387420489\n\"\"\") == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1\") == \"0\"\nassert solution(\"7\\n1\") == \"-1\"\nassert solution(\"8\\n1\") == \"-1\"\nassert solution(\"9\\n1\") == \"1\"\nassert solution(\"10\\n1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '36'\nassert solution('12345') == '36'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n12345\") == \"36\"\nassert solution(\"1\\n387420489\") == \"108\"\nassert solution(\"1\\n15116544\") == \"11664\"\nassert solution(\"1\\n36\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '0'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '0'\nassert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('12') == '36'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n1\n2\n3\n12\n12345\n15116544\n387420489\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n1\n3\n5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '0'\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution(input()) == '0'\n\n'''\n\nimport sys\nimport math\n\nclass Solution:\n    def __init__(self):\n        self.data = None\n\n    def update_data(self, data):\n        self.data = data\n\n    def minChanges(self, string: str, k: int) -> int:\n        \n        ans = math.inf\n        \n        if len(string) <= k:\n            return 0\n        \n        self.update_data(string)\n        \n        for i in range(1, k):\n            if self.data[i] <= self.data[i - 1]:\n                ans = min(ans, self.data[i] - self.data[i - 1])\n                \n        return ans\n        \n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\"\n\n'''\n\nstdin = input().split()\nq = int(stdin[0])\nn = int(stdin[1])\n\nfor i in range(q):\n    s = stdin[2*i + 2].split()[1:]\n    k = int(stdin[2*i + 3])\n    if k <= len(s):\n        print(k)\n    else:\n        print(len(s))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3 2\nBBBB\n1 2\nRR\n2 4\n''') == '1'\nassert solution('''\n1\n1\nBB\n2 4\n''') == '0'\nassert solution('''\n1\n1\nBB\n2 4\n''') == '3'\nassert solution('''\n1\n1\nBB\n2 4\n''') == '3'\nassert solution('''\n2\n3 2\nBBBB\n1 2\nRR\n2 4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == '1'\nassert solution('''5 3\nBGGG\n5 5\nBBRR\n''') == '3'\nassert solution('''5 3\nBGGG\n5 5\nBBBRR\n''') == '1'\nassert solution('''5 3\nBGGG\n5 5\nBBRR\n''') == '2'\nassert solution('''5 3\nBGGG\n5 5\nBBRR\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == \"3\"\nassert solution('''3\nB\nGGG\nBBB''') == \"0\"\nassert solution('''3\nB\nGGG\nBBB''') == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n3 3\nBRRB\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n5 5\nBBRBBR\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n5 7\nBGRRGGBB\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n8 9\nBGBGBBGBB\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nBGGGG\\n\") == \"0\"\nassert solution(\"5 2\\nBBBRR\\n\") == \"3\"\nassert solution(\"5 5\\nBBBRR\\n\") == \"0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n\") == \"3\"\nassert solution(\"1\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n\") == \"3\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\nprint(solution(sys.stdin.read()))\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3\\n3\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == \"3\"\nassert solution('''\n4\n3 1 2 3 1\n5\n3 3 3 3 1 1\n''') == \"3\"\nassert solution('''\n5\n1 1 1 1 1\n2\n3 4 3\n''') == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3', 'First example'\nassert solution('''4\n3 4 1 3 2\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4', 'Second example'\nassert solution('''3\n5 4 1 3 2\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4', 'Third example'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2 3 4 5'\nassert solution() == '1 2 3 4 5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 2 3 4\"\nassert solution(input()) == \"1 2 3 4\"\nassert solution(input()) == \"1 2 3 4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''3\n2\n4\n1\n''') == '1 2 4'\nprint('all test cases passed')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == \"1 5 2 4 3\"\n\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == \"1 5 2 4 3\"\n\nassert solution('''5\n4\n1 2 3 4 5\n''') == \"1 2 3 4 5\"\n\nassert solution('''5\n4\n1 2 3 4 5\n''') == \"1 2 3 4 5\"\n\nassert solution('''4\n3\n1 2 3\n''') == \"1 2 3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1 2 3 4 5'\nassert solution('5 4 1 3 2') == '1 2 3 4 5'\nassert solution('4') == '1 2 3 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 5 2 4 3'\nassert solution('4') == '1 2 3 4'\nassert solution('1') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\nassert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 3 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4\\n1 2 3\") == \"1 2 3 4\", \"First\"\nassert solution(\"5\\n5 4 1 3 2\") == \"1 2 3 4 5\", \"Second\"\nassert solution(\"1\\n2\") == \"2 1\", \"Third\"\nassert solution(\"4\\n4 3 2 1\") == \"1 2 3 4\", \"Fourth\"",
        "num_ids_2": 48,
        "num_ids_4": 87
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n1 2 3 4') == 'YES'\nassert solution('3\\n1 2 3 5 4') == 'YES'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5') == 'NO'\nassert solution('5\\n1 2 3 4 5\\n3 2 1 5 4') == 'YES'",
        "num_ids_2": 36,
        "num_ids_4": 84
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\") == \"YES\\nYES\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"NO\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\n",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES\\nYES\\nNO\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\") == \"YES\"\nassert solution(\"2\\n4\") == \"NO\"\nassert solution(\"3\\n4\") == \"YES\"\nassert solution(\"4\\n4\") == \"YES\"\nassert solution(\"5\\n4\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\"\nassert solution('''8\n4\n2 1 3 4 5 6 7 8\n1\n1\n5\n3 2 1 5 4 6 7\n''') == \"YES\"\nassert solution('''5\n4\n1 2 3 4\n1\n1\n5\n3 2 1 5 4\n''') == \"NO\"\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n3 2 1 5 4\n''') == \"YES\"\nassert solution('''5\n4\n1 2 3 4\n1\n1\n5\n3 2 1 5 4\n''') == \"NO\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5 1\\n100000 50010\\n\") == \"100000\\n\"\nassert solution(\"2 2\\n1 2\\n1 3\\n\") == \"3\\n\"\n\nimport math\n",
        "num_ids_2": 68,
        "num_ids_4": 91
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"19 4\") == \"18\"\nassert solution(\"12 7\") == \"10\"\nassert solution(\"6 2\") == \"75015\"\nassert solution(\"100000 50010\") == \"75015\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == \"5\"\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == \"18\"\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == \"10\"\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == \"75015\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5'\nassert solution('5 3\\n6 4\\n6 2\\n100000 50010\\n') == '3'\nassert solution('5 5\\n6 5\\n6 2\\n100000 50010\\n') == '5'\nassert solution('5 100000\\n5 50010\\n6 5\\n6 2\\n100000 50010\\n') == '100000'\nassert solution('5 100000\\n5 50010\\n6 5\\n6 2\\n100000 50010\\n') == '100000'\n",
        "num_ids_2": 58,
        "num_ids_4": 119
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''5\n3\n20 10\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''5\n3\n20 10\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''5\n3\n20 10\n12 7\n6 2\n100000 50010\n''') == '6'\nassert solution('''5\n3\n20 10\n12 7\n6 2\n100000 50010\n''') == '75015'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''5 3\n1 4\n2 3\n3 1\n4 1\n5 4\n''') == '6'\nassert solution('''5 10\n1 6\n2 2\n3 3\n4 3\n5 2\n6 2\n7 2\n8 2\n9 2\n10 3\n''') == '75015'\nassert solution('''5 20\n1 5\n2 2\n3 3\n4 3\n5 2\n6 2\n7 2\n8 2\n9 2\n10 3\n''') == '75015'\nassert solution('''4 4\n1 2\n2 1\n3 1\n4 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5'\nassert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '18'\nassert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '10'\nassert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '75015'\nassert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5'",
        "num_ids_2": 58,
        "num_ids_4": 117
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"4\\n1\\n2\\n3\\n3\\n4\\n5\\n6\\n7\") == \"7\\n6\\n4\\n3\\n1\\n5\\n2\"\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\"\nprint(solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9'''))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n\") == \"YES 4 3 3\\n\"\nassert solution(\"4 1\\n\") == \"YES 1 1 1\\n\"\nassert solution(\"10 4\\n\") == \"YES 4 4 4\\n\"\nassert solution(\"8 7\\n\") == \"YES 7 7 7\\n\"\nassert solution(\"97 2\\n\") == \"YES 2 2 2\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES'\n\nassert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'NO'\n\nassert solution('''1000000000 9\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES'\n\nassert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES'",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"YES\\n4 2 4\"\nassert solution(\"10 3\") == \"YES\\n4 2 4\"\nassert solution(\"100 4\") == \"YES\\n4 2 4\"\nassert solution(\"8 7\") == \"YES\\n55 5 5 35\"\nassert solution(\"97 2\") == \"YES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\n",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n8 7\n97 2''') == 'YES'\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES'\nassert solution('''8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'NO'\nassert solution('''5 3\n8 7\n97 2\n8 8\n3 10\n5 3''') == 'NO'\nassert solution('''1000000000 9\n1000000000 9''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES 4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 2\n3 4''') == 'YES\\n4 2 4'\nassert solution('''5\n7 3\n2 5\n1 4\n3 6\n4 2''') == 'NO'\nassert solution('''10\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4'\nassert solution('''6\n1000000000 9\n1000000000 9\n1000000000 9\n1000000000 9\n1000000000 9''') == 'YES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111220'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '55'\nassert solution('''\n1\n3\n3\n''') == '3'\nassert solution('''\n2\n3\n5\n''') == '3'\nassert solution('''\n10\n1000000000000000\n10000000000000000 10000000000000000 10000000000000000\n''') == '51000000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '5500000000000000'\nassert solution('''1 5 9\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '51000000000000000'\nassert solution('''2 1 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000''') == '1000000000000000'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '55'\nassert solution() == '51'\nprint(solution())\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == \"55\"\nassert solution('''\n1 2 3\n1 100 10\n2 100 1\n''') == \"101\"\nprint('AoC 2020 Day 13')\ninput_data = '''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n'''\nprint(solution(input_data))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n1 3\n1 4\n''') == '4'\nassert solution('''\n1 2\n1 3\n1 4\n''') == '4'\nassert solution('''\n3 2\n1 3\n1 4\n''') == '2'\nassert solution('''\n1 1\n1 1\n''') == '1'\nassert solution('''\n4 2\n1 3\n1 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51'\nassert solution('2 2 3') == '2'",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 10 100') == '55'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51'\n",
        "num_ids_2": 24,
        "num_ids_4": 41
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n10\n100\n\n''') == '55'\nassert solution('''\n1\n1000\n10000\n\n''') == '51'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\\n') == '4\\n55\\n15000000000000000\\n51'\nassert solution('1\\n1\\n1\\n') == '2\\n2\\n2\\n'\nassert solution('5\\n6\\n7\\n') == '6\\n7\\n7\\n'\n",
        "num_ids_2": 71,
        "num_ids_4": 97
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '3'\nassert solution('6 3') == '3'\nassert solution('6 5') == '5'\nassert solution('1000 5') == '10'\nassert solution('1000 1000') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n\") == \"3\\n\"\nassert solution(\"6 3\\nabcbac\\n\") == \"3\\n\"\nassert solution(\"6 3\\naaa\\n\") == \"5\\n\"\nassert solution(\"6 3\\n7 1000\\n\") == \"10\\n\"\nassert solution(\"6 3\\nababa\\n\") == \"10\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"20 10\") == \"10\"\nassert solution(\"20 5\") == \"4\"\nassert solution(\"ecbedececacbcbccbdec\") == \"15\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"7 1000\") == \"10\"\nassert solution(\"20 10\") == \"20\"\nassert solution(\"aaebdbabdbbddaadaadc\") == \"15\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '8'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '4'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == \"6\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'\nassert solution('''2\n3\n10\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'\nassert solution('''5\n5 2\n7 2 8 1 9 1\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"NO\"\nassert solution('''\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == \"NO\"\nassert solution('''\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == \"YES\"\nassert solution('''\n5 3\n7 1 2 3 4 5\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == \"YES\"\nassert solution('''\n5 3\n7 1 2 3 4 5\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\\n1 3 5\\nNO\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'\n\nassert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES'\nassert solution('''3\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 3\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"\"\"YES\n1 3 5\nNO\nNO\n\"\"\".strip()\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n7 18 3 14 1') == 'YES\\n1 3 5'\nassert solution('5 4\\n1 2 3 4 5') == 'NO'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 3\\n1 2 3\") == \"YES\\n1 3 5\"\nassert solution(\"2\\n3 3\\n7 8 5\") == \"YES\\n1 3 5\"\nassert solution(\"2\\n3 3\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"2\\n5 2\\n1 2 3 4 5\") == \"YES\\n1 2 3 4 5\"\n",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 5\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3 3\\n1 2 3 4 5') == 'YES\\n1 3 5'\nassert solution('5 3\\n1 2 3 4 5\\n6 2') == 'NO'\nassert solution('3 3\\n1 2 3 4 5\\n6 2') == 'NO'\n",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('01') == '1'\nassert solution('11') == '1'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == ''\nassert solution(\"11\") == ''\nassert solution(\"110101011110000\") == '964176192'\nassert solution(\"111\") == ''\nassert solution(\"00\") == '964176192'\n\n\"\"\"\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        s = bin(n)[2:]\n        return int(s[::-1],2)",
        "num_ids_2": 15,
        "num_ids_4": 41
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('111111111111111111111111111111111') == '3221225471'\nassert solution('10111111111111111111111111111111') == '4294967293'\nassert solution('00110010101011101011101110100011') == '964176192'\n\n'''",
        "num_ids_2": 42,
        "num_ids_4": 69
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"11111111111111111111111111111111\") == \"3221225472\"\nassert solution(\"10111111111111111111111111111111\") == \"3221225473\"\nassert solution(\"10111111111111111111111111111111\") == \"3221225474\"\n",
        "num_ids_2": 45,
        "num_ids_4": 86
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111111\") == \"3221225471\"\n'''\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        arr = []\n        while (n > 0):\n            arr.append(n % 2)\n            n = n // 2\n        for i in range(len(arr)):\n            if arr[i] == 0:\n                arr[i] = 1\n            else:\n                arr[i] = 0\n        print(arr)\n        result = 0\n        for i in range(len(arr)):\n            result = result * 2 + arr[i]\n        print(result)\n        return result",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111111\") == \"3221225471\"\n\n'''\n\nimport unittest\n\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        bit_string = bin(n)[2:]\n        bit_string = '0' * (32 - len(bit_string)) + bit_string\n        bit_string = bit_string[::-1]\n        return int(bit_string, 2)\n\n\nclass Test(unittest.TestCase):\n    def test_reverseBits(self):\n        output = Solution().reverseBits(43261596)\n        self.assertEqual(964176192, output)\n        output = Solution().reverseBits(1125899906842624)\n        self.assertEqual(3221225471, output)\n        output = Solution().reverseBits(101)\n        self.assertEqual(541, output)\n        output = Solution().reverseBits(120)\n        self.",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '10'\nassert solution('1101') == '100'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 1676
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00000010100101000001111010011100') == '964176192'\nassert solution('111111111111111111111111111111111') == '3221225471'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"964176192\"\nassert solution(input()) == \"3221225471\"\n\"\"\"\n\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        print(n)\n        n = n >> 1\n        print(n)\n        n = n << 1\n        print(n)\n        return n\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '[[1]]'\nassert solution('2') == '[[1], [1, 1]]'\nassert solution('3') == '[[1], [1, 1], [1, 2, 1]]'\nassert solution('4') == '[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]'\nassert solution('5') == '[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]'\n",
        "num_ids_2": 29,
        "num_ids_4": 86
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"[1]\\n[1,1]\\n[1,2,1]\\n[1,3,3,1]\\n[1,4,6,4,1]\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(5) == \"[\\n    [1],\\n    [1,1],\\n   [1,2,1],\\n  [1,3,3,1],\\n [1,4,6,4,1]\\n]\"\n'''",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"[\\n  [1],\\n  [1,1],\\n  [1,2,1],\\n  [1,3,3,1],\\n  [1,4,6,4,1]\\n]\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1'])\nassert solution('0') == '\\n'.join([])\nassert solution('1') == '\\n'.join([['1']])\n",
        "num_ids_2": 63,
        "num_ids_4": 81
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n''') == stdin_to_json('[\\n  [1],\\n  [1,1],\\n  [1,2,1],\\n  [1,3,3,1],\\n  [1,4,6,4,1]\\n]\\n')\nprint(stdin_to_json('[\\n  [1],\\n  [1,1],\\n  [1,2,1],\\n  [1,3,3,1],\\n  [1,4,6,4,1]\\n]\\n'))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == \"[[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == '\\n'.join([\n   '1',\n   '1,1',\n   '1,2,1',\n   '1,3,3,1',\n   '1,4,6,4,1'])\nassert solution(\"6\") == '\\n'.join([\n   '1',\n   '1,1',\n   '1,2,1',\n   '1,3,3,1',\n   '1,4,6,4,1',\n   '1,5,10,10,5,1',\n   '1,6,15,20,15,6,1']\n)\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\"\n    ) == \\\n    \"[\\n\\t[1],\\n\\t[1,1],\\n\\t[1,2,1],\\n\\t[1,3,3,1],\\n\\t[1,4,6,4,1]\\n]\"\n\n\nInput: 0\nOutput: []\nExplanation:\n0\n\nInput: 1\nOutput: [[1]]\n\nInput: 2\nOutput: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\n\nInput: 3\nOutput: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1],[1,5,10,10,5,1]]\n\nInput: 4\nOutput: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1],[1,5,10,10,5,1],[1,6,15,20,15,6,1],[1,7,21,35,35,21,7,1],[1,8,28,56,70,56,28,8,1],[1,9,36,84,126,126,84,36,9,1]]\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        triangle = []\n        if not numRows:\n            return []\n        if numRows == 0:\n            return []\n        triangle.append([1])\n        for i in range(1, numRows):\n            temp = []\n            for j in range(0, i + 1):\n                if j == 0 or j == i:\n                    temp.append(1)\n                else:\n                    temp.append(triangle[i - 1][j - 1] + triangle[i - 1][j])\n            triangle.append(temp)\n        return triangle\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '[1,\\n          1,\\n          1,\\n          1,\\n          1]\\n'\n\n\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\na@gmail.com\nb@gmail.com\nc@yahoo.com\n''') == '''['a@gmail.com', 'b@gmail.com', 'c@yahoo.com']'''\n\n\n\n=====Examples=====\n>>> solution('''2\na@gmail.com\nb@gmail.com\nc@yahoo.com\n''')\n['a@gmail.com', 'b@gmail.com', 'c@yahoo.com']\n\n\n\n>>> solution('''3\na@gmail.com\nb@gmail.com\nc@yahoo.com\n''')\n[]\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == ['aman@gmail.com', 'ajay@yahoo.com', 'akshay@hotmail.com']\n\n=====Test Cases=====\nInput 1:\n    Input:\n    6\n    test.email+nishanth@gmail.com\n    test.email+nishanth@yahoo.com\n    test.email+nishanth@hotmail.com\n    test.email+nishanth@yahoo.com\n    test.email+nishanth@yahoo.com\n    \nOutput:\n    ['test.email@gmail.com', 'test.email@hotmail.com', 'test.email@yahoo.com', 'test.email@yahoo.com', 'test.email@yahoo.com', 'test.email@yahoo.com', 'test.email@yahoo.com', 'test.email@yahoo.com', 'test.email@yahoo.com', 'test.email@yahoo.com', 'test.email@yahoo.com']\n\nInput 2:\n    Input:\n    7\n    test.email+akshay@yahoo.com\n    test.email+akshay@hotmail.com\n    test.email+akshay@yahoo.com\n    test.email+akshay@yahoo.com\n    test.email+akshay@yahoo.com\n    test.email+akshay@hotmail.com\n    test.email+akshay@hotmail.com\n    \nOutput:\n    []\n\nInput 3:\n    Input:\n    4\n    test.email+akshay@hotmail.com\n    test.email+akshay@yahoo.com\n    test.email+akshay@hotmail.com\n    test.email+akshay@hotmail.com\n    test.email+akshay@yahoo.com\n    test.email+akshay@hotmail.com\n    \nOutput:\n    ['test.email@gmail.com', 'test.email@yahoo.com', 'test.email@hotmail.com', 'test.email@yahoo.com']\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == sorted(['user@email.com','user2@email.com','user3@email.com','user4@email.com','user5@email.com'])\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"['appda1@gmail.com', 'appda2@gmail.com', 'appda3@gmail.com']\"\nassert solution(s) == \"['alvins@example.com','sandy@example.com']\"\nassert solution(s) == \"['david@example.com', 'bill@example.com', 'james@example.com']\"\nassert solution(s) == \"['andrew@example.com', 'peggy@example.com']\"\n=====Input/Output Examples=====\nInput\n\n8\nandrew@example.com\nalvins@example.com\nbill@example.com\nsandy@example.com\nappda1@gmail.com\nappda2@gmail.com\nappda3@gmail.com\nalvins@example.com\ndavid@example.com\npeggy@example.com\nOutput\n\n['andrew@example.com', 'bill@example.com', 'peggy@example.com', 'david@example.com','sandy@example.com', 'appda1@gmail.com', 'appda2@gmail.com', 'appda3@gmail.com']\nExplanation\n\nThere are 8 email addresses in the input, and only 6 of them are valid. \n\nThe 6 valid email addresses are: \nandrew@example.com, david@example.com, andpeggy@example.com, andsandy@example.com, appda1@gmail.com and appda2@gmail.com, appda3@gmail.com, andsandy@example.com.\n\nOutput:\n['appda1@gmail.com', 'appda2@gmail.com', 'appda3@gmail.com', 'alvins@example.com', 'bill@example.com', 'peggy@example.com']\n'''\nimport sys\n",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == ['ajay@google.com', 'avyam@google.com']\n\nstdin = \n7\najay@google.com\najay@yahoo.com\najay@live.com\najay@abc.com\najay@google.com\najay@yahoo.com\najay@live.com\navyam@google.com\navyam@yahoo.com\navyam@live.com\navyam@abc.com\n\n==Sample test cases==\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == [\"vikash@codecamp.com\", \"nitesh@codecamp.com\", \"vikash@gmail.com\"]\nprint(solution()) # <--, [\"vikash@codecamp.com\", \"nitesh@codecamp.com\", \"vikash@gmail.com\"]\n\n\n==========================================================\n\n=======Problem=======\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nun@gmail.com\\nabc@gmail.com\\n2\\nun@yahoo.com\\n\") == [\"un@gmail.com\",\"un@yahoo.com\"]\nassert solution(\"3\\nabcd@leetcode.com\\na123@leetcode.com\\nab@leetcode.com\\n\") == []\nassert solution(\"2\\nleetcode.com\\nleetcode.com\\n\") == [\"leetcode.com\"]\nassert solution(\"1\\n\") == []\nassert solution(\"1\\n1\\n\") == [\"1\"]\n",
        "num_ids_2": 84,
        "num_ids_4": 124
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['''a@a.com''','''b@b.com''','''c@c.com''','''d@d.com''','''e@e.com''','''f@f.com''','''g@g.com''','''h@h.com''','''i@i.com''','''j@j.com''','''k@k.com''','''l@l.com''','''m@m.com''','''n@n.com''','''o@o.com''','''p@p.com''','''q@q.com''','''r@r.com''','''s@s.com''','''t@t.com''','''u@u.com''','''v@v.com''','''w@w.com''','''x@x.com''','''y@y.com''','''z@z.com''','''a@a.com''','''b@b.com''','''c@c.com''','''d@d.com''','''e@e.com''','''f@f.com''','''g@g.com''','''h@h.com''','''i@i.com''','''j@j.com''','''k@k.com''','''l@l.com''','''m@m.com''','''n@n.com''','''o@o.com''','''p@p.com''','''q@q.com''','''r@r.com''','''s@s.com''','''t@t.com''','''u@u.com''','''v@v.com''','''w@w.com''','''x@x.com''','''y@y.com''','''z@z.com'''], [''''+str(i)+'''@'''+str(i)+'.com''' for i in range(10)])\n",
        "num_ids_2": 502,
        "num_ids_4": 502
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nuser@email.com\") == [\"user@email.com\"]\nassert solution(\"7\\nuser1@email.com\") == [\"user1@email.com\"]\nassert solution(\"6\\nuser@email.com\\nuser@email.com\\nuser@email.com\\nuser@email.com\\nuser@email.com\") == [\"user@email.com\"]\n=====Test Case 1 (positive)=====\n\nInput\n\n5\nuser@email.com\nuser@email.com\nuser2@email.com\nuser3@email.com\nuser4@email.com\nOutput\n\n[\"user2@email.com\", \"user4@email.com\", \"user3@email.com\", \"user@email.com\"]\nTest Case 1 (negative)=====\n\nInput\n\n3\nuser1@email.com\nuser2@email.com\nuser3@email.com\nOutput\n\n[]\n\n'''\n",
        "num_ids_2": 44,
        "num_ids_4": 93
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n  \"test.email+alex@leetcode.com\",\n  \"test.e.mail+bob.cathy@leetcode.com\",\n  \"testemail+david@lee.tcode.com\"\n]) == [\"test.email@leetcode.com\", \"test.e.mail@leetcode.com\", \"testemail@leetcode.com\"]\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == ['0','1','1','2','3','5','8']",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(3) == [0, 1, 1, 8]\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0, 1, 1'\nprint(solution('2'))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 4, 5, 8]) == [4, 8, 36, 64]",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == ['1', '8', '27', '64', '125']\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == ['1', '8', '27', '64', '125', '216', '729', '1728', '40320']\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '0 1 1 4 9'\n\nSample TestCase 2\n\nSample Input 0\n\n2\nSample Output 0\n\n0 1\nSample Input 1\n\n10\nSample Output 1\n\n0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 5347\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == [1, 1, 2, 8]\nassert solution('10') == [0, 1, 1, 8, 27, 64, 125, 216, 343, 512]\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]\n\nsolution('10') # should return [0, 1, 1, 8, 27, 64, 125, 216, 343, 512, 729]\n\nsolution('0') # should return []\n\nsolution('-1') # should return []\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == []\nassert solution(\"5\") == [0, 1, 1, 8, 27]\nassert solution(\"10\") == [0, 1, 1, 8, 27, 64, 125, 216, 343, 512]\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == []\nassert solution('1') == [1]\nassert solution('2') == [1, 1]\nassert solution('3') == [1, 1, 1]",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n<a></a>\") == 0\nassert solution(\"1\\n<a><b></b></a>\") == 1\nassert solution(\"1\\n<a><b></b><c></c></a>\") == 2\nassert solution(\"1\\n<a><b></b><c></c><d></d></a>\") == 3\nassert solution(\"1\\n<a><b></b><c></c>\\n<x><y></y></x>\") == 3\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"<doc><tag><subtag/></tag><tag><subtag/></tag></doc>\") == 2\nassert solution(\"<doc>This is a test.  <doc>This is another test.</doc>\") == 2",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n<a><b><c/></b></a>') == 3\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a><b><c/></b></a>'))\nprint(solution('1\\n<a",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n<feed xml:lang=\"en\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 3\nassert solution('2\\n<feed xml:lang=\"en\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 2\nassert solution('3\\n<feed xml:lang=\"en\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\nassert solution('4\\n<feed xml:lang=\"en\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 1\nassert solution('5\\n<feed xml:lang=\"en\">\\n    <title>HackerRank</title>\\n    <subtitle lang=\"en\">Programming challenges</subtitle>\\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\\n    <updated>2013-12-25T12:00:00</updated>\\n</feed>') == 0\n\n''''''\n'''\nThe depth of the root is 0.\n\n1\n<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\n2\n<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\n3\n<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\n4\n<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\n5\n<feed xml:lang=\"en\">\n    <title>HackerRank</title>\n    <subtitle lang=\"en\">Programming challenges</subtitle>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"https://hackerrank.com/\">\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\n'''\n",
        "num_ids_2": 200,
        "num_ids_4": 400
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml/#'/>\n<updated>2009-12-25T20:13:00Z</updated>\n<entry>\n<title>Introduction to XML</title>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml/#'/>\n<updated>2009-12-25T20:13:00Z</updated>\n<author>\n<name>John Jacobson</name>\n<uri>http://blog.pythonlibrary.org/2009/2/24/introduction-to-xml-with-python-2-6/</uri>\n</author>\n</entry>\n<entry>\n<title>The Java XML Platform</title>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/REC-xml/#'/>\n<updated>2009-12-25T20:13:00Z</updated>\n<author>\n<name>Martin Fowler</name>\n<uri>http://www.javatpoint.com/</uri>\n</author>\n</entry>\n</feed>''') == 2\n'''\n\nimport xml.etree.ElementTree as etree\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n<a><b></b><c></c></a>') == 2\nassert solution('5\\n<a>\\n  <b></b>\\n  <c></c>\\n  <d></d>\\n</a>') == 3\nassert solution('6\\n<a>\\n  <b></b>\\n  <c></c>\\n  <d></d>\\n  <e></e>\\n</a>') == 4\n=====Constraints=====\n1 <= N <= 100\n1 <= |X| <= 100\nwhere X is the XML document.\n\nSample Input 0\n4\n<a><b></b><c></c></a>\n<a><b></b><c></c></a>\n<a><b></b><c></c></a>\n<a><b></b><c></c></a>\nSample Output 0\n2\n4\n4\n3\nExplanation 0\nThe first two lines contains valid XML documents.\nThe third line contains invalid XML document.\nThe fourth line contains valid XML document.\n=====Solution=====\n1. The root node, which is at depth 0.\n2. Each time a node is seen and it is in the left subtree, we increment the left depth by 1.\n3. Each time a node is seen and it is in the right subtree, we increment the right depth by 1.\n4. The root node depth is 0.\n5. Now we need to figure out the maximum depth of the left and right subtrees of root node and compare them.\n6. If depth of left subtree is greater than that of right subtree, we increase the left depth by 1 and decrease the right depth by 1.\n7. If depth of left subtree is lesser than that of right subtree, we increase the right depth by 1 and decrease the left depth by 1.\n8. If the left and right subtree depths are equal, we increase the left depth by 1 and decrease the right depth by 1.\n9. If depth of left subtree is greater than that of right subtree, we increase the left depth by 1 and decrease the right depth by 1.\n10. If depth of left subtree is lesser than that of right subtree, we increase the right depth by 1 and decrease the left depth by 1.\n11. If the left and right subtree depths are equal, we increase the left depth by 1 and decrease the right depth by 1.\n12. If depth of left subtree is greater than that of right subtree, we increase the left depth by 1 and decrease the right depth by 1.\n13. If depth of left subtree is lesser than that of right subtree, we increase the right depth by 1 and decrease the left depth by 1.\n14. If the left and right subtree depths are equal, we increase the left depth by 1 and decrease the right depth by 1.\n15. The final output is max(left_depth, right_depth).\n16. Return the maximum depth of left subtree and right subtree as the final output.\n'''\nimport xml.etree.ElementTree as etree",
        "num_ids_2": 65,
        "num_ids_4": 115
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>Test</title>\n    <subtitle lang='en'>Test subtitle</subtitle>\n    <link rel='alternate' href='http://example.com/'/>\n    <updated>2013-09-25</updated>\n</feed>\n''') == \"1\"\nassert solution('''\n<feed xml:lang='en'>\n    <title>Test</title>\n    <subtitle lang='en'>Test subtitle</subtitle>\n    <link rel='alternate' href='http://example.com/'/>\n    <updated>2013-09-25</updated>\n</feed>\n''') == \"0\"\n'''\n\n\nimport xml.etree.ElementTree as etree\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<updated>2013-04-20</updated>\n</feed>\"\"\") == \"2\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<updated>2013-04-20</updated>\n</feed>\"\"\") == \"2\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n</feed>\"\"\") == \"2\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n</feed>\"\"\") == \"3\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n<link rel='alternate' href='http://www.w3schools.com/xml/rss.asp'/>\n</feed>\"\"\") == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n<a><b>foo</b><c><d></d></c></a>') == 3\nassert solution('1\\n<a><b>foo</b><c><d></d></c></a>') == 2\nassert solution('1\\n<a><b>foo</b><c><d></d></c></a>') == 1\n\n=====Explaination=====\n'1' is the input.\nFirst line is the number of lines in the XML document.\nSecond line is the XML document.\n\nConvert the first line into a list.\nThe list contains the number of lines in the XML document.\n\nTake the length of the list and make it a integer.\nConvert the length into a string.\n\nTake the string and convert into a list.\nThe list contains the string of the number of lines in the XML document.\n\nThen, loop through the list and print the number of lines in the XML document.\n\n=====Solution Explanation=====\n",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 8\\n\" + \n\"912341237\\n\" + \n\"512341237\\n\" + \n\"812341237\\n\" + \n\"8 1234 1237\\n\" + \n\"91212341237\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\\n\"\nassert solution(\"1\\n\" +\n\"813123456\\n\" +\n\"812334567\\n\" +\n\"712345678\\n\") == \"NO\\nNO\\nYES\\nNO\\nNO\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n7444234887\n7444234887\n444234887\n''') == 'YES\\nYES\\nNO\\n'\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n3\n92849232849\n92849232849\n92849232849\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\\\n5\n711-873-622-54\n711-873-622-54\n711-873-622-54\n711-873-622-54\n711-873-622-54\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\\\n4\n333-333-3333\n333-333-3333\n333-333-3333\n333-333-3333\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\\\n4\n921-872-712-926\n921-872-712-926\n921-872-712-926\n921-872-712-926\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\\\n7\n123-123-123\n123-123-123\n123-123-123\n123-123-123\n123-123-123\n\"\"\") == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n\n7382771286\n\n9056973121''') == \"YES\\nNO\"\n\nassert solution('''3\n\n7654321\n\n352777\n\n8902736''') == \"YES\\nYES\\nNO\"\n\nassert solution('''4\n\n5555555555\n\n676778888\n\n98556482\n\n98556483''') == \"YES\\nYES\\nYES\\nNO\"\n\nassert solution('''5\n\n121212\n\n73587412\n\n123456\n\n87654\n\n789563''') == \"YES\\nYES\\nYES\\nYES\\nNO\"\n\nassert solution('''1\n\n911234\n\n897876\n\n8888888''') == \"NO\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\"\nprint(solution())",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n7123456789\\n\") == \"YES\\n\"\nassert solution(\"2\\n91123456789\\n\") == \"YES\\n\"\nassert solution(\"3\\n123456789\\n\") == \"NO\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 9\\n9 8\\n8 9\\n') == 'YES\\nNO\\nYES\\nNO\\nYES\\n'\n\n\n'''\n\nimport re",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n07895462130\n9345678989\n''') == 'YES\\nYES\\n'\nassert solution('''\n2\n07895462130\n9345678989\n''') == 'NO\\nNO\\n'\nassert solution('''\n2\n07895462130\n07895462130\n''') == 'YES\\nYES\\n'\nassert solution('''\n2\n07895462130\n07895462130\n''') == 'NO\\nNO\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 8\\n8 2\\n10 9 3') == \"YES\"\nassert solution('8 8\\n8 2\\n10 9 3') == \"NO\"\nassert solution('7 8\\n10 9\\n8 2\\n10 9 3') == \"NO\"\n",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n07937472362\n9173292342\n79123423\n\"\"\") == \"\"\"YES\nNO\nYES\nNO\n\"\"\"[:-1]\nassert solution(\"\"\"\n5\n9170002342\n9173292342\n79123423\n\"\"\") == \"\"\"NO\nYES\nNO\nNO\nYES\n\"\"\"\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"\"\"YES\nNO\nYES\nNO\n\"\"\"\nassert solution(\"\"\"\n1\n\"\"\") == \"\"\"YES\nNO\n\"\"\"\nassert solution(\"\"\"\n1\n\"\"\") == \"\"\"NO\nYES\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 5 8\\n2 4 11 12\\n\") == \"5 8 11 12\"\nassert solution(\"4\\n4 2 5 1\\n\") == \"5 1\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 9, 3, 4, 9, 6, 1, 8, 3, 5]) == '1 8 3 9 5 6 4 3 4 6'\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n5\n3 9 10 2 5 1 4 6 8\n\"\"\") == \"\"\"\n5\n1 2 3 4 6\n3 9 10 4 5 1\n\"\"\"\n\n=====Test Cases=====\nTest Case 1\nInput\n\n10\n1 2 3 4 5 6 7 8 9 10\n5\n3 9 10 2 5 1 4 6 8\nOutput\n\n5\n1 2 3 4 6\n3 9 10 4 5 1\n\"\"\"\nTest Case 2\nInput\n\n10\n1 2 3 4 5 6 7 8 9 10\n5\n1 2 3 5 8 4 6 7 9 10\nOutput\n\n5\n1 2 3 4 6\n1 2 3 4 6\n3 9 10 4 5 1\n3 9 10 4 5 1\n\"\"\"\n\n\n=====Implementation=====\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 4\\n3 5\\n5 4') == '3 4 5'\n\n=====Sample Input/Output 1=====\n\nInput\n\nOutput\n\nInput Format\n\nThe first line contains an integer, M.\nThe second line contains M space-separated integers.\nThe third line contains an integer, N.\nThe fourth line contains N space-separated integers.\n\nOutput Format\n\nOutput the symmetric difference integers in ascending order, one per line.\n\nSample Input 0\n\n4\n2 4\n3 5\n5 4\n\nSample Output 0\n\n3\n4\n5\n4\n\nExplanation 0\n\nThe symmetric difference integers in ascending order are 3, 4, 5.\n\n=====Sample Input 1=====\n\nInput\n\nOutput\n\nInput Format\n\nThe first line contains an integer, M.\nThe second line contains M space-separated integers.\nThe third line contains an integer, N.\nThe fourth line contains N space-separated integers.\n\nOutput Format\n\nOutput the symmetric difference integers in ascending order, one per line.\n\nSample Input 1\n\n4\n2 4\n3 5\n5 4\n\nSample Output 1\n\n3\n4\n5\n4\n\nExplanation 1\n\nThe symmetric difference integers in ascending order are 3, 4, 5.\n\n=====Sample Input 2=====\n\nInput\n\nOutput\n\nInput Format\n\nThe first line contains an integer, M.\nThe second line contains M space-separated integers.\nThe third line contains an integer, N.\nThe fourth line contains N space-separated integers.\n\nOutput Format\n\nOutput the symmetric difference integers in ascending order, one per line.\n\nSample Input 2\n\n4\n2 4\n3 5\n5 4\n\nSample Output 2\n\n3\n4\n5\n4\n\nExplanation 2\n\nThe symmetric difference integers in ascending order are 3, 4, 5.\n\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 4 5\n3 4 7\n''') == '2 3 4 7'\n\nassert solution('''\n1\n1\n3\n''') == '3'\n\nassert solution('''\n4\n4 5 6\n3 2 1\n''') == '2 1 3 4 6'\n\n=====Sample Input 1=====\n3\n2 4 5\n3 4 7\n1 2 5\n\n=====Expected Output 1=====\n2 3 4 7\n3 4 5\n2 5 1\n\n=====Sample Input 2=====\n4\n4 5 6\n3 2 1\n5 7 8\n''') == '2 1 3 4 6 7'\n\n\n=====Sample Output 2=====\n5 6 7\n3 4 5\n5 7 8\n4 8 5\n5 6 1\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 4 5\\n5 2\\n\") == \"2\\n3\\n4\\n\"\n\nNote: There is no need to print anything to stdout. The answer must be computed by the program itself.",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\\n5 6 7\\n7 8 9\\n8 9 10\\n\") == \"3 4 5 8 9\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\n    4,\n    7,\n    5,\n    2,\n    1,\n    6,\n    7,\n    9,\n    11,\n    19\n]) == '9 8 7 6 5 4 3 2 11 19'\nassert solution([\n    1,\n    2,\n    3,\n    4,\n    5\n]) == '2 3 5 1 4'\nassert solution([\n    1,\n    2,\n    3\n]) == '3 2 1'\nassert solution([\n    2,\n    4,\n    6,\n    8,\n    10,\n    12\n]) == '8 10 12 6 4 2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 1 3\\n3 4 2\\n4\\n7 9 8\") == \"1 2 3 4 5 7 8 9\"\n\nWhen we use the intersection() function, we also need to make sure that the sets are disjoint, i.e. no element is in both sets. In the following example, the intersection() function will return an empty set:\n\nstdin = \"2\\n1 2\\n3 4\\n5\\n5\\n7\"\n>>> solution(stdin)\n''\n\nWhen we use the difference() function, we also need to make sure that the sets are disjoint, i.e. no element is in both sets. In the following example, the difference() function will return an empty set:\n\nstdin = \"3\\n5 1 3\\n3 4 2\\n4\\n7 9 8\"\n>>> solution(stdin)\n''\n\nWhen we use the union() function, we also need to make sure that the sets are disjoint, i.e. no element is in both sets. In the following example, the union() function will return an empty set:\n\nstdin = \"3\\n5 1 3\\n3 4 2\\n4\\n7 9 8\"\n>>> solution(stdin)\n''\n\nWhen we use the intersection() function, we also need to make sure that the sets are disjoint, i.e. no element is in both sets. In the following example, the intersection() function will return the empty set:\n\nstdin = \"2\\n1 2\\n3 4\\n5\\n5\\n7\"\n>>> solution(stdin)\n''\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5,4,3,2],[1,2,3,4]) == \"1 2 5 4\"\nassert solution([3,4,5],[1,2,3]) == \"2 3 5\"\nassert solution([1,2,3,4],[3,4,5,6]) == \"4 5 6 1 2\"\nassert solution([1,2,3,4,5],[6,7,8,9,10]) == \"9 10 8 7 6 5 1\"\nassert solution([1,2,3,4,5,6],[7,8,9,10,11,12]) == \"11 12 9 8 7 6 5 1\"\n",
        "num_ids_2": 49,
        "num_ids_4": 111
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 4 10 4\\n1 2 3\\n2 2\\n5 6\\n') == \"3.28\"\nassert solution('6\\nA B C D E\\n1 2 3 4 5 6\\n8 7\\n3 4\\n2 3\\n4 5\\n') == \"4.14\"\n'''\n\nimport collections",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 2 3 4 5\\n1 2 3 4 5\\n3 2 4 1\\n10 20 30 40\\n') == '7.50'\nassert solution('2\\n3 4\\n5 6\\n7 8\\n9 10\\n12 13\\n14 15\\n') == '8.00'\nassert solution('1\\n1 2 3 4 5\\n1 2 3 4 5\\n3 2 4 1\\n10 20 30 40\\n') == '7.50'\n\n=====Sample Input & Output=====\nInput\n\nInput Format\n\nFirst line: Integer N\nSecond line: N space separated marks\nThird line: N space separated student's IDs\nFourth line: N space separated marks\nFifth line: N space separated marks\n\nOutput\n\nPrint the average marks of the list corrected to 2 decimal places.\nSample Input 0\n\n5\n1 2 3 4 5\n1 2 3 4 5\n3 2 4 1\n10 20 30 40\n4 5 6 7 8 9 10\n12 13 14 15 16 17\n\nSample Output 0\n\n7.50\n\n'''\nimport collections\nfrom collections import namedtuple",
        "num_ids_2": 78,
        "num_ids_4": 118
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n2\\n3\\n4\\n5\\n') == '2.00'\n=====Sample Input & Output=====\nInput\n4\nID         MARKS      NAME       CLASS\n1         97         Raymond    7\n2         75         Earl        A\n3         56         Steven     4\n4         91         Adrian      5\n\nOutput\n2.00\n\n>>>>>>> cd9d9e3b15c913d07af9b8b5829f8f1a3a24a8d9\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\nMarks    Id    Name    Class\n4    34    Karthik    10\n5    56    Aditya    12\n6    76    Aamir    7\n\n''') == '56.00'\n\n=====Sample Input & Output=====\nInput:\n3\nMarks    Id    Name    Class\n4    34    Karthik    10\n5    56    Aditya    12\n6    76    Aamir    7\n\nOutput:\n56.00\n\n\"\"\"\nfrom collections import namedtuple\n\nPoint = namedtuple('Point', ['x', 'y'])\np = Point(1, 2)\nprint(p.x)\nprint(p.y)",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['5','2','3','4','1','2','5','4','5','2','4','5','5','5','3']) == '6.00'\nassert solution(['5','2','3','4','1','2','5','4','5','2','4','5','5','5','3']) == '5.50'\nassert solution(['1','2','3','4','1','2','3','4','5','2','4','5','5','5','3']) == '3.75'\n",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3.14\"\n'''\n\nfrom collections import namedtuple\n\nStudent = namedtuple('Student', ['id','marks', 'class', 'name'])",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nID\\nMARKS\\nNAME\\n1\\n3.00\\n4.00\\n5\\n6\\n\") == \"2.67\"\n\n====================================================\n\n=====Code=====\nfrom collections import namedtuple\n\ncollections.namedtuple('PACKAGE_NAME', '...')\n\nExample\ncode 01\n>>> from collections import namedtuple\n>>> Point = namedtuple('Point', 'x y')\n>>> pt1 = Point(1, 2)\n>>> pt2 = Point(3, 4)\n>>> dot_product = (pt1.x * pt2.x) + (pt1.y * pt2.y)\n>>> print dot_product\n11\n\ncode 02\n>>> from collections import namedtuple\n>>> Car = namedtuple('Car', 'Price Mileage Colour Class')\n>>> xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n>>> print xyz\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n>>> print xyz.Class\nY\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    2\n    ID        MARKS      NAME      CLASS\n    1        97        Raymond    7\n    2        50        Steven     4''') == \"82.00\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n    MARKS      99\n    NAME      JAMES\n    CLASS     1\n    MARKS      88\n    NAME      KAREN\n    CLASS     2''') == '90.00'\nassert solution('''1\n    MARKS      \n    NAME      JAMES''') == '0.0'\nassert solution('''1\n    MARKS      \n    CLASS     1\n    NAME      JAMES''') == '0.0'\n=====Sample Test Cases=====\nTest Case 1\n>>> solution('3\\nMARKS      99\\nNAME      JAMES\\nCLASS     1\\nMARKS      88\\nNAME      KAREN\\nCLASS     2')\n90.00\n\nTest Case 2\n>>> solution('3\\nMARKS      99\\nNAME      JAMES\\nCLASS     1\\nMARKS      88\\nNAME      KAREN\\nCLASS     2')\n90.0\n\nTest Case 3\n>>> solution('1\\nMARKS      \\nNAME      JAMES')\n0.0\n\nTest Case 4\n>>> solution('1\\nMARKS      \\nCLASS     1\\nNAME      JAMES')\n0.0\n\nTest Case 5\n>>> solution('1\\nMARKS      \\nCLASS     1\\nNAME      JAMES')\n0.0\n\n=====Explanation=====\nThe first test case has only 1 student and all marks are 0.\nIn the second test case, the first student is not in the list.\nIn the third test case, the second student is not in the list.\nIn the fourth test case, the third student is not in the list.\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nID         MARKS      NAME      CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6''') == '82.00'\nassert solution('''5\nID         MARKS      NAME      CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6''') == '82.00'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"3\") == \"Not Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"5\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Not Weird'\nassert solution('6') == 'Weird'\nassert solution('21') == 'Weird'\nassert solution('25') == 'Not Weird'\nassert solution('26') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Weird'\nassert solution(input()) == 'Not Weird'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Weird\"\nassert solution(\"5\") == \"Not Weird\"\nassert solution(\"8\") == \"Weird\"\nassert solution(\"10\") == \"Weird\"\nassert solution(\"21\") == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"3\") == \"Not Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"5\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''20\n17\n55\n3\n11\n121\n''') == 'Not Weird'\nassert solution('''0\n37\n''') == 'Weird'\nassert solution('''1\n37\n''') == 'Weird'\nassert solution('''9\n21\n''') == 'Weird'\n=====SAMPLE TEST CASE=====\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Weird'\nassert solution('5') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Not Weird\"\nassert solution(\"24\") == \"Weird\"\nassert solution(\"123\") == \"Not Weird\"\nassert solution(\"120\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n\") == \"Not Weird\"\nassert solution(\"5\\n\") == \"Weird\"\nassert solution(\"6\\n\") == \"Not Weird\"\n=====Sample Input & Output=====\nInput\n\n1\nOutput\n\nNot Weird\n=====Input Explanation=====\nTest Case 1:\nn=1\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(3) == 'Weird'\nassert solution(1) == 'Not Weird'\nassert solution(2) == 'Weird'\nassert solution(4) == 'Not Weird'\nassert solution(6) == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"6\"\n''')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n<feed xml:lang=\"en\">\\n<title>XML</title>\\n<subtitle lang=\"en\">XML rules</subtitle>\\n<link rel=\"alternate\" type=\"text/xml\" href=\"http://example.com/rss\"/>\\n</feed>') == '6'\nassert solution('1\\n<feed xml:lang=\"en\">\\n<title>XML</title>\\n<subtitle lang=\"en\">XML rules</subtitle>\\n<link rel=\"alternate\" type=\"text/xml\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n</feed>') == '5'\nassert solution('1\\n<feed xml:lang=\"en\">\\n<title>XML</title>\\n<subtitle lang=\"en\">XML rules</subtitle>\\n<link rel=\"alternate\" type=\"text/xml\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n</feed>') == '10'\nassert solution('1\\n<feed xml:lang=\"en\">\\n<title>XML</title>\\n<subtitle lang=\"en\">XML rules</subtitle>\\n<link rel=\"alternate\" type=\"text/xml\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n</feed>') == '10'\nassert solution('1\\n<feed xml:lang=\"en\">\\n<title>XML</title>\\n<subtitle lang=\"en\">XML rules</subtitle>\\n<link rel=\"alternate\" type=\"text/xml\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/html\"/>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/rss\"/>\\n</feed>') == '10'\n",
        "num_ids_2": 177,
        "num_ids_4": 479
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n<feed xml:lang=\"en\">\n    <title>XML Developer News</title>\n    <subtitle lang=\"en\">A news aggregator</subtitle>\n    <link rel=\"alternate\" href=\"http://xml.news/rss\"/>\n    <updated>2013-12-25T12:00:00</updated>\n    <published>2013-12-25T12:00:00</published><description>In the year 2013, many people started to get involved in the tech industry by watching television broadcasts.</description>\n    <category>Science</category>\n    <category>Society</category>\n    <author>\n        <name>John F. Kennedy</name>\n    </author><cloud>\n        <host>\n            <ip>172.16.132.1</ip>\n            <port>4444</port>\n        </host>\n        <path>/tmp/</path>\n    </cloud>\n</feed>''') == \"72\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('<feed xml:lang=\"en\"><title>HackerRank.org</title><subtitle>Programming</subtitle><link rel=\"alternate\" hreflang=\"en\" href=\"https://www.hackerrank.com/\"><updated>2013-12-25T11:00:00</updated><author><name>HackerRank.org</name></author><icon type=\"image/png\" src=\"https://www.hackerrank.com/images/hackerrank-logo-small.png\"></icon></feed>') == '50'\n'''\n",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"2\"\nassert solution('5') == \"15\"\nassert solution('3') == \"12\"\nassert solution('1') == \"1\"\nassert solution('4') == \"8\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'><title>HackerRank</title><subtitle>Programming</subtitle><link rel='alternate' href='http://hackerrank.com/'/> </feed>\"\"\") == \"2\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle>Programming</subtitle>\n<link rel='alternate' href='http://hackerrank.com/'/>\n</feed>\"\"\") == \"2\"\n\nassert solution(\"\"\"<feed xml:lang='en'><title>HackerRank</title><subtitle>Programming</subtitle><link rel='alternate' href='http://hackerrank.com/'/> </feed>\"\"\") == \"0\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle>Programming</subtitle>\n<link rel='alternate' href='http://hackerrank.com/'/>\n</feed>\"\"\") == \"0\"\n\n=====SAMPLE RUNS=====\nSample Input 0\n\n5\n<feed xml:lang='en'><title>HackerRank</title><subtitle>Programming</subtitle><link rel='alternate' href='http://hackerrank.com/'/> </feed>\nSample Output 0\n\n2\nExplanation 0\n\nThe root node of the tree is \"<feed xml:lang='en'><title>HackerRank</title><subtitle>Programming</subtitle><link rel='alternate' href='http://hackerrank.com/'/> </feed>\" and contains 2 attributes.\n\nSample Input 1\n\n7\n<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle>Programming</subtitle>\n<link rel='alternate' href='http://hackerrank.com/'/>\n<link rel='alternate' href='http://hackerrank.com/'/>\n<link rel='alternate' href='http://hackerrank.com/'/>\n<link rel='alternate' href='http://hackerrank.com/'/>\n<link rel='alternate' href='http://hackerrank.com/'/>\n</feed>\nSample Output 1\n\n0\nExplanation 1\n\nThe root node of the tree is \"<feed xml:lang='en'>\nand contains 7 attributes.\n\n\"\"\"\n",
        "num_ids_2": 71,
        "num_ids_4": 142
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"<feed></feed>\") == \"<feed>\"\nassert solution(\"<feed><title>title</title><content>content</content></feed>\") == \"<feed><title>title</title><content>content</content></feed>\"\nassert solution(\"<feed><title>title</title><title>content</content></feed>\") == \"<feed><title>title</title><title>content</title><title>content</title><title>content</title></feed>\"\nassert solution(\"<feed><title>title</title><title>content</content></feed>\") == \"<feed><title>title</title><title>content</title><title>content</title><title>content</title></feed>\"\nassert solution(\"<feed><title>title</title><title>content</title></feed>\") == \"<feed><title>title</title><title>content</title><title>content</title></feed>\"\n",
        "num_ids_2": 54,
        "num_ids_4": 158
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"<feed></feed>\") == \"<feed></feed>\", \"Test\"\nprint(solution('''<feed xmlns:atom=\"http://www.w3.org/2005/Atom\">\n    <title>Feed</title>\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/feed.atom\"/>\n</feed>'''))\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='https://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"6\"\n\n=========================\n>>> \n=========================\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"<doc><e1/><e2/><e3/></doc>\") == \"3\"\nassert solution(\"<doc><e1 a='1' b='2'/><e2 a='2' b='1'/></doc>\") == \"3\"\nassert solution(\"<doc><e1 a='1' b='2'/><e2 a='2' b='1'/><e3/></doc>\") == \"0\"\nassert solution(\"<doc><e1/><e2/><e3/></doc>\") == \"3\"\nassert solution(\"<doc><e1 a='1' b='2'/><e2 a='2' b='1'/><e3 a='3' b='4'/><e4 a='4' b='5'/><e5/></doc>\") == \"5\"\n\"\"\"\nfrom xml.etree.ElementTree import fromstring as xml_tree_fromstring\n\nfrom xml.etree.ElementTree import Element\nfrom xml.etree.ElementTree import ElementTree\n\nfrom collections import Counter",
        "num_ids_2": 62,
        "num_ids_4": 128
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.0 2.0 3.0 4.0\") == \"90.00\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"0.00\"\nassert solution(\"1.0 0.0 0.0 0.0\") == \"180.00\"\n\n=====Test Solution=====\nprint(solution(input()))\n=====CodeMining=====\n\n\"\"\"\n\nimport math",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2. 3. 4. 5. 7. 10. 5\") == \"45.0\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 0\n0 0 1\n0 1 0\n0 1 1\n1 0 0\n1 0 1\n1 1 0\n1 1 1\n''') == '60.0'\nassert solution('''\n0 0 0\n1 0 0\n1 1 0\n1 1 1\n1 1 1\n''') == '180.0'\nassert solution('''\n0 0 0\n0 0 1\n0 1 0\n0 1 1\n1 0 0\n1 0 1\n1 1 0\n1 1 1\n''') == '90.0'\nassert solution('''\n0 0 0\n1 0 0\n1 1 0\n1 1 1\n1 1 1\n''') == '90.0'\n\nprint(solution('''\n0 0 0\n0 0 1\n0 1 0\n0 1 1\n1 0 0\n1 0 1\n1 1 0\n1 1 1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2.4 3.2 4.5 5.1\") == \"43.16\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.2 1.5 3.3 2.5') == '62.89999999999999'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"-1 -1 -1 1 -1\") == \"90\"\nassert solution(\"-1 -1 -1 1 1\") == \"60\"\nassert solution(\"1 1 -1 -1\") == \"45\"\nassert solution(\"-1 -1 -1 1 -1\") == \"0\"\nassert solution(\"-1 -1 -1 1 1\") == \"0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\" 1.0 2.0 1.0 2.0\") == \"5.16666667\"\nassert solution(\" 3.0 3.0 4.0 2.0\") == \"45.666666667\"\nassert solution(\" 1.0 2.0 3.0 2.0\") == \"22.5\"\nprint(\"Solution = \", solution(input()))\n",
        "num_ids_2": 49,
        "num_ids_4": 72
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.2 3.4 5.6\") == '47.74', 'Wrong output'\nassert solution(\"-1.2 3.4 -5.6\") == '-47.74', 'Wrong output'\nassert solution(\"0.1 -0.2 0.3 -0.4\") == '-65.57', 'Wrong output'\n=====Test cases=====\n0.1 -0.2 0.3 -0.4\n-1.2 3.4 5.6\n-0.1 -0.2 0.3 -0.4\n0.1 -0.2 0.3 -0.4\n=====Solution=====\n",
        "num_ids_2": 53,
        "num_ids_4": 84
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 2\") == \"45\"\nprint(solution(input()))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 0 1 0') == '45.0', f\"expected '45.0' but got {solution('0 0 0 1 0')}\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == 1\nassert solution('a a a a a') == 2\n\nInput\n3\nblues\nreds\ndods\nOutput\n3\n1\n2\n'''",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nhello world\") == 2\nassert solution(\"5\\ncat dog fish\") == 5\nassert solution(\"6\\nwal wal wal wal\") == 3",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nhello world') == 1\nassert solution('3\\neven') == 2\nassert solution('4\\nabba') == 2\nassert solution('5\\npear') == 1\n'''",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 python\") == \"1\"\nassert solution(\"2 1 a\") == \"2\"\nassert solution(\"2 1 z\") == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 a b 1 c 2 d 2 f 2 g\") == 3\n=====Test Case 1 (Valid)=====\n\nGiven\n\nInput\n\nOutput\n\nExplanation\n\nTest Case 1:\n\nOutput\n\nExplanation\n\nTest Case 1:\n\n=====Code=====\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"10\\n10\"\n\n=====Sample Input=====\n3\nhello world\ngoodbye moon\n\n=====Sample Output=====\n2\n10\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nhello') == '2'\n=====Test Case 1=====\nInput\nTestcase 1\nOutput\n2\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\neven number of vowels\\neven number of vowels\\neven number of vowels') == 2\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\ncat\nrat\nmat\n''') == '1'\nassert solution('''5\nmat\nmat\nmat\nmat\nmat\n''') == '4'\n\n=====Sample Test Cases=====\nInput\nOutput\n\nExpected\n\nOutput\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\neko\\neko\\neko\\neko\") == \"2\"\nassert solution(\"4\\neko\\neko\\neko\\neko\") == \"1\"\nassert solution(\"4\\neko\\neko\\neko\\neko\\n\") == \"4\"\n'''",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('MMMCMXCIX') == True\nassert solution('MMMCMXCIXI') == False\nassert solution('MMMCMXCIV') == False\nassert solution('MMMCMXCVIII') == False\nassert solution('MMMCMXCIXI') == False\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"X\") == \"True\"\nassert solution(\"VII\") == \"False\"\nassert solution(\"LXXVII\") == \"True\"\nassert solution(\"MMMCMXCIX\") == \"True\"\nassert solution(\"MMMCMXCIXI\") == \"False\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"X\") == True\nassert solution(\"XX\") == True\nassert solution(\"XXX\") == True\nassert solution(\"XXXI\") == True\nassert solution(\"VIII\") == True\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('XII') == True\nassert solution('XX') == True\nassert solution('I') == True\nassert solution('V') == True\nassert solution('X') == True\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('MMMM') == 'True'\nassert solution('DD') == 'False'\nassert solution('MMMMMMMMMM') == 'True'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 1899
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('III') == True\nassert solution('IV') == False\nassert solution('IX') == True\nassert solution('LVIII') == True\nassert solution('MCMXCIV') == True\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') is True\nassert solution('V') is True\nassert solution('X') is True\nassert solution('III') is True\nassert solution('L') is True\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('I') == True\nassert solution('II') == False\nassert solution('III') == True\nassert solution('IV') == False\nassert solution('V') == False\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('XVIII') == True\nassert solution('XX') == True\nassert solution('XXXIII') == False\nassert solution('XXII') == True\nassert solution('XXXX') == True\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"True\"\n\n'''\nfrom re import findall",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n9768277567\\n98687475645\\n9874565520\\n8885778484\\n9872374255\") == \"9 8 7 8 8 78 74 7567 9768 27 75 67 98 68 74 56 5\"\n\n'''\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    \"69\",\n    \"9172948259\",\n    \"971879631\",\n    \"9384722578\",\n    \"70\",\n    \"71\",\n    \"69\",\n    \"898294785\",\n    \"93\"\n]) == \"+91 9696908379\\n+91 969690837\\n+91 969690837\\n+91 969690838\\n+91 969690839\\n+91 96969084\\n+91 96969085\\n+91 96969086\\n+91 96969087\\n+91 96969088\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1+91 2+91 3+91 4+91 5+91 6+91 7+91 8+91 9+91\\n+91 1+91 2+91 3+91 4+91 5+91 6+91 7+91 8+91 9+91\\n+91 0+91 1+91 2+91 3+91 4+91 5+91 6+91 7+91 8+91 9+91\\n1+91 2+91 3+91 4+91 5+91 6+91 7+91 8+91 9+91\\n+91 1+91 2+91 3+91 4+91 5+91 6+91 7+91 8+91 9+91\"\n\n=========Output=========\nInput\n1\n91\n+91 98\n+91 98\n+91 98\n+91 98\n+91 98\n+91 98\n+91 98\n+91 98\n+91 98\n+91 98\n+91 98\n\nOutput\n1 981 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n+91 98 98\n\n=========================================\n\nclass Solution:\n    def printNumbers(self, number):\n        x = int(number)\n        if x<10:\n            return str(x)\n        elif x>=10 and x<100:\n            return str(x//10)+\" \"+str(x%10)\n        elif x>=100 and x<1000:\n            return str(x//100)+\" \"+str(x//10)+\" \"+str(x%10)\n        else:\n            return str(x//1000)+\" \"+str(x//100)+\" \"+str(x//10)+\" \"+str(x%10)\n\ns = Solution()\nfor i in range(int(input())):\n    print(s.printNumbers(input()))\n\n=============Output=============\nInput\n1\n12\n\nOutput\n1 12\n+91 1 2 3 4 5 6 7 8 9 0\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n+91 1 2 3 4 5 6 7 8 9\n",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+91 8111234567\\n911 8111234567\") == \"+91 8111234567\\n+91 8111234567\\n+91 8111234567\\n\"\nassert solution(\"+91 8111234567\\n91 8111234567\") == \"+91 8111234567\\n+91 8111234567\\n+91 8111234567\\n\"\nassert solution(\"+91 8111234567\\n91 8111234567\\n91 8111234567\") == \"+91 8111234567\\n+91 8111234567\\n+91 8111234567\\n\"\n",
        "num_ids_2": 98,
        "num_ids_4": 155
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['']) == ''\nassert solution([''] + [['']] * (4 - 1)) == ''\nassert solution([''] + [['']] * (4 - 2)) == ''\nassert solution([''] + [['']] * (4 - 3)) == ''\nassert solution([''] + [['']] * (4 - 4)) == ''\n",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n792636498\n+91 9191234567\n792636498\n+91 9191234567\n''') == '792636498 +91 9191234567 792636498 +91 9191234567'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n+91 987654321\\n987654321\\n+91 9876\") == \"+91 987654321\\n+91 9876\\n+91 987654321\\n\"\nassert solution(\"2\\n+91 987654321\\n987654321\\n+91 987654321\\n+91 9876\") == \"+91 987654321\\n+91 9876\\n+91 987654321\\n+91 9876\\n\"\nassert solution(\"3\\n+91 987654321\\n987654321\\n+91 987654321\") == \"+91 987654321\\n+91 987654321\\n+91 987654321\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 180
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n+91 9876543210\n+91 98763210\n+91 987654321\n+91 9876543210\n+91 98763210\n+91 98763210\n+91 9876543210\n+91 98763210\n+91 98763210\n+91 98763210\n\"\"\") == \"\"\"\n1+91 9876543210\n2+91 98763210\n3+91 98763210\n4+91 98763210\n5+91 98763210\n6+91 98763210\n7+91 98763210\n8+91 98763210\n9+91 98763210\n10+91 98763210\n\"\"\".strip()\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"+91 900000000\"\"\") == \"\"\"+91 900000000\"\"\", \"First\"\nassert solution(\"\"\"+91 9300000000\"\"\") == \"\"\"+91 9300000000\"\"\", \"Second\"\nassert solution(\"\"\"+91 92900000000\"\"\") == \"\"\"+91 92900000000\"\"\", \"Third\"\nassert solution(\"\"\"+91 9300000000\"\"\") == \"\"\"+91 9300000000\"\"\", \"Fourth\"\nassert solution(\"\"\"+91 92900000000\"\"\") == \"\"\"+91 92900000000\"\"\", \"Fifth\"\n\"\"\")",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n9112345678910\\n0') == '+91 0 12345678910\\n+91 0 0 0 0 0 0\\n'\nassert solution('3\\n91-123-4567\\n0') == '+91 0 0 1234567\\n+91 0 0 0 0 0\\n'\n=====Test Case 2=====\n=====Expected Output=====\n+91 0 1234567\\n+91 0 0 0 0 0 0\\n\n+91 0 0 12345\\n+91 0 0 0 0 0\n\n=====Test Case 3=====\n=====Expected Output=====\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+91 0 0 0 0 0 0\n+",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\nA B C\\n2 3 4\\n\") == \"2.00\"\nassert solution(\"2\\nA B C\\n3 4 5\\n\") == \"3.50\"\nassert solution(\"3\\nA B C\\n2 3 4\\n\") == \"4.00\"\nassert solution(\"4\\nA B C\\n3 4 5\\n\") == \"3.75\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nalpha 100\\nbeta 80\\nalpha 90\\nbeta 100\\nalpha 50') == '50.0'\n\n=====Sample Input and Output=====\nInput\n3\nalpha 100\nbeta 80\nalpha 90\nbeta 100\nalpha 50\nOutput\n50.0\n'''",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '50.0'\n=====Test Cases=====\nInput:\n3\nalpha 100\nbeta 80\ngamma 60\nOutput:\n80.0\n\n=====Explanation=====\nHere alpha's average is (100+80+60)/3 = 80.0.\nInput:\n3\nalpha 100\nbeta 80\ngamma 60\nOutput:\n80.0\n=====Sample Test Cases=====\nInput:\n2\nbeta\ngamma\nOutput:\n50.0\n=====Expected Output=====\n80.0\n=====Change Log=====\n\n'''\nimport statistics as st\nimport statistics as st\nimport statistics as st\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\nalpha 100\\nbeta 50\\nalpha\\nalpha\") == \"50.0\"\nassert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\ngamma\") == \"100.0\"\nassert solution(\"4\\nalpha 100\\nbeta 50\\nalpha\\ngamma\") == \"50.0\"\nassert solution(\"5\\nalpha 100\\nbeta 50\\nalpha\\ngamma\") == \"100.0\"\nassert solution(\"10\\nbeta 100\\nalpha 50\\nbeta 50\\nbeta 50\\nalpha\\ngamma\\ngamma 50\\nalpha\\nalpha\\ngamma\") == \"50.0\"\n",
        "num_ids_2": 53,
        "num_ids_4": 107
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nalpha 20\\nalpha 30\\nalpha 40\\n\") == \"50.0\"\nassert solution(\"2\\nbeta 30\\nbeta 50\\nbeta 70\\n\") == \"40.0\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nalpha 20\\nbeta 30\\nalpha') == '50.0'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nalpha 100\\nbeta 50\\nalpha\\ntry') == '50.0'\nassert solution('3\\nalpha 100\\nbeta 50\\nalpha\\ntry') == '50.0'\nassert solution('3\\nalpha 100\\nbeta 50\\nalpha\\ntry') == '50.0'\n",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nalpha 100\\nbeta 50\\nalpha\\n') == '50.0'\n=====Input/Output Example=====\nInput\n4\nalpha 100\nbeta 50\nalpha\nQuery_name\nOutput\n50.0\nExplanation\nThe marks for the student whose name is 'alpha' is 100. The average of marks for 'alpha' is 50.\n\n'''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 90\\nalpha\\nbeta\") == \"90.00\"\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\n\") == \"50.0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\n  'John Henry',\n  'Dora Powell',\n  'Michael Thomas',\n  'Christopher Lee',\n  'Heath Ledger',\n  'Susan Boyle',\n  'Sabrina Green',\n  'David Sumner',\n  'Edna Williams',\n  'Tobias Brown'\n]) == \"Mr. Dora Powell\\nMs. Susan Boyle\\nMr. Christopher Lee\\nMs. Heath Ledger\\nMr. David Sumner\\nMs. Sabrina Green\\nMr. Tom Brown\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"Ms. Mary George\\nMr. Henry Davids\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nMarry\\n21\\nF\\n\") == \"Ms. Marry\\n\"\nassert solution(\"1\\nHenry\\n19\\nM\\n\") == \"Mr. Henry\\n\"\nassert solution(\"2\\nHenry\\n19\\nM\\n\") == \"Mr. Henry\\nMs. Henry\\n\"\n\n'''\n",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nFirst Last M\nMidoriya Last M\nSudhir Last F\n''') == 'Mr. Sudhir Last F\\nMr. Midoriya Last M\\nMs. First Last M\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Mr. Henry Davids\\nMs. Mary George\"\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n    Marry Simion\n    Marry Simion\n    Madonna Regina\n    Julia Regina\n    Jenny Anthony\n''') == '''Marry Simion\n    Madonna Regina\n    Jenny Anthony\n    Jenny Anthony\n    Julia Regina\n    Marry Simion'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nSam \\t 23\\nKate \\t 32\\nMary \\t 28\\nMax \\t 30\\nMark \\t 24') == 'Mr. Max\\nMr. Mark\\nMs. Mary\\nMs. Kate\\nMr. Kate\\nMs. Sam'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Mr. Henry Davids\\nMs. Mary George\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\n    'Henderson',\n    'Henry',\n    'Min',\n    'Min',\n    'William',\n    'James',\n    'James',\n    'Michael',\n    'John',\n    'Robert',\n    'Joseph',\n    'Margaret',\n    'William',\n    'Henry',\n    'Nate',\n    'Henry',\n    'Isaac',\n    'John',\n    'Hannah',\n    'Michael',\n    'Daniel',\n    'William',\n    'Jax',\n    'Homer',\n    'James',\n    'Homer',\n    'Bart',\n    'Lisa',\n    'Homer',\n    'James',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    'Lisa',\n    'Marge',\n    'Homer',\n    'Bart',\n    'Bart',\n    '",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nDiana 30\nMary 40\nHenry 50''') == '''Diana\nMary\nHenry'''\nassert solution('''3\nLeo 20\nHerm 20\nJoe 30''') == '''Leo\nHerm\nJoe'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3\") == [\"0 0 0\", \"0 0 1\", \"0 0 2\", \"0 1 0\", \"0 1 1\", \"0 1 2\", \"1 0 0\", \"1 0 1\", \"1 0 2\", \"1 1 0\", \"1 1 1\", \"1 1 2\"]\nassert solution(\"3 1 4 3\") == [\"1 0 0\", \"1 0 1\", \"1 0 2\", \"1 1 0\", \"1 1 1\", \"1 1 2\", \"2 0 0\", \"2 0 1\", \"2 0 2\", \"2 1 0\", \"2 1 1\", \"2 1 2\"]\nassert solution(\"3 2 3 4\") == [\"2 0 0\", \"2 0 1\", \"2 0 2\", \"2 1 0\", \"2 1 1\", \"2 1 2\", \"3 0 0\", \"3 0 1\", \"3 0 2\", \"3 1 0\", \"3 1 1\", \"3 1 2\", \"3 2 0\", \"3 2 1\", \"3 2 2\"]\nassert solution(\"3 3 3 4\") == [\"3 0 0\", \"3 0 1\", \"3 0 2\", \"3 1 0\", \"3 1 1\", \"3 1 2\", \"3 2 0\", \"3 2 1\", \"3 2 2\", \"4 0 0\", \"4 0 1\", \"4 0 2\", \"4 1 0\", \"4 1 1\", \"4 1 2\", \"4 2 0\", \"4 2 1\", \"4 2 2\"]\n\n'''\n\nimport itertools\n\nx = int(input())\ny = int(input())\nz = int(input())\nn = int(input())\n\nans = []\nfor i in range(x+1):\n    for j in range(y+1):\n        for k in range(z+1):\n            if (i+j+k)!= n:\n                ans.append([i, j, k])\n\nans.sort()\nfor i in ans:\n    print(i, end ='')",
        "num_ids_2": 140,
        "num_ids_4": 325
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\") == \"[[0,0,0],[0,0,1],[0,1,0],[1,0,0],[1,1,1]]\"\nassert solution(\"1 1 2\") == \"[[0,0,0],[0,0,1],[0,1,0],[1,0,0],[1,1,1]]\"\nassert solution(\"2 2 1\") == \"[[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\"\nassert solution(\"2 1 2\") == \"[[0,0,0],[0,0,1],[0,1,0],[1,0,0],[1,1,1]]\"\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n",
        "num_ids_2": 84,
        "num_ids_4": 186
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]\nassert solution([1, 1, 3, 4]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n'''\n\n'''\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution(\"1 1 2 2\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,2,0],[0,2,1],[0,2,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution(\"1 1 2 1\") == []\n\n'''\n",
        "num_ids_2": 160,
        "num_ids_4": 171
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 2, 3, 4]) == [[1, 1, 1], [1, 1, 2], [1, 2, 1], [1, 2, 2], [1, 3, 1], [1, 3, 2], [1, 4, 1], [1, 4, 2], [1, 5, 1], [1, 5, 2], [2, 1, 1], [2, 1, 2], [2, 2, 1], [2, 2, 2], [2, 3, 1], [2, 3, 2], [2, 4, 1], [2, 4, 2], [2, 5, 1], [2, 5, 2], [3, 1, 1], [3, 1, 2], [3, 2, 1], [3, 2, 2], [3, 3, 1], [3, 3, 2], [3, 4, 1], [3, 4, 2], [3, 5, 1], [3, 5, 2], [4, 1, 1], [4, 1, 2], [4, 2, 1], [4, 2, 2], [4, 3, 1], [4, 3, 2], [4, 4, 1], [4, 4, 2], [4, 5, 1], [4, 5, 2], [5, 1, 1], [5, 1, 2], [5, 2, 1], [5, 2, 2], [5, 3, 1], [5, 3, 2], [5, 4, 1], [5, 4, 2], [5, 5, 1], [5, 5, 2]]\n'''\n",
        "num_ids_2": 439,
        "num_ids_4": 439
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 2 3') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution('1 2 3 4') == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n'''\n\n\n\n\nx = int(input())\ny = int(input())\nz = int(input())\nn = int(input())\n",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''x=1\n    y=1\n    z=2\n    n=3''') == '''[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]'''\n\n=======Solution===\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 2, 1, 4]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n'''",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 2 3') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n=====Explanation=====\nAll possible coordinates are:\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\nThe final answer would be [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]] because the sum of 0+0+0 is 0, 0+0+1 is 1, and 0+0+2 is 2.\n\n\n'''\n\nn = int(input())\nx = int(input())\ny = int(input())\nz = int(input())\n\na = [(i, j, k) for i in range(x + 1) for j in range(y + 1) for k in range(z + 1) if i + j + k!= n]\n\nprint(a)",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\"\"\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.5+2.7i\") == \"1.5+2.7i\"\nassert solution(\"1.5-2.7i\") == \"-1.5-2.7i\"\nassert solution(\"1.5*2.7i\") == \"-2.7\"\nassert solution(\"1.5/2.7i\") == \"0.428571428571429\"\nassert solution(\"1.5+2.7\") == \"1.5+2.7\"\n=====Test Cases=====\nInput\nOutput\n\n=====Examples=====\nTest 1\n\nInput\n1.5+2.7i\n\nOutput\n1.5+2.7i\n\nTest 2\n\nInput\n1.5-2.7i\n\nOutput\n-1.5-2.7i\n\nTest 3\n\nInput\n1.5*2.7i\n\nOutput\n-2.7\n\nTest 4\n\nInput\n1.5/2.7i\n\nOutput\n0.428571428571429\n\nTest 5\n\nInput\n1.5+2.7\n\nOutput\n1.5+2.7\n\n\"\"\"",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1+2i') == '1+2i'\nassert solution('-2+4i') == '-2+4i'\nassert solution('1+1i') == '1+1i'\nassert solution('1-1i') == '1-1i'\nassert solution('2+2i') == '2+2i'\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"2 2\"\nassert solution(\"1 0\") == \"0.00i\"\nassert solution(\"0 1\") == \"1.00i\"\nassert solution(\"0 0\") == \"0.00+0.00i\"\nassert solution(\"2.5 2.5\") == \"4.00+4.00i\"\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"2.00+1.00i\"\nassert solution(\"0 0\") == \"0.00+0.00i\"\nassert solution(\"3 3\") == \"5.00+3.00i\"\n=====Constraints=====\n0.01 <= |C|, |D| <= 100\n\n===SAMPLE TEST CASE===\nInput:\n1 1\nOutput:\n2.00+1.00i\n\nInput:\n0 0\nOutput:\n0.00+0.00i\n\nInput:\n3 3\nOutput:\n5.00+3.00i\n\n\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''1 -2j''') == '1-2j'\nassert solution(\n    '''-1 + 2j''') == '-1-2j'\nassert solution(\n    '''1+2j''') == '3+4j'\nassert solution(\n    '''2+3j''') == '5+6j'\nassert solution(\n    '''4-2j''') == '2-4j'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1') == '5 3'\nassert solution('1 0') == '1.00+0.00i'\n=====Test Case 1=====\nSample Input 1\n4 1\nSample Output 1\n5 3\n=====Test Case 2=====\nSample Input 2\n1 0\nSample Output 2\n0.00+0.00i\n=====Test Case 3=====\nSample Input 3\n0 0\nSample Output 3\n0.00+0.00i\n=====Test Case 4=====\nSample Input 4\n1.5 0\nSample Output 4\n1.5+0.00i\n=====Test Case 5=====\nSample Input 5\n1 2\nSample Output 5\n3.00+1.00i\n=====Test Case 6=====\nSample Input 6\n1 0\nSample Output 6\n1.00+0.00i\n=====Test Case 7=====\nSample Input 7\n1 0\nSample Output 7\n1.00+0.00i\n=====Test Case 8=====\nSample Input 8\n1 0\nSample Output 8\n1.00+0.00i\n=====Test Case 9=====\nSample Input 9\n1.5 0\nSample Output 9\n1.500+0.500i\n=====Test Case 10=====\nSample Input 10\n1 0\nSample Output 10\n1.00+0.00i\n=====Test Case 11=====\nSample Input 11\n1 2\nSample Output 11\n3.00+2.00i\n=====Test Case 12=====\nSample Input 12\n1 0\nSample Output 12\n1.00+0.00i\n=====Test Case 13=====\nSample Input 13\n1 0\nSample Output 13\n1.00+0.00i\n=====Test Case 14=====\nSample Input 14\n1 0\nSample Output 14\n1.00+0.00i\n=====Test Case 15=====\nSample Input 15\n0 0\nSample Output 15\n0.00+0.00i\n=====Test Case 16=====\nSample Input 16\n1 0\nSample Output 16\n1.00+0.00i\n=====Test Case 17=====\nSample Input 17\n1 0\nSample Output 17\n1.00+0.00i\n=====Test Case 18=====\nSample Input 18\n0 1\nSample Output 18\n0.00+1.00i\n=====Test Case 19=====\nSample Input 19\n0 0\nSample Output 19\n0.00+0.00i\n=====Test Case 20=====\nSample Input 20\n0 0\nSample Output 20\n0.00+0.00i\n=====Test Case 21=====\nSample Input 21\n1 2\nSample Output 21\n3.00+2.00i\n=====Test Case 22=====\nSample Input 22\n1 2\nSample Output 22\n3.00+2.00i\n=====Test Case 23=====\nSample Input 23\n0 0\nSample Output 23\n0.00+0.00i\n=====Test Case 24=====\nSample Input 24\n1.5 0\nSample Output 24\n1.500+0.500i\n=====Test Case 25=====\nSample Input 25\n1.5 0\nSample Output 25\n1.500+0.500i\n=====Test Case 26=====\nSample Input 26\n0 0\nSample Output 26\n0.00+0.00i\n=====Test Case 27=====\nSample Input 27\n1.5 0\nSample Output 27\n1.500+0.500i\n=====Test Case 28=====\nSample Input 28\n1.5 0\nSample Output 28\n1.500+0.500i\n=====Test Case 29=====\nSample Input 29\n0 0\nSample Output 29\n0.00+0.00i\n=====Test Case 30=====\nSample Input 30\n1.5 0\nSample Output 30\n1.500+0.500i\n=====Test Case 31=====\nSample Input 31\n0 0\nSample Output 31\n0.00+0.00i\n=====Test Case 32=====\nSample Input 32\n0 0\nSample Output 32\n0.00+0.00i\n=====Test Case 33=====\nSample Input 33\n1 2\nSample Output 33\n3.00+2.00i\n=====Test Case 34=====\nSample Input 34\n1 2\nSample Output 34\n3.00+2.00i\n=====Test Case 35=====\nSample Input 35\n1 2\nSample Output 35\n3.00+2.00i\n=====Test Case 36=====\nSample Input 36\n1 2\nSample Output 36\n3.00+2.00i\n=====Test Case 37=====\nSample Input 37\n1 2\nSample Output 37\n3.00+2.00i\n=====Test Case 38=====\nSample Input 38\n1 2\nSample Output 38\n3.00+2.00i\n=====Test Case 39=====\nSample Input 39\n1 2\nSample Output 39\n3.00+2.00i\n=====Test Case 40=====\nSample Input 40\n1 2\nSample Output 40\n3.00+2.00i\n=====Test Case 41=====\nSample Input 41\n1 2\nSample Output 41\n3.00+2.00i\n=====Test Case 42=====\nSample Input 42\n1 2\nSample Output 42\n3.00+2.00i\n=====Test Case 43=====\nSample Input 43\n1 2\nSample Output 43\n3.00+2.00i\n=====Test Case 44=====\nSample Input 44\n1 2\nSample Output 44\n3.00+2.00i\n=====Test Case 45=====\nSample Input 45\n1 2\nSample Output 45\n3.00+2.00i\n=====Test Case 46=====\nSample Input 46\n1 2\nSample Output 46\n3.00+2.00i\n=====Test Case 47=====\nSample Input 47\n1 2\nSample Output 47\n3.00+2.00i\n=====Test Case 48=====\nSample Input 48\n1 2\nSample Output 48\n3.00+2.00i\n=====Test Case 49=====\nSample Input 49\n1 2\nSample Output 49\n3.00+2.00i\n=====Test Case 50=====\nSample Input 50\n1 2\nSample Output 50\n3.00+2.00i\n=====Test Case 51=====\nSample Input 51\n1 2\nSample Output 51\n3.00+2.00i\n=====Test Case 52=====\nSample Input 52\n1 2\nSample Output 52\n3.00+2.00i\n=====Test Case 53=====\nSample Input 53\n1 2\nSample Output 53\n3.00+2.00i\n=====Test Case 54=====\nSample Input 54\n1 2\nSample Output 54\n3.00+2.00i\n=====Test Case 55=====\nSample Input 55\n1 2\nSample Output 55\n3.00+2.00i\n=====Test Case 56=====\nSample Input 56\n1 2\nSample Output 56\n3.00+2.00i\n=====Test Case 57=====\nSample Input 57\n1 2\nSample Output 57\n3.00+2.00i\n=====Test Case 58=====\nSample Input 58\n1 2\nSample Output 58\n3.00+2.00i\n=====Test Case 59=====\nSample Input 59\n1 2\nSample Output 59\n3.00+2.00i\n=====Test Case 60=====\nSample Input 60\n1 2\nSample Output 60\n3.00+2.00i\n=====Test Case 61=====\nSample Input 61\n1 2\nSample Output 61\n3.00+2.00i\n=====Test Case 62=====\nSample Input 62\n1 2\nSample Output 62\n3.00+2.00i\n=====",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-10+3i') == '-13+3i'\nassert solution('-1+3i') == '-14+3i'\n=====Constraints=====\nNOTE: \n1 <= |C|, |D| <= 1000\n0 <= A, B <= 1000000\n1 <= A + B <= 1000000\n\nSAMPLE INPUT \n-10+3i\n-1+3i\n====SAMPLE OUTPUT====\n-13+3i\n-14+3i\n'''\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0.00+0.00i\n4.00+3.00i\n-4.00-5.00i''') == '4.00-5.00i'\nprint(solution('''0.00+0.00i\n4.00+3.00i\n-4.00-5.00i'''))\n\n=====Explanation=====\nTest Case 1:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 - 5.00i\nOutput:\n    4.00 - 5.00i\n\nTest Case 2:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 - -5.00i\nOutput:\n    4.00 - 3.00i\n\nTest Case 3:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 + -5.00i\nOutput:\n    4.00 - 5.00i\n\nTest Case 4:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + 5.00i\nOutput:\n    4.00 - 5.00i\n\nTest Case 5:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 - 5.00i\nOutput:\n    0.00 - 3.00i\n\nTest Case 6:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 7:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 - 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 8:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 + -5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 9:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 10:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 + 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 11:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + -5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 12:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 - 5.00i\nOutput:\n    0.00 - 5.00i''') == '4.00 - 5.00i'\nprint(solution('''0.00 + 0.00i\n4.00 + 3.00i\n-4.00 - 5.00i'''))\n\n=====Explanation=====\nTest Case 1:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 - 5.00i\nOutput:\n    4.00 - 5.00i\n\nTest Case 2:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 - -5.00i\nOutput:\n    4.00 - 3.00i\n\nTest Case 3:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 + -5.00i\nOutput:\n    4.00 - 5.00i\n\nTest Case 4:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + 5.00i\nOutput:\n    4.00 - 5.00i\n\nTest Case 5:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 - 5.00i\nOutput:\n    0.00 - 3.00i\n\nTest Case 6:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 7:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 + -5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 8:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 9:\n\nInput:\n    0.00 + 0.00i\n    4.00 + -3.00i\n    -4.00 + 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 10:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + -5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 11:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 - 5.00i\nOutput:\n    0.00 - 5.00i\n\nTest Case 12:\n\nInput:\n    0.00 + 0.00i\n    4.00 + 3.00i\n    -4.00 + 5.00i\nOutput:\n    0.00 - 5.00i\n\n=====SOLUTION=====\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2.00+0.00i\"\nassert solution(input()) == \"-2.00+0.00i\"\nassert solution(input()) == \"0.00+0.00i\"\nassert solution(input()) == \"0.00-0.00i\"\nassert solution(input()) == \"0.00+0.00i\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n-1.234+5.678i\n-2.345+6.890i\n''') == '-2.345+6.890i'\nassert solution('''\n3+4i\n5+6i\n''') == '8+16i'\nassert solution('''\n-1.234+5.678i\n-2.345+6.890i\n''') == '-2.345+6.890i'\nassert solution('''\n-1.234+5.678i\n-2.345+6.890i\n''') == '-2.345+6.890i'\nassert solution('''\n0.01+0.01i\n0.0+0.0i\n''') == '0.0+0.0i'\n=====\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('xyz') == 'xaybzc', 'Expected a string result'\nassert solution('abc') == 'xaybzc', 'Expected a string result'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('xyz') == 'xaybzc'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('xyz') == 'xaybzc', \"Error\"\nassert solution('abc') == 'xaybzc', \"Error\"\nassert solution('wxyz') == 'xaybzc', \"Error\"\nassert solution('abbc') == 'xaybzc', \"Error\"\nassert solution('abcdd') == 'xaybzcdd', \"Error\"\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('xyz') == 'xaybzc', f\"{solution('xyz')} should be 'xaybzc'\"\nassert solution('abc') == 'xaybzc', f\"{solution('abc')} should be 'xaybzc'\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == 'xaybzc'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nprint(solution(input()))\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\nxyz\nabc\n''') == 'xaybzc'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('01B0') == '00'\nprint(solution('01B0'))\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"01B0\") == \"00\"\n\ns = input()\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('01B0') == '00'\nassert solution('00') == '00'\nassert solution('01') == '10'\nassert solution('011') == '11'\nassert solution('111') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''01B0''') == '00'\nassert solution('''01''') == '01'\nassert solution('''0B0''') == '00'\nassert solution('''011''') == '01'\nassert solution('''0B''') == '00'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"01B0\") == \"00\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('01B0') == '00'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''01B0''') == '00'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00'\nassert solution('10B0') == '10'\nassert solution('101B0') == '101'\nassert solution('0000B0') == '0000'\nassert solution('1B0') == '00'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('01B0') == '00'\nassert solution('01B1') == '01'\nassert solution('01B2') == '00'\nassert solution('01B3') == '01'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('01B0') == '00'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\nassert solution('4\\n1 1 1 1\\n') == '1'\nassert solution('3\\n4 2 1\\n') == '2'\n",
        "num_ids_2": 37,
        "num_ids_4": 54
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2,1,5,4,3]) == \"4\"\nassert solution([10,2,9,1,6,4,3,4,5,7,8,10]) == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n5\n3 2 1 4 5\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 2, 1, 5, 4, 3]) == 4\nassert solution([5, 2, 1, 5, 4, 3]) == 5",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '4'\nassert solution('4') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '2'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n') == '3'\nassert solution('5\\n3 2 1 5 4 3\\n') == '5'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\nassert solution('''a\nb\nc''') == 'B'\nassert solution('''ac\naccc\nca''') == 'C'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"aca\\n\"\n    \"accc\\n\"\n    \"ca\"\n) == \"A\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'A'\nprint('You are done!')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n\n\"\"\"\n\nimport collections\n\nAlice = collections.deque()\nBob = collections.deque()\nCharlie = collections.deque()\n\nS_A = list(stdin[0])\nS_B = list(stdin[1])\nS_C = list(stdin[2])\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"3 3 4\") == \"NO\"\nassert solution(\"4 4 7\") == \"YES\"\nassert solution(\"8 8 7\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('2 1 3') == 'NO'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\\n\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n\") == \"NO\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 7') == \"YES\"\nassert solution('3 3 7') == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 7') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 7') == \"YES\"\n\nassert solution('1 2 3') == \"NO\"\n\nassert solution('1 2') == \"NO\"\n\nassert solution('2') == \"NO\"\n\nassert solution('1') == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 2') == 'YES'\nassert solution('8 2 2') == 'NO'\nassert solution('10 10 10') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('3 7 5') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"9 9 9\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '11'\nassert solution('6') == '12'\nassert solution('7') == '13'\nassert solution('8') == '14'\nassert solution('9') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '3\\n'\nassert solution('4\\n') == '4\\n'\nassert solution('5\\n') == '11\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '80'\nassert solution('15') == '83'\nassert solution('20') == '83'\nassert solution('25') == '86'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '11'\nassert solution('20') == '33'\nassert solution('10') == '20'\nassert solution('50') == '6733'\nassert solution('100') == '67334'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n610\n987\n1597\n2584\n4181\n6765''') == '55'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '11'\nassert solution('6') == '13'\nassert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '11'\nassert solution('6') == '12'\nassert solution('7') == '13'\nassert solution('8') == '14'\nassert solution('9') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '11'\nassert solution('15') == '33'\n\nimport sys\nsys.stdin = open('sample_input.txt')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '8'\nassert solution('2') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('2') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"7\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4\\n2\\n') == '7'\nassert solution('1\\n1\\n1\\n') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('2') == '7'\nprint(solution())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n4\n2''') == '7'\nassert solution('''3\n4\n4''') == '10'\nassert solution('''3\n4\n6''') == '21'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '7'\nassert solution('2') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\"\nassert solution(\"2\\n4\\n2\\n\") == \"10\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n0\\n0\\n\") == \"0\"\nassert solution(\"0\\n0\\n0\\n\") == \"0\"\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '12'\nassert solution('2') == '10'\nassert solution('3') == '7'\nassert solution('4') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '11', solution('3')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\") == \"11\"\nassert solution(\"10\\n4\\n5\") == \"9\"\nassert solution(\"100\\n7\\n8\") == \"33\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == ''\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"11\"\nassert solution(\"3 3 3\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n''') == '11', 'Should be 11'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '10'\n\n\"\"\"\n\n##############################################################################",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3\\n') == '11'\nassert solution('5\\n1 2 3 5\\n') == '9'\nassert solution('8\\n1 2 3 4 5 6 7\\n') == '28'\nassert solution('5\\n1 2 3 4 5\\n') == '15'",
        "num_ids_2": 35,
        "num_ids_4": 75
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"11\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '9'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"7 3 2\") == \"YES\"\nassert solution(\"7 5 2\") == \"NO\"\nassert solution(\"3 9 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"4 3 2\") == \"YES\"\nassert solution(r\"4 4 5\") == \"NO\"\n\"\"\"\nimport sys\nimport re\n\nprint(sys.version_info)\nprint(sys.version)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('123 456') == 'NO'\nassert solution('5 1 2') == 'NO'\nassert solution('123 456 789') == 'YES'\nassert solution('34 3 5') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('4 4 2') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 4') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"2 2 2\") == \"NO\"\nassert solution(\"1 2 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 2') == \"YES\"\nassert solution('1234') == \"YES\"\nassert solution('123') == \"NO\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 6 7\") == \"NO\"\nassert solution(\"6 4 2\") == \"YES\"\nassert solution(\"8 4 2\") == \"NO\"\nassert solution(\"4 3 0\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 4 3 2\") == \"NO\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 4 4\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 11') == '30'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '13'\nassert solution('5 3 11\\n3') == '11'\nassert solution('5 3 11\\n4') == '10'\nassert solution('5 3 11\\n5') == '10'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"10\"\nassert solution(\"1 5\") == \"10\"\nassert solution(\"1 5 3\") == \"10\"\nassert solution(\"1 5 3 7\") == \"15\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 11\\n1\\n') == '30'\nassert solution('3 5 11\\n1\\n') == '30'\nassert solution('3 11 5\\n1\\n') == '30'\nassert solution('5 3 11\\n1\\n') == '30'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n2\") == \"30\"\nassert solution(\"5 3 11\\n3\") == \"42\"\nassert solution(\"5 3 11\\n4\") == \"37\"\nassert solution(\"5 3 11\\n5\") == \"52\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 11') == '30'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"123456\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"cacabc\") == \"No\"\nassert solution(\"cacabca\") == \"Yes\"\nassert solution(\"\") == \"No\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abaccaba') == 'Yes'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"bac\") == \"No\"\nassert solution(\"\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"ababababababababababab\") == \"No\"\nassert solution(\"abba\") == \"Yes\"\nassert solution(\"acacacacacac\") == \"Yes\"\n",
        "num_ids_2": 32,
        "num_ids_4": 57
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abc') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abaccaba') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abcbabab\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 1\n2 2\n3 3\n\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution('''4 4\n1 1\n2 2\n3 3\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == '3'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3') == '3'\nassert solution('3 1\\n1 1\\n2 2\\n3 3') == '2'\nassert solution('1 4\\n2 3\\n1 4\\n2 3') == '4'\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n2 4\\n1 2\\n') == '2'\nassert solution('3 4\\n1 1\\n2 2\\n') == '1'\nassert solution('3 4\\n1 1\\n2 2\\n') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\n2 2\n3 3\n''') == \"3\"\n\nassert solution('''2 5\n1 2\n3 5\n''') == \"1\"\n\nassert solution('''1 5\n1 1\n5 5\n''') == \"5\"\n\nassert solution('''9 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 3') == '3'\nassert solution('2 4') == '5'\nassert solution('3 3') == '5'\nassert solution('6 4') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n''') == '2'\nassert solution('''4 4\n''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\n\n\"\"\"\n\nimport math\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"10\"\n\"\"\"\n\nN, K = map(int, stdin.readline().split())\ncnt = 0",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('10 2') == '7'\nassert solution('12 4') == '35'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"\n\nIn your first submission, you should pass the following test:",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n0 0 1\n0 1 0\n1 1 0''') == '2'\nassert solution('''5 2\n0 0 0 1 0\n0 0 1 0 0''') == '1'\nassert solution('''5 2\n0 0 0 1 0\n0 0 0 0 1''') == '2'\nassert solution('''5 2\n1 0 0 0 1\n1 0 0 1 0''') == '0'\nassert solution('''5 2\n0 0 0 0 1\n0 0 0 0 0''') == '1'\n'''\nclass Solution:\n    def solution(self, N, K):\n        if N <= 0 or K <= 0:\n            return 0\n        MOD = pow(2,31) - 1\n\n        dp = [[0] * (K+1) for _ in range(N+1)]\n        dp[0][0] = 1\n        for i in range(1, N+1):\n            for j in range(1, K+1):\n                for k in range(j-1, -1, -1):\n                    dp[i][j] = (dp[i][j] + dp[i-1][k]) % MOD\n        return dp[N][K]\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2'\nassert solution('5 5') == '3'\nassert solution('10000 100000') == '5'\nassert solution('1000000 10000000') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 3') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 3') == '10'\nassert solution('2 6') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 3\\n5 10 15') == '10'\nassert solution('20 4\\n5 10 15 5\\n1 2 3\\n3 4 5\\n7 8 9') == '2'\nassert solution('20 4\\n5 10 15 5\\n1 2 3\\n3 4 5\\n7 8 9') == '2'\nassert solution('20 4\\n5 10 15 5\\n1 2 3\\n3 4 5\\n7 8 9') == '2'\nassert solution('20 4\\n5 10 15 5\\n1 2 3\\n3 4 5\\n7 8 9') == '2'\n",
        "num_ids_2": 48,
        "num_ids_4": 112
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"0\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"20 4\") == \"8\"\nassert solution(\"20 4\") == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 3\\n5 10 15') == '10'\nassert solution('1 2 3 4\\n5 8 9 6') == '18'\nassert solution('5 1 2 3 4\\n1 3 2 4 5') == '8'\nassert solution('5 1 2 3 4\\n5 4 3 2 1') == '15'\n",
        "num_ids_2": 35,
        "num_ids_4": 77
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"20 3\"\n    ) == \"10\"\n\nassert solution(\n    \"20 3\"\n    ) == \"10\"\n\nassert solution(\n    \"20 3\"\n    ) == \"10\"\n\nassert solution(\n    \"20 3\"\n    ) == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 3\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"10\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"30 5\") == \"20\"\nassert solution(\"3 2\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '6'\nassert solution('3 5 2 7') == '15'\nassert solution('3 5 3 7') == '15'\nassert solution('5 5 5 5') == '25'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"5 2 7 3\") == \"15\"\nassert solution(\"5 2 7 3 4\") == \"8\"\nassert solution(\"5 2 7 3 4 5\") == \"8\"\n\n\"\"\",\"\"\"\n\nTask\n\nGiven a string, S, of length N that is indexed from 0 to N-1, print its even-indexed and odd-indexed characters as 2 space-separated strings on a single line (see the Sample below for more detail).\n\nNote: 0 is considered to be an even index.\n\nInput Format\n\nThe first line contains an integer, T (the number of test cases).\nThe T subsequent lines each contain a String, S.\nOutput Format\n\nFor each String S, print the characters of S in order, as follows:\nOn the first line, print the 2 spaces separated even indexes of S, followed by the 2 spaces separated odd indexes of S.\nOn the second line, print the 2 spaces separated even indexes of S, followed by the 2 spaces separated odd indexes of S.\nOn the third line, print the 2 spaces separated even indexes of S, followed by the 2 spaces separated odd indexes of S.\nConstraints\n\n1\u2264T\u2264100\n1\u2264N\u2264107\nSubtasks\nSubtask #1 (20 points): Original constraints\n\nfor nt in range(T):\n    S = input()\n    print(*[\" \"*4, *[S[2*i] + S[2*i+1] for i in range(0,len(S),2)])\n\nSample Output\n\nCase #1\n\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\nCase #2\n\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\nSample Input 0\n\n2\n0 1 2 3 4 5 6\n1 2 3 4 5 6 7\nSample Output 0\n\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\nExplanation 0\n\nIn Sample Case #1, S is given as follows:\n\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\n0 1 2 3 4 5 6\nS is \"01234567\"\nOn the first line, print the 2 spaces separated even indexes of S, followed by the 2 spaces separated odd indexes of S.\nOn the second line, print the 2 spaces separated even indexes of S, followed by the 2 spaces separated odd indexes of S.\nOn the third line, print the 2 spaces separated even indexes of S, followed by the 2 spaces separated odd indexes of S.\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 2\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5 2 7\n1 2 3 4 5''') == '18'\nassert solution('''3 5 2 7\n2 1 3 4 5''') == '18'\nassert solution('''1 1 2\n3 1 3\n1 3 2''') == '6'\nassert solution('''1 2 3 4 5\n1 2 3 4 5''') == '6'\nassert solution('''1 2 3\n3 2 3\n1 2 3''') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 4 5') == '6'\nassert solution('1 2 3 4') == '4'\nassert solution('4 2 3 5') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 4 5') == '6'\nassert solution('3 5 2 7') == '15'\nassert solution('1 0 0 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,5,2,7]) == '15', \"Should be '15'\"\nassert solution([1,2,3,4]) == '12', \"Should be '12'\"\nassert solution([1,1,1,1]) == '1', \"Should be '1'\"\nassert solution([2,1,1,1]) == '1', \"Should be '1'\"\nassert solution([3,4,3,4]) == '9', \"Should be '9'\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 2 7\n3 5 2 7\n''') == '15'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('4 4 4 4') == '16'\nassert solution('5 5 5 5') == '10'\nassert solution('4 6 6 6') == '12'\nassert solution('3 3 3 3') == '9'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nAC\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nAC') == 'AC x 3'\nassert solution('6\\nAC\\nWA\\nWA\\nTLE\\nWA') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n\nfor i in range(int(stdin)):\n    pass\n\n\n//\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n\"\"\"\n\nN = int(input())\nstudent_marks = {}\nfor _ in range(N):\n    name, *line = input().split()\n    scores = list(map(float, line))\n    student_marks[name] = scores\nquery_name = input()\nprint(f'{student_marks[query_name][0]*100:.2f}')\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"6\") == \"WA x 1\"\nassert solution(\"6\") == \"TLE x 2\"\nassert solution(\"6\") == \"RE x 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'AC x 3'\nassert solution('2') == 'WA x 1'\nassert solution('1') == 'TLE x 2'\nassert solution('0') == 'RE x 0'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nAC\\nWA\\nAC\\nWA\\nAC') == 'AC x 3'\nassert solution('4\\nAC\\nWA\\nAC\\nWA') == 'AC x 1'\nassert solution('3\\nAC\\nWA\\nAC') == 'WA x 1'\n",
        "num_ids_2": 51,
        "num_ids_4": 72
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'WA'\nassert solution('1') == 'AC'\nassert solution('2') == 'WA'\nassert solution('0') == 'AC'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n20\n''') == '28'\n\nassert solution('''\n21\n''') == '27'\n\nassert solution('''\n22\n''') == '26'\n\nassert solution('''\n23\n''') == '25'\n\nassert solution('''\n24\n''') == '24'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('21') == '27'\nassert solution('22') == '28'\nassert solution('23') == '31'\nassert solution('24') == '28'\nassert solution('25') == '31'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"22\") == \"28\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('21') == '27'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT) == \"27\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"21\\n\") == \"27\"\nassert solution(\"12\\n\") == \"24\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '11'\nassert solution('12') == '11'\nassert solution('19') == '19'\nassert solution('19') == '19'\nassert solution('21') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"24\") == \"6\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '2'\nassert solution('11') == '3'\nassert solution('23') == '6'\nassert solution('24') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '7'\nassert solution('10') == '7'\nassert solution('12') == '6'\nassert solution('00') == '00'\nassert solution('03') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '10'\nassert solution('5 7') == 'error'\nassert solution('10 12') == '18'\nassert solution('15 16') == 'error'\nassert solution('1 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == '1 1', \"Wrong\"\nassert solution(\"2 3\") == '4', \"Wrong\"\nassert solution(\"10 10\") == 'error', \"Wrong\"\nassert solution(\"10 1\") == '11', \"Wrong\"\nassert solution(\"1 1\") == '2', \"Wrong\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"4\"\nassert solution(\"7 7\") == \"14\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 2') == 'error'\nassert solution('1 3') == 'error'\nassert solution('3 3') == 'error'\nassert solution('4 3') == 'error'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"error\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '9'\nassert solution('0 1') == '1'\nassert solution('-1 -2') == 'error'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1 2\", 'Wrong result'\nassert solution(\"5 3\") == \"7\", 'Wrong result'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '10'\nassert solution('1 2') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '3', \"3\"\nassert solution('10 4') == '10', \"10\"\nassert solution('0 0') == '0', \"0\"\nassert solution('4 4') == '8', \"8\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 3 7 9\") == \"7\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([6, 8]) == 11\nassert solution([20, 10, 2, 8, 3]) == 20\nassert solution([-3, 1, 5, 2, 4]) == 6",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"11\"\nassert solution(\"6\") == \"11\"\nassert solution(\"7\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"7\"\nassert solution(\"4\") == \"7\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"7\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '7'\nassert solution('5') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n2 3 7 9\n''') == '7'\nassert solution('''3\n2 4 8\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n2 3 7 9''') == '7'\nassert solution('''6\n1 2 4 3 5 6''') == '3'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 4\") == \"No\"\nassert solution(\"1 5\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 1') == 'No'\nassert solution('3 1') == 'No'\nassert solution('4 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"1 5\") == \"Yes\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"3 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 3\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12''') == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3\n''') == 'Yes'\nassert solution('''\n2 1\n''') == 'No'\nassert solution('''\n3 5\n''') == 'No'\nassert solution('''\n3 5\n''') == 'Yes'\nassert solution('''\n2 4\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"3 5\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'Yes','sample_input'\nassert solution('2 2') == 'Yes','sample_input'\nassert solution('1 1') == 'No','sample_input'\nassert solution('1 3') == 'Yes','sample_input'\nassert solution('3 3') == 'Yes','sample_input'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('3 1') == 'Yes'\nassert solution('4 1') == 'No'\nassert solution('5 2') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == 'Even'\nassert solution('3\\n4') == 'Odd'\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Even\"\nassert solution(\"0 1\") == \"Odd\"\nassert solution(\"1 0\") == \"Odd\"\nassert solution(\"-1 0\") == \"Even\"\nassert solution(\"1 -1\") == \"Odd\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('2 5') == 'Odd'\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('1 2') == 'Odd'\nassert solution('1 3') == 'Odd'\nassert solution('100 100') == 'Even'\nassert solution('10 5') == 'Odd'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Even', 'Wrong answer'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Odd'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Even'\nassert solution('4') == 'Even'",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Even\"\nassert solution(\"5 3\") == \"Odd\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'Even'\nassert solution('1 2') == 'Odd'\nassert solution('1 10') == 'Even'\nassert solution('9 9') == 'Even'\nassert solution('6 7') == 'Odd'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == 'Even', '1st Testcase Failed'\nassert solution('5 6') == 'Odd', '2nd Testcase Failed'\nassert solution('5 2') == 'Even', '3rd Testcase Failed'\nassert solution('10 7') == 'Odd', '4th Testcase Failed'\nassert solution('10 10') == 'Even', '5th Testcase Failed'\n",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('1 2') == 'Even'\nassert solution('1') == 'Even'\nassert solution('0') == 'Even'\nassert solution('-1 -2') == 'Even'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n11 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n11 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7 6\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"10 6\") == \"3\"\nassert solution(\"20 10\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"3 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 6\n    ''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\n\nfrom itertools import permutations\n\nn, m = list(map(int, stdin.split()))\n\ntotal = 0\n\nfor first in permutations([x for x in range(1, n + 1)]):\n    second = [x for x in range(1, n + 1)]\n    for i in range(m):\n        second.remove(first[i])\n    total += len(list(set(first) & set(second)))\n\nprint(total)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"4 6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2\n2 1\n2 1''') == '2'\nassert solution('''1 5\n5 1\n5 1\n5 1\n5 1''') == '2'\nassert solution('''10 9\n9 1\n9 1\n9 1\n9 1\n9 1\n9 1\n9 1''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 6') == '2'\nassert solution('1 7') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\\n2\") == \"6\\n9\"\nassert solution(\"1\\n1\\n2\\n1\\n2\\n3\\n2\\n\") == \"6\\n9\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"6 9\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\\n9\\n\"\nassert solution(\"3\") == \"6\\n9\\n\"\nassert solution(\"6\") == \"36\\n\"\nassert solution(\"3\") == \"6\\n9\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6 9\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6 9\"\nassert solution(\"10\") == \"36 18\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 1 4\n2\n1 1\n2 3\n''') == '6 9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 4') == '6'\nassert solution('2') == '9'\nassert solution('1 1') == '1'\nassert solution('2 3') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6\\n9'\nassert solution('1') == '0\\n0'\n\"\"\"\n\nimport math\n\nn = int(stdin.readline())\nproblems = [[int(i) for i in stdin.readline().split()] for _ in range(n)]\n\ndrinks = [int(i) for i in stdin.readline().split()]",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6 9'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"2 1\") == \"2 1\"\nassert solution(\"2 1 2\") == \"2 2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 38
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 9') == '2000'\nassert solution('10000 4') == '3000'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1324 76') == '2033'\nassert solution('1 2 3 4 5 6 7 8 9') == '18'\n",
        "num_ids_2": 24,
        "num_ids_4": 42
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 2\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 4\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 10\\n1 2 3 4 5 6 7 8 9 10') == '2000'\nassert solution('1000 20\\n1 2 3 4 5 6 7 8 9 10') == '2000'\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"5 1 2 3 4 5 6 7 8 9\") == \"10000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 8\n1 3 4 5 6 7 8 9 1 2\n''') == '2000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('200 100') == '200'\nassert solution('1 2 3 4 5 6 7 8 9') == '10'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '2'\nassert solution('10000 999') == '99999'",
        "num_ids_2": 22,
        "num_ids_4": 59
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '2000'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1000 8\n1 3 4 5 6 7 8 9''') == '2000'\nassert solution('''2000 8\n1 3 4 5 6 7 8 9''') == '2000'\nassert solution('''11 5\n1 2 3 4 5 6 7 8 9''') == '11'\nassert solution('''1500 8\n1 3 4 5 6 7 8 9''') == '1500'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"100 500\") == \"10000\"\nassert solution(\"1000000 10\") == \"1000001\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1000 8\n1 3 4 5 6 7 8 9\n''') == '2000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\\n3 5 6\\n5 6\\n7 8\\n9 10\\n10 9\\n11 12\\n8 9\\n8 10\\n10 11\\n9 12\\n11 13\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 39\\n39 40\\n40 41\\n41 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n45 48\\n46 49\\n47 50\\n47 51\\n50 52\\n50 53\\n53 54\\n54 55\\n55 56\\n55 57\\n56 58\\n57 59\\n58 60\\n57 61\\n56 62\\n55 63\\n54 64\\n53 65\\n52 66\\n51 67\\n50 68\\n49 69\\n48 70\\n47 71\\n46 72\\n45 73\\n44 74\\n43 75\\n42 76\\n41 77\\n40 78\\n39 79\\n38 80\\n37 81\\n36 82\\n35 83\\n34 84\\n33 85\\n32 86\\n31 87\\n30 88\\n29 89\\n28 90\\n27 91\\n26 92\\n25 93\\n24 94\\n23 95\\n22 96\\n21 97\\n20 98\\n19 99\") == \"3\"\nassert solution(\"20 20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n2 3 4\\n2 5 6\\n3 7\\n5 8\\n7 8\\n8 9\\n9 10\\n10 11\\n10 12\\n11 13\\n13 14\\n15 16\\n17 18\\n18 19\\n19 20\\n20 20\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n",
        "num_ids_2": 449,
        "num_ids_4": 1497
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"8 8\") == \"2\"\n\n\"\"\"\n\nimport unittest\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '2'\nassert solution('4 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 3') == '1'\nassert solution('2 3') == '2'\nassert solution('2 4') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\n''') == \"2\"\n\nassert solution('''1 2\n1 2\n1 3\n\n''') == \"0\"\n\nassert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\n''') == \"2\"\n\nassert solution('''5 2\n1 3 2 4 1\n2 4 3\n3 4 1\n4 2\n5 3\n\n''') == \"2\"\n\nassert solution('''4 2\n1 2 3 4\n1 3\n2 3\n2 4\n\n''') == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3\\n2 4\") == \"0\"",
        "num_ids_2": 58,
        "num_ids_4": 83
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"5 5\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n2 5\\n\") == \"0\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('6 5') == '0'\nassert solution('10 10') == '5'\n\nimport sys\nimport os\nfrom io import StringIO\n\nclass Capturing(list):\n    def __enter__(self):\n        self._stdout = sys.stdout\n        sys.stdout = self._stringio = StringIO()\n        return self\n    def __exit__(self, *args):\n        self.extend(self._stringio.getvalue().splitlines())\n        del self._stringio    # free up some memory\n        sys.stdout = self._stdout\n\nimport sys\nimport os\nfrom io import StringIO\n\nclass Capturing(list):\n    def __enter__(self):\n        self._stdout = sys.stdout\n        sys.stdout = self._stringio = StringIO()\n        return self\n    def __exit__(self, *args):\n        self.extend(self._stringio.getvalue().splitlines())\n        del self._stringio    # free up some memory\n        sys.stdout = self._stdout",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 3 4\n1 3\n2 3\n2 4\n\n''') == '2'\nassert solution('''5 5\n1 2 3 4 5\n1 3 4 2\n1 5\n2 4 5\n3 5\n''') == '2'\nassert solution('''4 4\n1 2 3 4\n1 3\n2 3\n2 4\n\n''') == '0'\nassert solution('''5 5\n1 2 3 4 5\n1 3 4 2\n1 5\n2 4 5\n3 5\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\", \"1\"\nassert solution(\"4\") == \"10\", \"4\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('4') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n\") == \"10\"\nassert solution(\"1\\n5\\n\") == \"6\"\nassert solution(\"1\\n10\\n\") == \"100\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"100\") == \"100\"\nassert solution(\"10\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '10'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\") == \"4\"\nassert solution(\"7\\n2\") == \"8\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '10'\nassert solution('4') == '16'\nassert solution('5') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"9\"\nassert solution(\"6\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '10'\nassert solution('4') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == '0'\nassert solution(0) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\nassert solution('-1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1.1') == '0'\nassert solution('0.0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '0', 'Sample Test 1 Fail'\nassert solution('1') == '1', 'Sample Test 1 Fail'\nassert solution('0.1') == '0', 'Sample Test 1 Fail'\n",
        "num_ids_2": 32,
        "num_ids_4": 50
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\", \"Test 1 Failed\"\nassert solution(\"0\") == \"1\", \"Test 2 Failed\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0', \"Wrong answer with input 0\"\nassert solution('1') == '0', \"Wrong answer with input 1\"\nprint(solution(input()))\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"3\") == \"3\"\nassert solution(\"\") == \"\"\nassert solution(\"32\") == \"32\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12\") == \"\"\nassert solution(\"1221\") == \"\"\nassert solution(\"12+21\") == \"\"\nassert solution(\"123\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 34
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1111\") == \"1111\"\nassert solution(\"2-5+7-3\") == \"9\"\nassert solution(\"1111-2-5+7-3\") == \"9\"\nassert solution(\"1+2+3+4+5\") == \"15\"\n",
        "num_ids_2": 20,
        "num_ids_4": 54
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('125') == '176'\nassert solution('2') == '2'\n\"\"\"\nimport re\nimport itertools\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('125') == '176'\nassert solution('12') == '26'\nassert solution('5') == '11'\nassert solution('2') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('125') == '176'\nassert solution('1+2') == '3'\nassert solution('12+5') == '17'\nassert solution('1+2+3+4') == '10'\n\nassert solution('5+6') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"125\") == '176'\nassert solution(\"1234\") == '1234'\nassert solution(\"12345\") == '12345'\nassert solution(\"123456\") == '123456'\n\n\"\"\"\n\nsolution = lambda: None",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('125') == '176'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6\\n\" +\n    \"1 2 3 4 5 6\"\n) == \"1\"\n\n\"\"\"\nfrom collections import deque\n\nn = int(input())\na = list(map(int, input().split()))\n\nsnuke_heap = deque()\nracoon_heap = deque()\n\nfor i in range(n):\n    if i < n // 2:\n        snuke_heap.appendleft(a[i])\n    else:\n        racoon_heap.appendleft(a[i])\n\nracoon_heap.extendleft(snuke_heap)\n\nx, y = 0, 0\nwhile len(racoon_heap) > 0:\n    x += racoon_heap.pop()\n    y += snuke_heap.pop()\n\nprint(abs(x-y))",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == \"1\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nsum_of_a = sum(a)\nsum_of_n = sum(range(1, n+1))\n\nprint(min(abs(sum_of_a - sum_of_n), abs(sum_of_a - sum_of_n - sum(a))))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['3\\n', '1 2 3 4 5 6\\n']) == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"2 3 5 8 9 10\") == \"1\"\nassert solution(\"5 7 6 2 4 3\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8\") == \"7\"",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20') == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1000000'\nassert solution('10') == '250000'\nassert solution('20') == '150000'\nassert solution('30') == '250000'\nassert solution('30') == '150000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '16000'\nassert solution('20') == '15800'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n''') == '15800'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20') == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"15800\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''20\n''') == '16000'\nassert solution('''4\n''') == '1600'\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '16000'\nassert solution('3') == '16000'\nassert solution('4') == '200'\nassert solution('5') == '200'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '17'\nassert solution('6') == '22'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ant\") == \"abc\", \"Input: ant, Output: abc\"\nassert solution(\"obe\") == \"abc\", \"Input: obe, Output: abc\"\nassert solution(\"rec\") == \"abc\", \"Input: rec, Output: abc\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '', \"Assertion Error: None\"\nassert solution(\"\") == '', \"Assertion Error: ''\"\nassert solution(\"a\") == \"a\", \"Assertion Error: 'a'\"\nassert solution(\"ab\") == \"ab\", \"Assertion Error: 'ab'\"\nassert solution(\"abc\") == \"abc\", \"Assertion Error: 'abc'\"\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ant\") == \"abc\", \"Should be abc\"\nassert solution(\"obe\") == \"rec\", \"Should be rec\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''ant\nobe\nrec''') == 'abc'\nassert solution('''abcd\neefg''') == 'efge'\nassert solution('''fghi\njklm''') == 'jkli'\nassert solution('''abc\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n\n## OR ##",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '', 'Empty input'\nassert solution('be') == 'abc', 'One letter'\nassert solution('abd') == 'abdc', 'Three letters'\nassert solution('db') == 'dcb', 'Three words'\nassert solution('bd') == 'bdc', 'Three words'\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '2'\nassert solution('010') == '0'\n\n\n\n\n---",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101') == '2'\nassert solution('1111') == '4'\nassert solution('1011') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"101\") == \"2\"\nassert solution(\"101010\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"101\") == '2'\nassert solution(\"001\") == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n101\n''') == '2'\nassert solution('''\n101\n''') == '1'\nassert solution('''\n100\n''') == '3'\nassert solution('''\n100\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == \"2\"\nassert solution('010') == \"1\"\nassert solution('110') == \"3\"\nassert solution('001') == \"2\"\nassert solution('011') == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('101') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3\n10000\n9000\n''') == '48000', \"Should be 48000\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '48000'\nassert solution('3') == '48000'\nassert solution('4') == '4000'\nassert solution('2') == '2000'\nassert solution('10000') == '48000'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n10000\n9000''') == '48000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"48000\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000'\nassert solution('5\\n3\\n1000\\n9000\\n') == '15000'\nassert solution('5\\n3\\n1000\\n9000\\n') == '20000'\nassert solution('5\\n3\\n1000\\n9000\\n') == '25000'\nassert solution('5\\n3\\n1000\\n9000\\n') == '30000'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '48000'\nassert solution('6') == '147000'\nassert solution('7') == '99999'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n10000\\n9000\") == \"48000\"\nassert solution(\"2\\n1\\n10000\\n9000\") == \"48000\"\nassert solution(\"3\\n1\\n10000\\n9000\") == \"48000\"\nassert solution(\"4\\n1\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n1\\n10000\\n9000\") == \"48000\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10000\\n9000\") == \"48000\"\nassert solution(\"3\\n4\\n10000\\n9000\") == \"40150\"\nassert solution(\"3\\n3\\n10000\\n9000\") == \"40150\"\nassert solution(\"3\\n2\\n10000\\n9000\") == \"40150\"\nassert solution(\"3\\n1\\n10000\\n9000\") == \"40150\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '48000'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\\n3\\n10000\\n9000\"\n) == \"48000\"\n\nassert solution(\n    \"5\\n4\\n9000\\n9000\\n9000\"\n) == \"500000\"\n\nassert solution(\n    \"5\\n3\\n10\\n7\\n2\\n2\\n5\\n2\\n3\\n8\\n7\\n\"\n) == \"159000\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 - 2 + 2\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"2 / 2\") == \"1\"\nassert solution(\"2 // 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 + 2') == '3'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '1'\nassert solution('1 * 2') == '2'\nassert solution('2 + 2') == '4'\nassert solution('2 - 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 + 2\n    ''') == '3'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"-1\"\nassert solution(\"2 - 2\") == \"0\"\nassert solution(\"-1 - 1\") == \"-2\"\nassert solution(\"-3 + 2\") == \"-5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 / 2\") == \"0.5\"\nassert solution(\"2 + 2\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"-1 - 2\") == \"1\"\nassert solution(\"2 + -2\") == \"0\"\nassert solution(\"1 - 2\") == \"-1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('2 + 2') == '4'\nassert solution('1 + 2') == '3'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 + 2') == '3'\nprint(solution('1 + 2'))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"1200\") == \"ARC\"\nassert solution(\"1201\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000') == 'ABC', \"Wrong result\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\nassert solution('1501') == 'ABC'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"1234\") == \"ARC\"\nassert solution(\"12\") == \"ARC\"\nassert solution(\"\") == \"ABC\"\nassert solution(\"3\") == \"ABC\"\n",
        "num_ids_2": 21,
        "num_ids_4": 40
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input('1000\\n')) == 'ARC'\nassert solution(input('10\\n')) == 'ARC'\n",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1) == 'ARC'\nassert solution(1) == 'ARC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('600') == 'ARC'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('-1') == 'ARC'\nassert solution('200') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('12') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([700, 600, 780]) == '1300'\nassert solution([1000, 100, 1000]) == '1300'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n700 600 780\n''') == '1300'\nassert solution('''\n100 200 300\n''') == '1020'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"1000 2000 3000\") == \"1810\"\nassert solution(\"2000 2000 2000\") == \"2000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n700 600 780\n''') == '1300'\nassert solution('''\n50 50 100\n''') == '200'\nassert solution('''\n500 500 700\n''') == '1300'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n700 600 780\n''') == '1300'\n\n\"\"\"\n\nfrom itertools import combinations",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('700 600 780\\n') == '1300'\nassert solution('700 600 780\\n') == '1300'\nassert solution('700 600 780\\n') == '1300'\nassert solution('700 600 780\\n') == '1300'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''a b c\n700 600 780''') == '1300'\nassert solution('''a b c\n500 600 500''') == '1480'\nassert solution('''a b c\n100 100 100''') == '1620'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1300'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n700 600 780\n\"\"\") == \"1300\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('10 20 30') == '5'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\nabc\\narc\\n') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '#'\nassert solution('2') == '#'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"#####\"\nassert solution(\"2\\n\") == \"#####\"\nassert solution(\"3\\n\") == \"#####\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nabc\\narc\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"1 3\\n#\\n\") == \"#\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '#####'\nassert solution('2') == '####'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#####\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('D') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('2\\nII') == '2'\nassert solution('1\\nDD') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('3\\nIIII') == '2'\nassert solution('2\\nIIDI') == '3'\nassert solution('5\\nIIDIDIIDID') == '3'\nassert solution('6\\nIIIIIIIIII') == '4'\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"10\\nIIDID\") == \"1\"\nassert solution(\"5\\nIIDID\") == \"2\"\n\"\"\"\nn = int(input())\ns = input()\n\nx = 0\nfor i in range(n):\n    if s[i] == \"I\":\n        x += 1\n    elif s[i] == \"D\":\n        x -= 1\nprint(x)",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nIIDID\\n') == '2'\nassert solution('6\\nIIIIIDD\\n') == '3'\nassert solution('10\\nIIIIIIIIIIIIIDD\\n') == '6'\nassert solution('10\\nIIDIDDIDIDIDI\\n') == '5'\n",
        "num_ids_2": 35,
        "num_ids_4": 79
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4\nIIDID\n\"\"\") == \"2\"\nassert solution(\"\"\"8\nIIDIDIDDDIIDIDD\n\"\"\") == \"6\"\n\nassert solution(\"\"\"1\nI\n\"\"\") == \"1\"\nassert solution(\"\"\"1\nI\n\"\"\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11009 11332') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''11009 11332''') == \"4\"\nassert solution('''3040 30508''') == \"4\"\nassert solution('''1000000 1000000''') == \"4\"\nassert solution('''10 20 30 40 50''') == \"4\"\nassert solution('''10 20 30 40 50''') == \"4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11009 11332') == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"1\",\"1\"]) == \"1\"\nassert solution([\"2\",\"1\"]) == \"1\"\nassert solution([\"3\",\"2\"]) == \"2\"\nassert solution([\"4\",\"3\"]) == \"2\"\nassert solution([\"5\",\"4\"]) == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11009 11332') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '4'\nassert solution('11009 11332') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"1230\") == \"1\"\nassert solution(\"1315\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('1 1 1') == '3'\nassert solution('2 2 2') == '3'\nassert solution('1 1 2') == '3'\nassert solution('2 1 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('7 5 2') == '2'\nassert solution('9 9 9') == '1'\nprint('You passed all tests')\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('3 4 5') == '3'\nassert solution('2 1 2') == '2'\nassert solution('1 2 2 3') == '3'\nassert solution('1 3 3 4 5') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('2 3 2') == '2'\nassert solution('4 2 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 4\n''') == '3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 4\\n') == '3'\nassert solution('1 1 4\\n') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('1 2 3') == '4'\nassert solution('1 1 1') == '2'\nassert solution('3 1 2') == '2'\nassert solution('4 4 4') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 4') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('3 2 3') == '3'\nassert solution('6 1 3') == '3'\nassert solution('4 1 2') == '3'\nassert solution('6 1 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n') == '12'\n\"\"\"\n\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1') == '1'\nassert solution('3 2') == '3'\nassert solution('5 2') == '4'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '7'\nassert solution('5') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '12'\n\"\"\"\n\nn, k = map(int, stdin.split())\nl = list(map(int, stdin.split()))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\nprint(solution(__import__('sys').stdin.read()))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '12'\nassert solution('5 3') == '12'\nassert solution('5 1') == '10'\nassert solution('5 6') == '15'\nassert solution('7 5') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '12'\nassert solution('5 3') == '12'\nassert solution('4 4 4') == '8'\nassert solution('1 2 3 4 5') == '12'\nassert solution
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 7') == 'B'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 7''') == 'B'\nassert solution('''10 3 9''') == 'A'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '2', 'Sample'\nassert solution('4 5 5') == '5', 'Sample'\nassert solution('10 5 10') == '10', 'Sample'\nassert solution('1000 1000 1000') == '1000', 'Sample'\nassert solution('5 5 5') == '5', 'Sample'\n\"\"\"\n\nx, a, b = (int(i) for i in input().split())",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"10 10 10\") == \"A\"\nassert solution(\"1 1 1\") == \"A\"\nassert solution(\"1 1 2\") == \"A\"\nassert solution(\"1 2 1\") == \"A\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 7\n''') == 'B'\nassert solution('''\n5 1 7\n''') == 'A'\nassert solution('''\n7 7 7\n''') == 'A'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'B'\nassert solution('5 2 7') == 'B'\nassert solution('10 7 3') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 7\\n') == 'B'\nassert solution('0 0 0\\n') == 'A'\nassert solution('50 50 0\\n') == 'A'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2 7') == 'B'\nassert solution('3 2 7') == 'A'\nassert solution('2 1 7') == 'A'\nassert solution('1 1 7') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('0 3 5') == 'A'\nassert solution('1 3 5') == 'B'\nassert solution('0 0 0') == 'B'\nassert solution('1 1 1') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"5 6 7\") == \"A\"\nassert solution(\"5 1 7\") == \"A\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/29\") == \"2018/01/29\"\nassert solution(\"2017/01/03\") == \"2018/01/03\"\nassert solution(\"2017/01/12\") == \"2018/01/12\"\nassert solution(\"2017/01/29\") == \"2017/01/29\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/01\") == \"2018/01/01\"\nassert solution(\"2017/02/01\") == \"2017/02/01\"\nassert solution(\"2017/12/31\") == \"2017/12/31\"\nassert solution(\"2018/01/01\") == \"2018/01/01\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/03\") == \"2018/01/03\"\nassert solution(\"2017/01/02\") == \"2018/01/02\"\nassert solution(\"2017/01/20\") == \"2018/01/20\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2018/01/07'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/1/7\") == \"2018/1/7\"\nassert solution(\"2017/01/6\") == \"2018/01/6\"\nassert solution(\"2017/12/31\") == \"2018/12/31\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/02/07') == '2018/02/07'\nassert solution('2017/03/07') == '2018/03/07'\nassert solution('2017/04/07') == '2018/04/07'\nassert solution('2017/05/07') == '2018/05/07'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"\"\nassert solution(\"2\\n\") == \"\"\nassert solution(\"3\\n\") == \"\"\nassert solution(\"4\\n\") == \"\"\n\nstdin = \"\"\"\n5\npqe\nasdf\nqwer\nfdsa\ndvds\n\"\"\"\n\nprint(solution(stdin))\n\n\"\"\"\nSOLUTION\nCODE INSTRUCTIONS\n\nSOLUTION\n\n######  START CODE HERE  ######\n\n###### END CODE HERE  ######\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n' 'cbaa') == 'aac'\nassert solution('3\\n' 'daacc') == 'aac'\nassert solution('3\\n' 'acacac') == 'aca'\nassert solution('3\\n' 'bbb') == ''\n",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('123') == ''\nassert solution('a') == 'a'\nassert solution('aabcde') == 'abcde'\nassert solution('abcd') == 'abcd'\n",
        "num_ids_2": 16,
        "num_ids_4": 39
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\ncbaa\ndaacc\nacacac\n''') == 'aac'\nassert solution('''4\ncba\nacd\nab\n''') == 'ac'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\n\"\"\"\n\nn = int(stdin.readline())\nstrings = []\nfor i in range(n):\n    strings.append(stdin.readline().strip())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\ncbaa\ndaacc\nacacac''') == 'aac'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'aac'\nassert solution('4') == ''\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"1\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\"\n    \"5 5 5\\n\"\n) == \"7\\n\"\nassert solution(\n    \"3\\n\"\n    \"10 10 10\\n\"\n) == \"10\\n\"\nassert solution(\n    \"3\\n\"\n    \"16 16 16\\n\"\n) == \"16\\n\"\nassert solution(\n    \"3\\n\"\n    \"50 50 50\\n\"\n) == \"50\\n\"\nassert solution(\n    \"3\\n\"\n    \"100 100 100\\n\"\n) == \"100\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '7'\nassert solution('1') == '7'\nassert solution('5') == '7'\nassert solution('20') == '7'\nassert solution('100') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '5'\nassert solution('4') == '5'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 24, 30]) == '7'\nassert solution([2, 4, 6]) == '10'\nassert solution([3, 7, 9]) == '7'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"1\", \"24\", \"30\"]) == \"7\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n4 5\n:\n4 7''') == \"7\"\nassert solution('''1\n4 6\n:\n4 8''') == \"8\"\nassert solution('''3\n100 100\n:\n99 99''') == \"99\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n0 1 2\n0 2 3\n1 2 3\n1 3 4\n2 3''') == \"6\"\nassert solution('''2 4\n0 1\n1 0\n1 2\n2 2''') == \"2\"\nassert solution('''5 5\n0 1 2\n0 2 3\n1 2 3\n1 3 4\n2 3''') == \"5\"\n\n'''\nSample Input 1\n10 10\n0 0\n0 1\n0 2\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4\n5 5\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n0 0\n1 1\n1 2\n2 2\n2 3\n3 3\n4 4\n5 5\n0 0\n1 1\n1 2\n2 2\n2 3\n3 3\n4 4\n5 5\n\nSample Output\n15\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"2\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '6'\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"5 5\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6\"\n\nclass Solution:\n    def solution(self):\n        pass\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(\"\\n\".join([\n     \"3 4\",\n     \"2 1\",\n     \"3 2\",\n     \"2 3\",\n     \"2 4\",\n     \"3 3\",\n     \"3 4\",\n     \"4 4\",\n     \"4 3\",\n     \"1 2\",\n     \"2 1\",\n     \"4 1\",\n     \"1 3\",\n     \"1 2\",\n     \"1 3\",\n     \"1 3\",\n     \"1 3\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"2 1\",\n     \"3 1\",\n     \"1 2\",\n     \"3 1\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"2 1\",\n     \"3 1\",\n     \"2 1\",\n     \"1 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"2 1\",\n     \"2 1\",\n     \"2 1\",\n     \"2 1\",\n     \"2 1\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"2 1\",\n     \"2 1\",\n     \"3 1\",\n     \"3 1\",\n     \"3 1\",\n     \"3 1\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"2 1\",\n     \"2 1\",\n     \"3 1\",\n     \"3 1\",\n     \"3 1\",\n     \"3 1\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3 2\",\n     \"3",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '6'\n\"\"\"\n\nimport math\n\nn, m = map(int, input().split())\n\ns = 1\nc = 0\n\nfor i in range(1, m):\n    s += math.sqrt(2)\n    if c < s:\n        c += 2\n\nprint(c)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '6'\n\"\"\"\nimport math",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4''') == '6'\nassert solution('''1 2''') == '1'\nassert solution('''4 5''') == '4'\nassert solution('''5 3''') == '5'\nassert solution('''5 2''') == '4'\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"Possible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"3 3\") == \"Possible\"\nassert solution(\"1 5\") == \"Impossible\"\nassert solution(\"3 1\") == \"Impossible\"\nassert solution(\"1 1\") == \"Impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\n') == 'Possible'\nassert solution('1 2\\n') == 'Impossible'\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Impossible'\nassert solution('3 1') == 'Possible'\nassert solution('4 1') == 'Possible'\nassert solution('4 3') == 'Possible'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1\n1 1\n1 1\n''') == 'Possible'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Impossible\"\nassert solution(\"4 5\") == \"Possible\"\nassert solution(\"2 6\") == \"Possible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n\") == \"Possible\"\nassert solution(\"1 2 1\\n\") == \"Impossible\"\nassert solution(\"4 5\\n\") == \"Possible\"\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n\") == \"Possible\"\nassert solution(\"2 5\\n\") == \"Impossible\"\nassert solution(\"3 5\\n\") == \"Possible\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"4 5\") == \"Impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"Possible\"\nassert solution(\"5 3\") == \"Possible\"\nassert solution(\"10 5\") == \"Possible\"\nassert solution(\"10 5\") == \"Possible\"\nassert solution(\"10 5\") == \"Possible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"UNRESTORABLE\"\nassert solution(\"?\") == \"UNRESTORABLE\"\nassert solution(\"coder\") == \"atcoder\"\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"?????????\") == \"UNRESTORABLE\"\nassert solution(\"????\") == \"atcoder\"\nassert solution(\"???????????\") == \"UNRESTORABLE\"\nassert solution(\"??????\") == \"UNRESTORABLE\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"atcoder\"\n\n\"\"\"\n\nfrom itertools import permutations\nfrom functools import reduce\n\ns = input()",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?tc????') == 'atcoder', f\"actual: {solution('?tc????')}\"\nassert solution('coder') == 'coder', f\"actual: {solution('coder')}\"\nassert solution('ctcoder') == 'ctcoder', f\"actual: {solution('ctcoder')}\"\nassert solution('abcde?') == 'abcde', f\"actual: {solution('abcde?')}\"\nassert solution('ab???') == 'ab', f\"actual: {solution('ab???')}\"\n",
        "num_ids_2": 51,
        "num_ids_4": 104
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('????') == 'atcoder'\nassert solution('???') == 'atcoder'\nassert solution('???') == 'atcoder'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'ctcoder'\nassert solution('ab?') == 'a'\nassert solution('?ab?') == 'ab'\nassert solution('aaaaa') == 'a'\n\nfrom typing import Dict, List",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('?tc????') == 'atcoder'\nassert solution('coder?') == 'atcoder'\n\n\"\"\"\n\nfrom functools import reduce",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?tc????') == 'atcoder'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1.5\"\nassert solution(\"7\") == \"3.5\"\nassert solution(\"2002\") == \"2005.5\"\nassert solution(\"2017\") == \"2032.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2001\\n2002\") == \"2032\"\nassert solution(\"2017\\n2018\") == \"2035\"\nassert solution(\"2017\\n2017\") == \"2017\"\nassert solution(\"2017\\n2017\") == \"2017\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2002\n2017''') == '2032'\nassert solution('''2020\n2032''') == '2032'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2041\\n2041\\n\") == \"2041\\n2041\\n\"\nassert solution(\"2001\\n2001\\n\") == \"2001\\n2001\\n\"\nassert solution(\"2040\\n2040\\n\") == \"2040\\n2040\\n\"\nassert solution(\"2001\\n2041\\n\") == \"2041\\n2041\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"1701\") == \"1701\"\nassert solution(\"2010\") == \"2010\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2002\n2017''') == '2032'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2001') == '2025'\nassert solution('2004') == '2038'\nassert solution('2017') == '2032'\nassert solution('2002') == '2025'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('assesses') == 1",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''string''') == 6\nassert solution('''letter''') == 4\nassert solution('''aaaaaa''') == 0\nassert solution('''uncopyrightable''') == 13\nassert solution('''ambidextrously''') == 12\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4\nassert solution(sample_input_5) == sample_output_5\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'AC'\nassert solution('100000000 10000 5') == 'TLE'",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''100000000 500 3\nSample Output 1:\nAC''') == 'AC'\n\nassert solution('''100000000 50 3\nSample Output 2:\nAC''') == 'AC'\n\nassert solution('''100000000 10001 5\nSample Output 3:\nAC''') == 'AC'\n\nassert solution('''100000000 10000 5\nSample Output 4:\nAC''') == 'AC'\n\nassert solution('''19931568 1000000 6\nSample Output 5:\nTLE''') == 'TLE'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100000000 500 3\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n''') == 'AC'\nassert solution('''100000000 10001 5\nSample Input 3:\n100000000 10000 5\nSample Output 3:\nTLE\n''') == 'TLE'\nassert solution('''100000000 10000 6\nSample Input 4:\n19931568 1000000 6\nSample Output 4:\nTLE\n''') == 'TLE'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n100000000 500 3\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 50 3\n\"\"\") == \"AC\"\nassert solution(\"\"\"\n100000000 10001 5\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 10000 5\n\"\"\") == \"AC\"\nassert solution(\"\"\"\n19931568 1000000 6\n\"\"\") == \"TLE\"\n\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n\") == \"2 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"\n",
        "num_ids_2": 111,
        "num_ids_4": 221
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\".strip()\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\", \"Good Job!\"\n\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\") == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\", \"Good Job!\"\n\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n\"\"\") == \"\"\"\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\"\"\", \"Good Job!\"\n\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n\"\"\") == \"\"\"\n2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n\"\"\", \"Good Job!\"\n\nprint(\"All Tests Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n0 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 64 0 4\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 4\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n4\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 0\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0 0 2') == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\"\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == \"2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0') == \"2 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"\n",
        "num_ids_2": 92,
        "num_ids_4": 202
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\"\nassert solution(\n    \"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\") == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\"\nassert solution(\n    \"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n\"\"\") == \"\"\"\n2 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\") == \"2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4\\n\"\n",
        "num_ids_2": 118,
        "num_ids_4": 236
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nH 2\nO\n''') == '0'\nassert solution('''\nC2H6 10\nC3H8\n''') == '6'\nassert solution('''\nCH3OH 1\nCH4\n''') == '1'\nassert solution('''\nC6H6OCH2O 10\nHCN\n''') == '12'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('H 2\\nO\\n') == '0'\nassert solution('C 2H6 10\\nC3H8\\n') == '6'\nassert solution('CH3OH 1\\nCH4\\n') == '1'\nassert solution('C6H6OCH2O 10\\nHCN\\n') == '0'\nassert solution('C6H14 10\\nC5H10\\n') == '12'",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('C2H6') == '0'\nassert solution('C3H8') == '6'\nassert solution('CH3OH') == '1'\nassert solution('C6H6OCH2O') == '0'\nassert solution('HCN') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('H 2') == '0'\nassert solution('O') == '0'\nassert solution('C 2') == '0'\nassert solution('C 3') == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"H 2\"\"\") == \"0\"\nassert solution(\"\"\"C2H6 10\"\"\") == \"6\"\nassert solution(\"\"\"C3H8\"\"\") == \"1\"\nassert solution(\"\"\"CH3OH 1\"\"\") == \"1\"\nassert solution(\"\"\"C6H6OCH2O 10\"\"\") == \"12\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"\n\n--------------------------------------------\n\n============================================\n\nTask\n\nGiven a chemical product, return the number of molecules that this product can produce using the given mixtures. The chemical product can be composed of any number of atoms of different types, and any number of atoms of different types can be produced using the same mixture of atoms. Atoms can be repeated, but the number of times an atom is repeated in a product cannot be greater than the number of times that atom is repeated in any of the mixtures.\n\nFor example, given a product of H2O2 and H2O2, you can produce H2O2 using only 2 H2O2s and 2 H2O2s.\n\nIt's not possible to produce H2O2 using 2 H2O2s and 2 H2O2s.\n\nGiven a product of C2H4O2 and H2O2, you can produce H2O2 using 1 C2H4O2 and 2 H2O2s.\n\nIt's not possible to produce H2O2 using 1 C2H4O2 and 2 H2O2s.\n\nGiven a product of C3H2O2 and H2O2, you can produce H2O2 using 1 C3H2O2 and 2 H2O2s.\n\nIt's not possible to produce H2O2 using 1 C3H2O2 and 2 H2O2s.\n\n------\n\nTask\n\nComplete the function solution so that it returns the maximum possible number of molecules that professor Cesium can output using the given list of chemical products. The products can be any number of molecules of the same type.\n\n------\n\nTask\n\nWrite a function that can generate all the possible products of a given set of chemicals.\n\nThe set of chemicals has to be composed of only uppercase letters (A\u2013Z) and numbers.\n\nThe product has to be composed of at most $2500$ of those chemicals.\n\nReturn the list of all the possible products.\n\nFor example:\n\nproducts = [\"H2O2\", \"C4H6\", \"C5H10\", \"H2O\"]\n\nproducts returns:\n\n[\"C2H4O2\", \"C3H2O2\", \"C4H6O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2\", \"C5H10O2",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''H 2\nO''') == '0'\nassert solution('''C2H6 10\nC3H8''') == '6'\nassert solution('''CH3OH 1\nCH4''') == '1'\nassert solution('''C6H6OCH2O 10\nHCN''') == '0'\nassert solution('''C6H14 10\nC5H10''') == '12'\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"1\"\nassert solution(\"C 2H 6\") == \"0\"\nassert solution(\"C 3H 8\") == \"6\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C 2H 6\\nO\") == \"0\"\nassert solution(\"C 3H 8\\nC 3H 8\") == \"6\"\nassert solution(\"CH 3OH 1\\nCH 4\\n\") == \"1\"\nassert solution(\"C 6H 6OCH2O 10\\nHCN\\n\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('ABC SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 41,
        "num_ids_4": 76
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''ABC HAPPYBIRTHDAYCACEY\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'\nassert solution(\n'''ABC HAPPYBIRTHDAYCACEY\nSECRET SOMECHORESARETOUGH\n''') == 'FAIL'\nassert solution(\n'''ABC HAPPYBIRTHDAY\nSECRET SOMECHORESARETOUGH\n''') == 'FAIL'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\"\n    ) == \"PASS\"\nassert solution(\n    \"ABC TRAGICBIRTHDAYCACEY\"\n    ) == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\"\n    ) == \"FAIL\"\nassert solution(\n    \"SECRET SOMECHORESARETOUGH\"\n    ) == \"PASS\"\nprint('TESTS PASSED')\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\\n\"\n    \"ABC TRAGICBIRTHDAYCACEY\\n\"\n    \"ABC HAPPYBIRTHDAY\\n\"\n    \"SECRET SOMECHORESARETOUGH\\n\") == \"PASS\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\\n\"\n    \"ABC TRAGICBIRTHDAYCACEY\\n\"\n    \"ABC HAPPYBIRTHDAYCACEY\\n\"\n    \"SECRET SOMECHORESARETOUGH\\n\") == \"FAIL\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(samples[0]) == \"PASS\"\nassert solution(samples[1]) == \"FAIL\"\nassert solution(samples[2]) == \"FAIL\"\nassert solution(samples[3]) == \"FAIL\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\nassert solution('''\nABC TRAGICBIRTHDAYCACEY\n''') == 'FAIL'\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''ABC HAPPYBIRTHDAYCACEY''') == 'PASS'\nassert solution('''ABC TRAGICBIRTHDAYCACEY''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAY''') == 'FAIL'\nassert solution('''SECRET SOMECHORESARETOUGH''') == 'PASS'\n",
        "num_ids_2": 47,
        "num_ids_4": 89
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''ABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\nassert solution('''ABC TRAGICBIRTHDAYCACEY\n''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''SECRET SOMECHORESARETOUGH\n''') == 'PASS'",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\nABC HAPPYBIRTHDAYCACEY\n\"\"\") == \"PASS\"\nassert solution(\n\"\"\"\nABC TRAGICBIRTHDAYCACEY\n\"\"\") == \"FAIL\"\nassert solution(\n\"\"\"\nABC HAPPYBIRTHDAY\n\"\"\") == \"FAIL\"\nassert solution(\n\"\"\"\nSECRET SOMECHORESARETOUGH\n\"\"\") == \"PASS\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ok so far'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"ok so far\"\n\"\"\"\nimport re\n\nnum_lines = int(input())\n\nfor _ in range(num_lines):\n    program = input()\n    # match opening delimiters\n    opening = re.findall('[({]', program)\n    # match closing delimiters\n    closing = re.findall('[)]', program)\n\n    if len(opening)!= len(closing):\n        print('ok so far')\n    else:\n        print(f'{len(opening) - len(closing)}')\n\"\"\"\nOther Solution\n\nnum_lines = int(input())\nfor _ in range(num_lines):\n    program = input()\n    opening = re.findall('[({]', program)\n    closing = re.findall('[)]', program)\n    if len(opening)!= len(closing):\n        print('ok so far')\n    else:\n        print(f'{len(opening) - len(closing)}')\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''([] [] ]\nSample Input 1:\n8\n([] [] ]\nSample Output 1:\n] 7\n\nSample Input 2:\n13\n(([] [[]] ())\nSample Output 2:\nok so far\n\nSample Input 3:\n21\n[ { { () } } ]\nSample Output 3:\n] 20\n\nSample Input 4:\n27\n[ { [[()]] (({})) } ] () {}\nSample Output 4:\nok so far\n''') == 'ok so far'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''([] [] )''') == '] 7'\nassert solution('''(([] [[]] ()) )''') == '] 20'\nassert solution('''([] ([] ))''') == '] 13'\nassert solution('''(([] ([] )) )''') == '] 13'\nassert solution('''(([] ([] )) )''') == '] 13'\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == \"ok so far\"\nprint(solution(\"1\"))\nprint(solution(\"2\"))\nprint(solution(\"3\"))\nprint(solution(\"4\"))\nprint(solution(\"5\"))\nprint(solution(\"6\"))\nprint(solution(\"7\"))\nprint(solution(\"8\"))\nprint(solution(\"9\"))\nprint(solution(\"10\"))\nprint(solution(\"11\"))\nprint(solution(\"12\"))\nprint(solution(\"13\"))\nprint(solution(\"14\"))\nprint(solution(\"15\"))\nprint(solution(\"16\"))\nprint(solution(\"17\"))\nprint(solution(\"18\"))\nprint(solution(\"19\"))\nprint(solution(\"20\"))\nprint(solution(\"21\"))\nprint(solution(\"22\"))\nprint(solution(\"23\"))\nprint(solution(\"24\"))\nprint(solution(\"25\"))\nprint(solution(\"26\"))\nprint(solution(\"27\"))\nprint(solution(\"28\"))\nprint(solution(\"29\"))\nprint(solution(\"30\"))\nprint(solution(\"31\"))\nprint(solution(\"32\"))\nprint(solution(\"33\"))\nprint(solution(\"34\"))\nprint(solution(\"35\"))\nprint(solution(\"36\"))\nprint(solution(\"37\"))\nprint(solution(\"38\"))\nprint(solution(\"39\"))\nprint(solution(\"40\"))\nprint(solution(\"41\"))\nprint(solution(\"42\"))\nprint(solution(\"43\"))\nprint(solution(\"44\"))\nprint(solution(\"45\"))\nprint(solution(\"46\"))\nprint(solution(\"47\"))\nprint(solution(\"48\"))\nprint(solution(\"49\"))\nprint(solution(\"50\"))\nprint(solution(\"51\"))\nprint(solution(\"52\"))\nprint(solution(\"53\"))\nprint(solution(\"54\"))\nprint(solution(\"55\"))\nprint(solution(\"56\"))\nprint(solution(\"57\"))\nprint(solution(\"58\"))\nprint(solution(\"59\"))\nprint(solution(\"60\"))\nprint(solution(\"61\"))\nprint(solution(\"62\"))\nprint(solution(\"63\"))\nprint(solution(\"64\"))\nprint(solution(\"65\"))\nprint(solution(\"66\"))\nprint(solution(\"67\"))\nprint(solution(\"68\"))\nprint(solution(\"69\"))\nprint(solution(\"70\"))\nprint(solution(\"71\"))\nprint(solution(\"72\"))\nprint(solution(\"73\"))\nprint(solution(\"74\"))\nprint(solution(\"75\"))\nprint(solution(\"76\"))\nprint(solution(\"77\"))\nprint(solution(\"78\"))\nprint(solution(\"79\"))\nprint(solution(\"80\"))\nprint(solution(\"81\"))\nprint(solution(\"82\"))\nprint(solution(\"83\"))\nprint(solution(\"84\"))\nprint(solution(\"85\"))\nprint(solution(\"86\"))\nprint(solution(\"87\"))\nprint(solution(\"88\"))\nprint(solution(\"89\"))\nprint(solution(\"90\"))\nprint(solution(\"91\"))\nprint(solution(\"92\"))\nprint(solution(\"93\"))\nprint(solution(\"94\"))\nprint(solution(\"95\"))\nprint(solution(\"96\"))\nprint(solution(\"97\"))\nprint(solution(\"98\"))\nprint(solution(\"99\"))\nprint(solution(\"100\"))\nprint(solution(\"101\"))\nprint(solution(\"102\"))\nprint(solution(\"103\"))\nprint(solution(\"104\"))\nprint(solution(\"105\"))\nprint(solution(\"106\"))\nprint(solution(\"107\"))\nprint(solution(\"108\"))\nprint(solution(\"109\"))\nprint(solution(\"110\"))\nprint(solution(\"111\"))\nprint(solution(\"112\"))\nprint(solution(\"113\"))\nprint(solution(\"114\"))\nprint(solution(\"115\"))\nprint(solution(\"116\"))\nprint(solution(\"117\"))\nprint(solution(\"118\"))\nprint(solution(\"119\"))\nprint(solution(\"120\"))\nprint(solution(\"121\"))\nprint(solution(\"122\"))\nprint(solution(\"123\"))\nprint(solution(\"124\"))\nprint(solution(\"125\"))\nprint(solution(\"126\"))\nprint(solution(\"127\"))\nprint(solution(\"128\"))\nprint(solution(\"129\"))\nprint(solution(\"130\"))\nprint(solution(\"131\"))\nprint(solution(\"132\"))\nprint(solution(\"133\"))\nprint(solution(\"134\"))\nprint(solution(\"135\"))\nprint(solution(\"136\"))\nprint(solution(\"137\"))\nprint(solution(\"138\"))\nprint(solution(\"139\"))\nprint(solution(\"140\"))\nprint(solution(\"141\"))\nprint(solution(\"142\"))\nprint(solution(\"143\"))\nprint(solution(\"144\"))\nprint(solution(\"145\"))\nprint(solution(\"146\"))\nprint(solution(\"147\"))\nprint(solution(\"148\"))\nprint(solution(\"149\"))\nprint(solution(\"150\"))\nprint(solution(\"151\"))\nprint(solution(\"152\"))\nprint(solution(\"153\"))\nprint(solution(\"154\"))\nprint(solution(\"155\"))\nprint(solution(\"156\"))\nprint(solution(\"157\"))\nprint(solution(\"158\"))\nprint(solution(\"159\"))\nprint(solution(\"160\"))\nprint(solution(\"161\"))\nprint(solution(\"162\"))\nprint(solution(\"163\"))\nprint(solution(\"164\"))\nprint(solution(\"165\"))\nprint(solution(\"166\"))\nprint(solution(\"167\"))\nprint(solution(\"168\"))\nprint(solution(\"169\"))\nprint(solution(\"170\"))\nprint(solution(\"171\"))\nprint(solution(\"172\"))\nprint(solution(\"173\"))\nprint(solution(\"174\"))\nprint(solution(\"175\"))\nprint(solution(\"176\"))\nprint(solution(\"177\"))\nprint(solution(\"178\"))\nprint(solution(\"179\"))\nprint(solution(\"180\"))\nprint(solution(\"181\"))\nprint(solution(\"182\"))\nprint(solution(\"183\"))\nprint(solution(\"184\"))\nprint(solution(\"185\"))\nprint(solution(\"186\"))\nprint(solution(\"187\"))\nprint(solution(\"188\"))\nprint(solution(\"189\"))\nprint(solution(\"190\"))\nprint(solution(\"191\"))\nprint",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n(([] [] ]\n\"\"\") == \"]\"\nassert solution(\n\"\"\"\n([] [] ]\n\"\"\") == \"]\"\nassert solution(\n\"\"\"\n[ () ]\n\"\"\") == \"ok so far\"\nassert solution(\n\"\"\"\n[ (([])) ]\n\"\"\") == \"ok so far\"\nassert solution(\n\"\"\"\n[ ]\n\"\"\") == \"ok so far\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"([] [] )\") == \"] 7\"\nassert solution(\"(([] [[]] ())\") == \"] 20\"\nassert solution(\"([] [] )\") == \"ok so far\"\nassert solution(\"([] )\") == \"ok so far\"\nassert solution(\"(([] )\") == \"ok so far\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n([] [] ]\n''') == '] 7'\nassert solution('''\n([] [] ]\n''') == 'ok so far'\n\nassert solution('''\n13\n([ ] [ ] )\n''') == '] 20'\n\nassert solution('''\n27\n
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '] 7'\nassert solution('13') == '] 20'\nassert solution('21') == 'ok so far'\nassert solution('27') == 'ok so far'\n\n----------------------------------------",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"\nprint(\"All Tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\\n\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\\n\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\\n\") == \"Player 2 lost\"\n",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\napple\\nextra\\neat\\n') == 'Player 2 lost'\nassert solution('5\\napple\\nextra\\nletters\\nstyle\\n') == 'Fair Game'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle') == 'Fair Game'\nassert solution('3\\napple\\nexp\\napt') == 'Player 1 lost'\nassert solution('1\\napple\\nexp') == 'Player 2 lost'\nassert solution('5\\napple\\nex\\nexp') == 'Player 2 lost'\nassert solution('1\\napple') == 'Player 2 lost'\n",
        "num_ids_2": 46,
        "num_ids_4": 84
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\napple\\nextra\\n') == 'Player 1 lost'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\nassert solution('1') == 'Player 1 lost'",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\napple') == 'Fair Game'\nassert solution('2\\nextra') == 'Player 1 lost'\nassert solution('3\\nneat') == 'Player 2 lost'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"100000\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '10010'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"+\") == \"1010\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '101010'\nassert solution('10') == '10010'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"10010\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1000\n*\n100''') == '100000'\nassert solution('''10000\n+\n10''') == '1010'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == '100000'\nassert solution('10') == '1010'\nassert solution('+') == '10010'\nassert solution('-') == '1000000'\nassert solution('*') == '10000000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('10\\n+\\n1000\\n') == '10010'\nassert solution('10\\n+\\n100') == '1010'\nassert solution('1000\\n+\\n10') == '1001'\nassert solution('1000\\n*\\n10') == '10000'\n",
        "num_ids_2": 38,
        "num_ids_4": 71
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"100000\"\nassert solution(input()) == \"1010\"\nassert solution(input()) == \"101010\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().rstrip()\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"menolaxiosexmox\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"menolaxios mox\"\n) == \"menolaxiosexmox\"\n\nassert solution(\n    \"alemaxe maxos\"\n) == \"alemaxexmaxos\"\n\nassert solution(\n    \"pamoli toxes\"\n) == \"pamolextoxes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"yes\"\nassert solution(\"2\\n\") == \"no\"\nassert solution(\"3\\n\") == \"yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == 'yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"yes\"\n\"\"\"\n\n\"\"\"\nKata.\nThere are four very important rules in programming that are important for many situations:\n\nOrdinary escape sequences:\nThey are used to escape the characters of a string.\n\nThey are used to make a string longer by specifying a special escape sequence.\n\nThey are used to make a string shorter by specifying a special escape sequence.\n\nThey are used to make a string shorter by specifying a special escape sequence.\n\nEscape sequences are used to start and end a string. For example, the escape sequence \\\\ is used to start a new line.\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n    3\n    ''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n    4\n    ''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n    4\n    ''') == '1820000'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'\n",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '0'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n2\n''') == '8888'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"64\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'\n",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '64'\nassert solution() == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4\\n3') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4\\n4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10\\n4') == '1820000'\n",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\nSample Output 1:\n2 330\n\nSample Input 2:\n7 1\n30 270 995 996 997 998 999\nSample Output 2:\n2 570\n\nSample Input 3:\n7 2\n30 270 995 996 997 998 999\nSample Output 3:\n0 0\n''') == '2 570'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"7 0\\n\"\n    \"30 270 995 996 997 998 999\\n\"\n    \"7 1\\n\"\n    \"30 270 995 996 997 998 999\\n\"\n    \"7 2\\n\"\n    \"30 270 995 996 997 998 999\\n\"\n) == \"2 570\"\nassert solution(\n    \"7 0\\n\"\n    \"30 270 995 996 997 998 999\\n\"\n    \"7 1\\n\"\n    \"30 270 995 996 997 998 999\\n\"\n) == \"0 0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''\n7 2\n30 270 995 996 997 998 999\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '1'\nassert solution('abccabbcaabc') == '3'\nassert solution('abccab') == '2'\nassert solution('abc') == '6'\nassert solution('ab') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abbaabbaabba') == '2'\n\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '1'\nassert solution('abcdef') == '6'\nassert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abcdef') == '6'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aa\") == \"1\"\nassert solution(\"aaaa\") == \"1\"\nassert solution(\"aaaaa\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\nassert solution(\"abcdefgh\") == \"10\"\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"abccaba\") == \"4\"\nassert solution(\"abccaba\") == \"2\"\nassert solution(\"a\") == \"1\"\nassert solution(\"a\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\nassert solution(sys.stdin.read()) == \"2\"\nassert solution(sys.stdin.read()) == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_stdin) == \"2\\n1 2\"\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1'\nassert solution('3 6\\n1 2 3 4 5\\n11 12 15 19 24 30') == '0'",
        "num_ids_2": 61,
        "num_ids_4": 87
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n') == '1'\nassert solution('3 6\\n1 2 3 4 5\\n11 12 15 19 24 30') == '0'\n",
        "num_ids_2": 63,
        "num_ids_4": 89
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == \"2\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == \"1\nassert solution('''\n3 6\n1 2 3 4\n11 12 15 19 24 30\n''') == \"0\n''') == \"1\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10') == '1'\nassert solution('3 5') == '1 2'\nassert solution('6 10') == '1 2 3 4 5 6 7 8 9'\nassert solution('10 10') == '1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 23,
        "num_ids_4": 62
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10\") == \"2\"\nassert solution(\"3 6\") == \"1\"\nassert solution(\"10 1 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\nassert solution('''\n3 6\n1 2 3 4\n11 12 15 19 24 30\nSample Output 3:\n0\n1\n''') == '1'\nprint('All test cases passed!')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nassert solution('11111') == '0'\nassert solution('5555555') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\nassert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data.txt) == \"1/1\"\nprint(solution(input_data.txt))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-40/1\") == \"5/9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''32/1\n33/1\n-40/1''') == '5/9'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''32/1''') == '0/1'\nassert solution('''33/1''') == '5/9'\nassert solution('''-40/1''') == '-40/1'",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Transposition\"\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nC C G G A A G\\nC C F F D# D# F') == 'Transposition'\nassert solution('3\\nC E G\\nD F# A\\nSample Output 2:') == 'Inversion'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Retrograde'\n",
        "num_ids_2": 59,
        "num_ids_4": 91
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Nonsense\"\nassert solution(\"2\") == \"Nonsense\"\nassert solution(\"3\") == \"Nonsense\"\nassert solution(\"4\") == \"Transposition\"\nassert solution(\"5\") == \"Nonsense\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\nC E G\\nD F# A\\n') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nG F E D C B A\\n') == 'Retrograde'\n",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3\\nC E G\\nD F# A\\n') == 'Transposition', 'Transposition'\n\nassert solution(\n    '7\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion', 'Inversion'\n\nassert solution(\n    '7\\nA B C D E F G\\nG F E D C B A\\n') == 'Retrograde', 'Retrograde'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == \"Transposition\"\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == \"Inversion\"\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == \"Retrograde\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"\n",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'Transposition'\nassert solution('3') == 'Nonsense'\nassert solution('4') == 'Nonsense'\nassert solution('5') == 'Nonsense'\nassert solution('6') == 'Nonsense'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Transposition', '1'\nassert solution('2') == 'Inversion', '2'\nassert solution('3') == 'Nonsense', '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n'''\n\nimport string\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\n\"\"\"\n\n\nimport re",
        "num_ids_2": 29,
        "num_ids_4": 72
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''I love ba-na-na\nCat-a-pil-lar\nCo-ding is the best''') == 'Gah kove bababa'\nassert solution('''I love ba-na-na\nCat-a-pil-lar\nCo-ding is the best\nCat-a-pil-lar''') == 'Gah kove bababa'\nassert solution('''I love ba-na-na\nCat-a-pil-lar\nCo-ding is the best\nCat-a-pil-lar''') == 'Gah kove bababa'\nassert solution('''I love ba-na-na\nCat-a-pil-lar\nCo-ding is the best\nCat-a-pil-lar''') == 'Gah kove bababa'\nassert solution('''I love ba-na-na\nCat-a-pil-lar\nCo-ding is the best\nCat-a-pil-lar''') == 'Gah kove bababa'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa', \"First\"\nassert solution('Cat-a-pil-lar') == 'Catacillar', \"Second\"\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh', \"Third\"\n",
        "num_ids_2": 47,
        "num_ids_4": 73
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''I love ba-na-na\nSample Output 1:\nGah kove bababa''') == 'Gah kove bababa'\n\nassert solution('''Cat-a-pil-lar\nSample Output 2:\nCatacillar''') == 'Catacillar'\n\nassert solution('''Co-ding is the best\nSample Output 3:\nCociccah gs the bestuh''') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Gah kove bababa\"\nassert solution(input()) == \"Catacillar\"\nassert solution(input()) == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"8\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"14\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '6'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\nassert solution('4') == '16'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n4\n''') == '6'\nassert solution('''4\n3\n''') == '14'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == stdout\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4 3 1 7\") == \"2\"\nprint(\"Congratulations! All test cases passed\")\n",
        "num_ids_2": 19,
        "num_ids_4": 32
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '4'\nassert solution('''\n4 10\n1 3 1 7\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''\n4 10\n1 3 1 7\n''') == '4'\n\n'''\n--- Day 2: Password Philosophy ---\nYour flight departs in a few days from the coastal airport; the easiest way down to the coast from here is via toboggan.\n\nThe shopkeeper at the North Pole Toboggan Rental Shop is having a bad day. \"Something's wrong with our computers; we can't log in!\" You ask if you can take a look.\n\nTheir password database seems to be a little corrupted: some of the passwords wouldn't have been allowed by the Official Toboggan Corporate Policy that was in effect when they were chosen.\n\nTo try to debug the problem, they have created a list (your puzzle input) of passwords (according to the corrupted database) and the corporate policy when that password was set.\n\nFor example, suppose you have the following list:\n\n1-3 a: abcde\n1-3 b: cdefg\n2-9 c: ccccccccc\nEach line gives the password policy and then the password. The password policy indicates the lowest and highest number of times a given letter must appear for the password to be valid. For example, 1-3 a means that the password must contain a at least 1 time and at most 3 times.\n\nIn the above example, 2 passwords are valid. The middle password, cdefg, is not; it contains no instances of b, but needs at least 1. The first and third passwords are valid: they contain one a or nine c, both within the limits of their respective policies.\n\nHow many passwords are valid according to their policies?\n\"\"\"\nfrom collections import defaultdict\n\nimport pytest\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 10\n4 8 1 9 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 10\n1 3 1 7\n\"\"\") == \"4\"\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(input())\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '4'\nassert solution('4 10') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '4'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 3\\n4 3 1 7\"\n    ) == \"2\", \"High\"\nassert solution(\n    \"3 3\\n4 3 1 7\"\n    ) == \"4\", \"Low\"\nassert solution(\n    \"10 6\\n1 2 3 4 5 6 7 8 9 10\"\n    ) == \"10\", \"Low\"\nassert solution(\n    \"6 7\\n1 2 3 4 5 6 7 8 9 10\"\n    ) == \"9\", \"High\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''\n1 2\n0 1 0\n1 0 1\n''') == 'impossible'\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n0 1 1\n1 0 0\n0 1 0\n''') == 'possible'\nassert solution('''\n5 2\n0 1 1\n1 0 0\n1 0 1\nSample Output 4:\nimpossible\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == 'possible'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0''') == 'possible','sample tests'\nassert solution('''1 2\n1 0 0\n0 1 0''') == 'impossible', 'other tests'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"possible\"\nprint(solution(input_string))\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0\n1 0 1''') == 'possible'\nassert solution('''1 2\n0 1 1\n1 0 0\n1 0 1''') == 'impossible'\nprint('You passed the tests! Nice job!')\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"possible\"\nassert solution('1 2\\n0 1 1\\n1 0 0\\n'*3) == \"impossible\"\n\n'''\n\n\nclass Node:\n    def __init__(self, station_id):\n        self.station_id = station_id\n        self.remaining_capacity = capacity\n        self.waiting_capacity = 0\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\n\"\"\"\n\ntest = [\"1 2\", \"0 1 1\", \"1 0 0\"]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1 2\\n\"\n    \"0 1 1\\n\"\n    \"1 0 0\\n\"\n) == \"possible\"\nassert solution(\n    \"1 2\\n\"\n    \"1 0 0\\n\"\n    \"0 1 0\\n\"\n) == \"impossible\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1\n1 2\n1 3''') == '1.5'\nassert solution('''2 3\n2 4\n1 2\n2 3\n1 4\n2 4\n3 4''') == '2.75'\nassert solution('''4 3\n1 2\n2 3\n3 4\n3 4\n4 4\n1 4\n2 4\n1 3\n2 4\n1 4\n2 4''') == '3.25'\nassert solution('''1 2\n2 2\n2 4\n1 4\n2 3\n2 3\n1 3''') == '1.5'\nassert solution('''1 5\n3 4\n3 4\n3 4\n4 5\n4 4\n3 4\n3 4''') == '3.25'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n1.5\n''') == '1.5'\nassert solution('''2 2\n3\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n2 3\n''') == '1.875'\nassert solution('''\n6 2\n''') == '4.25'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\nprint(solution(*[int(i) for i in stdin.split()]))",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 0\n1 1 0\n''') == '0 0'\nassert solution('''4 2 7\n1 4\n''') == '1 6'\nassert solution('''3 0 0\n1 4\n''') == '1 4'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 4'\nprint(solution())\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 0\n4 2 7\n3 0 0\n''') == '1 4'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 0\") == '0 0'\nassert solution(\"4 2 7\") == '1 4'\nassert solution(\"3 0 0\") == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nWBWB') == '1'\nassert solution('3\\nBWBW') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('4\\nWWBB\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0'\nassert solution('8\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\nBBBBBB\\n",
        "num_ids_2": 38,
        "num_ids_4": 1705
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nBWWB\nWBWB\nBWWB\n''') == '0', 'test 1'\nassert solution('''\n4\nBWWB\nWBWB\nBWWB\n''') == '1', 'test 2'\nassert solution('''\n4\nBWWB\nWBWB\nBWWB\n''') == '0', 'test 3'\nassert solution('''\n20\nBWWB\nWBWB\nBWWB\nBWWB\nWBWB\nBWWB\nBWWB\nBWWB\nBWWB\nWBWB\nWBWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWWB\nBWW",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW\n''') == '1'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\nassert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == '1'\nassert solution(\"4\\nBWWB\\nWBWB\\nWBBW\\nBWBW\\n\") == '0'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nBWBW\nWBWB\nBWWB\nBWBW\n''') == '1'\nassert solution('''\n6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\nassert solution('''\n12\nBWBWBWB\nWBWBWBWB\nWBBWBWBW\nBBWBWBWB\nBWWBBWBB\nWBWWBBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nBWWBBWBB\nBBWBWBWB\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWWBBWBB\nWBBBBWBW\nWBBBBWBW\nBBBBWBWB\nBWWBBWBW\nBWWBBWBW\nBBWWBBWB\nWBWWBBWB\nWBWWBBWB\nBWWBBWBB\nWBBBBWBW\nWBBBBWBW\nBBBBWBWB\nBBBBWBWB\n''') == '1'\nassert solution('''\n20\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nWB",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nBWBW\\nWBWB\\nBWWB\\nBWBW') == '1'\nassert solution('4\\nBWBW\\nWBWB\\nBWWB\\nBWBW') == '0'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB') == '0'",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nWBBW\\nWBWB') == '1'\nassert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW') == '0'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB') == '0'",
        "num_ids_2": 48,
        "num_ids_4": 91
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\nassert solution('2 4 1 3') == '3 2'\nassert solution('1 2 1 3') == '2 1'\nassert solution('1 4 5 8') == '3 7'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n\nassert solution(\"\"\"\n7\n1 4\n2 3\n1 2\n1 1\n1 3\n2 3\n1 1\n\"\"\") == \"3 2\\n2 3\\n2 2\\n1 1\\n2 2\"\n\nassert solution(\"\"\"\n3\n1 4\n2 3\n2 1\n\"\"\") == \"3 2\\n2 3\\n1 2\\n\"\n\nassert solution(\"\"\"\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '2 1 3'\nassert solution('''5\n1 1 2 3\n2 3 3 4\n3 4 4 5\n4 5 3 6\n1 4''') == '1 4'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\n\n\nassert solution('''\n4\n2 4 1 3\n4 5 2 3\n5 6 3 2\n3 4 1 2\n1 2 1 3\n''') == '2 4'\n\n\nassert solution('''\n4\n2 5 3 3\n4 2 2 4\n3 4 1 2\n1 3 1 2\n''') == '1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n\"\n) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\nassert solution('2 4 1 3') == '3 2'\nassert solution('1 2 1 3') == '2 3'\nassert solution('1 4 5 8') == '4 5'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"3 4\"\nassert solution(\"4\") == \"3 2\"\nassert solution(\"5\") == \"3 7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\nassert solution('2 4 1 3') == '3 2'\nassert solution('1 2 1 3') == '1 2'\nassert solution('1 4 5 8') == '3 7'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"\"\"2 1\"\"\"\nassert solution(\"\"\"1\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"\"\"3 4\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1,2\n0\n''') == 'true'\nassert solution('''\n1,2\n0\n''') == 'true'\nassert solution('''\n1\n0\n''') == 'false'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test) == \"true\"\n\n\"\"\"\n\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        try:\n            slow, fast = head, head.next\n            while slow!= fast:\n                slow = slow.next\n                fast = fast.next.next\n            return True\n        except:\n            return False\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2,3,1,0,4\") == \"true\"\nassert solution(\"1,2\") == \"true\"\nassert solution(\"1\") == \"false\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 2, 0, -4], 1) == \"true\"\nassert solution([1, 2], 0) == \"true\"\nassert solution([1], -1) == \"false\"",
        "num_ids_2": 33,
        "num_ids_4": 46
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[1]\") == \"true\"\nassert solution(\"[1,2]\") == \"true\"\nassert solution(\"[1,2,3]\") == \"false\"\nassert solution(\"[1,2,3,4]\") == \"true\"\nassert solution(\"[3,2,0,-4]\") == \"true\"\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3,2,0,-4]) == 'true'\nassert solution([1,2]) == 'true'\nassert solution([1]) == 'true'\nassert solution([]) == 'false'\n",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n[3,2,0,-4]\n1\n''') == 'true'\nassert solution('''\n[1]\n0\n''') == 'true'\nassert solution('''\n[1]\n-1\n''') == 'false'\nassert solution('''\n[1]\n-2\n''') == 'false'\nassert solution('''\n[1]\n-3\n''') == 'false'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"[3,2,0,-4]\") == \"true\"\nassert solution(\"[1,2]\") == \"true\"\nassert solution(\"[1]\") == \"false\"\nassert solution(\"[]\") == \"false\"\n",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2\n0\n-1\n''') == 'true'\nassert solution('''3\n1 2\n0\n-1\n''') == 'false'\nassert solution('''3\n1 2\n0\n-1\n''') == 'true'\nassert solution('''3\n1 2\n0\n-1\n''') == 'false'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0\n1\n-1\n-1\n1\n''') == 'true'\nassert solution('''\n1\n1\n-1\n-1\n1\n''') == 'true'\nassert solution('''\n1\n1\n0\n-1\n1\n''') == 'false'\nassert solution('''\n1\n1\n-1\n0\n1\n''') == 'false'\nassert solution('''\n1\n1\n0\n-1\n1\n''') == 'false'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5,2,7,11,15') == '[0,1]'\nassert solution('2,7,11,15') == '[0,1]'\n'''\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n[2, 7, 11, 15]\n9''') == '0 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2,7,11,15\") == \"0,1\"\nassert solution(\"2,3,4,5,6,7,8,9,10\") == \"1,9\"\nassert solution(\"1,2,3,4,5,6,7,8,9\") == \"0,8\"\n",
        "num_ids_2": 46,
        "num_ids_4": 74
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 7 11 15') == '0 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2, 7, 11, 15\") == \"0 1\"\nassert solution(\"3, 0, 7, 0\") == \"0 1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '0 1'\n\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"6\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n7\\n11\\n15') == ['0', '1']\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\nassert solution([3, 2, 4, 6]) == []\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n2\\n6\\n12') == '0 1', 'test1'\nassert solution('7\\n6\\n12') == '1 0', 'test2'\nprint('everything is ok!')",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 3 4 5 1') == '1'\nassert solution('6\\n1 2 3 4 5 6\\n3 4 5 1 2 1\\n2 4 4 5 1 1') == '1'\nassert solution('7\\n1 2 3 4 5 6 7\\n3 4 5 1 2 1 3 4 5\\n2 4 4 5 1 1 2 1 1') == '1'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n3 4 5 1 2 1 3 4 5 6 7 8 9\\n2 4 4 5 1 1 2 1 1 2 4 5 6 7 8 9') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n3 4 5 1 2 1 3 4 5 6 7 8 9 10\\n2 4 4 5 1 1 2 1 1 2 4 5 6 7 8 9 10') == '1'\n",
        "num_ids_2": 58,
        "num_ids_4": 153
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1\") == \"1\"\nassert solution(\"6\\n3\") == \"0\"\nassert solution(\"10\\n6\") == \"2\"\nprint('All test cases passed.')\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3 7') == 'impossible'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1,2,3,4,5,6,7,8,9,10]) == \"4\"\nassert solution([2,3,4,1,2,3,4,1,2,3]) == \"impossible\"\nassert solution([1,2,3,4,5,6,7,8,9,10]) == \"impossible\"\n\n'''",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3 7\n''') == '4'\nassert solution('''\n2\n4 6\n''') == 'impossible'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 2 1\n''') == '4'\nassert solution('''2\n3 7\n''') == 'impossible'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n1 2 1\") == \"4\"\nassert solution(\"1\\n3 7\") == \"impossible\"\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'impossible'\nassert solution('1') == '4'\nassert solution('2') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 2 2 1\n''') == '4'\n\nassert solution('''\n1\n3 7\n''') == 'impossible'\n\nassert solution('''\n3\n1 3 4 2\n''') == '7'\n\nassert solution('''\n3\n7 2 3 1\n''') == 'impossible'\n\nassert solution('''\n5\n1 3 6 2 7\n''') == 'impossible'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'impossible'\nassert solution('2\\n2\\n2\\n1') == '4'\nassert solution('2\\n3\\n3\\n3') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 39,
        "num_ids_4": 1527
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 1, 2, 1]) == \"4\"\nassert solution([3, 7]) == \"impossible\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"18 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"123450995 1\") == \"123451000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n184 1\nSample Input 2:\n123450995 1\nSample Output 2:\n123451000\n''') == '123451000'\nassert solution('''\n10 1\nSample Input 2:\n10 1\nSample Output 2:\n10\n''') == '10'\nassert solution('''\n16 1\nSample Input 2:\n16 1\nSample Output 2:\n16\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n184 1\n''') == '180'\nassert solution('''\n123450995 1\n''') == '123451000'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('17 5\\n') == '17'\nassert solution('11 10\\n') == '11'\nassert solution('1 1\\n') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('123 456') == '1234'\nassert solution('18121038 10') == '18121037'\nassert solution('18121038 10') == '18121037'",
        "num_ids_2": 24,
        "num_ids_4": 58
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\nassert solution('1234512345 1234512345 1234512345') == '1234512345123451234512345123451234512345'\nassert solution('123450995 0') == '123450995'\nassert solution('123450995 1') == '123450995'\n",
        "num_ids_2": 27,
        "num_ids_4": 80
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123450995 1') == '123451000'\nassert solution('184 1') == '180'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"180\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == \"180\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"7 1\") == \"8\"\n\n--Input--\nThe first line of input contains a single integer, $C$, denoting the price of candy Mirko is going to buy, and the second line of input contains a single integer, $K$, denoting the number of zeros on the smallest bill Mirko has.\n\n--Output--\nThe first and only line of output should contain one integer, $C$ rounded to the nearest amount Mirko can pay.\n\n--Examples--\nSample Input 1:\n184 1\nSample Output 1:\n180\n\nSample Input 2:\n123450995 1\nSample Output 2:\n123451000\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3\\n') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1\\n') == '0.000000'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n2 2\n3 3\n''') == '0.000000'\nassert solution('''\n5\n0 1\n1 0\n1 1\n2 2\n3 3\n''') == '0.000000'\nassert solution('''\n10\n-1 1\n1 -1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '0.000000'\nassert solution('''\n3\n0 1\n1 0\n1 1\n''') == '0.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\nprint('All tests passed!')\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n1 1\n2 2\n3 3\"\"\") == \"0.000000\"\nassert solution(\"\"\"3\n0 1\n1 0\n1 1\"\"\") == \"1.000000\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n5\n0 0\n1 0\n2 1\n3 2\n4 2\n\"\"\") == \"0.50000\"\nassert solution(\"\"\"\n5\n0 0\n1 1\n2 0\n3 1\n4 1\n\"\"\") == \"1.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3\n''') == '0.000000'\nassert solution('''3\n1 2\n0 0\n1 2\n''') == '0.2147483647'\nassert solution('''1\n0 1\n''') == '2.00000'\nprint('SUCCESS')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1') == '0.000000'\nassert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n2\n1 1\n2 2\n\"\"\") == \"1.000000\"\nassert solution(\"\"\"\n5\n-1 -1\n1 0\n1 1\n2 2\n3 3\n\"\"\") == \"1.000000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 1\n1 0\n1 1\n''') == '0.000000'\nassert solution('''\n3\n-2 3\n0 2\n1 1\n''') == '0.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1\\n2\\n3\\n4\"\nassert solution(\"8\") == \"1\\n2\\n6\\n8\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n4\n2\n3 2 3\n4 2 5\n1 1 5\n''') == '1 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 2 1 2\\n3 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4\\n1 2 3\\n2 4 6\\n2 3 7\\n3 8 9'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2\\n2 3\\n4 2\\n3 4\\n'\nprint(solution('''\n4\n2 1 2\n3 2 3 4\n3 4 2 1\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 3 4'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 3 4 6 8'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\"\nprint(solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\"))\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 2 6 8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 8'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 5') == '8'\nassert solution('3 3 3') == '9'\nassert solution('1 2 3') == '10'\nassert solution('2 0 0') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"36\"\nassert solution(\"2\") == \"2\"\nassert solution(\"21\") == \"43\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 5') == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '60'\nprint('Congratulations! All test cases passed.')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '8'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 0 2\n''') == '1.6666666666666667'\nassert solution('''3\n1 -1 4\n''') == '2.5'\nassert solution('''5\n-1 -2 2 3 4\n''') == '3.333333333333333'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 0 2\n\"\"\") == \"1.6666666666666667\"\nassert solution(\"\"\"\n4\n0 1 0 0\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n5\n1 0 2 1 1\n\"\"\") == \"2.5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n5 -1 2 3 -2\n5 -1 -1 3 2\n3\n-1 -1 2\n3 1 2\n3''') == '2.5'\nassert solution('''5\n5 0 2 3 -1\n5 0 -1 3 2\n5 1 2 3\n3\n-1 -1 2\n3 1 2\n3''') == '1.0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 0 2\n''') == '1.6666666666666667'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n3 0 2\\n1 -1 4\\n\") == \"2.5\"\nassert solution(\n    \"4\\n3 0 2\\n1 -1 4\\n\") == \"2.5\"\nassert solution(\n    \"5\\n3 0 2\\n1 -1 4\\n\") == \"3.3333333333333333\"\nassert solution(\n    \"6\\n3 0 2\\n1 -1 4\\n\") == \"3.3333333333333333\"\nassert solution(\n    \"8\\n3 0 2\\n1 -1 4\\n\") == \"3.6666666666666667\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1.667'\nassert solution('2') == '2.5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 -1 4\n''') == \"2.5\"\n\nassert solution('''\n5\n-1 0 3 -1\n''') == \"2.333333333333333\"\n\nassert solution('''\n4\n2 -1 0 3\n''') == \"2.0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '0'\nassert solution(\"2\\n1 2\") == \"1.5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n4 3\n\"\"\") == \"1.3333333333333333\"\n\nassert solution(\"\"\"\n3\n4 1 2\n\"\"\") == \"2.5\"\n\nassert solution(\"\"\"\n3\n3 0 2\n\"\"\") == \"1.6666666666666667\"\n\nassert solution(\"\"\"\n3\n3 0 2\n\"\"\") == \"2.5\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n1 0 2\") == \"1.0\"\nassert solution(\n    \"3\\n3 0 2\") == \"1.0\"\nassert solution(\n    \"3\\n-1 4\") == \"2.5\"\nassert solution(\n    \"3\\n0 2\") == \"2.5\"\nassert solution(\n    \"3\\n1 2\") == \"2.5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '5'\nassert solution('15 12') == '7'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('100') == '99'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '6'\nassert solution('15') == '7'\n\nimport unittest\n\nclass TestSolutions(unittest.TestCase):\n    def test_solution(self):\n        def solution(stdin: str) -> str:\n            pass\n        self.assertEqual(solution('6'), '6')\n        self.assertEqual(solution('15'), '7')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n''') == '3 4\n\nassert solution('''\n7 3\n''') == '6\n'''\n\nimport math\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('10') == '5'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n''') == '5'\nassert solution('''\n10\n1\n''') == '7'\nassert solution('''\n100000\n4\n''') == '7'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7\") == \"6\"\nassert solution(\"25 12\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == ''\nassert solution(\"123864 123865\") == '1'\nassert solution(\"198765 198769\") == '0'",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('123456 123456') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''123864 123865''') == '1'\nassert solution('''198765 198769''') == '0'\nassert solution('''123456 123864 123865''') == '0'\nprint('All test cases passed.')",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11') == '1'\nassert solution('0 1 2 3 4 5 6 7 8 9 10') == '0'\n\nassert solution('10 9 8 7 6 5 4 3 2 1') == '0'\n\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '1'",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n\"\"\"\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n4\n1\n0.9\n''') == '0.66666667'\n\nassert solution('''8\n8\n1\n1\n0.9\n''') == '0.66666667'\n\nassert solution('''10\n8\n2\n1\n0.8\n''') == '0.66666667'\n\nassert solution('''10\n8\n1\n1\n0.8\n''') == '0.66666667'\n\nassert solution('''10\n8\n1\n1\n0.8\n''') == '0.66666667'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '0.50000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4''') == '0.50000000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0.66666667'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == '0.50000000'\nassert solution(\"3\") == '0.66666667'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\nassert solution('3') == '0.33333333'",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('180\\n') == 'triple 20'\nassert solution('96\\n') == 'triple 19'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n''') == 'impossible', 'First Example'\nassert solution('''\n6\n''') == 'double 10', 'Second Example'\nassert solution('''\n3\n''') == 'triple 20', 'Third Example'\nassert solution('''\n8\n''') == 'triple 40', 'Fourth Example'\nassert solution('''\n4\n''') == 'triple 40', 'Fifth Example'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''single 1\ndouble 2\nsingle 3\ndouble 5\ndouble 9\ntriple 10\ntriple 13\ntriple 19\ntriple 20\nsingle 20''') =='single 1\\ntriple 19\\ntriple 20\\n'\nassert solution('''triple 10\nsingle 10\ndouble 15\ntriple 17\ndouble 20\ntriple 20\nsingle 20''') =='single 17\\ntriple 20\\n'\nassert solution('''single 10\ntriple 10\ndouble 20\nsingle 20''') == 'impossible\\n'\n\nprint(solution('''single 4\ntriple 4\ndouble 6\ntriple 4\nsingle 7\ntriple 4\ndouble 7\nsingle 7'''))\n\nprint(solution('''triple 5\nsingle 10\ndouble 16\ntriple 16\nsingle 16\ntriple 10\ndouble 8\nsingle 10'''))",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('180') == \"triple 20\"\nassert solution('96') == \"triple 19\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('180') =='single 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"triple 19\\ndouble 15\\nsingle 9\\nimpossible\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'impossible'\nassert solution('1') =='single 1'\nassert solution('2') =='single 2'\nassert solution('3') == 'double 3'\nassert solution('4') == 'double 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\nassert solution(\"10 6 8\") == \"1024\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2 2\n''') == '36'\nassert solution('''\n5 2 2\n''') == '168'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"36\"\nassert solution([10, 4, 7]) == \"168\"\nassert solution([5, 2, 2]) == \"36\"\nassert solution([3, 7, 5]) == \"60\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 5') == '36'\nassert solution('5 2 5') == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 2') == '4'\nassert solution('5 2 2') == '4'\nassert solution('10 2 2') == '8'\nassert solution('10 3 2') == '12'\nassert solution('10 4 2') == '16'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nassert solution('10 10 10') == '300'\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 1719
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 2\") == \"36\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 2 3\") == \"9\"\nprint('You passed all the tests!')\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 7\") == \"216\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 10\\n5 8') == '7'\nassert solution('2\\n3 8\\n5 8') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\n    \"1\",\n    \"3 10\",\n    \"5 8\",\n]) == \"7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 10\\n5 8') == '1'\nassert solution('1\\n3 8\\n5 8') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n10 10\n''') == '1000000000'\n\nassert solution('''\n2\n3 8\n5 8\n''') == '1000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 3, 10]) == 7\nassert solution([2, 3, 8]) == 1\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 10') == '7'\nassert solution('2\\n3 8 5') == '1'\n\"\"\"\n\nimport sys\nimport unittest\n\nclass Input:\n    def __init__(self, stdin: str):\n        self.lines = stdin.splitlines()\n        self.lines = list(map(lambda s: s.split(), self.lines))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1000000000'\nassert solution('1 2 3') == '1000000000'\nassert solution('1 1') == '1000000000'\nassert solution('1 1 2') == '1000000000'\nassert solution('1 2 1') == '1000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nSimon says smile.\n''') =='smile.'\nassert solution('''\n3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n''') == 'raise your right hand.'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') =='smile.'\nassert solution('3') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == \"smile\"\nassert solution('3') == \"raise your right hand\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSample Output 2:\\n raise your right hand.\\n raise your left hand.') =='raise your right hand.'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nsimonsays') == 'Simon says smile.'\nassert solution('3\\nsimonsays') == 'Simon says raise your right hand.'\nassert solution('4\\nsimonsays') == 'Simon says raise your left hand.'\nassert solution('5\\nsimonsays') == 'Simon says raise your left hand.'\nassert solution('1\\nSimon says') == 'Simon says raise your right hand.'\n",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \"smile.\"\nassert solution(\"2\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your left hand.\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nsimon says raise your left hand.\\n') == 'raise your left hand.'\nassert solution('2\\nsimon says raise your right hand.\\n') == 'raise your right hand.'\nassert solution('3\\nsimon says touch your nose.\\n') == ''\n",
        "num_ids_2": 48,
        "num_ids_4": 66
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nSimon says raise your right hand.\\nLower your right hand.') == 'raise your right hand.'\nassert solution('2\\nSimon says raise your right hand.') == 'Simon says raise your right hand.'\nassert solution('1\\nSimon says raise your right hand.') == 'Simon says raise your right hand.'\n",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\\n'",
        "num_ids_2": 72,
        "num_ids_4": 122
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 0 4 6 10 12 16 18\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"5\"\nprint(solution(__import__('sys').stdin.read()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == \"5\"\nassert solution('1 2 4 6 10 12 16 18') == \"0\"\nassert solution('10 11 12 13 14 15 16 17 18 19') == \"31\"\n",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\nAA\nAT\nTT\nTC\n''') == '3'\n\nassert solution('''1 1\nA\n''') == '0 1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == \"3\"\nassert solution('''4 1\nA\nA\nG\nT\n''') == \"2\"\nprint(solution('''10 20\nAAABBAABAA\nABABAABBAA\nBABAABBAAA\nAABABAABAA\nABABAABBAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABABAABAA\nAABAB",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"4 1\") == \"2\"\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"5 1\") == \"0 1\"\nassert solution(\"9 9\") == \"0 1\"\nassert solution(\"4 1\") == \"0 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution() == '0 1'\nassert solution() == '0 2'\nassert solution() == '0 3'\n\n'''\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC\n''') == '3'\nassert solution('''4 1\nA\nA\nG\nT\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('5 1\\nAA\\nAT\\nTT\\nTC') == '2'\nassert solution('5 1\\nAA\\nAT\\nTT\\nTC') == '1'\nassert solution('5 1\\nAA\\nAT\\nTT\\nTC') == '0'\nassert solution('10 1\\nTTAAACAAATTTAAAGAAATTTAAATTTAAAGTTAAATTTAAAGTTAAATTTAAATTTAAATTTAAATTTAAAGTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAATTTAAAT",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\nA\nA''') == '2'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 2\nAA\nAT\nTT\nTC''') == '2'\nassert solution('''10 2\nAA\nAT\nAA\nAT\nAT\nAT\nAA\nAA\nAA\nAA\nAT\nAA\nAA\nAA\nAA\nAA\nAA\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAA\nAT\nAA\nAT\nAT\nAT\nAT\nAT\nAT\nAA\nAT\nAA\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAA\nAT\nAA\nAA\nAT\nAA\nAA\nAT\nAA\nAA\nAT\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAT\nAA\nAA\nAA\nAT\nAA\nAA\nAA\nAA\nAA\nAT\nAA\nAT\nAT\nAT\nAT\nAA\nAT\nAT\nAA\nAA\nAA\nAA\nAT\nAT\nAT\nAA\nAA\nAT\nAT\nAT\nAA\nAT\nAT\nAT\nAT\nAA\nAT\nAA\nAA\nAA\nAA\nAT\nAT\nAT\nAT\nAT\nAA\nAT\nAT\nAT\nAA\nAT\nAA\nAA\nAA\nAT\nAT\nAA\nAA\nAA\nAA\nAA\nAT\nAT\nAA\nAA\nAT\nAT\nAT\nAA\nAT\nAA\nAA\nAT\nAT\nAA\nAA\nAA\nAA\nAT\nAT\nAA\nAA\nAA\nAA\nAT\nAT\nAT\nAA\nAT\nAA\nAT\nAT\nAA\nAA\nAA\nAA\nAA\nAT\nAT\nAT\nAA\nAT\nAA\nAA\nAT\nAT\nAA\nAT\nAA\nAT\nAT\nAA\nAT\nAA\nAA\nAA\nAT\nAA\nAA\nAA\nAA\nAA\nAT\nAA\nAA\nAA\nAT\nAT\nAA\nAA\nAT\nAT\nAT\nAA\nAA\nAA\nAA\nAA\nAT\nAA\nAA\nAA\nAA\nAT\nAA\nAA\nAA\nAA\nAA\nAT\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\nAA\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''a\nb\n''') == '-1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\nassert solution('abc') == -1",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"./test_files/test1.in\") == \"a\"\nassert solution(\"./test_files/test2.in\") == \"-\"\nassert solution(\"./test_files/test3.in\") == \"a\"\nassert solution(\"./test_files/test4.in\") == \"b\"\nassert solution(\"./test_files/test5.in\") == \"-\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-\"\n\nassert solution(\"aaabbbbcccdddd\") == \"bbabab\"",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\n'''\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nprint(solution(input()))\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nprint(solution(input()))\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz needs 2 more piece[s] of chicken!'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 20\\n2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('10 20\\n8 9') == 'Dr. Chaz needs 1 more piece of chicken!'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1 2'\n) == 'Dr. Chaz needs 2 more piece[s] of chicken!'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nprint(solution(*input().split()))\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n\"\"\"\n\nn, m = map(int, input().split())\nx = int(input())\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"Dr. Chaz will have 2 pieces of chicken left over!\"\nassert solution(input) == \"Dr. Chaz needs 2 more piece[s] of chicken!\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == 'Dr. Chaz needs 2 more piece[s] of chicken!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 2 1\\n3 2 1\\n5 2 1\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 10\") == \"2\"\nassert solution(\"3 30\") == \"0\"\nassert solution(\"6 6\") == \"0\"\nassert solution(\"5 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == '-2'\nassert solution(\"3 50\\n5 5 5\\n5 5 2\\n2 2 1\\n\") == '0'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 20\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\nprint('all test cases passed...')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\"\nassert solution(\"10 15 10\\n8 4 2\\n2 7 2\\n3 5 1\\n\") == \"0\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '0'\nassert solution('''\n100 10\n1 1 2\n2 2 2\n3 2 1\n''') == '20'\nassert solution('''\n4 20\n1 1 2\n2 2 2\n3 2 1\n4 3 3\n''') == '-2'\nassert solution('''\n10 100\n1 1 2\n2 2 2\n3 2 1\n4 3 3\n5 2 3\n6 1 3\n7 2 2\n8 1 1\n9 2 1\n10 1 2\n''') == '-2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '-2'\nassert solution('5 20\\n5 5 5\\n5 3 3\\n6 6 6\\n') == '0'\nassert solution('5 20\\n5 10 5\\n5 5 3\\n6 6 6\\n') == '2'\nassert solution('10 10\\n5 5 5\\n5 3 3\\n6 6 6\\n') == '-2'\nassert solution('30 30\\n5 5 5\\n5 3 3\\n6 6 6\\n') == '0'\n",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\n\nassert solution('''\n3 50\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n\nassert solution('''\n5 30\n1 1 1\n5 2 3\n5 2 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'as'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala', 'Wrong!'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\n\nassert solution('''5 2\na#\nb#\nk#l#\n''') == 'lak'\n\nassert solution('''5 5\nkala\nkas\nlka\nkasm\nklak\n''') == 'klam'\n\nassert solution('''5 5\nkala\nkas\nlka\nkasm\nklak\n''') == 'klam'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'as'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''luka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'kala'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''luka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'luka'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'luka'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'luka'\nassert solution('''luka\no#a#\nkula\ni#a#\n''') == 'luka'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == \"kala\"\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\nas\n''') == \"as\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\nassert solution('2 4\\nluka\\no#a#\\nkula\\nk#a#\\ni#a#') == 'as'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'i'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == \"kala\", \"Should return 'kala'\"\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\na\n''') == \"a\", \"Should return 'a'\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WNEENWEENEENE') == 10\nassert solution('NSEW') == 4\nassert solution('NSEW') == 4\nassert solution('NSEW') == 4\nassert solution('NSEW') == 4\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\nassert solution('AABBCC') == '11'\n\nSolution:\n\n<number_of_substrings, number_of_chars_to_encode> = <for loop>\n\n<number_of_substrings> = <sum of length of all substring in stdin>\n\n<number_of_chars_to_encode> = <sum of number of characters in substring>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a substring)>\n\n<for loop> = <for loop (which stops at a",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\nprint('All test cases passed.')\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\nprint(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"13\"\n\nassert solution(input()) == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('WNEENWEENEEN') == '10'\nassert solution('NSEW') == '4'\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEEN\") == 10",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('WNSEW') == '10'\nassert solution('NNSEW') == '12'\nassert solution('NEESEW') == '6'\nassert solution('EEESNE') == '2'\nassert solution('NEEENW') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('WNEENWEENEEN') == '10'\nassert solution('NSEW') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4\n''') == '1 - 2 = 3 - 4'\nassert solution('''\n0 4 2 2\n''') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == '1 - 2 = 3 - 4'\nassert solution(\"0 4 2 2\") == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 4\n1 - 2 = 3 - 4''') == '1 - 2 = 3 - 4'\nassert solution('''0 4 2 2\n0 * 4 = 2 - 2\n0 + 4 = 2 * 2\n0 + 4 = 2 + 2\n0 / 4 = 2 - 2''') == '0 * 4 = 2 - 2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', 'First'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', 'Second'\nassert solution('0 - 4 2 2') == '0 + 4 = 2 * 2', 'Third'\nassert solution('0 + 4 2 2') == '0 + 4 = 2 + 2', 'Fourth'\nassert solution('0 / 4 2 2') == '0 - 2 = 2 / 2', 'Fifth'\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', \"Small\"\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', \"Medium\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 2, 3, 4]) == \"1 - 2 = 3 - 4\"\nassert solution([0, 4, 2, 2]) == \"0 * 4 = 2 - 2\"\nassert solution([10, 4, 2, 2]) == \"10 * 4 = 20 - 2\"\nassert solution([0, 4, 2, 2]) == \"0 + 4 = 2 * 2\"\nassert solution([0, 4, 2, 2]) == \"0 + 4 = 2 + 2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', \"First example\"\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', \"Second example\"\nassert solution('1 1 1 1') == \"problems ahead\", \"Third example\"\nassert solution('0 0 0 0') == \"problems ahead\", \"Fourth example\"\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 84
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n\n\nimport re\n\npattern = r'\\d{1,3} *[-=*\\/]+\\d{1,3}'\n\nwith open('input.txt') as f:\n    data = f.read().splitlines()\n    solutions = []\n    for d in data:\n        r = re.search(pattern, d)\n        if not r:\n            solutions.append(d)\n    print(sorted(solutions))",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''BANANA PIDZAMA\nSAMUEL GANES\nSAMUEL GANES''') == '''.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BANANA PIDZAMA') == '...\\n.I..\\n.D..\\n.Z..\\nBANANA\\n.M..\\n.A..'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n\"\"\"\n\nstdin = \"\"\".P..\n.I..\n.D..\n.Z..\nBANANA\"\"\"\n\nstdin = \"\"\".T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nprint(\"YOUR ANSWER:\", solution(input()))\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == '10'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'\nassert solution('1 365') == '365'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('3') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'\nassert solution('1 365') == '365'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '10'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\nassert solution('''\n100\n1 1\n1 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '28'\nassert solution('1') == '365'\nassert solution('3') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '0 1'\nassert solution('''\n4\n''') == '2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\nprint('Solution is correct')",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0 1'\nassert solution('7') == '2 3'\nassert solution('9') == '0 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2''') == '0 1'\nassert solution('''4''') == '2 3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '1 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '0 1'\nassert solution(\"2\") == '2 3'\nassert solution(\"4\") == '2 3'\nassert solution(\"5\") == '0 1'\nassert solution(\"10\") == '10 2'\n\n---\n\nThe first day, little Mirko came across a funny looking machine! It consisted of a very very large screen and a single button. When he found the machine, the screen displayed only the letter A. After he pressed the button, the letter changed to B. The next few times he pressed the button, the word transformed from B to BA, then to BAB, then to BABBA... When he saw this, Mirko realized that the machine alters the word in a way that all the letters B get transformed to BA and all the letters A get transformed to B.\n\nAmused by the machine, Mirko asked you a very difficult question! After $K$ times of pressing the button, how many letters A and how much letters B will be displayed on the screen?\n\n-----Input-----\nThe first line of input contains the integer $K$ ($1 \\leq K \\leq 45$), the number of times Mirko pressed the button.\n\n-----Output-----\nThe first and only line of output must contain two space-separated integers, the number of letters A and the number of letter B.\n\n-----Examples-----\nSample Input 1:\n1\nSample Output 1:\n0 1\n\nSample Input 2:\n4\nSample Output 2:\n2 3",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == 'B 100 49'\nassert solution('5 3') == 'B 100 49'\nassert solution('1 0') == 'A 1 197'\nassert solution('4 0') == 'A 0 99'\n\nimport sys\nfrom collections import Counter",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'\nassert solution('20 6') == 'A 0 99'\nassert solution('5 3') == 'A 0 99'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'B 100 49'\nassert solution('''\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == 'A 0 99'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\n2 1 100 2\\n3 1 100 3') == 'B 100 49'\nprint(solution('''5 2\n2 100 100\n3 100 99\n4 100 99\n5 100 100'''))\n\nassert solution('5 2\n3 100 99\n2 100 99\n1 100 99\n4 100 99\nSample Output 3:\nA 1 197\nA 49 100\n''') == 'B 1 197'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"A 0 99\\nB 1 197\\nB 0 99\\nA 0 99\\nA 0 99\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == 'A 0 99'\nassert solution('5 3') == 'B 100 49'\nassert solution('10 4') == 'A 0 99'\nassert solution('10 5') == 'A 0 99'\nassert solution('10 6') == 'A 0 99'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '9'\nassert solution('4') == '27'\nassert solution('5') == '777'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2\n1\n4\n3\n5\n''') == '168'\nprint('Congratulations, have you met the solution now? Click \"Check\" to earn cool rewards!\")'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    ) == \"168\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '168'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1\n2\n''') == '1'\nprint(solution('''\n5\n2\n1\n4\n3\n5\n'''))\nassert solution('''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '168'\nprint(solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n8\n'''))\nassert solution('''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '20'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"168\"\nassert solution('2') == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF', 'First example'\nassert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF', 'Second example'\n'''\nTo get your puzzle done, run:\n\npython3 queens-queens.py < puzzle-inputs/10.in\n\nto see your puzzle input. This puzzle is a classic puzzle which is a good starting point to try solving.\n\nPuzzle input can be downloaded from:\nhttps://adventofcode.com/2020/day/10\n\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'DCEABA'\nassert solution('2') == 'ABBADE'\nassert solution('3') == 'CDDBCB'\nassert solution('4') == 'ABDCBD'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\nABC\nDEF\n2\n\"\"\") == \"CDBEAF\"\nassert solution(\"\"\"\n3 4\nABB\nCDD\n0\n\"\"\") == \"DCBABD\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\nABC\nDEF\n0\n\"\"\") == \"CBADEF\"\nassert solution(\"\"\"\n3 3\nABC\nDEF\n1\n\"\"\") == \"CDBEAF\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF', \"First\"\nassert solution('''\n3 3\nABC\nDEF\n1\n''') == 'CDBEAF', \"Second\"\nassert solution('''\n3 3\nABC\nDEF\n2\n''') == 'DEFABIC', \"Third\"\n\"\"\"\n##Time Limit Exceeded\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\nB\\nC\\nD') == 'BDCD'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF'\nassert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CDBEAF'\nassert solution('''\n2 10\nBCDA\nCDBA\n''') == 'BCDABCDABCDA'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\nABC\nDEF\n0\n\"\"\") == \"CBADEF\"\nassert solution(\"\"\"\n5 4\nJBC\nFCD\n12\n\"\"\") == \"JBCFCD\"\nassert solution(\"\"\"\n5 6\nQAKZ\nRBC\n2\n\"\"\") == \"QRBCAKZ\"\nassert solution(\"\"\"\n1 1\nACBC\n\"\"\") == \"ACBC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"ABCDEF\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'\nassert solution('2') == 'DEAF'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5') == '5'\nassert solution('2\\n5') == '4'\nassert solution('3\\n5') == '3'\nassert solution('4\\n5') == '3'\nassert solution('5\\n5') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4'\nassert solution('2\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '1'\nassert solution('3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4'\nassert solution('4\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '2'\nassert solution('5\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '1'\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100 T\\n100",
        "num_ids_2": 1427,
        "num_ids_4": 1427
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n5\\n100 T\\n100 T\\n50 T\\n30 T\\n100 T\\n100 N\\n') == '4'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4', 'First'\nassert solution('''\n2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '5', 'Second'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('6 8') == '22'\nprint('all test cases passed...')\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"6\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"5 1\") == \"6\"\nassert solution(\"8 7\") == \"22\"\nassert solution(\"20 1\") == \"22\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 5') == '21'\nassert solution('3 4') == '8'\nassert solution('7 8') == '28'\nassert solution('9 9') == '36'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n2 2\n2 3\n1 3\n3 1\n''') == '6'\nassert solution('''6 8\n2 2\n2 3\n1 3\n3 1\n''') == '22'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"6 8\") == \"22\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n6 5 4\n7 8 9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 2\n1 2\n1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n\nSample Input 3:\n3 4\n0 0 0 0\n0 0 0 0\n0 0 0 0\nSample Output 3:\n0",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n4 3 2 1\n5 3 4\n''') == '1'\nassert solution('''6 5\n4 3 2 1\n7 8 9\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\n\nassert solution('''\n1 4\n4 3 2 1\n''') == '0'\n\nassert solution('''\n1 4\n4 3 2 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n1 2 3\n4 5 6\n''') == '1'\nassert solution('''\n2 4\n5 3 2 1\n6 7 8 9\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4') == '0'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n1 2 3\n6 5 4\n7 8 9\n''') == \"1\"\nassert solution('''\n1 1\n1 2\n3 2\n1 3\n3 4\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 3\n6 5 4\n7 8 9''') == \"1\"\n\nassert solution('''4 3\n1 2 3\n8 7 6\n9 0 10''') == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"28\"\nassert solution(\"3\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"28\", solution(sys.stdin.read())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"28\"\nassert solution(\"3\") == \"16\"\nassert solution(\"10\") == \"28\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '16'\nassert solution('10') == '28'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '16'\nassert solution('10') == '28'\nassert solution('3') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n3\n4\n6\n2\n''') == '28'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '28'\nassert solution('1') == '28'\nassert solution('5') == '16'\nassert solution('10') == '16'\nassert solution('15') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"28\"\nassert solution(\"10\") == \"16\"\nassert solution(\"2\") == \"16\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1''') == '1'\nassert solution('''10\n3\n4\n6\n2\n12\nSample Output 3:\n16\n''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    10\n    3\n    4\n    6\n    2\n''') == '28'\n\nassert solution('''\n    100\n    3\n    10\n    2\n    12\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"hisshisshiss\") == \"hisshisshiss\"\nassert solution(\"aabbssssssssss\") == \"aabbssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss",
        "num_ids_2": 26,
        "num_ids_4": 1824
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''kukkukkkkkkkkkkkkkkkkkk''') == \"hiss\"\nassert solution('''oockkkkkkkkkkkkkkkkkkk''') == \"no hiss\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"hi hi hi hi hi hi hi\") == \"hiss\"\nassert solution(\"hi hi hi\") == \"no hiss\"\nassert solution(\"mississippi\") == \"no hiss\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabab\n''') == 'no hiss'\nassert solution('''\nhiss\n''') == 'hiss'\nassert solution('''\noctopuses\n''') == 'no hiss'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"cat\") == \"no hiss\"\nassert solution(\"abab\") == \"hiss\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"amiss\") == \"hiss\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == None\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read().strip()) == 'hiss'\n\n'''\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"amiss\") == \"hiss\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('octopuses') == 'no hiss'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux''') == '5'\nassert solution('''4\nc++\nC++\nc\nc#\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"c:\\n\") == \"c\\n\"\nassert solution(\"C:\\n\") == \"c\\n\"\nassert solution(\"C:\\\\n\") == \"c:\\\\n\"\nassert solution(\"C:\\\\\\\\n\") == \"c:\\\\\\\\n\"\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nc++\nC++\nc\nc#\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\nc++\nC++\nc\nc#\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\nmachine-learning\nmachine learning\nmachine learning\nmachine learning\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\nartificial-intelligence\nartificial intelligence\nartificial intelligence\nartificial intelligence\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\nCryptography\ncryptography\nCryptography\nCryptography\n\"\"\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'cryptography'\n\nassert solution('1') == 'c'\n\nassert solution('2') == 'Cryptography'\n\nassert solution('3') == 'blockchain'\n\nassert solution('4') == 'c++'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\nc++\nC++\nc\nc#\"\"\") == \"3\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nc++ c\\nCryptography\\nMachine-Learning\\nLinux\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    'TCGTTC'\n) == '21'\nassert solution(\n    'CCC'\n) == '9'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''CGGTTT\nTTTTTT\nTTTTTT\nTTTTTT\nCGGTTT\nCGGTTT\nTTTTTT\nTTTTTT\nCGGTTT''') == '27'\n\nassert solution('''CGGTTT\nTTTTTT\nTTTTTT\nTTTTTT\nCGGTTT\nCGGTTT\nTTTTTT\nTTTTTT\nCGGTTT''') == '29'\n\nassert solution('''TCGTTT\nTTTTTT\nTTTTTT\nTTTTTT\nCGGTTT\nCGGTTT\nTTTTTT\nTTTTTT\nCGGTTT''') == '27'\n\nassert solution('''CGGTTT\nTTTTTT\nTTTTTT\nTTTTTT\nCGGTTT\nCGGTTT\nTTTTTT\nTTTTTT\nCGGTTT''') == '29'\n\nassert solution('''TTTTTT\nTTTTTT\nTTTTTT\nTTTTTT\nTTTTTT\nTTTTTT\nTTTTTT\nTTTTTT\nTTTTTT''') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"TCTGG\") == \"21\"\nassert solution(\"CCTGT\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\nassert solution('TCGTTCG') == '12'\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"-180\") == \"90\"\nassert solution(\"-180\") == \"90\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\\n0\\n90\") == \"90\"\nassert solution(\"\\n90\\n180\") == \"180\"\nassert solution(\"\\n90\\n270\") == \"90\"\nassert solution(\"\\n180\\n180\") == \"180\"\nassert solution(\"\\n180\\n90\") == \"90\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('315\\n45\\n') == '90'\nassert solution('180\\n270\\n') == '90'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"315\") == \"90\"\nassert solution(\"-180\") == \"90\"\nassert solution(\"-315\") == \"180\"\nassert solution(\"180\") == \"90\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n315\n45\n''') == '90'\nassert solution('''\n180\n270\n''') == '90'\nassert solution('''\n360\n0\n''') == '180'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'\nassert solution('-180') == '-90'",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n315') == '\\n90'\nassert solution('\\n180') == '\\n90'\nassert solution('\\n270') == '\\n270'\nassert solution('\\n300') == '\\n-90'\n\ninput_string = input()\nresult = solution(input_string)\nprint(result)\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n315\\n45') == '90'\nassert solution('\\n180\\n270') == '90'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n23\n18\n13\n99\n''') == '2'\n\nassert solution('''\n2\n1\n11\n''') == '1'\n\nassert solution('''\n1\n1\n1\n''') == '2'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n2\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\n\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '1'\n\nassert solution('''\n9\n1\n2\n4\n8\n10\n16\n20\n24\n26\n28\n29\n30\n''') == '4'\n\nassert solution('''\n2\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1\n23\n18\n13\n99\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\n\nassert solution('''\n5\n1\n23\n18\n13\n99\n''') == '2'\n\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '1'\nassert solution('20') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"6\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\n\"\"\"\n\nstdin = ''\nfor i in range(int(input())):\n    stdin += input() + '\\n'\n\nprint(len(stdin.replace('\\n', '')))\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\nassert solution('''\n1\n3\n4\n''') == '2'\nassert solution('''\n7\n1\n5\n23\n18\n13\n99\n10\n''') == '2'\nassert solution('''\n5\n5\n5\n5\n5\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"BWWWBBWW\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('WWBWBB') == '1'\nassert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''WBWBWBW\n\nBWBWBWBW\n\nWBWBWBW\n\nWBWBWBW\n\nWBWBWBW\n\nBWBWBWBW\n\nWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWBWBW\n\nBWBWB",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWBBBWW\") == \"1\"\nassert solution(\"BBWBBBBW\") == \"1\"\nassert solution(\"WBWBWBWW\") == \"0\"\nassert solution(\"WBWBWBWW\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nWBBWBBW\n''') == '1'\nassert solution('''\nWWWWBBW\n''') == '0'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBWWBBBBWWWW') == '1'\nassert solution('WWWWBBWWWWWWBBWW') == '1'\nassert solution('WWWWBBWWWWWWBBWWBBBBWWWWBBWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWBBWWWWWWWWWWBBWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWBBWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWBBWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWBBWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",
        "num_ids_2": 30,
        "num_ids_4": 1740
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWWWWWWWWWWWWWW') == '0'\nassert solution('BWWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'\nassert solution('WWWWWWW') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nprint(solution('''\n3 3 3 3\n'''))\nassert str(float('1.299038105676658')) == '1.299038105676658'\nprint(solution('''\n1 2 1 1\n'''))\nassert str(float('1.299038105676658')) == '1.299038105676658'\nprint(solution('''\n3 3 3 3\n'''))\nassert str(float('1.299038105676658')) == '1.299038105676658'\nprint(solution('''\n1 2 1 1\n'''))\nassert str(float('1.299038105676658')) == '1.299038105676658'\nprint(solution('''\n3 3 3 3\n'''))\n",
        "num_ids_2": 50,
        "num_ids_4": 108
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('10 10 10 10') == '10.0'\nassert solution('10 10 10 10') == '10.0'\nassert solution('10 10 10 10') == '10.0'\n",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('5 5 5 5') == '12'\n",
        "num_ids_2": 34,
        "num_ids_4": 47
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('1 2 3 4') == '8.09243060240924'\nassert solution('10 10 10 10') == '100.000000'\n",
        "num_ids_2": 42,
        "num_ids_4": 57
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('8 10 5 15') == '44.0'\nassert solution('10 20 30 40 50') == '97.5'\n",
        "num_ids_2": 34,
        "num_ids_4": 65
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1.299038105676658'\nassert solution('3 3 3 3') == '9'\nassert solution('3 1 2 3') == '1.5'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('3 3 3 3') == '9'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 6 4 6\") == \"11.33333\", \"Maximum area of a quadrilateral with 4 side lengths of 6\"\nassert solution(\"4 4 4 4\") == \"16.0\", \"Maximum area of a quadrilateral with 4 side lengths of 4\"\nassert solution(\"1 1 1 1\") == \"1.0\", \"Maximum area of a quadrilateral with 4 side lengths of 1\"",
        "num_ids_2": 61,
        "num_ids_4": 91
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('3 2 2 3') == '6'",
        "num_ids_2": 34,
        "num_ids_4": 47
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooooooooobert\") == \"robert\"\nassert solution(\"roobert\") == \"robert\"\nassert solution(\"roooooooooobert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooooobert\") == \"robert\"\nassert solution(\"roobrarbbob\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\n",
        "num_ids_2": 25,
        "num_ids_4": 63
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooooobert') == 'robert'\nassert solution('rooberrt') == 'robert'\nassert solution('rooberr') == 'robert'\nassert solution('rooberrr') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooooobert') == 'robert'\nassert solution('roooooobert') == 'robert'\nassert solution('roobt') == 'robert'\nassert solution('roobt') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('roobert') == 'robert'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('roobert') == 'robert'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('robbobberter') == 'robert'\nassert solution('bbbbbbrttter') == 'bob'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('roobertapalaxiamethostenes') == 'robert'\nassert solution('roobertapalaxiamethostenes') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('robert') == 'robert'\nassert solution('rroooobert') == 'robert'\nassert solution('robert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('0 9 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '108 4'\nassert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 9 7\\n') == '108 4'\nassert solution('1000 900 7\\n') == 'Impossible'\nassert solution('100 100 7\\n') == 'Impossible'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\nassert solution('''\n1000 900 3\n''') == 'Impossible'\nassert solution('''\n1000 900 1\n''') == '1 1'\nassert solution('''\n1000 9000 7\n''') == 'Impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nassert solution(\"1000 1000 7\") == \"Impossible\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1000 9 7\n''') == '108 4'\nassert solution('''1000 900 7\n''') == 'Impossible'\nassert solution('''1000 9 9\n''') == 'Impossible'\nprint('All Tests Passed')\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n#X#X\\n\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"2 2\\n#.\\n#.\\n\") == \"1\\n1\\n0\"\nassert solution(\"5 5\\n#.\\n.X\\n.X\\n.X\\n#X#\\n\") == \"1\\n2\\n2\\n1\\n2\\n0\"\n",
        "num_ids_2": 68,
        "num_ids_4": 117
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n....\n....\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"6 2\") == \"3\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '1'\nassert solution('5 5') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"2 3 4 1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"8 8\") == \"23\"\nassert solution(\"10 10\") == \"120\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '1'\nassert solution('3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 4\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1953566\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\"\nassert solution(\"23\") == \"102\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n212\n1253''') == '1953566'\nassert solution('''5\n23\n17\n43\n52\n22''') == '102'\nassert solution('''4\n10000\n9999\n3\n6''') == '1000000'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n4\\n20\\n10\\n100') == '1010'\nassert solution('3\\n6\\n12\\n18\\n24') == '818501'\n",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n212\n1253\n''') == '1953566'\nassert solution('''\n5\n23\n17\n43\n52\n22\n''') == '102'\nassert solution('''\n4\n1245\n1254\n13\n''') == '125'\nassert solution('''\n9\n18\n40\n42\n''') == '384'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(\"\"\"\n2\n212\n1253\n\"\"\")\n\nprint(solution())\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n212\\n1253') == '1953566'\nassert solution('5\\n23\\n17\\n43\\n52\\n22') == '102'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1953566\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"102\"\n\n'''\n\nfrom math import *\nn=int(input())\nsum=0\nfor i in range(1,n+1):\n    sum+=i*(10**(n-i))\nprint(sum)\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n212\n1253\n''') == '1953566'\nassert solution('''\n5\n23\n17\n43\n52\n22\n''') == '102'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n22\\n2\\n3\\n\") == \"102\"\nassert solution(\"4\\n29\\n16\\n16\\n\") == \"144\"\nassert solution(\"5\\n1\\n2\\n3\\n\") == \"131\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nprint('Congratulations! All test cases passed.')\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000', 'Sample Test 1'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000', 'Sample Test 2'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10 10\\n3 3 3') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9\\n3 2 1') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 10 10\\n3 3 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"9 9 9\\n2 2 1\") == \"1.000000 1.500000 2.000000\"\nassert solution(\"9 9 9\\n1 1 1\") == \"1.000000 1.500000 1.500000\"\nassert solution(\"9 9 9\\n1 1 1\\n1 1 1\") == \"1.000000 1.500000 1.500000\"\n",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10 10') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('20 10 10') == '0.000000 0.000000 0.000000'\nassert solution('15 10 10') == '0.000000 1.500000 0.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5 5 5\n3 3 3\n''') == '0.000000 0.000000 0.000000'\n\nassert solution(\n'''\n5 5 5\n3 2 1\n''') == '0.000000 3.000000 6.000000'\n\nassert solution(\n'''\n5 5 5\n1 1 2\n''') == '0.000000 0.000000 0.000000'\n\nassert solution(\n'''\n2 6 7\n1 2 1\n''') == '1.000000 0.000000 0.000000'\n\nassert solution(\n'''\n3 5 5\n1 2 1\n''') == '0.333333 0.666667 0.83333'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"0 0 0\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"0 1 1\") == \"0.000000 0.000000 0.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\nprint('All test cases passed.')\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('h<tsac<') == 'htsac'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"forritun\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''a<bc<\nfoss<<rritun''') == 'britun'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\nassert solution(\"x<y<z\") == \"y\"\nassert solution(\"x<y<z<w\") == \"x<y<z\"\nassert solution(\"<w<x<y<z\") == \"<w<x<y<z\"\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''a<bc<''') == 'b'\nassert solution('''foss<<rritun''') == 'forritun'''",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP', \"First\"\nassert solution('Mirko-Slavko') == 'MS', \"Second\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == 'MS'\nassert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 48
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('KMP') == 'KMP', 'Wrong answer'\nassert solution('MS') == 'MS', 'Wrong answer'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"MS\"\n\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('Einstein-Newton') == 'EN'\nassert solution('Turing-Computer') == 'TCA'\nassert solution('Petersen-Jarosz') == 'PJ'\n",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"MS\"\nprint(\"You're a wise guy and you win!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Province or Gold\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\nassert solution(\"0 0 0\") == \"Province or Gold\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 0') == 'Estate'\nassert solution('2 1 0') == 'Province'\n'''\n\nn, p, s, c = list(map(int, input().split()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0\") == \"Estate\"\nassert solution(\"2 1 0\") == \"Province\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"0 1 0\\n\"\n    \"2 1 0\"\n) == \"Province or Gold\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 1 0\\n\") == \"Estate or Copper\\n\"\nassert solution(\"2 1 0\\n\") == \"Province or Gold\\n\"\nassert solution(\"5 2 5\\n\") == \"Estate or Copper\\n\"\nassert solution(\"0 0 1\\n\") == \"Province or Gold\\n\"\nassert solution(\"2 0 0\\n\") == \"Province or Gold\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Gold or Estate'\nprint(solution())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n70 50\n''') == '90.00'\nassert solution('''\n10 3\n80 90\n''') == '75.7142857'\nassert solution('''\n100 20\n30 50\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n70 50\n''') == '90.00'\nassert solution('''\n10 3\n80 90\n''') == '75.7142857'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n70 50\n''') == '90.00'\nassert solution('''10 3\n80 90\n''') == '75.7142857'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\nassert solution(\"20 10\") == \"impossible\"\nassert solution(\"15 2\") == \"impossible\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00\\n'\nassert solution('10 3\\n80 90\\n') == '75.7142857\\n'\nprint('Congratulations! All test cases passed.')",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n70 50\n''') == '90.00'\nassert solution('''\n3 1\n90 90\n''') == 'impossible'\nassert solution('''\n7 7\n90 80 90 80 50 80 50\n''') == 'impossible'\nassert solution('''\n5 10\n95 95 95 95 95 95 95 95\n''') == 'impossible'\nassert solution('''\n10 100\n90 90 90 90 90 90 90 90 90\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4 3 2 5'\nassert solution('2 3 1 5 4 7 6') == '4 3 5 7'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '2 3 1 5 4 7 6'\nassert solution('5') == '1 2 3 4 5'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"4\\n2 1 3 4\") == \"2 3 1 4\"\nassert solution(\"7\\n2 3 1 5 4 7 6\") == \"2 3 5 7\"\nassert solution(\"3\\n2 1 3\") == \"2 3\"\nassert solution(\"8\\n1 2 3 4\") == \"8\"\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"4 2 3 5\"\nassert solution(input) == \"5 1 2 3 4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2 3\"\nassert solution(\"3\\n1 3 2\") == \"2 3\"\nassert solution(\"3\\n1 2 3\\n5 6 7\") == \"2 3 5 6 7\"",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '4 5'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7 8 9 2 1\") == \"1 2 3 5 7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\nassert solution([5, 2, 3, 1, 4, 7, 6]) == '2 3 5 7'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 1\") == \"5 0\"\nassert solution(\n    \"10 10\") == \"9 25\"\nassert solution(\n    \"0 30\") == \"23 45\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0') == '1 1'\nassert solution('20 10') == '19 25'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 0\"\n) == \"5 45\"\nassert solution(\n    \"9 30\"\n) == \"23 45\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"10 10\nSample Input 2:\n\"\"\") == \"9 25\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"11 11\"\nassert solution(\"15 20\") == \"11 15\"\nassert solution(\"9 30\") == \"11 15\"\nassert solution(\"13 14\") == \"11 15\"\nassert solution(\"0 30\") == \"23 30\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '45 45'\n\nassert solution('7 30') == '9 23'\nassert solution('10 30') == '8 11'\nassert solution('2 2') == '8 10'\nassert solution('0 0') == '00 00'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 30') == '23 45'\nassert solution('10 10') == '9 25'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2.36788\n''') == '1.414214'\nassert solution('''1.000000''') == '1.000000'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.000000\") == \"1.414214\"\nassert solution(\"2.000000\") == \"1.414214\"\n\nInput\n\n-----Input-----\n4.000000\nOutput\n\n-----Output-----\n0.135417\n\nInput\n\n-----Input-----\n3.000000\nOutput\n\n-----Output-----\n0.123213\n\nInput\n\n-----Input-----\n2.000000\nOutput\n\n-----Output-----\n0.123213\n\nInput\n\n-----Input-----\n5.000000\nOutput\n\n-----Output-----\n0.123213\n\nInput\n\n-----Input-----\n1.000000\nOutput\n\n-----Output-----\n0.123213\n\nInput\n\n-----Input-----\n1.000000\nOutput\n\n-----Output-----\n0.123213\n\nInput\n\n-----Input-----\n1.000000\nOutput\n\n-----Output-----\n0.123213\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\nassert solution('0.36788') == '1.414214'\nassert solution('0.36688') == '1.414214'\nassert solution('2.17272') == '1.414214'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.000000\") == \"1.414214\"\nassert solution(\"2.000000\") == \"1.414214\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"\nprint(\"You're a codebreaker! Nice work!\")\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000') == '1.414214'\n\nassert solution('2.000000') == '1.414214'\n\nassert solution('0.36788') == '1.414214'\n\nassert solution('2.718281') == '1.414214'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3.0') == '3.0'\nassert solution('0.9') == '1.0'\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0.36788\") == \"1.414214\"\nprint(solution(\"2.718281\"))\nprint(solution(\"1.000000\"))\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2,1\"\nassert solution(\"50\") == \"2,1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3:\n2,1\n2,2\n3,2''') == '3:2,1\\n2:2,2\\n3:2,2\\n'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0:'\nassert solution('2') == '2:1'\nassert solution('50') == '50:2'\nassert solution('100') == '100:3'\nassert solution('150') == '150:5'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n50''') == '50:2,1,2,2,3'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2:\"\nassert solution(\"3\") == \"3:\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2,1'\nassert solution('3') == '3,2'\nassert solution('5') == '5,4'\nassert solution('50') == '50,2'\nassert solution('51') == '51,1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3:1'\nassert solution('50') == '50:2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1:\"\nassert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3: 2,1'\nassert solution('50') == '50: 2,1'\nassert solution('100') == '100: 2,2'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '1:'\nassert solution(\"2\") == '2:1,1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''THE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW''') == 'no'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'no'\nassert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"THE RAIN IN SPAIN\",\n    \"YES\"\n) == \"YES\"\n\nassert solution(\n    \"IN THE RAIN AND THE SNOW\",\n    \"NO\"\n) == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The first example does not return yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The second example does not return no\"\nprint(\"All test cases passed\")\n\n-----Expected Output-----\nThe output is \"yes\" if no word is repeated, and \"no\" if one or more words repeat.\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''THE RAIN IN SPAIN''') == 'yes'\nassert solution('''IN THE RAIN AND THE SNOW''') == 'no'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''RRBBBLLR''') == 'SSKKKHHS'\nassert solution('''RBLLLBRR''') == 'CHCS'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nassert solution
        "num_ids_2": 33,
        "num_ids_4": 1429
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nR\nB\nB\nR\nR\nR\nR\nR\nR\nB\nL\nB\nB\nL\nL\nB\n''') == 'C'\nassert solution('''\nR\nB\nB\nL\nB\nL\nR\n''') == 'C'\nassert solution('''\nR\nB\nB\nL\nL\nB\nR\nR\nR\n''') == 'C'\nassert solution('''\nR\nB\nB\nR\nR\nL\nR\nR\nR\nR\nR\n''') == 'C'\nassert solution('''\nR\nB\nB\nB\nL\nB\nR\nR\nR\n''') == 'C'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RBBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nprint('all tests passed')\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\n\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n\nassert solution(\"1 2 3 4 5 6 7\") == \"1\\nFizz\\n2\\nFizz\\n3\\nFizz\\n4\\nFizzBuzz\\n5\\nFizz\\n6\\nFizz\\n7\\nFizz\\n\"\n\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303304 305 306 307 308 309 310 311 312 313 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 twentytwentyn",
        "num_ids_2": 72,
        "num_ids_4": 957
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\nFizzBuzz\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\n\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1\\nFizz\\n2\\nFizz\\n3\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizz\\n5\\nFizz\\n7\\n'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 7\\n') == '1\\nFizz\\nBuzz\\n'\nassert solution('2 4 7\\n') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3 7\n2 4 7''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\nFizz\\n2\\nFizz\\n4\\nFizzBuzz\\n7\\nFizz\\n5\\nFizz\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n3 3 3 2\n''') == 'It hadn't snowed this early in 3 years!'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"\nprint(solution(input()))\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10\\n0 100') == 'It hadn't snowed this early in 0 years!'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == \"It hadn't snowed this early in 3 years!\"\nassert solution('2 10') == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"\nprint(solution(input()))",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10') == 'It hadn't snowed this early in 0 years!'\nassert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n3 3 3 2\n''') == 'It hadn't snowed this early in 3 years!'\nassert solution('''\n2 10\n0 100\n''') == 'It hadn't snowed this early in 0 years!'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == \"It hadn't snowed this early in 2 years!\"\nassert solution('2\\n3\\n') == \"It had never snowed this early!\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_lines) == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1'\nassert solution('10 2') == '2'\nassert solution('10 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\") == \"1\"\nassert solution(\"10\\n10\") == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '2'\n\nimport collections\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('100 100') == '100'\n\nstdin = '2 5'\nprint(solution(stdin))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"\nassert solution(\"10 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"3\"\nassert solution(\"2 10\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1', f'input: {stdin}'\nassert solution('10 10') == '7', f'input: {stdin}'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"qwe\") == \"qwe\"\nassert solution(\"zxc\") == \"zxc\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n\"\"\"\n\nfrom itertools import product",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''bok''') == 'bok'\nassert solution('''koaski''') == 'kakosi'\nassert solution('''bok''' * 3) == 'bok' * 3\n''')\n",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '8 2'\nassert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1 1\"\nassert solution(\"6\") == \"2 2\"\nassert solution(\"3\") == \"3 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '8 2'\nassert solution('2') == '8 3'\nassert solution('3') == '8 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"8 2\"\nassert solution(\"5 1\") == \"8 2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 30
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2 2'\nassert solution('7') == '8 3'\nassert solution('100') == '16 5'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1\\n\") == \"4 1\"\nassert solution(\"4\\n2\\n\") == \"4 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '8 3'\nassert solution('8') == '8 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"stairs\\n2\\n\"\n    \"erres\\nairs\\nares\\naires\\naires\\n\"\n    \"eet\\neat\\n\"\n    \"2\\n\"\n    \"apples and pears\\n\"\n    \"plates of meat\\n\"\n) == \"YES\"\n\nassert solution(\n    \"drought\\n2\\n\"\n    \"aught\\n\"\n    \"ought\\n\"\n    \"aut\\n\"\n    \"acht\\n\"\n    \"ought\\n\"\n    \"outte\\n\"\n    \"out\\n\"\n    \"oute\\n\"\n    \"oute\\n\"\n    \"oute\\n\"\n    \"oute\\n\"\n    \"oute\\n\"\n    \"oute\\n\"\n) == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nstairs\n2\nerres airs ears ares aires\neet eat\n2\napples and pears\nplates of meat\n''') == 'YES'\nassert solution('''\ndrought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and frantic\nforever in doubt\napples and pears\n''') == 'YES'\nassert solution('''\ncake\n2\ncake and cake are cake cake and cake\ncake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and cake\ncake and cake and cake and cake and cake and cake are cake cake cake and",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    'stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\ntasty sprout\\ndifficult route\\nworried and fierce\\napples and pears\\n') == 'NO\\nNO\\nNO\\nNO\\nYES\\n'\nassert solution(\n    'clash of arms\\n2\\noutlet out ouput\\nclash of arms\\n4\\nclash of arms\\noutlet\\n') == 'NO\\nYES\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nstairs\n2\nerres airs ears ares aires\neet eat\n2\napples and pears\nplates of meat\n''') == 'YES\\nNO\\nYES\\nNO\\nYES\\n'\n\nassert solution('''\ndrought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and frantic\nforever in doubt\napples and pears\n''') == 'YES\\nNO\\nYES\\nYES\\nYES\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('erres airs ears ares aires') == 'YES'\nassert solution('eet eat') == 'NO'\nassert solution('tasty sprout') == 'YES'\nassert solution('difficult route') == 'YES'\n",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == 'YES YES NO NO YES YES YES NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"eet eat\") == \"YES\"\nassert solution(\"eet eat\") == \"NO\"\nassert solution(\"eet eat\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nstairs\n2\nerres\nears\nares\naires\neet\neat\n2\napples and pears\nplates\nof meat\n''') == 'NO'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'NO'\nassert solution('eet eat') == 'YES'\nassert solution('tasty sprout') == 'YES'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n\"\"\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n\n=======\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\", \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\nassert solution(\"\") == \"LOSE\"\nassert solution(\"WORD\") == \"WIN\"\nassert solution(\"BANANAWORD\") == \"LOSE\"\n",
        "num_ids_2": 28,
        "num_ids_4": 49
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM\n''') == 'DECREASING'\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER'\nprint('All test cases passed.')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\nBECKE\\nALI\\nJOE\\nMEGHAN\\nHOPE\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"\nassert solution(\"11\\nMEGAN\\nMEGHAN\\nMEGAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGAN\\nMEGAN\\nMEGHAN\\nMEGAN\\nMEGHAN\\nMEGAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGHAN\\nMEGH",
        "num_ids_2": 1681,
        "num_ids_4": 1681
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING', 'incorrect'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER', 'incorrect'\nprint('all test cases passed')\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'INCREASING', 'Solution failed'\nassert solution('2') == 'DECREASING', 'Solution failed'\nassert solution('3') == 'NEITHER', 'Solution failed'\nassert solution('4') == 'NEITHER', 'Solution failed'\nassert solution('5') == 'NEITHER', 'Solution failed'",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('11') == 'NEITHER'\nassert solution('12') == 'NEITHER'\nassert solution('10') == 'INCREASING'\nassert solution('3') == 'INCREASING'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'INCREASING'\nassert solution('11') == 'NEITHER'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nJOHN\\nBOB\\nANDY\") == \"NEITHER\"\nassert solution(\"5\\nJOE\\nBOB\\nANDY\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"INCREASING\"\n\n'''\n\n'''\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"DECREASING\"\nassert solution(\"11\") == \"NEITHER\"\nassert solution(\"4\") == \"NEITHER\"\nassert solution(\"10\") == \"NEITHER\"\nassert solution(\"1\") == \"NEITHER\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\nHOPE\nALI\nBECKY\n''') == 'DECREASING'\nassert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM\n''') == 'INCREASING'\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"\nassert solution(\"22\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"",
        "num_ids_2": 96,
        "num_ids_4": 160
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 10 1 John\") == \"John wins!\"\nassert solution(\"1 10 1 John 2\") == \"No winner!\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == \"George wins!\"\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == \"Nina wins!\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"No winner!\"\nassert solution(\"3 10 13\") == \"John wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\") == \"George wins!\"\nassert solution(\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"Nina wins!\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\nassert solution(\"3 20 15\") == \"Bob wins!\"\nassert solution(\"2 3 2\") == \"George wins!\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Jess wins!'\nassert solution('3 10 10') == 'No winner!'\nassert solution('4 10 10') == 'No winner!'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\"\n) == \"George wins!\"\nassert solution(\n\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\"\n) == \"Jess wins!\"\nassert solution(\n\"\"\"\n6 10 20\nAdam\nJohn\nLisa\nPaul\nGeorge\nAlice\n\"\"\"\n) == \"Alice wins!\"\n\nassert solution(\n\"\"\"\n5 10 20\nAdam\nJohn\nLisa\nPaul\nGeorge\nAlice\n\"\"\"\n) == \"Adam wins!\"\n\nassert solution(\n\"\"\"\n4 10 20\nAdam\nJohn\nLisa\nPaul\nGeorge\nAlice\n\"\"\"\n) == \"Adam wins!\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 10 13\\n\"\n    \"John\\n\"\n    \"Kelly\\n\"\n    \"George\\n\"\n    \"Kelly 1\\n\"\n    \"George 2\\n\"\n    \"Kelly 1\\n\"\n    \"John 2\\n\"\n    \"George 1\\n\"\n    \"John 3\\n\"\n    \"Kelly 3\\n\"\n    \"Kelly 1\\n\"\n    \"George 3\\n\"\n    \"George 1\\n\"\n    \"John 3\\n\"\n    \"George 3\\n\"\n    \"Kelly 1\\n\") == \"George wins!\"\n\nassert solution(\n    \"4 10 13\\n\"\n    \"Bob\\n\"\n    \"Nina\\n\"\n    \"Jess\\n\"\n    \"Tim\\n\"\n    \"Nina 2\\n\"\n    \"Bob 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Bob 2\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 2\\n\"\n    \"Nina 3\\n\"\n    \"Bob 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 3\\n\"\n    \"Bob 2\\n\") == \"Nina wins!\"\n\nassert solution(\n    \"5 10 13\\n\"\n    \"Nina\\n\"\n    \"Jess\\n\"\n    \"Nina 2\\n\"\n    \"Jess 3\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 2\\n\"\n    \"Nina 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 2\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 2\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Jess 1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 3 5 2\") == \"1.5\"\nassert solution(\"4 1 3 0 5 2\") == \"1.5\"\nassert solution(\"0 1 3 0 5 2\") == \"0.5\"\nassert solution(\"0 1 0 0 5 2\") == \"0.5\"\nassert solution(\"3 4 1 3 2\") == \"1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 0 -1 1\") == \"1.0\"\nassert solution(\"-5 -1 0 0 5 1\") == \"1.0\"\nassert solution(\"-1 1 0 0 -1 1\") == \"0.0\"\n",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 0 0 2 7 6') == \"2.0\"\nassert solution('7 3 0 0 5 4') == \"2.0\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 3 0 0 5 4\n''') == \"2.0\"\nassert solution('''\n6 0 0 2 7 6\n''') == \"2.0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n\nimport os\nimport sys\n\nfrom io import StringIO\nimport unittest\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"16\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1234567890\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('156') == '165', \"First\"\nassert solution('330') == '0', \"Second\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '5'\nassert solution('1') == '2'\nassert solution('100') == '101'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('99') == '0'\nassert solution('555') == '10'\nassert solution('664') == '9'\nassert solution('333') == '4'\nassert solution('23') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '11'\nassert solution('100') == '101'\nassert solution('999') == '1020'\nassert solution('111') == '1120'\nassert solution('1111') == '1211'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('15') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n156\n165\n''') == '330'\nassert solution('''\n330\n0\n''') == '330'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n3\n4\n''') == '1'\nassert solution('''9\n1\n4\n5\n''') == '4'\nassert solution('''1\n1\n1\n1\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''5 5\n110000 100000 130000 100000 100000\n130000 100000 100000 100000 130000\n130000 100000 130000 100000 130000\n130000 130000 130000 130000 130000\n130000 130000 130000 130000 130000\n130000 130000 130000 130000 130000\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\nassert solution('''\n5 5\n10 20 30 40 50\n15 15 15 15 15\n''') == '5'\nassert solution('''\n5 5\n10 20 30 40 50\n15 15 15 15 15\n''') == '5'\nassert solution('''\n10 10 10 10 10\n10 10 10 10 10\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '4'\nassert solution('5 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000''') == '4'\nassert solution('''5 5\n180000 185000 199999 100000\n199999 180000 170000 120000\nSample Output 3:\n3''') == '3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n5 5\n160000 160000 170000 180000\n180000 170000 140000 160000\n''') == '5'\nassert solution('''\n3 3\n140000 160000 170000 180000\n180000 170000 140000 160000\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\nSample Output 1:\n4\n\nSample Input 2:\n4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\nSample Output 2:\n3\n\n''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 3\n99999 180000 170000 120000\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"4 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000') == '4'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == \"10\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == \"1\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10', \"Wrong!\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1', \"Wrong!\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '6'\nassert solution('42') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == \"10\", \"Wrong\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\", \"Wrong\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '10', 'TEST CASE ERROR #1'\nassert solution('''42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '6', 'TEST CASE ERROR #2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == \"10\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == \"1\"\n\"\"\"\n\nimport sys\nimport re",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == '10'\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == '1'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == 'yes'\nassert solution('2 5') == 'no'\nassert solution('3 4') == 'yes'\nassert solution('4 10') == 'no'\nassert solution('5 1') == 'yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"yes\"\nassert solution(\"1 0\") == \"no\"\nprint(solution(input))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n2\n13\n''') == 'yes'\nassert solution(\n'''\n5\n3\n''') == 'no'\nassert solution(\n'''\n5\n50\n''') == 'no'\nassert solution(\n'''\n1\n3\n''') == 'no'\nassert solution(\n'''\n1\n1\n''') == 'yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"yes\"\nassert solution(\"13 3\") == \"no\"\nassert solution(\"1 0\") == \"yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"yes\"\nassert solution(\"1 2\") == \"no\"\nassert solution(\"1 1\") == \"yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''13 3\n1 0''') == 'no'\nassert solution('''1 0\n1 1''') == 'no'\nassert solution('''13 0\n1 1''') == 'yes'\nassert solution('''13 2\n1 0\n1 1''') == 'yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([13, 3]) == 'yes'\nassert solution([1, 0]) == 'no'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == 'yes'\nassert solution('1 0') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 0\n''') == 'yes'\nassert solution('''\n4 2\n''') == 'no'\n\nassert solution('''\n7 5\n''') == 'yes'\nassert solution('''\n1000 1000\n''') == 'no'\nassert solution('''\n3 3\n''') == 'yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"P01K02H03H04\nH02H10P11H02\"\"\") == r\"12 12 11 13\"\nassert solution(r\"\"\"P01K02H03H04\nH02H10P11H02\"\"\") == r\"GRESKA\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\nassert solution('''H02H10P11H02\nP01K02H03H04''') == 'GRESKA'\nassert solution('''H02H10P11H02\nP01K02H03H04\nH02H10P11H02''') == 'GRESKA GRESKA'\nassert solution('''P01K02H03H04\nP01K02H03H04\nP01K02H03H04''') == 'GRESKA GRESKA GRESKA'\nassert solution('''P01K02H03H04\nP01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', \"Wrong!\"\nassert solution('H02H10P11H02') == 'GRESKA', \"Wrong!\"\n\n\"\"\"\n\nstdin = 'P01K02H03H04'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '12 12 11 13'\nassert solution(input(prompt=True)) == '12 12 11 13'\n'''\n\nimport math",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n\"\"\"\nimport sys\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Not quite right...\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n*....*\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\nassert solution(\"1000000000\") == \"1\"\nassert solution(\"1000000000\") == \"1\"\nassert solution(\"1000000000\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\nassert solution(\"3 5 3\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n.*.*.''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\nassert solution('4 5 8') == '4'\nassert solution('3 2 3') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 3') == '1', 'Sample #1'\nassert solution('7 6 4') == '2', 'Sample #2'\nassert solution('5 1 1') == '4', 'Sample #3'\nassert solution('4 3 5') == '1', 'Sample #4'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 3') == \"1\"\nassert solution('7 6 4') == \"2\"\nprint(solution(input))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AC AD AH AS KD') == \"4\"\nassert solution('2C 4D 4H 2D 2H') == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''A5\nC5\nD4\nD6\nD8''') == '4'\nassert solution('''2C 4D 4H 2D 2H''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n\n\"\"\"\n\n\nstdin = input()\na, c, d, h, s = stdin.split()\nprint(int(c) + int(h) + int(s) + int(d))\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '4'\nassert solution(sample_input_2) == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n0 0 0 0 0\n''') == '7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''\n5 1\n0 0 0 0 0\n''') == '7'\nprint('You are all set!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"6 1\\n0 0 0 0 0\") == \"7\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5'\nassert solution('5 1\\n0 0 0 0 0') == '7'\n\nassert solution('6 5\\n1 1 1 1 0 1') == '6'\n",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1''') == '5'\nassert solution('''5 1\n0 0 0 0 0''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '7'\nassert solution('5 1') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\n\nassert solution('''5 1\n0 0 0 0 0\n''') == '7'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2 1 1 1 0 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n0 0 0 0 0\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 7\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n''') == '17'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''All your base are belong to us.\nWhat's the Frequency, Kenneth?''') == \"\"\"@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n\"\"\"\n\nassert solution('''What's the Frequency, Kenneth?\n\n@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n''') == \"\"\"@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n\"\"\"\n\nassert solution('''What's the Frequency, Kenneth?\n\n@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n''') == \"\"\"@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Hello World!') == '-3110 //\\/0 |Z1|)!\\n'\nassert solution('Hello World!') == '-3110 //\\/0 |Z1|)!\\n'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'",
        "num_ids_2": 48,
        "num_ids_4": 116
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('What\\'s the Frequency, Kenneth?') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$. '\nassert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == 'a@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$. '\nprint('All done!')\n",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Hello World!\\n\") == \"[-]3110 \\/\\/0|Z1|!\\n\"\nassert solution(\"What's the Frequency, Kenneth?\\n\") == \"[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 '\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][''$ '\nassert solution('hello world!') == '@3110 \\\\/\\/0|Z1|)!\n",
        "num_ids_2": 66,
        "num_ids_4": 87
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''All your base are belong to us.\nWhat's the Frequency, Kenneth?''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n                                          '|_|$. '\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nWhat's the Frequency, Kenneth?\n''') == '\\/\\/[-]@\\'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('All your base are belong to us.\\nWhat\\'s the Frequency, Kenneth?') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |",
        "num_ids_2": 1244,
        "num_ids_4": 1244
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA New Alphabet has been developed for Internet communications. While the glyphs of the new alphabet don\u2019t necessarily improve communications in any meaningful way, they certainly make us feel cooler.\n\nYou are tasked with creating a translation program to speed up the switch to our more elite New Alphabet by automatically translating ASCII plaintext symbols to our new symbol set.\n\nThe new alphabet is a one-to-many translation (one character of the English alphabet translates to anywhere between $1$ and $6$ other characters), with each character translation as follows:\n\nOriginal\n\nNew\n\nEnglish Description\n\na\n\n@\n\nat symbol\n\nn\n\n[]\\[]\n\nbrackets, backslash, brackets\n\nb\n\n8\n\ndigit eight\n\no\n\n0\n\ndigit zero\n\nc\n\n(\n\nopen parenthesis\n\np\n\n|D\n\nbar, capital D\n\nd\n\n|)\n\nbar, close parenthesis\n\nq\n\n(,)\n\nparenthesis, comma, parenthesis\n\ne\n\n3\n\ndigit three\n\nr\n\n|Z\n\nbar, capital Z\n\nf",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Hello World!') == '-3110 \\\\/\\/0|Z1|)!\n\nSample Input 3:\nWhat's the Frequency, Kenneth?\nSample Output 3:\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@11 `/0|_||Z [email\u00a0",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n10\n3\n2\n4\n7\n8\n9''') == 'Alice'\nassert solution('''13\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000\n100000''') == 'Bob'\nassert solution('''10\n3\n4\n5\n6\n7\n8\n9\n10''') == 'Bob'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Alice'\nassert solution('10') == 'Bob'\nassert solution('12') == 'Alice'\nassert solution('1') == 'Alice'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Bob\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'Alice'\nassert solution('2\\n1') == 'Bob'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Alice'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nthis\\nsentence\\nis\\nhave\\n30\\nletters\\n') == 'this sentence has thirtyone letters', \"Wrong\"\nassert solution('7\\n$\\nis\\nnumber\\nof\\nletters\\nhere\\n') == 'thirty is number of letters here', \"Wrong\"\nassert solution('10\\n$\\nis\\nnumber\\nof\\nletters\\nhere\\n') == 'thirty is number of letters here', \"Wrong\"\nassert solution('1\\n$\\nis\\nnumber\\nof\\nletters\\nhere\\n') == 'this sentence has thirtyone letters', \"Wrong\"\nassert solution('2\\n$\\nis\\nnumber\\nof\\nletters\\nhere\\n') == 'thirty is the number of letters here', \"Wrong\"\n",
        "num_ids_2": 78,
        "num_ids_4": 155
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"this sentence has thirtyone letters\") == \"this sentence has thirtyone letters\"\nassert solution(\"this sentence has $ letters\") == \"this sentence has $ letters\"\nassert solution(\"$ and Iva both won't give me the answer\") == \"$ and Iva both won't give me the answer\"\n",
        "num_ids_2": 38,
        "num_ids_4": 67
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nthis\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters'\nassert solution('''7\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\nprint('all tests passed')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"this sentence has thirty one letters\"\nassert solution(\"4\") == \"thirty is the number of letters here\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'\n\nassert solution('1') == 'one'\nassert solution('0') == 'zero'\nassert solution('2') == 'two'\n",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n\") == \"this sentence has thirtyone letters\", f\"Expected: {'this sentence has thirtyone letters'} but got {solution('5\\n')} instead\"\nassert solution(\"7\\n\") == \"is the number of letters here\", f\"Expected: {'is the number of letters here'} but got {solution('7\\n')} instead\"\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nthis sentence has thirtyone letters\n''') == 'this sentence has thirtyone letters \n\nassert solution('''\n$\n''') == '$'\n\nassert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'is the number of letters here'\n\nassert solution('''\nthis sentence has thirtyone letters\n''') == 'this sentence has thirtyone letters \n\nassert solution('''\n$\n''') == '$'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"thirty is the number of letters here\"\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n\"\"\"\nimport itertools",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"0\"\nassert solution(\"AabBcd\") == \"1\"\nassert solution(\"Eabcdef\") == \"5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"A\") == \"1\"\nassert solution(\"B\") == \"1\"\nassert solution(\"C\") == \"2\"\nassert solution(\"D\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5\n\nimport unittest\n\nclass Test_Solution(unittest.TestCase):\n\n    def test_zeros(self):\n        self.assertEqual(1, solution('Abcd'))\n\n    def test_nop(self):\n        self.assertEqual(3, solution('EaEbFabG'))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n'''\n\n\nfrom collections import defaultdict\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Odd 6\"\nassert solution(\"2 3\") == \"Even 6\"\nassert solution(\"1 1\") == \"Not a moose\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 4\n''') == 'Even 1'\nassert solution('''\n2 3\n''') == 'Even 2'\nassert solution('''\n3 3\n''') == 'Odd 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Not a moose'\nassert solution('2 3') == 'Even 2'\nassert solution('3 3') == 'Odd 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == \"Odd 6\"\nassert solution('3 3') == \"Even 6\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('5 3') == 'Not a moose'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''tomo\nmono\ndak''') == \"1\"\n\nassert solution('''ja\nla\n52''') == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nmono\\n6666\\nSample Output 2:\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nt\\n2\\n') == '1\\n', solution('1\\nt\\n2\\n')\nassert solution('2\\n\\n\\n\\n\\n\\n\\n') == '2\\n', solution('2\\n\\n\\n\\n\\n\\n\\n')\nassert solution('3\\n') == '1\\n', solution('3\\n')",
        "num_ids_2": 74,
        "num_ids_4": 94
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('1') == '1'\n\n[Finished in 5.5s]\n'''\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\ntomo\\nmono\\ndak\\n6666\\n') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"11\") == \"2\"\nassert solution(\"55\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('4') == '1'\nassert solution('6') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n') == '1'\nassert solution('2\\n4\\n5\\n') == '2'\nassert solution('3\\n4\\n6\\n') == '3'\nassert solution('4\\n5\\n6\\n') == '4'\nassert solution('5\\n6\\n7\\n') == '5'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"XWXX*..\"\nassert solution(\"PEPIS\") == \"..*..\"\nassert solution(\"\") == \"\"\nassert solution(\"HBC\") == \"*..*\"\n",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''DOG''') == '''..#...#...*..'''\nassert solution('''PAN''') == '''..#..\n.#.#.\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''A\nDOG\n''') == '..#...#...*..'\nassert solution('''P\nP\n''') == '..#..\nP'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n\"\"\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''A\nB\nC''') == \"..#..\\n.#.#.\\n#.B.#\\n.#.#.\\n..#..\"\nassert solution('''A\nDOG\nCAT''') == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"",
        "num_ids_2": 19,
        "num_ids_4": 36
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''A\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ''') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n', 'First example failed.'\nassert solution('''DOG\nDOG\nDOG\nDOG\nDOG''') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n', 'Second example failed.'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4.000000'\nassert solution('21') == '1385.442360'\nprint(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '3.141593'\nassert solution('21\\n882') == '1385.442360'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 -2 3\n''') == '2'\nassert solution('''5\n129 44 394 253 147\n''') == '0'\nassert solution('''10\n-9 3 -3 -2 1\n''') == '3'\nassert solution('''100\n1 1 1 1 1 1 1 1 1 1\n''') == '4'\nassert solution('''100\n1 1 1 1 1 1 1 1 1 1\n''') == '3'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 -2 3') == 2\nassert solution('5') == 0\nassert solution('129 44 394 253 147') == 0\n",
        "num_ids_2": 19,
        "num_ids_4": 32
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3\n    1 -2 3\n    ''') == '2'\nassert solution('''\n    5\n    129 44 394 253 147\n    ''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    1 -2 3\n    ''') == '2'\n\nassert solution('''\n    5\n    129 44 394 253 147\n    ''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 -2 3') == 2\nassert solution('5 129 44 394 253 147') == 0\nassert solution('10 -20 30 50 -60 -80 -90 -100') == -690",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 -2 3\\n') == '2'\nassert solution('10\\n1 -2 3\\n') == '0'\nassert solution('2\\n0 -2') == '2'\nassert solution('10\\n1 -2 3\\n') == '0'\nassert solution('8\\n1 -2 3\\n') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 -2 3\n''') == '2'\n\nassert solution('''\n5\n129 44 394 253 147\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 -2 3\n    \"\"\") == \"2\"\nassert solution(\n    \"\"\"\n    5\n    129 44 394 253 147\n    \"\"\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples[0]) == str(samples[1])\nassert solution(samples[1]) == str(samples[2])",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('3') == '3'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4 1 2') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('3 1 2') == '8'\n\nimport sys\nfrom itertools import combinations\nfrom collections import deque\nsys.setrecursionlimit(10 ** 6)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s1) == s2\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('5') == '8'\nassert solution('7') == '7'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '8'\nprint('\"Run\" is good for you!')\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n2 2 2\n''') == '6'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\") == \"6\"\nassert solution(\"3 4 1 2\") == \"8\"\nassert solution(\"5 5 5 5 5\") == \"20\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '8'\nassert solution('3') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"8\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0L11''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11\nSample Output 2:\nNOT POSSIBLE''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0R11\") == \"NOT POSSIBLE\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0R01\") == \"NOT POSSIBLE\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L01\") == \"NOT POSSIBLE\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0R11\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 61,
        "num_ids_4": 125
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NOT POSSIBLE\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"10 10 10\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"2\"\nassert solution(\"2 3 2\\n111\\n11\\n1S1\") == \"NOT POSSIBLE\"\nprint(solution(input()))\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''3 2 3\n1111\n1S1\n1011\n0U11\n''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n2 4 4\n1111\n1S01\n1011\n0L11\n\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n3 3 3\n111\n110\n110\nSample Output 3:\n4\n\n\"\"\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0L11\n''') == '2'\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\nprint('Tests passed')\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0L11\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 2 1 1''') == '4'\nassert solution('''7 5''') == '3'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n3 1 2 1 1') == '4', \"First\"\nassert solution('7 5\\n1 5 4 3 2 1 1') == '3', \"Second\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"4\"\nassert solution(\"7 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n3 1 2 1 1\n''') == '4'\nassert solution('''\n7 5\n1 5 4 3 2 1 1\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n    3 1 2 1 1''') == '4'\nassert solution('''7 5\n    1 5 4 3 2 1 1''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n\nassert solution(input()) == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\nSSPPR\\n1\\nSSPPR\\n\"\n    \"2\\nPPRRS\\nRRSSP\"\n) == \"10\"\n\nprint(solution(\n    \"5\\nSSPPR\\n1\\nSSPPR\\n\"\n    \"2\\nPPRRS\\nRRSSP\"\n))\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"\nassert solution(\"1\\nS\\n1\\nS\\n\") == \"1\\n0\\n\"\nassert solution(\"2\\nP\\n1\\nR\\n\") == \"1\\n0\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 117
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('SSPPR') == '5'\nassert solution('2') == '10'\nassert solution('PPRRS') == '15'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '10'\nassert solution('2') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input(\"SSPPR\\n\")) == \"15\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nSSPPR\n1\nSSPPR\nRRSSP\nPPRRS\n''') == '5'\nassert solution('''\n5\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '15'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\nassert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '15'\nassert solution('''2\nSSPPR\n1\nSSPPR\n1''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n5\\n2\\n5\\n9\\n10\") == \"4\"\nassert solution(\"2\\n7\\n11\") == \"still running\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\nassert solution('2') =='still running'\nassert solution('3') =='still running'\nassert solution('4') == '4'\nassert solution('5') == '9'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2'\n    ) =='still running'\nassert solution(\n    '5'\n    ) == '4'\n\nassert solution(\n    '7'\n    ) =='still running'\nassert solution(\n    '11'\n    ) =='still running'\nassert solution(\n    '5'\n    ) =='still running'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') =='still running'\nassert solution('2') == '4'\nassert solution('5') =='still running'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') =='still running'\nassert solution('1') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n7\n11\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"still running\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2\n5\n9\n10\n17\n''') =='still running'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') =='still running'\nassert solution('''\n1\n5\n7\n10\n13\n16\n19\n22\n25\n28\n31\n34\n37\n40\n43\n46\n49\n52\n55\n58\n61\n64\n67\n70\n73\n76\n79\n82\n85\n88\n91\n94\n97\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"still running\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n5\\n2\\n4\\n6\\n') =='still running'\nassert solution('1\\n2\\n3\\n') == '2'\nassert solution('2\\n3\\n4\\n') =='still running'\nassert solution('3\\n5\\n2\\n4\\n') =='still running'\n",
        "num_ids_2": 46,
        "num_ids_4": 87
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 1 2 2 3\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"0.166667\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '0.6'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n4 2 1 3 1\\n') == '0.5'\nassert solution('5\\n3 2 5 3 4\\n') == '0.75'\nassert solution('10\\n3 2 1 3 1 4 1 6 3 8 4 6 5 2\\n') == '0.3125'\n",
        "num_ids_2": 42,
        "num_ids_4": 73
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n6 1 3 2 2 3\\n') == '0.6'\nassert solution('2\\n2 2\\n') == 'impossible'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(SAMPLE_INPUT_1) == '0.6'\nassert solution(SAMPLE_INPUT_2) == 'impossible'\nassert solution(INPUT) == '0.65'\n",
        "num_ids_2": 35,
        "num_ids_4": 48
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '0.6'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6\n6 1 3 2 2 3\n\"\"\") == \"0.6\"\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"impossible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n4 4 5 4 4\n''') == 'impossible'\nassert solution('''\n4\n5 5 5 5 5\n''') == '0.75'\nassert solution('''\n1\n6 1 3 2 2 3\n''') == '0.6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1 2 3\n4\n1 1 1 1\n''') == '0.6'\n\nassert solution('''\n5\n3 1 5 2 4\n2\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"0.6\"\nassert solution(\"2\") == \"impossible\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 4 1 4\") == \"Emma\"\nassert solution(\"1 8 1 8\") == \"Tie\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4 1 4') == 'Emma', \"solution\"\nassert solution('1 6 1 6') == 'Gunnar', \"solution\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 8 1 8') == 'Tie'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"\nassert solution(\"2 3 2 2\\n1 1 1 1\") == \"Tie\"\nassert solution(\"5 5 5 5\\n5 5 5 5\") == \"Emma\"\nassert solution(\"15 15 15 15\\n15 15 15 15\") == \"Emma\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6\\n') == 'Tie'\nassert solution('1 8 1 8\\n1 10 2 5\\n') == 'Emma'\nassert solution('1 2\\n1 3\\n') == 'Tie'\nassert solution('1 2\\n1 3\\n') == 'Tie'\nassert solution('1 2\\n1 3\\n') == 'Emma'\n",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == \"Emma\"\nassert solution([\"1 4 1 4\", \"1 6 1 6\"]) == \"Emma\"\nassert solution([\"1 8 1 8\", \"1 10 2 5\"]) == \"Tie\"\nassert solution([\"1 7 1 7\", \"1 12 2 5\"]) == \"Emma\"\n",
        "num_ids_2": 33,
        "num_ids_4": 77
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Gunnar'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1 4 1 4\n1 6 1 6\n''') == 'Emma', '''Sample Case 1'''\nassert solution(\n'''\n1 8 1 8\n1 10 2 5\n''') == 'Tie', '''Sample Case 2'''\nassert solution(\n'''\n1 1 1 1\n1 2 1 2\n''') == 'Tie', '''Sample Case 3'''\nassert solution(\n'''\n1 8 1 8\n1 10 2 5\n''') == 'Tie', '''Sample Case 4'''\n\n------SOLUTION------\nn, a1, a2, b1, b2 = map(int, input().split())",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"makes sense\"\nassert solution(\"8\") == \"something is fishy\"\nassert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"\nassert solution(\"10\") == \"something is fishy\"\n",
        "num_ids_2": 24,
        "num_ids_4": 63
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\nmumble 5\nmumble 7\nmumble 8''') =='something is fishy'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n    1 2 3 mumble\n    5\n    1 2 3 mumble\n    5\n    1 2 3 mumble\n    5\n    1 2 3 mumble\n    5\n    1 2 3 mumble''') =='makes sense'\nassert solution('''8\n    1 2 3 mumble\n    5\n    1 2 3 mumble\n    5\n    1 2 3 mumble\n    5\n    1 2 3 mumble\n    5\n    1 2 3 mumble''') =='something is fishy'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    1 2 3 mumble 5\n    1 2 3 mumble mumble 7 mumble 8\n    ''') == \"something is fishy\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 mumble 5') == \"makes sense\"\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') == \"something is fishy\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n1 2 3\n1 2 3''') =='makes sense'\nassert solution('''2\n1 2\n1 2''') =='something is fishy'\nassert solution('''5\n1 2 3 mumble\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble''') =='something is fishy'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 mumble 5\n''') =='makes sense', solution.__doc__\nassert solution('''8\n1 2 3 mumble mumble 7 mumble 8\n''') =='something is fishy', solution.__doc__\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\nmumble 5\n''') =='makes sense'\nassert solution('''\n8\n1 2 3\nmumble mumble 7 mumble 8\n''') =='something is fishy'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"makes sense\"\nassert solution(\"8\") == \"something is fishy\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 mumble 5') =='makes sense', 'first example'\nassert solution('8 1 2 3 mumble 7 mumble 8') =='something is fishy','second example'\nassert solution('1 2 3 mumble mumble 7 mumble 8') =='something is fishy', 'third example'\n\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 72
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 6 9 12 15\n4 9 25 49 81\n''') == '1 121'\nassert solution('''8 1 2 2 2\n4 2 3 4 5 4 5 2 2\n6 4 6 5 5 5 4 5 4 5 5 5 5 5\n7 6 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n8 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n9 8 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n10 8 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n11 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n12 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n13 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n14 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n15 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n16 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n17 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n18 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n19 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n20 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n21 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n22 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n23 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n24 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n25 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n26 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n27 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n28 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n29 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n30 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n31 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n32 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n33 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n34 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n35 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n36 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n37 7 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3 6 9 12 15\n''') == '1 18'\nassert solution('''\n4 9 25 49 81\n''') == '2 121'\nassert solution('''\n3\n1 2 3\n''') == '0 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 6 9 12 15\n''') == '1 18'\n\nassert solution('''\n4 9 25 49 81\n''') == '2 121'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 6 9 12 15\n4 9 25 49 81\n''') == '1 18'\nassert solution('''4 9 25 49 81\n''') == '2 121'\nassert solution('''\n''') == '4 9 25 49 81'\nassert solution('''5 3 6 9 12 15\n''') == '1 18'\nassert solution('''\n''') == '4 9 25 49 81'",
        "num_ids_2": 23,
        "num_ids_4": 41
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"5 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3 6 9 12 15\n''') == '1 18'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nprint('Congratulations! All test cases passed')\n'''",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n2 5\n3 3\n1 5\n4 3\n2 7\n4 1\n1 6\n1 4\n4 6\n2 6\n3 4\n2 6\n4 4\n''') == '2 121'\n\nassert solution('''4 4\n1 2\n2 3\n1 3\n1 1\n2 2\n3 2\n2 1\n2 2\n1 1\n2 1\n2 3\n''') == '1 1'\n\nassert solution('''5 4\n2 3\n2 1\n4 3\n1 2\n2 3\n4 1\n1 4\n3 1\n2 1\n3 4\n1 3\n2 1\n4 1\n''') == '2 1'\n\nassert solution('''4 5\n1 3\n3 1\n3 3\n2 4\n2 2\n2 3\n3 1\n4 1\n1 4\n3 2\n1 2\n''') == '2 1'\n\nassert solution('''6 6\n2 5\n3 3\n5 1\n4 3\n4 1\n4 4\n5 1\n6 4\n3 4\n3 1\n2 4\n1 3\n''') == '1 1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n3 3\\n2 0\\n1 2\\n0 1\\n3 0\\n0 3\\n1 1\\n0 0\\n1 3\\n0 3\\n1 1\\n0 1\\n1 0\\n0 0\\n1 1\\n0 0\\n1 0\\n0 0\\n1 1\\n0 1\\n0 1\\n') == 'CORRECT'\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 5\n6 2\n3 1\n5 0\n4 6\n\"\"\") == \"CORRECT\"\nassert solution(\"\"\"\n5\n1 5\n6 2\n3 1\n5 0\n4 6\n\"\"\") == \"INCORRECT\"\nassert solution(\"\"\"\n4\n2 3\n1 0\n0 2\n3 1\n\"\"\") == \"CORRECT\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n3 4\\n') == 'CORRECT'\nassert solution('5\\n1 4\\n0 3\\n2 5\\n4 1\\n') == 'CORRECT'\nassert solution('6\\n0 2\\n3 4\\n5 1\\n2 3\\n4 6\\n') == 'CORRECT'\nassert solution('6\\n1 3\\n2 4\\n5 2\\n0 3\\n4 1\\n') == 'INCORRECT'\n",
        "num_ids_2": 50,
        "num_ids_4": 117
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 3\\n1 0\\n0 2\\n3 1') == 'CORRECT'\nassert solution('6\\n0 1\\n3 2\\n5 4\\n0 0\\n1 6\\n4 5') == 'INCORRECT'\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6') == 'CORRECT'\nassert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6') == 'INCORRECT'\nassert solution('4\\n2 3\\n1 0\\n0 2\\n3 1') == 'INCORRECT'\n",
        "num_ids_2": 63,
        "num_ids_4": 91
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"CORRECT\"\n\nassert solution('''\n5\n5 2\n1 0\n3 3\n2 1\n2 3\nSample Output 3:\nINCORRECT\n''') == \"INCORRECT\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open('test_files/q_eight_queens_test.txt')) == \"CORRECT\"\nassert solution(open('test_files/q_eight_queens_test2.txt')) == \"CORRECT\"\nassert solution(open('test_files/q_eight_queens_test3.txt')) == \"INCORRECT\"\nprint('All test cases passed!')\n",
        "num_ids_2": 55,
        "num_ids_4": 84
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3\\n1 0\\n0 2\\n3 1\\n') == 'CORRECT'\nassert solution('4\\n2 3\\n1 0\\n0 2\\n3 1\\n') == 'INCORRECT'\n\nprint(solution(open(0)))\n\"\"\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 0\\n0 2\\n3 1\\n\") == \"CORRECT\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 3\\n1 0\\n0 2\\n3 1\") == \"CORRECT\"\nassert solution(\"6 6\\n3 4\\n0 1\\n4 2\\n1 3\\n2 5\\n5 4\") == \"INCORRECT\"\nassert solution(\"10 10\\n0 1\\n5 5\\n4 8\\n8 2\\n6 3\\n3 7\\n7 4\\n9 5\\n2 6\\n0 7\\n4 1\\n3 8\\n7 2\\n9 6\\n5 9\\n2 3\\n0 4\\n6 7\\n8 1\\n7 5\\n9 0\\n1 3\") == \"INCORRECT\"\nassert solution(\"4 4\\n1 3\\n2 0\\n3 1\\n0 2\\n2 3\") == \"INCORRECT\"\nassert solution(\"2 2\\n0 0\\n1 1\") == \"CORRECT\"\n",
        "num_ids_2": 65,
        "num_ids_4": 199
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"5\") == \"1 2 3 1 11\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\nassert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\nassert solution('''\n5\n1 1 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0 1 1\\n1 0 1\\n1 1 0') == '1 1 1'\nassert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0'\n                 ) == '1 2 3 1 11'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\"\nassert solution(\"3\\n1 1 1\\n0 0 1\\n1 1 0\\n1 1 0\\n\") == \"1 1 1\"\nassert solution(\"6\\n0 0 1 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\"\nassert solution(\"7\\n0 0 1 1 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\"\nassert solution(\"7\\n0 0 1 1 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\"\n",
        "num_ids_2": 83,
        "num_ids_4": 212
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 2 3 11'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\nassert solution('''3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 2 3 11'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\nassert solution('''1\n0\n1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 2 3 1 11', \"First\"\nassert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11', \"Second\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"5\") == \"1 2 3 1 11\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1''') == 'Thursday'\nassert solution('''17 1''') == 'Saturday'''\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Thursday', \"Incorrect output\"\nprint('All tests passed!')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Thursday', 'First'\nassert solution('17 1') == 'Saturday', 'Second'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1 1\n''') == 'Thursday'\nassert solution('''\n    17 1\n''') == 'Saturday'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n1 1\n''') == 'Thursday'\nassert solution('''\n9 6\n1 1\n''') == 'Sunday'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n100\n4''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"100\"\nassert solution(\"500\") == \"500\"\nassert solution(\"12\") == \"129\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n100\n500\n12\n''') == '129\\n480'\nassert solution('''\n1\n100\n4\n''') == '4\\n40'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"100\") == \"40\"\nassert solution(\"100\") == \"129\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"4\"\nassert solution(\"500\") == \"40\"\nassert solution(\"12\") == \"129\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n100\\n4') == '4'\nassert solution('1\\n100\\n500') == '129'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\"\nassert solution(\"1\\n500\\n12\\n\") == \"129\\n480\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n100\\n4') == '4'\nassert solution('1\\n100\\n500') == '129'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"129 480\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0'\nassert solution('''3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3''') == '6.0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"3 5\") == \"8\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"1 2\") == \"8\"\nassert solution(\"1 1\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0'\n\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0'\n\nassert solution('''\n1 2\n5 4\n2 3\n3 4\n''') == '6.0'\n\nassert solution('''\n1 2\n5 4\n2 3\n3 4\n''') == '4.0'\n\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('3 2') == '3.0'\nassert solution('4') == '3.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == \"4.0\"\nassert solution('1 2') == \"4.0\"\nassert solution('2 2') == \"3.0\"\nassert solution('1 1 2') == \"4.0\"\nassert solution('5 6') == \"9.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '4.0'\nassert solution('1 1') == '4.0'\nassert solution('3 3') == '4.0'\nassert solution('4') == '3.0'\nassert solution('1 2') == '1.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('2 1') == '4.0'\nassert solution('3 1') == '4.0'\nassert solution('5 1') == '4.0'\nassert solution('5 2') == '2.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '4.0'\nassert solution('3 2') == '3.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4') == '4.0'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\\n') == '6.0'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\") == \"4.0\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\") == \"6.0\"\n\n\"\"\"\nfrom math import sqrt\n\nn, a, b, c, d = map(int, stdin.readline().split())\n\nab = sqrt((a - b) ** 2 + (a - c) ** 2)\ncd = sqrt((c - d) ** 2 + (c - a) ** 2)\nac = sqrt((a - c) ** 2 + (a - d) ** 2)\n\nprint(round(ab * cd / 2, 1))\nprint(round(ac * ab / 2, 1))\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n10\n12\n''') == '2'\nassert solution('''30\n100\n10\n12\n''') == '7'\nassert solution('''6\n20\n15\n10\n5\n''') == '5'\nassert solution('''30\n100\n10\n12\n''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"12\") == \"3\"\nassert solution(\"10000000\") == \"1000000000\"",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '2'\nassert solution('3') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '7'\nassert solution(solution.__doc__) == '7'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"\nassert solution(\"37\") == \"12\"\nassert solution(\"108\") == \"8\"\nassert solution(\"10200\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('13') == '2'\nassert solution('30') == '7'\nassert solution('45') == '4'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nassert solution('30-3') == '7'\nassert solution('30/3') == '6'\nassert solution('30/2') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('N-FBI1') == \"1\"\nassert solution('9A-USKOK') == \"1\"\nassert solution('I-NTERPOL') == \"1\"\nassert solution('G-MI6') == \"1\"\nassert solution('RF-KGB1') == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI2\\nY-USKOK\\nKRIJUMCAR1\\n\") == \"1\\n2\\n\"\n\nimport unittest\n\nclass Test(unittest.TestCase):\n    def test_one(self):\n        self.assertEqual(solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\"), \"1\\n\")\n\n    def test_two(self):\n        self.assertEqual(solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI2\\nY-USKOK\\nKRIJUMCAR1\\n\"), \"1\\n2\\n\")",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\n\nprint(solution.__name__)",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '3'\nassert solution('RF-KGB1') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"1\"\nassert solution(__import__(\"sys\").stdin.read()) == \"HE GOT AWAY!\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('N-FBI1') == \"1\"\nassert solution('9A-USKOK') == \"1\"\nassert solution('I-NTERPOL') == \"1\"\nassert solution('G-MI6') == \"1\"\nassert solution('RF-KGB1') == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3\") == \"8.0\"\nassert solution(\"2 2 2\") == \"4.0\"\nassert solution(\"3 3 3\") == \"8.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 3 3\n4 4 5\n''') == '8.0'\nassert solution('''\n3\n3 3 3\n4 4 5\n''') == '6.843530573929037'\n\nassert solution('''\n4\n3 3 3 3\n4 4 5 5\n5 5 5 5\n''') == '7.647058823529411'\n\nassert solution('''\n5\n3 3 3 3 3\n4 4 5 5\n5 5 5 5\n6 6 6 6\n''') == '7.647058823529411'\n\nassert solution('''\n3\n5 5 5\n4 4 4\n3 3 3\n''') == '5.833333333333333'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 3 1\n3 3 3\n\"\"\") == \"2.0\"\nassert solution(\"\"\"\n4\n2 1 2\n1 2 3\n3 3 3\n1 2 3\n\"\"\") == \"6.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 3 3\\n4 5 4') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8.0'\nassert solution('2') == '6.843530573929037'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n3 3 3\n4 4 5\n\"\"\") == \"8.0\"\n\nassert solution(\"\"\"\n2\n3 3 3\n4 5 4\n\"\"\") == \"6.843530573929037\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 3 3\n4 4 5\n''') == '8.0'\nassert solution('''\n1\n1 1\n''') == '2.0'\nassert solution('''\n5\n3 3 3\n4 4 5\n''') == '6.843530573929037'\nassert solution('''\n3\n3 3 3\n4 4 5\n''') == '6.843530573929037'\nassert solution('''\n2\n3 3 3\n4 4 5\n''') == '6.843530573929037'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3 3 3\n4 4 5\n''') == \"8.0\"\nassert solution('''3\n3 3 3\n4 5 4\n5 4 3\n''') == \"10.0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 3\n4 4 5\n''') == \"8.0\", \"Wrong Answer\"\n\nprint(solution('''\n3 3 3\n4 4 5\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 1 2\n1 2 1\n2 1 2\n2 2 1\n\"\"\") == \"5.0\"\n\nassert solution(\"\"\"\n5\n1 1 1\n2 2 2\n3 3 2\n4 4 4\n5 5 5\n\"\"\") == \"8.0\"\n\nassert solution(\"\"\"\n6\n1 1 2\n2 2 1\n3 3 1\n4 4 2\n5 5 3\n6 6 4\n\"\"\") == \"8.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25') == '27'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '13'\nassert solution('6') == '21'\nassert solution('7') == '28'\nassert solution('10') == '23'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(24) == '24'\nassert solution(25) == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"0\") == \"0\"\nassert solution(\"32\") == \"32\"\nassert solution(\"123\") == \"123\"\nassert solution(\"2147483647\") == \"2147483647\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '12'\nassert solution('15') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"22\"\nassert solution(\"15\") == \"27\"\nassert solution(\"25\") == \"28\"\nassert solution(\"100\") == \"102\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('13') == '15'\n\n----Hints----\n\nThis problem is one of the hardest one to solve! Here are some tips:\n\nTry to see if there is a fast-track solution\n    We\u2019re all familiar with harshad numbers. For this problem, you will... what\u2019s that? You aren\u2019t familiar with harshad numbers? They\u2019re also known as Niven numbers \u2013 does that ring a bell?? Anything???\n\nWell, it\u2019s a simple enough concept. A harshad number is a number which is evenly divisible by the sum of its digits. For example, $24$ is a harshad number: the sum of its digits is $2+4=6$ and $24$ is divisible by $6$. $156$ is also a harshad number, since $1+5+6=12$ and $156 = (12)(13$). $157$ is NOT a harshad number since it is not divisible by $1+5+7=13$.\n\nHow to solve this?\n    Solve a simple problem using the two-pointer method. \n    After you have a solution, you can check if your solution is correct by making a few assertion checks. \n    The first check is that your solution is a valid harshad number. That is, it\u2019s evenly divisible by the sum of its digits. \n    Then, you can check if the solution is equal to or greater than n.\n    \n    Note that the sum of the digits in a number is its integer part. So, for example, $12$ has the sum of its digits $1+2=3$.\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0\") == \"100000000\"\nassert solution(\"1+2+3+4+5+6+7+8+9+9+9+9+9+9+9+9+9+9+9\") == \"1000000000000\"\nassert solution(\"1+2+3+4+5+6+7+8+9+9+9+9+9+9+9+9+9+9+9+9+9+9\") == \"100000000000000000\"\n",
        "num_ids_2": 42,
        "num_ids_4": 119
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+0+3+4\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 58
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+9+8+4+5+6+7+8+9\") == \"188\"\n\n'''\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+9+8+4') == '7'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nprint('Everything passed')",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1+2+3+4+5+6+7+8+9') == '188'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n\"\"\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1+9+8+4') == \"7\"\nassert solution('1+2+3+4+5+6+7+8+9') == \"188\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\\n\") == \"2 5\"\nassert solution(\"2 2 -4 5\\n\") == \"5 -2 4\"\nprint(\"Congratulations! All test cases passed :)\")\n\n-----Explanation-----\nSample Case 1:\nThe coefficients are $a_ 1$ and $a_ 0$, and we need to initialize $C_ 0$ and $C_ 1$.\n\nSample Case 2:\nThe coefficients are $a_ 1$ and $a_ 0$, and we need to initialize $C_ 0$ and $C_ 1$.\n\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == stdin.split()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n2 1 2 1 2\n''') == '2 2 1 1 2'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2'\nassert solution('''10 10\n1 2 2 3 1 3 1 1 3 1\n''') == '1 1 1 2 2 3 1 3 3 1'\nassert solution('''30 10\n4 8 5 7 7 4 2 5 2 2 6 1 1 1 2 2 3\n''') == '4 8 5 7 7 4 2 5 2 2 6 1 1 1 3'\nassert solution('''50 50\n4 9 2 2 4 4 8 8 9 7 2 8 4 6 7 4 8 1 2 1 4 1 4 7\n''') == '4 9 2 2 4 4 8 8 9 7 2 8 4 6 7 4 8 1 2 1 4 1 4 7'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(tuple(stdin.split())) == \"1 1 1 3 3 3 2 2 2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\n\"\"\"\nimport sys",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '2 1 2 1 2'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1''') == '1 1 1 3 3 3 2 2 2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"2 1 2 1 2\"\n    ) == \"2 2 1 1 1 2\"\n\nassert solution(\n    \"9 3\\n\"\n    \"1 3 3 3 2 2 2 1 1\"\n    ) == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\nassert solution('5 7\\n5 1 5 7 2 2 7 3\\n1 2 5 5 1') == '1 2 1 3 2 5 5 7'\n",
        "num_ids_2": 52,
        "num_ids_4": 87
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"2 1 2 1 2\"\n) == \"2 2 2 1 1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 100') == '100'\nprint('Congratulations, have fun!')\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"5 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 3') == '4'\nassert solution('3 3') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n30 7\n''') == '875'\nassert solution('''\n13 9\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"38 24\") == \"875\"\nassert solution(\"1 100\") == \"100\"\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 4\n4 7\n7 6\n8 9''') == \"100\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''38 24\n2 9\n''') == '875'\n\nassert solution('''1 100\n''') == '100'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"1 8\") == \"875\"\nassert solution(r\"5 6\") == \"100\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '875', 'Should be: 1075'\nassert solution('1 100') == '100', 'Should be: 100'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n24 1\n\"\"\") == \"875\"\nassert solution(\"\"\"\n1 100\n\"\"\") == \"100\"\nassert solution(\"\"\"\n22 2\n\"\"\") == \"101\"\nassert solution(\"\"\"\n1 100\n\"\"\") == \"100\"\nassert solution(\"\"\"\n21 1\n\"\"\") == \"101\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '734 893',\n    '221 231'\n])) == '437'\nprint('Solution = OK')\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''734 893''') == '437'\nassert solution('''221 231''') == '132'\nassert solution('''893 893''') == '437'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nprint('all test cases passed')\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''13 0\n''') == 'programming'\nassert solution('''13 1\n''') == 'programming'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([11, 131]) == 'programming'\n\nassert solution([7, 96]) == 'contest'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(open(0).read()) == \"programming\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''11 131''') == 'programming'\nassert solution('''7 96''') == 'contest'\nassert solution('''15 150''') == 'impossible'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\nassert solution(\"3 1\") == \"impossible\"\nassert solution(\"4 1\") == \"impossible\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n\nassert solution('17 57') == 'impossible'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 131') == 'programming'\n\nassert solution('7 96') == 'contest'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"programming\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 'X'\") == \".\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAB\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 \"X\"') == '.X'\nassert solution('2 2 \"X\"') == 'X^'\nassert solution('3 2 \"A\"') == 'ABABABABABAC'\nassert solution('4 3 \"A\"') == 'BABABABABABB'\nassert solution('5 2 \"A\"') == 'BBABABABABAB'\n",
        "num_ids_2": 29,
        "num_ids_4": 68
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''\n.^\n--\n'''\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\nSample Input 3:\n3 3 'A'\nAAAA\nAAAB\nSample Output 3:\nAAAB\nAAAB\nAAAB\n''') == '\\n'.join(['AAAB', 'AAAB', 'AAAB'])\n\nassert solution('''4 4 'A'\nAAA\nAAA\nAAA\nAAB\nAAB\nSample Output 4:\nAAAB\nAAAB\nAAAB\nAAAB\nAAAB\n''') == '\\n'.join(['AAAB', 'AAAB', 'AAAB', 'AAAB', 'AAAB', 'AAAB'])\n\nassert solution('''6 6 'A'\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nSample Output 6:\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\n''') == '\\n'.join(['AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA'])\n\nassert solution('''8 8 'A'\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nSample Output 8:\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\nAAABAA\n''') == '\\n'.join(['AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA', 'AAABAA'])\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\nSample Output 1:\n.^\n--\nSample Input 2:\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n''') == 'BBABABABABAC\\nBBBABABABABA\\nBBABABABABAB'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'BBABABABABAB'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 'X'\") == \".^\\n--\\n\"\nassert solution(\"3 12 'A'\") == \"ABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 \"X\"'\n'X^') == '.^'\nassert solution('3 12 \"A\"'\n'ABABABABABAC'\n'BABABABABABB'\n'ABABABABABAB'\n) == 'BBABABABABAB'\nassert solution('2 2 \"A\"'\n'ABABABABABAC'\n'BABABABABABB'\n'ABABABABABAB'\n) == 'BBABABABABAB'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 'X'\") == \".X\\n--\\n\"\nassert solution(\"3 12 'A'\") == \"ABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n\"\nprint(\"All Tests Passed\")\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 4 4 14''') == \"1 0 3\"\nassert solution('''100 80 60 240''') == \"0 0 4\"\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4 4 14\n''') == \"1 0 3\"\nassert solution('''\n100 80 60 240\n''') == \"0 0 4\"\nassert solution('''\n12 18 0 0\n''') == \"1 1 1\"\nassert solution('''\n5 0 1\n5 1 0\n7 0 0\n''') == \"3 0 2\"\nassert solution('''\n1 100 1 0\n1 100 2 0\n1 100 3 0\n1 100 4 0\n1 100 5 0\n1 100 6 0\n1 100 7 0\n1 100 8 0\n1 100 9 0\n1 100 10 0\n1 100 11 0\n1 100 12 0\n1 100 13 0\n1 100 14 0\n1 100 15 0\n1 100 16 0\n1 100 17 0\n1 100 18 0\n1 100 19 0\n1 100 20 0\n1 100 21 0\n1 100 22 0\n1 100 23 0\n1 100 24 0\n1 100 25 0\n1 100 26 0\n1 100 27 0\n1 100 28 0\n1 100 29 0\n1 100 30 0\n1 100 31 0\n1 100 32 0\n1 100 33 0\n1 100 34 0\n1 100 35 0\n1 100 36 0\n1 100 37 0\n1 100 38 0\n1 100 39 0\n1 100 40 0\n1 100 41 0\n1 100 42 0\n1 100 43 0\n1 100 44 0\n1 100 45 0\n1 100 46 0\n1 100 47 0\n1 100 48 0\n1 100 49 0\n1 100 50 0\n1 100 51 0\n1 100 52 0\n1 100 53 0\n1 100 54 0\n1 100 55 0\n1 100 56 0\n1 100 57 0\n1 100 58 0\n1 100 59 0\n1 100 60 0\n1 100 61 0\n1 100 62 0\n1 100 63 0\n1 100 64 0\n1 100 65 0\n1 100 66 0\n1 100 67 0\n1 100 68 0\n1 100 69 0\n1 100 70 0\n1 100 71 0\n1 100 72 0\n1 100 73 0\n1 100 74 0\n1 100 75 0\n1 100 76 0\n1 100 77 0\n1 100 78 0\n1 100 79 0\n1 100 80 0\n1 100 81 0\n1 100 82 0\n1 100 83 0\n1 100 84 0\n1 100 85 0\n1 100 86 0\n1 100 87 0\n1 100 88 0\n1 100 89 0\n1 100 90 0\n1 100 91 0\n1 100 92 0\n1 100 93 0\n1 100 94 0\n1 100 95 0\n1 100 96 0\n1 100 97 0\n1 100 98 0\n1 100 99 0\n1 100 100 0\n1 101 0 0\n1 101 1 0\n1 101 2 0\n1 101 3 0\n1 101 4 0\n1 101 5 0\n1 101 6 0\n1 101 7 0\n1 101 8 0\n1 101 9 0\n1 101 10 0\n1 101 11 0\n1 101 12 0\n1 101 13 0\n1 101 14 0\n1 101 15 0\n1 101 16 0\n1 101 17 0\n1 101 18 0\n1 101 19 0\n1 101 20 0\n1 101 21 0\n1 101 22 0\n1 101 23 0\n1 101 24 0\n1 101 25 0\n1 101 26 0\n1 101 27 0\n1 101 28 0\n1 101 29 0\n1 101 30 0\n1 101 31 0\n1 101 32 0\n1 101 33 0\n1 101 34 0\n1 101 35 0\n1 101 36 0\n1 101 37 0\n1 101 38 0\n1 101 39 0\n1 101 40 0\n1 101 41 0\n1 101 42 0\n1 101 43 0\n1 101 44 0\n1 101 45 0\n1 101 46 0\n1 101 47 0\n1 101 48 0\n1 101 49 0\n1 101 50 0\n1 101 51 0\n1 101 52 0\n1 101 53 0\n1 101 54 0\n1 101 55 0\n1 101 56 0\n1 101 57 0\n1 101 58 0\n1 101 59 0\n1 101 60 0\n1 101 61 0\n1 101 62 0\n1 101 63 0\n1 101 64 0\n1 101 65 0\n1 101 66 0\n1 101 67 0\n1 101 68 0\n1 101 69 0\n1 101 70 0\n1 101 71 0\n1 101 72 0\n1 101 73 0\n1 101 74 0\n1 101 75 0\n1 101 76 0\n1 101 77 0\n1 101 78 0\n1 101 79 0\n1 101 80 0\n1 101 81 0\n1 101 82 0\n1 101 83 0\n1 101 84 0\n1 101 85 0\n1 101 86 0\n1 101 87 0\n1 101 88 0\n1 101 89 0\n1 101 90 0\n1 101 91 0\n1 101 92 0\n1 101 93 0\n1 101 94 0\n1 101 95 0\n1 101 96 0\n1 101 97 0\n1 101 98 0\n1 101 99 0\n1 101 100 0\n1 102 0 0\n1 102 1 0\n1 102 2 0\n1 102 3 0\n1 102 4 0\n1 102 5 0\n1 102 6 0\n1 102 7 0\n1 102 8 0\n1 102 9 0\n1 102 10 0\n1 102 11 0\n1 102 12 0\n1 102 13 0\n1 102 14 0\n1 102 15 0\n1 102 16 0\n1 102 17 0\n1 102 18 0\n1 102 19 0\n1 102 20 0\n1 102 21 0\n1 102 22 0\n1 102 23 0\n1 102 24 0\n1 102 25 0\n1 102 26 0\n1 102 27 0\n1 102 28 0\n1 102 29 0\n1 102 30 0\n1 102 31 0\n1 102 32 0\n1 102 33 0\n1 102 34 0\n1 102 35 0\n1 102 36 0\n1 102 37 0\n1 102 38 0\n1 102 39 0\n1 102 40 0\n1 102 41 0\n1 102 42 0\n1 102 43 0\n1 102 44 0\n1 102 45 0\n1 102 46 0\n1 102 47 0\n1 102 48 0\n1 102 49 0\n1 102 50 0\n1 102 51 0\n1 102 52 0\n1 102 53 0\n1 102 54 0\n1 102 55 0\n1 102 56 0\n1 102 57 0\n1 102 58 0\n1 102 59 0\n1 102 60 0\n1 102 61 0\n1 102 62 0\n1 102 63 0\n1 102 64 0\n1 102 65 0\n1 102 66 0\n1 102 67 0\n1 102 68 0\n1 102 69 0\n1 102 70 0\n1 102 71 0\n1 102 72 0\n1 102 73 0\n1 102 74 0\n1 102 75 0\n1 102 76 0\n1 102 77 0\n1 102 78 0\n1 102 79 0\n1 102 80 0\n1 102 81 0\n1 102 82 0\n1 102 83 0\n1 102 84 0\n1 102 85 0\n1 102 86 0\n1 102 87 0\n1 102 88 0\n1 102 89 0\n1 102 90 0\n1 102 91 0\n1 102 92 0\n1 102 93 0\n1 102 94 0\n1 102 95 0\n1 102 96 0\n1 102 97 0\n1 102 98 0\n1 102 99 0\n1 102 100 0\n1 103 0",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 4 14') == '1 0 3', \"Wrong answer\"\nassert solution('100 80 60 240') == '0 0 4', \"Wrong answer\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"2\\n\"\n    \"4\\n\"\n    \"1\\n\"\n    \"6\"\n    ) == \"1\\n3\\n6\"\nassert solution(\n    \"4\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"10\\n\"\n    \"11\\n\"\n    \"13\\n\"\n    \"14\"\n    ) == \"1\\n3\\n6\\n12\\n14\"\nassert solution(\n    \"10\\n\"\n    \"9\\n\"\n    \"8\\n\"\n    \"7\\n\"\n    \"6\\n\"\n    \"5\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"0\"\n    ) == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\"\nassert solution(\n    \"11\\n\"\n    \"10\\n\"\n    \"9\\n\"\n    \"8\\n\"\n    \"7\\n\"\n    \"6\\n\"\n    \"5\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"0\"\n    ) == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\"\nassert solution(\n    \"4\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    \"7\\n\"\n    \"8\\n\"\n    \"9\\n\"\n    \"10\\n\"\n    \"11\\n\"\n    \"13\\n\"\n    \"14\"\n    ) == \"1\\n3\\n6\\n12\\n14\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    4\n    5\n    7\n    8\n    9\n    10\n    11\n    13\n    ''') == 'good job'\nassert solution('''\n    4\n    5\n    7\n    8\n    9\n    10\n    11\n    13\n    ''') == '1 2 3 4 5 6 7 8 9 10 11 12 13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n4\n5\n7\n8\n9\n10\n11\n13\n\"\"\") == \"1\\n3\\n6\\n12\\n\"\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\"\"\") == \"1\\n3\\n6\\n12\\n\"\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'good job'\nassert solution('2\\n') == '3\\n1\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n9\n2\n4\n5\n7\n8\n9\n10\n11\n13\n\"\"\") == \"1 3 6 12\"\n\nassert solution(\"\"\"\n3\n1\n2\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n0\n1\n2\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n12\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == 'good job'\nassert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\nassert solution('7') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9\n2\n4\n5\n7\n8\n9\n10\n11\n13\n''') == 'good job'\n\nassert solution('''\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == '3 6 7 8 9 11 12'\n\nassert solution('''\n13\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n') == '1\\n3\\n6\\n12\\n'\nprint(solution(input()))\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2\n4\n5\n7\n8\n9\n10\n11\n13\n''') == '1 3 6 8 11 13'\n\nassert solution('''\n5\n2\n3\n4\n5\n7\n8\n9\n10\n11\n13\n''') == '1 3 6 8 11 13'\n\nassert solution('''\n5\n2\n4\n5\n6\n7\n8\n9\n10\n11\n13\n''') == '1 3 6 8 11 13'\n\nassert solution('''\n5\n2\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n''') == '1 3 6 8 11 13'\n\nassert solution('''\n5\n2\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n''') == '1 3 6 8 11 13 14'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == 'good job'\nassert solution('2') == '3'\nassert solution('4') == '5'\nassert solution('5') == '6'\nassert solution('7') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\nprint(solution('''8 8.9 40075000 272.1'''))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution(\n    '10 2.3 4.6') == '1463.077092106 14.07716826107'\nassert solution('15 14.4 14.9') == '25.4730121414'\n",
        "num_ids_2": 8,
        "num_ids_4": 29
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 4.5 2500000\n''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 4 5100 10''') == '157079.04857106 15.598261092309'''\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 2 1') == '1'\nassert solution('20 10 50 2') == '5.8451545454545'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"10 8.9 40075000 272.1\"\n    ) == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('12.0 0.8 22.0') == '6.82226562383 1.5'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n10 8.9 40075000 272.1\n\"\"\"\n) == \"157079.04857106 15.598261092309\"\nassert solution(\n\"\"\"\n1000000 8.9 40075000 272.1\n\"\"\"\n) == \"163869.096483815 0.00636354895169675\"\nassert solution(\n\"\"\"\n1000000 8.9 40075000 272.1\n\"\"\"\n) == \"94729.288407717 0.06779478333572422\"\nassert solution(\n\"\"\"\n10000000 8.9 40075000 272.1\n\"\"\"\n) == \"112580.319689766 0.010265618954785304\"\nassert solution(\n\"\"\"\n10000100 8.9 40075000 272.1\n\"\"\"\n) == \"152879.883774807 0.003469390803522461\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n20 8.9 9000000 272.1\n''') == '21167.62478685 15.53144040632'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('30') == '10'\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('4') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('5') == '3'\nassert solution('20') == '4'\nassert solution('100') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\n\nassert solution(\"11\") == \"3\"\n\nassert solution(\"121\") == \"5\"\n\nassert solution(\"133213213\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '4'\nassert solution('25') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nA\\nB\\nC\\n\") == \"3\"\nassert solution(\"5\\nA\\nB\\nC\\n\") == \"2\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nA\nA\nA\nA\n''') == '3', 'First'\n\nassert solution('''\nD\nD\nD\nD\n''') == '0', 'Second'\n\nassert solution('''\nD\nC\nD\nC\n''') == '2', 'Third'\n\nassert solution('''\nB\nB\nB\nB\n''') == '1', 'Fourth'\n\nassert solution('''\nD\nC\nD\nB\n''') == '1', 'Fifth'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nA\\nA\\nA\\n') == '3'\nassert solution('2\\nA\\nB\\n') == '0'\nassert solution('2\\nA\\nA\\n') == '1'\nassert solution('2\\nB\\nC\\n') == '0'\nassert solution('1\\nA\\n') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\\nA\\nA\\nA\") == \"3\"\nassert solution(\"A\\nA\\nA\\nD\") == \"2\"\nassert solution(\"A\\nD\\nC\\nB\") == \"1\"\nassert solution(\"B\\nA\\nB\\nC\") == \"0\"\nassert solution(\"C\\nB\\nA\\nC\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nA\\nA\\nA\\n') == '3'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nA\nA\nA\nA\n''') == '3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"3\\nA\\nB\\nC\\n\") == \"1\"\nassert solution(\"3\\nA\\nB\\nC\\n\") == \"0\"\nassert solution(\"2\\nA\\nA\\nB\\nC\\n\") == \"1\"\nassert solution(\"3\\nA\\nB\\nC\\n\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nA\\nA\\nA\\n\") == \"3\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\n\") == \"0\"\nassert solution(\"1\\nA\\nB\\nD\\n\") == \"0\"\nassert solution(\"1\\nA\\nA\\nD\\n\") == \"0\"\nassert solution(\"1\\nA\\nB\\nC\\n\") == \"0\"\n",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('3') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    A\n    A\n    A\n    A\n''') == '3'\n\nassert solution('''\n    B\n    B\n    C\n    A\n''') == '0'\n\nassert solution('''\n    A\n    B\n    B\n    C\n''') == '1'\n\nassert solution('''\n    D\n    A\n    A\n    A\n''') == '0'\n\nassert solution('''\n    C\n    C\n    C\n    C\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\") == \"..xx..\\nxx..xx\\n..xx..\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 3 1 2\n.x.\nx.x\n.x.\n\"\"\") == \"\"\"..xx..\nxx..xx\n..xx..\n\"\"\".strip()\n\n\"\"\"\nThis example can be solved in an inefficient manner. It has both O(n) and O(z) operations.\n\nOne of the fastest solutions is to use the built-in max function and the integer division operator. Instead of using a loop and a scan operation, a single division operation is used instead. This way, the execution time will be very short, since division is not strictly required.\n\nSample Input:\n3 3 1 2\n.x.\nx.x\n.x.\nSample Output:\n..xx..\nxx..xx\n..xx..\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 3, 1, 2]) == \"...xx..\\nxx..xx\\n..xx..\"\nassert solution([2, 2, 1, 2]) == \"..xx..\\nxx..xx\\n..xx..\"\nassert solution([1, 2, 1, 2]) == \"..xx..\\nxx..xx\\n..xx..\"\nassert solution([3, 3, 1, 2, 2, 2]) == \"...xx..\\nxx..xx\\n..xx..\"\nassert solution([1, 3, 1, 2, 2, 2]) == \"..xx..\\nxx..xx\\n..xx..\"\n",
        "num_ids_2": 55,
        "num_ids_4": 114
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 3, 1, 2]) == \"...xx..\"\nassert solution([2, 3, 1, 2]) == \"..xx..\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\") == \".x.\\nx.x\\n..xx..\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == 'xx..xx'\nassert solution('''3 3 1 2\n.x.\nx.x\n.x.\n''') == 'xx..xx'\nassert solution('''2 2 1 1\n.\nx\n.\nx\n''') == 'xx'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 3, 1, 2]) == 'xx..xx'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\") == \"..xx..\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 2\\n.x.\\nx.x\") == \".xx..\\nxx..xx\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2') == 'xx..xx'\n\nSample Input:\n3 3 2 2\n.x.\nx.x\nxx.x\nSample Output:\nxx..xx\nxx.xx\nxx.xx\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 20'\nassert solution('B 60 -1 20') == '13 19'\nassert solution('F 60 -1 20') == '13 17'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == ''\nassert solution('F 60 13 20') == '14 20'\nassert solution('F 60 11 12 13 14 15 16 17 18 19 20 21 22 23 24') == '12 12 13 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14",
        "num_ids_2": 22,
        "num_ids_4": 1649
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''F 60 13 20\nF 60 13 20\nB 60 15 20\n''') == '14 20'\nassert solution('''F 60 13 20\nB 60 13 20\nB 60 13 20\n''') == '13 20'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''F 60 13 20\nB 60 13 20\nF 60 15 20\nB 60 15 20''') == '14 20'\nassert solution('''F 60 -20 20\nB 60 -20 20\nF 60 1 20\nB 60 1 20''') == '14 20'\nassert solution('''F 60 -10 20\nB 60 -10 20\nF 60 1 20\nB 60 1 20''') == '14 19'\nassert solution('''F 60 -10 20\nB 60 -10 20\nF 60 0 0 20\nB 60 0 0 20''') == '14 20'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"14 20\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"F 120 13 20\") == \"14 21\"\nassert solution(\"F -120 13 20\") == \"13 21\"\nassert solution(\"F 120 13 -20\") == \"13 -19\"\nassert solution(\"F -120 13 -20\") == \"13 -19\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''F 60 13 20''') == '14 20'\nassert solution(\n'''B 60 13 20''') == '1 2'\n\n\u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430:\n\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0443\u044e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043d\u0430 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u043e\u0432 \u043f\u0440\u043e\u0448\u043b\u043e \u043e\u0442\u043c\u0435\u043d\u0430 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f \u0438 \u043d\u0430 \u043a\u0430\u043a\u043e\u0439 \u0441\u0435\u0437\u043e\u043d \u043e\u0442\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0432 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u0447\u0438\u0441\u043b\u043e $N$, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0442 1 \u0434\u043e 500.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u0432\u0430 \u0441\u0442\u0440\u043e\u043a\u0438: \u0447\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"\u0427\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0430\u0441\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445\" \u0438 \"\u0427\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0441\u0435\u0437\u043e\u043d\u0430 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0447\u0430\u0441\u0430\" \u0432 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443, \u0435\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0438 \u0441\u0435\u0437\u043e\u043d \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0438\u043b\u0438 \u0441\u0435\u0437\u043e\u043d \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f.\n\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"\u0414\u043e\u0431\u0440\u043e\u0432\u0430\u0442\u043e\u0447\u043d\u043e\". \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"\u0421\u0415\u0417\u041e\u041d \u043f\u0440\u043e\u0448\u0435\u043b\". \u0412 \u043a\u043e\u043d\u0446\u0435 \u0441\u043b\u0443\u0447\u0430\u044f \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"\u0427\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0430\u0441\u043e\u0432 \u0432 \u0441\u0435\u0437\u043e\u043d\".\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0447\u0438\u0441\u043b\u043e $N$.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0434\u0432\u0430 \u0441\u0442\u0440\u043e\u043a\u0438. \u0415\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0443 \"\u0414\u043e\u0431\u0440\u043e\u0432\u0430\u0442\u043e\u0447\u043d\u043e\". \u0415\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432 \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0443 \"\u0421\u0415\u0417\u041e\u041d \u043f\u0440\u043e\u0448\u0435\u043b\". \u0415\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0443 \"\u0427\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0430\u0441\u043e\u0432 \u0432 \u0441\u0435\u0437\u043e\u043d \u043f\u0440\u043e\u0448\u0435\u043b\". \u0415\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432 \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0443 \"\u0427\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0430\u0441\u043e\u0432 \u0432 \u0441\u0435\u0437\u043e\u043d \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b\".\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u043e\u0442\u043c\u0435\u043d\u0443 \u0434\u043e\u0431\u0440\u043e\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0449\u0435\u043c \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c.\n\nSample Input 1:\n5\nF 60 13 20\nF 60 13 20\nSample Output 1:\n\u0414\u043e\u0431\u0440\u043e\u0432\u0430\u0442\u043e\u0447\u043d\u043e\n\u0421\u0415\u0417\u041e\u041d \u043f\u0440\u043e\u0448\u0435\u043b\n\u0427\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0430\u0441\u043e\u0432 \u0432 \u0441\u0435\u0437\u043e\u043d\n\u0427\u0438\u0441\u043b\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0430\u0441\u043e\u0432 \u0432 \u0441\u0435\u0437\u043e\u043d\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"F 60 13 20\"\n    ) == \"14 20\"\nassert solution(\n    \"B 60 13 20\"\n    ) == \"13 20\"\nassert solution(\n    \"B 60 13 0\"\n    ) == \"12\"\n\nfrom typing import List\nfrom math import ceil",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    FEB 9\n    ''') == 'yup'\n    ",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 2') == 'nope'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('FEB 9') == 'yup'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    'OCT 31'\n) == 'yup'\nassert solution(\n    'FEB 9'\n) == 'yup'\nassert solution(\n    'JAN 1'\n) == 'nope'\nassert solution(\n    'FEB 1'\n) == 'nope'\n\nimport os\nimport sys",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('OCT 31') == 'yup', 'Test 1 Failed'\nassert solution('DEC 25') == 'nope', 'Test 2 Failed'\nprint('All Tests Passed!')\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('FEB 9') == 'yup'\nassert solution('OCT 31') == 'yup'\nassert solution('FEB 30') == 'nope'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"FEB 31\") == \"nope\"\nassert solution(\"FEB 2\") == \"nope\"\nassert solution(\"FEB 22\") == \"nope\"\nassert solution(\"FEB 28\") == \"yup\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JUL 12') == 'nope'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"yup\"\nassert solution(\"OCT 31\") == \"yup\"\nassert solution(\"FEB 9\") == \"yup\"\nassert solution(\"FEB 9\", \"MAY\") == \"nope\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"FEB 9\") == \"yup\"\nassert solution(\"JAN 6\") == \"nope\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n2 2 2 2\") == \"###.#.###.#.###.###.###\\n###.###.#.###.###.###.###\\n###.###.#.###.###.###.###.###\\n###.###.#.###.###.###.###.###\\n###.###.#.###.###.###.###.###\\n###.#.###.###.###.###.###.###\\n###.###.#.###.###.###.###.###\\n###.###.#.###.###.###.###.###\\n###.###.#.###.###.###.###.###\"\n",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == \"\"\"#.#.#.#.\n.#.#.#.#\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4 4\\n'\n    '2 2 2 2\\n'\n    'honi\\n'\n    'oker\\n'\n    'nera\\n'\n    'irak\\n'\n) == (\n    '#.#.#.#.\\n'\n    '.honi#.\\n'\n    '#.oker#.\\n'\n    '.nera#.\\n'\n    '#.irak#.\\n'\n    '.#.#.#.#\\n'\n)\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"#.#.#.#.\\n.honi#.\\n#.nera#.\\n.#irak#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.\\n\"\nassert solution(\"3 3\") == \"#.#.#.#.\\n.#.honi#.\\n#.nera#.\\n.irak#.\\n.#.#.#.#\\n#.#.#.#.\\n#.#.#.#.\\n\"\nassert solution(\"5 5\") == \"#.#.#.#.\\n#.honi#.\\n#.nera#.\\n.irak#.\\n#.nera#.\\n#.honi#.\\n#.#.#.#.\\n\"\n",
        "num_ids_2": 118,
        "num_ids_4": 180
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n2 2 2 2') == '#.honi#.\\n.#.honi#.\\n.honi.#.\\n.#.honi#.\\n.honi.#.\\n.honi.#.\\n.honi#.\\n.honi#.\\n.honi#.\\n.honi#.\\n#.honi#.\\n#.honi#.\\n#.honi#.\\n#.honi#.'\n",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"honi#.\\n.#oker.#\\n#nera#.\\n.#irak.#\\n#.#.#.#\\n#.#.#.#\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\nhoni\\n') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#'\n\nSample Input:\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\nSample Output:\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '#.#.#.#.\\n.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#'\nassert solution('2 2 2 2') == '#.honi#.\\n.nera#.\\n#irak.#\\n#honi#.\\n#nera#.\\n#irak.#\\n#honi#.\\n.nera#.\\n#irak.#'\nassert solution('6 4') == '#.#.#.#.\\n.#.honi#.\\n.#.oker#.\\n#.nera#.\\n.#.irak#.\\n#.#.#.#.\\n#.#.#.#.'",
        "num_ids_2": 125,
        "num_ids_4": 184
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 3') == \"1#1#1#\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\", \"Should be 'White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4'\"\nassert solution(\"Black:Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black:Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\", \"Should be 'Black:Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\"",
        "num_ids_2": 326,
        "num_ids_4": 326
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \\\n    \"+---+---+---+---+---+---+---+---+\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \\\n    \"+---+---+---+---+---+---+---+---+\"\nassert solution(\"White: Qd1,Ke1,Nb1,Nc6,R.Q,N.e4,a2,b2,c2,d2,e2,f2,g2,h2,a3,e4\") == \\\n    \"+---+---+---+---+---+---+---+---+\"\nassert solution(\"Black: K.e8,Q.d8,R.b8,Q.a8,N.e4,R.f8,Q.h8,Q.g8,K.b8,Q.c8,Q.d8,N.e4,Q.b8\") == \\\n    \"+---+---+---+---+---+---+---+---+\"\nassert solution(\"White: a8,b8,c8,d8,e8,f8,g8,h8,a7,e4,a1,b1,c1,d1,e1,f1,g1,h1,a6,e6,f6,g6,h6,a5,e5,f5,g5,h5,a4,e4,f4,g4,h4\") == \\\n    \"+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\"\n",
        "num_ids_2": 114,
        "num_ids_4": 249
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\"\n",
        "num_ids_2": 620,
        "num_ids_4": 620
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:P.|.P.|:P.|...|:P.|:P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\n",
        "num_ids_2": 570,
        "num_ids_4": 570
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: a1,c2,d2,f2,h2,a2,b1,c1,d1,e2,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4,a4,e4,b3,c3,d3,f3,g3,h3,a3,e3,b2,c2,d2,f2,h2,a2,b1,c1,d1,e1,f1,g1,h1,a3,e4,b4,c4,d4,f4,g4,h4",
        "num_ids_2": 1423,
        "num_ids_4": 1423
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\n",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+'\n",
        "num_ids_2": 516,
        "num_ids_4": 516
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n''') == 'Diablo is happy!'\nassert solution('''2\n10\n''') == 'Need more materials!'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n12\n''') == 'Need more materials!'\nassert solution('''\n4\n10\n''') == 'Need more materials!'\nassert solution('''\n5\n10\n''') == 'Need more materials!'\nassert solution('''\n6\n10\n''') == 'Need more materials!'\nassert solution('''\n100\n500\n''') == 'Need more materials!'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('0.000001 4.000000') == 'Need more materials!'\nassert solution('0.000000 4.000001') == 'Need more materials!'\nassert solution('1.000000 4.000000') == 'Need more materials!'\nassert solution('0.000001 4.000000') == 'Need more materials!'\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.3') == 'Need more materials!'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"1.000000 5.000000\") == \"Need more materials!\"\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('0.05 1.0') == 'Need more materials!'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('-1.000000 4.000000') == 'Need more materials!'\nassert solution('1.000000 -4.000000') == 'Need more materials!'\nassert solution('1.000000 4.000000') == 'Diablo is happy!'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"0.000000 4.000000\") == \"Need more materials!\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 1\") == \"Diablo is happy!\"\nassert solution(\"1 1\") == \"Need more materials!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 1 1') == 'use the stairs'\n'''",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == \"use the stairs\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 1 10 2 1\\n') == '6'\nassert solution('1 1 1 1 1 1 1\\n') == 'use the stairs'\nassert solution('1 1 1 1 1 1 1 1\\n') == 'use the stairs'\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n') == '8'\nassert solution('4\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n') == '10'\nassert solution('4\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n') == 'use the stairs'\n",
        "num_ids_2": 76,
        "num_ids_4": 118
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 1 10 2 1\n''') == 'use the stairs'\nassert solution('''\n10 1 10 3 2\n''') == '6'\nassert solution('''\n10 1 10 3 2\n''') == 'use the stairs'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 10 2 1') == 'use the stairs'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('50 2 1 3 4') == 'use the stairs'\nassert solution('50 2 1 3 4') == 'use the stairs'\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 2 1\") == \"use the stairs\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 2 10 2 1\") == \"use the stairs\"\nassert solution(\"10 5 10 4 2 1\") == \"use the stairs\"\n",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"100 1 100 3 1\") == \"use the stairs\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n500\n120\n75\n''') == '128.8'\nassert solution('''\n3\n300\n1000\n100\n''') == '89.06666666666666'\nassert solution('''\n4\n500\n500\n500\n500\n''') == '89.06666666666666'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n500\\n120\\n75') == '128.8'\nassert solution('2\\n2\\n5\\n1') == '0.3333333333333333'\nassert solution('1\\n2\\n5\\n1') == '0.3333333333333333'\nassert solution('1\\n2\\n10\\n2') == '0.16666666666666666'\nassert solution('1\\n2\\n10\\n3') == '0.16666666666666666'\n",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"3 2 3 2\") == \"89.0\"\nassert solution(\"3 1 2 3 4\") == \"93.0\"\nassert solution(\"1\") == \"0.0\"\nassert solution(\"1\") == \"0.0\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('1\\n1000\\n1250\\n750') == '93.33333333333333'\nassert solution('2\\n1000\\n1250\\n750') == '93.33333333333333'",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"5\") == \"89.0\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"1\") == \"89.0\"\nassert solution(\"-1\") == \"0.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '128.8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n500\\n120\\n75\") == \"128.8\"\nprint(solution(input()))\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n500\\n120\\n75\\n') == '128.8', \"5\"\nassert solution('6\\n350\\n220\\n150\\n250\\n200\\n') == '89.0', \"6\"\nassert solution('1\\n2\\n3\\n') == '1.0', \"1\"\nassert solution('2\\n2\\n2\\n') == '1.0', \"2\"\nassert solution('1\\n1\\n2\\n2\\n3\\n4\\n5\\n') == '1.0', \"3\"\n",
        "num_ids_2": 58,
        "num_ids_4": 104
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '0'\nassert solution('5\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 45 65 84 346\\n') == '4\\n'\nassert solution('2\\n1 40 45 65 84 346\\n') == '4\\n'\nassert solution('3\\n1 40 45 65 84 346\\n') == '4\\n'\n\n'''",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"224548\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n1\n1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n1\n2\n1\n1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5\n1\n2\n1\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7\n1\n2\n1\n1\n1\n2\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10\n1\n2\n1\n1\n1\n1\n2\n1\n1\n1\n1\n\"\"\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '0'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 45 65 84 346\\n\") == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    1\n    1 45 65 84 346\n    ''') == '4'\nassert solution('''\n    4\n    1 45 65 84 346\n    ''') == '0'\nassert solution('''\n    2\n    1 45 65 84 346\n    ''') == '4'\nassert solution('''\n    3\n    1 45 65 84 346\n    ''') == '2'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 45 65 84 346\n''') == \"4\"\nassert solution('''\n3\n1 45 65\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n1 2 3\\n\") == \"1\"\nassert solution(\n    \"5\\n1 45 65 84 346\\n\") == \"4\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n..TGG#\\n#######\") == \"1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"7 4\n#######\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n#######\\n#P.GTG#\\n#######\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('6 5\\n#######\\n#.TGG#\\n###.GTG#\\n#######') == '1'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n#######\\n#.TGG#\\n#######\\n\") == \"1\"\nassert solution(\"4 3\\n########\\n#G.T#.G#\\n#.#.#.#\\n###P.P###\\n########\\n\") == \"2\"\nassert solution(\"10 10\\n#######\\n#.P...#\\n##...##\\n#...#...\\n#######\\n#.P...#\\n##...##\\n#...#...\\n#######\\n\") == \"7\"\nassert solution(\"3 3\\n########\\n#G#.P#.P#\\n#.#.#.#\\n###P.P###\\n########\\n\") == \"3\"\nassert solution(\"5 5\\n#######\\n#G.T#.G#\\n#.T##.#\\n#.#.#.#\\n###P.P###\\n#G#.P#.G#\\n#.#.#.#\\n#######\\n\") == \"2\"\n",
        "num_ids_2": 70,
        "num_ids_4": 174
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\nassert solution(\"4 2\\n###\\n##\\n###\") == \"0\"\nassert solution(\"1 1\\n#\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 68
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"10 10\") == \"18\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",\n    \"2 5\",\n    \"4 4\",\n    \"4 4\",\n    \"5 3\",\n    \"5 5\",\n    \"3 3\",\n    \"8 6\",\n    \"2 4\",",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nassert solution(\"13 50\") == \"5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13 50') == '5'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$________$________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$_____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == '5'",
        "num_ids_2": 301,
        "num_ids_4": 301
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13 50\") == \"5\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n10 10\n$$$______$$$______$$$______$$$______$$$______$$$____\n$$$______$$$______$$$______$$$______$$$______$$$____\n$$$____$$$_______$$$______$$$______$$$______$$$_____\n$$$____$$$_______$$$______$$$______$$$______$$$_____\n$$$___$$________$$$_______$$$______$$$______$$$___\n$$$___$$________$________$$$______$$$______$$$___\n$$$____$$$___$________$$$______$$$______$$$____$$$\n$$$____$$$___$________$$$______$$$______$$$____$$$\n$$$_____$$$___$________$$$______$$$______$$$_____$$\n$$$_____$$$___$________$$$______$$$______$$$_____$$\n$$$_____$$$___$________$$$______$$$______$$$_____$$\n$$$_____$$$___$________$$$______$$$______$$$_____$$\n$$$_____$$$___$________$$$______$$$______$$$_____$$\n$$$_____$$$___$________$$$______$$$______$$$_____$$\n$$$_____$$$___$________$$$______$$$______$$$_____$$\n$$$____$$$___$________$$$______$$$______$$$____$$$\n$$$____$$$___$________$$$______$$$______$$$____$$$\n$$$____$$$___$________$$$______$$$______$$$_____$\n$$$____$$$___$________$$$______$$$______$$$_____$\n$$$____$$$___$________$$$______$$$______$$$___\n$$$____$$$___$________$$$______$$$______$$$___\n$$$_____$$$___$________$$$______$$$______$$$__\n$$$_____$$$___$________$$$______$$$______$$$__\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$____$$$___$________$$$______$$$______$$$__\n$$$____$$$___$________$$$______$$$______$$$__\n$$$____$$$___$________$$$______$$$______$$$___\n$$$____$$$___$________$$$______$$$______$$$____\n$$$____$$$___$________$$$______$$$______$$$_____\n$$$____$$$___$________$$$______$$$______$$$_____\n$$$____$$$___$________$$$______$$$______$$$___\n$$$____$$$___$________$$$______$$$______$$$____\n$$$_____$$$___$________$$$______$$$______$$$_____\n$$$_____$$$___$________$$$______$$$______$$$_____\n$$$_____$$$___$________$$$______$$$______$$$_____\n$$$_____$$$___$________$$$______$$$______$$$_____\n$$$_____$$$___$________$$$______$$$______$$$_____\n$$$_____$$$___$________$$$______$$$______$$$_____\n$$$____$$$___$________$$$______$$$______$$$____$$\n$$$____$$$___$________$$$______$$$______$$$____$$\n$$$____$$$___$________$$$______$$$______$$$_____$\n$$$____$$$___$________$$$______$$$______$$$_____$\n$$$____$$$___$________$$$______$$$______$$$___\n$$$____$$$___$________$$$______$$$______$$$___\n$$$_____$$$___$________$$$______$$$______$$$__\n$$$_____$$$___$________$$$______$$$______$$$__\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$_____$$$___$________$$$______$$$______$$$_\n$$$____$$$___$________$$$______$$$______$$$__\n$$$____$$$___$________$$$______$$$______$$$__\n$$$____$$$___$________$$$______$$$______$$$___\n$$$____$$",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"5\"\nassert solution(\"15 5\") == \"15\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"1 1\") == \"3\"\n\n---\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 3\n__$$__$$$__$$\n$$$$$$$$$$$\n$$$$$$$$$$$\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3 3\n___$$$___$$$\n$$$$$$$$$$$\n$$$$$$$$$$$\n\"\"\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('6 8') == '1'\nassert solution('5 6') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(\"test.in\").read()) == \"yay ebay osay indkay otay oday ityay\"\nprint(\"You're all set!\")\n\"\"\"\nimport sys",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''beep boop beer is the best\n    and a your favourite\nbeep beep\n    ''') == 'beer yay antcay eakspay igpay atinlay'\n''')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''and\\tat\\to\\tod\\ty\\twas\\tyay''') == 'ayyay oay odoy otay deey'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"this is good\") == \"hay istogo dlrow\"\nassert solution(\"i speak pig\") == \"iyay astcay eakspay igpay atinlay\"\nassert solution(\"i am the best\") == \"iyay aemtbohay taymdogay\"\nassert solution(\"what's up?\") == \"whyup ehtupay\"\n",
        "num_ids_2": 47,
        "num_ids_4": 97
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('hi my name is jaya') == 'hyay maay nay siay yay mnay eay dnyay'\nassert solution('iam not sure how to deal with this') == 'iam not surehow deal with this yay'\nassert solution('hello world') == 'hyellow ydlr lworld'\nassert solution('this is how i will translate to pig latin') == 'hihiy tishow ay willdiw ay tisaiw llatrliw oydway'\n",
        "num_ids_2": 60,
        "num_ids_4": 102
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('i cant speak pig latin') == \"iyay antcay eakspay igpay atinlay\", \"Should translate the sentence correctly\"\nassert solution('hello world') == \"olleh yollrd\", \"Should translate the sentence correctly\"\n\"\"\"\nimport sys\nimport re\n\nsentence = []\nfor line in sys.stdin:\n    sentence.append(line.strip())",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n\"\"\"\n\nimport re",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''i cant speak pig latin\n                                i need to speak pig latin\n                                i have a dish to speak pig latin\n                                i have to eat something to speak pig latin''') == 'iyay antcay eakspay igpay atinlay'''\n\nassert solution('''i dont like cats, it takes me a lot of time, so I do not want to eat, but I want to eat and have\n                    a long day, so I eat it''') == 'iyay antcay eakspay igpay atinlay'''\n\nassert solution('''A weeneee bow bow, it's a long bow\n                    Bow bow bow, it's a long bow\n                    A bow bow, it's a long bow\n                    Bow bow bow, it's a long bow\n                    Bow bow, it's a long bow\n                    Bow, it's a long bow\n                    Bow bow, it's a long bow\n                    Bow bow bow, it's a long bow\n                    Bow bow bow, it's a long bow\n                    Bow bow, it's a long bow\n                    Bow bow bow, it's a long bow\n                    Bow bow bow, it's a long bow\n                    Bow bow bow bow, it's a long bow\n                    Bow bow bow bow, it's a long bow\n                    Bow bow bow bow, it's a long bow\n                    Bow bow bow bow, it's a long bow''') == 'A weeneee bow bow bow, it\\'s a long bow bow bow bow bow, it\\'s a long bow bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow bow bow bow, it\\'s a long bow",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n2\n2\na\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Anywhere is fine I guess'\n\nassert solution('3') == 'pancakes'\n\nassert solution('5') == 'Anywhere is fine I guess'\n\nassert solution('8') == 'Anywhere is fine I guess'\n\nassert solution('1') == 'Anywhere is fine I guess'",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nq\\npotatoes') == 'nymble'\nassert solution('2\\nnymble\\npancakes') == 'pancakes'\nassert solution('2\\npea soup\\npancakes') == 'anywhere is fine I guess'\nassert solution('3\\nnymble\\npancakes\\npea soup') == 'nymble'\n'''",
        "num_ids_2": 38,
        "num_ids_4": 86
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Anywhere is fine I guess'\nassert solution('3') == 'Anywhere is fine I guess'\nassert solution('1') == 'Anywhere is fine I guess'\nassert solution('2') == 'nymble'\nassert solution('1') == 'Anywhere is fine I guess'\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 2, 1, 2, 3, 3, 4, 4, 5, 5, 1]) == '1, 2'\nassert solution([1, 2, 1, 2, 3, 3, 4, 4, 5, 5, 1, 2]) == '1, 2, 3'\nassert solution([1, 2, 1, 2, 3, 3, 4, 4, 5, 5, 1, 2, 3, 3, 4, 4, 5, 5, 1]) == '1, 2, 3, 4'\nassert solution([1, 2, 1, 2, 3, 3, 4, 4, 5, 5, 1, 2, 3, 3, 4, 4, 5, 5, 1, 2, 3, 3, 4, 4, 5, 5, 1]) == '1, 2, 3, 4, 5'\nassert solution([1, 2, 1, 2, 3, 3, 4, 4, 5, 5, 1, 2, 3, 3, 4, 4, 5, 5, 1, 2, 3, 3, 4, 4, 5, 5, 1]) == '1, 2, 3, 4, 5, 6'\n",
        "num_ids_2": 68,
        "num_ids_4": 190
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\nq\npotatoes\nsalad''') == 'nymble'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n2\\n3') == '2'\nassert solution('3\\n3\\n2') == '3'\nassert solution('3\\n3\\n1') == 'Anywhere is fine I guess'\nassert solution('5\\n2\\n2\\n2\\n2\\n2') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2], \"q\", \"salad\", \"potatoes\", \"pancakes\", \"punsch\") == \"nymble\"\nassert solution([2], \"q\", \"salad\", \"potatoes\", \"pancakes\", \"punsch\", \"pea soup\") == \"punsch\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\nq\\npotatoes') == 'nymble'\nassert solution('2\\n3\\nq\\npea soup\\npancakes') == 'Anywhere is fine I guess'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n  \"2\",\n  \"3\",\n  \"nmble\",\n  \"2\",\n  \"q\",\n  \"punsch\",\n  \"1\",\n  \"pancakes\",\n  \"1\",\n  \"salad\",\n  \"1\",\n  \"pea soup\",\n  \"1\",\n  \"nymble\",\n]) == \"nmble\"\n\nassert solution([\n  \"2\",\n  \"3\",\n  \"potatoes\",\n  \"2\",\n  \"q\",\n  \"punsch\",\n  \"1\",\n  \"pancakes\",\n  \"1\",\n  \"salad\",\n  \"1\",\n  \"pea soup\",\n  \"1\",\n  \"nymble\",\n]) == \"nymble\"\n\nassert solution([\n  \"1\",\n  \"2\",\n  \"nonsense\",\n  \"1\",\n  \"q\",\n  \"punsch\",\n  \"1\",\n  \"pancakes\",\n  \"1\",\n  \"salad\",\n  \"1\",\n  \"pea soup\",\n  \"1\",\n  \"nymble\",\n]) == \"nymble\"\n\nassert solution([\n  \"1\",\n  \"2\",\n  \"potatoes\",\n  \"1\",\n  \"q\",\n  \"punsch\",\n  \"1\",\n  \"pancakes\",\n  \"1\",\n  \"salad\",\n  \"1\",\n  \"pea soup\",\n  \"1\",\n  \"nymble\",\n]) == \"nymble\"\n\nassert solution([\n  \"1\",\n  \"2\",\n  \"pancakes\",\n  \"1\",\n  \"q\",\n  \"punsch\",\n  \"1\",\n  \"nymble\",\n]) == \"anywhere is fine I guess\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"5 0 15\") == \"3\"\nassert solution(r\"5 0 5\") == \"3\"\nassert solution(r\"5 0 3\") == \"2\"\nassert solution(r\"5 0 2\") == \"1\"\nassert solution(r\"5 0 1\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 0 15\n''') == \"3\"\nassert solution('''\n1 1 1 1\n''') == \"1\"\nassert solution('''\n1 1 1 1\n''') == \"2\"\nassert solution('''\n1 1 1 1\n''') == \"2\"\nassert solution('''\n5 0 0\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"5 0 10\") == \"2\"\nassert solution(\"5 0 100\") == \"1\"\nassert solution(\"0 1 10\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('0 0 10') == '0'\nassert solution('0 0 0') == '0'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nprint(solution())\nprint(solution())\nprint(solution())\nprint(solution())\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5 0 10\") == \"3\"\nassert solution(\"2 0 12\") == \"2\"\nassert solution(\"5 0 1\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"5 0 10\") == \"2\"\nassert solution(\"5 0 11\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 0 15''') == \"3\"\nassert solution('''5 0 1''') == \"0\"\nassert solution('''5 0 100000''') == \"1\"'''",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 0 15\\n') == '3'\nassert solution('1 0 5\\n') == '2'\nassert solution('0 0 2\\n') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n-1\n-2\n-3\n-4\n-5\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n7\n-1\n-2\n-3\n-4\n-5\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n1\n-1\n-2\n-3\n-4\n-5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n15\n-1\n-2\n-3\n-4\n-5\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n20\n-1\n-2\n-3\n-4\n-5\n\"\"\") == \"18\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\"\nassert solution(\"-20 -5\") == \"1\"\nassert solution(\"-1 -1\") == \"0\"\nassert solution(\"100 1000\") == \"0\"\nassert solution(\"-2 -1\") == \"1\"\n\nimport math\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 15') == '19'\nassert solution('25 10') == '25'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 15') == '19'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 15') == '19'\nassert solution('1 2') == '1'\nassert solution('9 -2') == '10'\nassert solution('-1 -2') == '-3'\nassert solution('11 11') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n13 9\n''') == '17'\nassert solution('''\n10 15\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 15') == '19'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 15') == '19'\nassert solution('11 -15') == '1'\nassert solution('11 -15 10') == '10'\nassert solution('11 -15 10 0') == '10'\nassert solution('-11 -15 10 0') == '10'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 15') == '19'\nassert solution('10 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 15') == '19'\nassert solution('12 1') == '12'\nassert solution('11 -1') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East South West') == 'No'\nassert solution('North East South East') == 'Yes'\nassert solution('North East South East') == 'Yes'\nassert solution('North East South East') == 'Yes'",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East South') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"North West East\") == \"No\"\nassert solution(\"North East South\") == \"No\"\nassert solution(\"North East South East\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"South West East\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"North South East\") == \"Yes\", \"Should yield the right-of-way\"\nassert solution(\"North South West\") == \"No\", \"Should not yield the right-of-way\"\nassert solution(\"North South East East\") == \"Yes\", \"Should yield the right-of-way\"\nassert solution(\"East West North\") == \"No\", \"Should not yield the right-of-way\"\n\nassert solution(\"North South East\") == \"Yes\", \"Should yield the right-of-way\"\n",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North West East') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''North South East\n    North South East\n    North South East''') == \"Yes\"\nassert solution('''North South East\n    North East\n    North South East''') == \"Yes\"\nassert solution('''North South East\n    North East\n    North South East''') == \"No\"\nassert solution('''North South East\n    North East\n    North East''') == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('North South East') == 'Yes'\nassert solution('North West East') == 'No'\nassert solution('East North West') == 'No'\nassert solution('East South West') == 'No'\nassert solution('South South East') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"South\", \"West\", \"East\"]) == \"Yes\"\nassert solution([\"North\", \"North\", \"East\"]) == \"Yes\"\nassert solution([\"North\", \"North\", \"South\"]) == \"Yes\"\nassert solution([\"North\", \"East\", \"West\"]) == \"No\"\nassert solution([\"North\", \"South\", \"West\"]) == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5\\n'\n    'e a o i u m\\n'\n    'l p y s\\n') == 'again'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10\") == \"marywasnosyagain\"\nassert solution(\"5 12\") == \"marywasnosyagain\"\nassert solution(\"5 8\") == \"marywasnosyagain\"\nassert solution(\"5 4\") == \"marywasnosyagain\"\n\nSample Input:\n6 15\nmyszorszodt\nldpypxsmjw\nSample Output:\nmyszorszodt\nldpypxsmjw\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 16 \\nagain\\npirpumsemoystoal') =='marywasnosyagain'\n\n\"\"\"\n\nfrom collections import Counter\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\nabc\\ndef\") == \"abcdef\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n5\\nagain\\npirpumsemoystoal\\n') =='marywasnosyagain'\nassert solution('2\\n5\\nagain\\npirpumsemoystoal\\n') =='marywasnosyagain'\nassert solution('3\\n5\\nagain\\npirpumsemoystoal\\n') =='marywasnosyagain'\n\"\"\"",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 16\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"marywasnosyagain\"\nassert solution(\"1 10\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"5 7\") == \"abcsdeghijklmnopqrstuvwxyz\"\n",
        "num_ids_2": 39,
        "num_ids_4": 64
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '5 6',\n    'alllatinupirpumse',\n    'alllatinupirpumse'])) == 'againmarywasnosyagain'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 16\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Odd\"\nassert solution(\"5\") == \"Odd\"\nassert solution(\"1\") == \"Even\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\n'''",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n2\n3\n3''') == 'Either'\n\nassert solution('''1\n1\n1\n1\n1''') == 'Either'\n\nassert solution('''4\n5\n5\n6\n7\n3''') == 'Odd'\n\nassert solution('''5\n7\n8\n9\n10\n7''') == 'Odd'\n\nassert solution('''1\n1\n1\n1\n1''') == 'Even'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Even'\nassert solution('3') == 'Odd'\nassert solution('4') == 'Even'\nassert solution('5') == 'Odd'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"Odd\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Odd'\nassert solution('2') == 'Even'\nassert solution('1') == 'Odd'\n'''",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Even'\nassert solution('5') == 'Odd'\nassert solution('10') == 'Either'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Either\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"Even\"\nassert solution(\"4\") == \"Odd\"\nassert solution(\"5\") == \"Either\"\nassert solution(\"6\") == \"Either\"\nassert solution(\"10\") == \"Either\"\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"Either\"\nassert solution('100') == \"Odd\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\") == \"1\"\nassert solution(\"5\\n27\") == \"2\"\nassert solution(\"10\\n100\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3'\nassert solution('1\\n2\\n1') == '1'\nprint('You are good. Time to Check.')",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('314') == '3'\nassert solution('1') == '1'\nassert solution('5926') == '4'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == ''\nassert solution(\"0\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"1000000\") == '12'\nassert solution(\"1000000000\") == '20'\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n314\n1\n5926\n5\n35897''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1'\nprint('Solution: OK')\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('5926') == '4'\nassert solution('5') == '5'\nassert solution('35897') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'no'\nassert solution('2') == 'no'\nassert solution('4') == 'yes'\nassert solution('12') == 'no'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\nz\nx\n''') == \"yes\"\nassert solution('''\n1\nx\nz\n''') == \"no\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the') == 'yes'\nassert solution('4 3\\na a\\nb b\\nc c\\nd d\\ne e\\nf f\\ng g\\nh h\\ni i\\nj j\\no o\\np p\\nq q\\nr r\\ns s\\nt t\\nu u\\nv v\\nw w\\nx x\\ny y\\nz z\\na a\\nb b\\nc c\\nd d\\ne e\\nf f\\ng g\\nh h\\ni i\\nj j\\no o\\np p\\nq q\\nr r\\ns s\\nt t\\nu u\\nv v\\nw w\\nx x\\ny y\\nz z\\na a\\nb b\\nc c\\nd d\\ne e\\nf f\\ng g\\nh h\\ni i\\nj j\\no o\\np p\\nq q\\nr r\\ns s\\nt t\\nu u\\nv v\\nw w\\nx x\\ny y\\nz z\\na a\\nb b\\nc c\\nd d\\ne e\\nf f\\ng g\\nh h\\ni i\\nj j\\no o\\np p\\nq q\\nr r\\ns s\\nt t\\nu u\\nv v\\nw w\\nx x\\ny y\\nz z\\na a\\nb b\\nc c\\nd d\\ne e\\nf f\\ng g\\nh h\\ni i\\nj j\\no o\\np p\\nq q\\nr r\\ns s\\nt t\\nu u\\nv v\\nw w\\nx x\\ny y\\nz z\\n') == 'no'\n",
        "num_ids_2": 426,
        "num_ids_4": 426
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nthe\\nout the') == 'yes\\nno\\nyes'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3\\nc t\\nk p\\nt r e') == 'yes'\nassert solution('8 5\\nwe o t\\nf a l l\\na r o\\nt t e\\nft p\\nte r') == 'yes'\nassert solution('1 0\\nc t\\nt e') == 'no'\nassert solution('1 7\\nwe w e\\nce f\\nay y\\ntu c\\nt e w\\ne r\\nti p\\ne d\\nof t') == 'no'\nassert solution('4 6\\nwe w e\\nce f\\nay y\\ntu c\\nt e w\\ne r\\nti p\\ne d\\nof t\\nca s\\nc o f\\nge m\\npo i\\nma s\\nje a\\n d l\\nq s\\nee e\\nsc l\\nt e t\\nca s\\nca s\\nca a\\nca e\\nca t\\nca c\\nca i\\nca s\\nca m\\nca s\\nca e\\nca t\\nca f\\nca o\\nca s\\nca m\\nca e\\nca t\\nca e\\nca d\\nca f\\nca j\\nca e\\nca o\\nca i\\nca e\\nca t\\nca f\\nca u\\nca p\\nca i\\nca s\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca t\\nca s\\nca e\\nca",
        "num_ids_2": 60,
        "num_ids_4": 122
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\n2\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\n3\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\n4\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\n5\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 5\na b\nb c\nc d\nd e\ne f\nf g\ng h\nh i\ni j\nj k\nk l\nl m\nm n\nn p\np q\nq r\nr s\ns t\nt u\nu v\nv w\nw x\nx y\ny z\n''') == 'yes'\nassert solution('''\n4 2\na k\nb h\nc e\nd a\n''') == 'yes'\nassert solution('''\n4 2\na b\nb c\nc d\nd e\n''') == 'no'\nassert solution('''\n3 1\na\nb\nc\n''') == 'no'\nassert solution('''\n8 3\na\nb\nc\nd\ne\nf\ng\nh\ni\n''') == 'yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\r o\\r t e\\r t f\\r u h\\r we we\\r can the\\r work people\\r it of\\r out the\\r') == 'yes\\nno\\nno\\nyes'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == 1\nassert solution(\"2 1\\ncarrots?\\nbunnies\") == 1\nassert solution(\"1\\n1 2\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\") == 2\nassert solution(\"1\\n1 2\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?\\nbunnies\") == 2",
        "num_ids_2": 26,
        "num_ids_4": 91
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''carrots?\nbunnies\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?''') == '1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1\\ncarrots?\\nbunnies\\n') == '1'\nassert solution('1 100\\ncarrots?\\nbunnies\\n') == '100'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\ncarrots?\") == \"1\"\nassert solution(\"2\\nbunnies?\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 2\\ncarrots?\\nbunnies?') == '2'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 1\ncarrots?\nbunnies\n\"\"\") == \"1\", \"Your output does not match the expected result\"\n\nassert solution(\"\"\"\n2 2\ncarrots?\nbunnies?\nlots\n\"\"\") == \"5\", \"Your output does not match the expected result\"\n\nassert solution(\"\"\"\n2 2\ncarrots?\nbunnies?\nlots\n\"\"\") == \"4\", \"Your output does not match the expected result\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 2\\ncools?\\ncarrots?\\nbunnies\") == \"2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 1\\nbunnies') == '1'\nprint('Everything passed!')\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\ncarrots?\") == \"1\"\nassert solution(\"2 1\\nbunnies?\") == \"1\"\nassert solution(\"1 3\\ncarrots?\") == \"0\"\nassert solution(\"1 5\\ncarrots?\") == \"3\"\nassert solution(\"1 2\\ncarrots?\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2\ncarrots?\nbunnies\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 1\ncarrots?\nbunnies\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5 1\ncarrots?\nbunnies\n\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|') == 'White: Kd1,Bd1,Qd1,Kd8,Bd8,Qd8,Rd8,Kd7,Bd7,Qd7,Kd6,Bd6,Qd6,Kd5,Bd5,Qd5,Kd4,Bd4,Qd4,Kd3,Bd3,Qd3,Kd2,Bd2,Qd2,Kd1,Bd1,Qd1'\nassert solution('|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|') == 'White: Pd1,Pd2,Pd3,Pd4,Pd5,Pd6,Pd7,Pd8,Pd9,Pd10,Pd11,Pd12,Pd13,Pd14,Pd15,Pd16,Pd17,Pd18,Pd19,Pd20,Pd21,Pd22,Pd23,Pd24,Pd25,Pd26,Pd27,Pd28,Pd29,Pd30,Pd31,Pd32,Pd33,Pd34,Pd35,Pd36,Pd37,Pd38,Pd39,Pd40,Pd41,Pd42,Pd43,Pd44,Pd45,Pd46,Pd47,Pd48,Pd49,Pd50,Pd51,Pd52,Pd53,Pd54,Pd55,Pd56,Pd57,Pd58,Pd59,Pd60,Pd61,Pd62,Pd63,Pd64,Pd65,Pd66,Pd67,Pd68,Pd69,Pd70,Pd71,Pd72,Pd73,Pd74,Pd75,Pd76,Pd77,Pd78,Pd79,Pd80,Pd81,Pd82,Pd83,Pd84,Pd85,Pd86,Pd87,Pd88,Pd89,Pd90,Pd91,Pd92,Pd93,Pd94,Pd95,Pd96,Pd97,Pd98,Pd99'\nassert solution('|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|:::|.n.|') == 'White: Nb1,Nb2,Nb3,Nb4,Nb5,Nb6,Nb7,Nb8,Nb9,Nb10,Nb11,Nb12,Nb13,Nb14,Nb15,Nb16,Nb17,Nb18,Nb19,Nb20,Nb21,Nb22,Nb23,Nb24,Nb25,Nb26,Nb27,Nb28,Nb29,Nb30,Nb31,Nb32,Nb33,Nb34,Nb35,",
        "num_ids_2": 263,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b2,f2,h2,b3,e3,f3,g3,h3,a4,e4,b4,f4,h4,b5,e5,f5,g5,h5,a6,e6,b6,f6,h6,b7,e7,f7,g7,h7,a7,e7,b7,f7,h7,a8,e8,f8,g8,h8,b8'\nassert solution('|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|') == 'White: Kd1,Qd2,Rd3,Kd4,Qd5,Rd6,Kd7,Qd8,Kd9,Qd10,Rd11,Qd12,Rd13,Qd14,Rd15,Kd16,Qd17,Rd18,Qd19,Rd20,Kd21,Qd22,Rd23,Qd24,Rd25,Kd26,Qd27,Rd28,Qd29,Rd30,Kd31,Qd32,Rd33,Qd34,Rd35,Qd36,Rd37,Qd38,Rd39,Qd40,Kd41,Qd42,Kd43,Qd44,Kd45,Qd46,Kd47,Qd48,Kd49,Qd50,Kd51,Kd52,Qd53,Kd54,Qd55,Kd56,Qd57,Kd58,Qd59,Kd60,Qd61,Kd62,Qd63,Kd64,Kd65,Kd66,Qd67,Kd68,Qd69,Kd70,Kd71,Kd72,Qd73,Kd74,Qd75,Kd76,Qd77,Kd78,Qd79,Kd80,Kd81,Kd82,Qd83,Kd84,Qd85,Qd86,Qd87,Kd88,Qd89,Qd90,Kd91,Qd92,Kd93,Qd94,Kd95,Qd96,Kd97,Qd98,Kd99,Qd100,Kd101,Kd102,Qd103,Kd104,Qd105,Kd106,Qd107,Kd108,Qd109,Kd110,Qd111,Kd112,Qd113,Kd114,Qd115,Kd116,Qd117,Kd118,Qd119,Qd120,Kd121,Kd122,Kd123,Qd124,Kd125,Qd126,Kd127,Qd128,Kd129,Qd130,Kd131,Kd132,Qd133,Kd134,Qd135,Kd136,Qd137,Qd138,Kd139,Kd140,Qd141,Kd142,Qd143,Kd144,Qd145,Kd146,Qd147,Kd148,Qd149,Qd150,Kd151,Qd152,Kd153,Qd154,Kd155,Qd156,Qd157,Qd158,Kd159,Qd160,Qd161,Qd162,Kd163,Qd164,Qd165,Qd166,Kd167,Qd168,Qd169,Qd170,Kd171,Qd172,Qd173,Qd174,Kd175,Qd176,Qd177,K",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\n''') == 'White: K1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,K7,Qd7,Ra7,Rh7,Bc7,Ng7,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a8,b8,c8,d8,e8,f8,h8,h6\\nBlack: K1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,K7,Qd7,Ra7,Rh7,Bc7,Ng7,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a8,b8,c8,d8,e8,f8,h8,h6'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'''\n\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|...|:::|.n.|:::|...|:::|...|:::|\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 266,
        "num_ids_4": 539
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Rr,Rq,Rk,Rn,Rr,Rb,Rq,Rk,Rn\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: pp,pp,pp,pp,pp,pp,pp,pp\"\nassert solution(\"|...|:::|.n.|:::|...|:::|...|:p:|\") == \"White: nn,nn,nn,nn,nn,nn,pp,pp\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|...|\") == \"White: pp,pp,pp,pp,pp,pp,pp,pp\"\n",
        "num_ids_2": 148,
        "num_ids_4": 255
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+''' == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''')\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+''' == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Nc6,Ng8,Nc7,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd1,Qd1,Rd1,Rf1,Rc1,Qc1,Qb1,Rb1,Qb2,Kd2,Qd2,Rd2,Rf2,Rc2,Qc2,Qb2,Kd3,Qd3,Rd3,Rf3,Rc3,Qc3,Qb3,Kd4,Qd4,Rd4,Rf4,Rc4,Qc4,Qb4,Kd5,Qd5,Rd5,Rf5,Rc5,Qc5,Qb5,Kd6,Qd6,Rd6,Rf6,Rc6,Qc6,Qb6,Kd7,Qd7,Rd7,Rf7,Rc7,Qc7,Qb7,Kd8,Qd8,Rd8,Rf8,Rc8,Qc8,Qb8,Kd9,Qd9,Rd9,Rf9,Rc9,Qc9,Qb9,Kd10,Qd10,Rd10,Rf10,Rc10,Qc10,Qb10,Kd11,Qd11,Rd11,Rf11,Rc11,Qc11,Qb11,Kd12,Qd12,Rd12,Rf12,Rc12,Qc12,Qb12,Kd13,Qd13,Rd13,Rf13,Rc13,Qc13,Qb13,Kd14,Qd14,Rd14,Rf14,Rc14,Qc14,Qb14,Kd15,Qd15,Rd15,Rf15,Rc15,Qc15,Qb15,Kd16,Qd16,Rd16,Rf16,Rc16,Qc16,Qb16,Kd17,Qd17,Rd17,Rf17,Rc17,Qc17,Qb17,Kd18,Qd18,Rd18,Rf18,Rc18,Qc18,Qb18,Kd19,Qd19,Rd19,Rf19,Rc19,Qc19,Qb19,Kd20,Qd20,Rd20,Rf20,Rc20,Qc20,Qb20,Kd21,Qd21,Rd21,Rf21,Rc21,Qc21,Qb21,Kd22,Qd22,Rd22,Rf22,Rc22,Qc22,Qb22,Kd23,Qd23,Rd23,Rf23,Rc23,Qc23,Qb23,Kd24,Qd24,Rd24,Rf24,Rc24,Qc24,Qb24,Kd25,Qd25,Rd25,Rf25,Rc25,Qc25,Qb25,Kd26,Qd26,Rd26,Rf26,Rc26,Qc26,Qb26,Kd27,Qd27,Rd27,Rf27,Rc27,Qc27,Qb27,Kd28,Qd28,Rd28,Rf28,Rc28,Qc28,Qb",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: a2,b2,c2,d2,e2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 235,
        "num_ids_4": 235
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('1 2') == 'You will become a flying monkey!'\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == 'Your wish is granted!'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 3\n''') == 'Your wish is granted!'\nassert solution('''\n7 3\nTrue\nTrue\nFalse\nFalse\nTrue\nTrue\nTrue\nFalse\nFalse\nFalse\nTrue\nTrue\nTrue\nFalse\nFalse\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nFalse\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 4\") == \"Your wish is granted!\"\n\nassert solution(\"9 4\") == \"You will become a flying monkey!\"\n\nassert solution(\"3 4\") == \"Your wish is granted!\"\n\nassert solution(\"10 4\") == \"You will become a flying monkey!\"\n\nassert solution(\"5 4\") == \"You will become a flying monkey!\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"3 3\n3 7\n5 1\n5 2\"\"\") == \"Your wish is granted!\"\n\nassert solution(r\"\"\"3 3\n5 8\n5 1\n2 5\"\"\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('2 10') == 'You will become a flying monkey!'\nassert solution('16 2') == 'You will become a flying monkey!'\n'''",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3') == \"Your wish is granted!\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\n\"\"\"\nimport sys\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Your wish is granted!\"\nassert solution(\"8 5\") == \"You will become a flying monkey!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == \"Your wish is granted!\"\nassert solution('4 6') == \"You will become a flying monkey!\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '12'\nassert solution('20') == '12'\nassert solution('100') == '2.5'\nassert solution('600') == '11.4'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('16') == '16'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"16\"\nassert solution(\"18\") == \"25\"\nassert solution(\"4\") == \"7\"\nassert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.00000', 'Your code is broken'\nassert solution('4') == '0.78541', 'Your code is broken'\nassert solution('8') == '2.17118', 'Your code is broken'\nassert solution('10') == '2.61781', 'Your code is broken'\nassert solution('16') == '3.16543', 'Your code is broken'\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '16'\nassert solution('12') == '32'\nassert solution('12') == '36'\nassert solution('34') == '42'\nassert solution('74') == '90'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == '16'\n\nassert solution('16.0') == '16'\nassert solution('0.1') == '1'\nassert solution('0.0') == '1'\nassert solution('-16') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"16\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"16\") == \"16\"\nassert solution(\"16\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('16') == '16'\nassert solution('8') == '32'\nassert solution('1024') == '1032'\nassert solution('4096') == '4096'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.1', \"Wrong answer for input: '1'\"\nassert solution('16') == '16.0', \"Wrong answer for input: '16'\"\nprint('\"Run\" is good, keep it up!')",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''4 5\n1 3 2 1 1''') == '1'\nassert solution('''5 1\n1 1 1 1 1''') == '2'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nassert solution('''\n4 180\n45 30 55 20 80 20\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''5 180\n100 100 100 100 100''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '6 180\\n'\n    '45 30 55 20 80 20\\n'\n) == '4'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 180\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4'\nassert solution('6 180\\n45 30 55 20 80 20 20') == '4'\nassert solution('6 180\\n45 30 55 20 80 20 20 30') == '3'\nassert solution('6 180\\n45 30 55 20 80 20 20 20') == '3'\nassert solution('6 180\\n45 30 55 20 80 20 20 30 30') == '2'\n",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '79'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"8\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10\n13\n10\n''') == '79'\nassert solution('''\n2\n10\n10\n10\n''') == '79'\nassert solution('''\n2\n10\n10\n10\n''') == '79'\nassert solution('''\n2\n10\n10\n10\n''') == '79'\nassert solution('''\n1\n10\n10\n10\n''') == '79'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '79'\nassert solution('21') == '189'\nassert solution('34') == '183'\nassert solution('18') == '135'\nassert solution('9') == '79'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '79'\nassert solution('2') == '6'\nassert solution('5') == '61'\n\n--",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == \"79\"\nassert solution(\"4\\n1\\n2\\n3\\n4\") == \"8\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '10'\nassert solution('3\\n') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'\nassert solution('10\\n50\\n35\\n70\\n75\\n85\\n15\\n30\\n2\\n10') == '57'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"79\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3 4\\n\") == \"2 3 0\"\nassert solution(\"2 4 7 2\\n\") == \"0 2 0\"\nassert solution(\"10 4 6 1\\n\") == \"2 3 0\"\n\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\nassert solution('4 3 3 2') == '3 3 0'\nassert solution('3 3 3 3') == '3 3 0'\nassert solution('1 2 1 2') == '3 3 0'\nassert solution('0 2 1 2') == '0 2 0 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 3 4\\n0 1 4\\n') == '2 3 0'\nassert solution('5 1 3 4\\n1 2 1 1\\n') == '2 1 2 1'\nassert solution('10 1 4 1\\n10 10 1 1\\n') == '1 0 0 0'\nassert solution('10 4 2 1\\n10 10 1 1\\n') == '1 0 1 0'\nassert solution('5 1 3 4\\n4 2 0 0\\n') == '0 2 2 2'\n",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 5 5 5\\n0 1 1 1\\n1 1 2 2\\n2 2 2 3\\n3 3 2 4\\n4 4 1 5\\n5 5 2 2\") == \"0 1 1 1\"\nassert solution(\"10 2 2 4\\n0 2 2 3\\n4 4 3 4\\n0 5 4 5\\n6 6 3 7\\n8 8 3 8\\n9 9 3 9\\n0 10 10 10\\n1 1 3 2\\n2 2 2 2\\n3 3 3 2\\n4 4 3 2\\n5 5 3 2\\n6 6 3 1\\n7 7 3 1\\n8 8 3 1\\n9 9 2 2\\n0 10 2 2\\n1 1 3 3\\n2 2 2 2\\n3 3 3 3\\n4 4 3 3\\n5 5 3 2\\n6 6 3 2\\n7 7 3 2\\n8 8 3 2\\n9 9 3 2\") == \"2 1 3 1\"\nassert solution(\"2 1 1 2\\n1 1 3 2\\n2 2 3 4\\n1 1 3 1\\n2 2 3 3\\n1 2 2 2\\n2 3 2 1\\n1 1 3 2\\n2 2 3 2\\n1 1 1 3\\n2 2 1 2\\n1 1 3 2\\n2 2 2 2\\n1 2 2 3\\n2 2 3 1\\n1 1 3 2\\n2 2 3 2\\n1 1 2 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 2 2\\n2 2 2 1\\n1 1 3 3\\n2 2 1 1\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 2 2\\n2 2 2 2\\n1 1 3 3\\n2 2 1 1\\n1 1 3 2\\n2 2 2 1\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 2 2\\n2 2 2 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 2 2\\n1 1 3 3\\n2 2 1 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 2 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 2 2\\n1 1 3 3\\n2 2 1 2\\n1 1 3 2\\n2 2 2 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 2 2\\n1 1 3 3\\n2 2 1 2\\n1 1 3 2\\n2 2 2 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 2 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2 2 3 2\\n1 1 3 2\\n2",
        "num_ids_2": 72,
        "num_ids_4": 1413
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 0') == '2 3 0'\nassert solution('2 3 1') == '1 2 0'\nassert solution('2 4 1') == '0 2 1'\nassert solution('5 3 3 4') == '0 3 3 0'\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 3 4\\n2 1 4\\n') == '2 3 0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 0\") == \"2 3 0\"\nassert solution(\"5 3 3 4\") == \"3 3 0\"\nassert solution(\"4 3 3 4\") == \"3 3 0\"\nassert solution(\"4 4 3 4\") == \"3 3 0\"\nassert solution(\"2 4 1 3\") == \"1 3 0\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 4') == '2 3 0'\nassert solution('10 10 10 10') == '2 3 0'\nassert solution('5 3 3 4') == '3 0 0'\nassert solution('5 1 1 1') == '1 1 0'\nassert solution('20 20 20 20') == '1 0 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 4\") == \"impossible\"\nassert solution(\"4 1 3 1\") == \"2 3 0\"\nassert solution(\"4 2 4 4\") == \"2 0 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 3 4\\n0 1 4\\n') == '2 3 0'\nassert solution('5 3 3 4\\n1 2 4\\n') == '4 0 0'\nassert solution('5 3 3 4\\n1 1 2\\n') == '0 3 1'\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 0 0 0 0 1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 -2 2 2 2 2 7') == '1 -1 0 0 0 0 1'\nassert solution('1 -2 3 3 3 3 3 3') == '1 -1 -1 0 0 0 0 0'\n",
        "num_ids_2": 44,
        "num_ids_4": 71
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 0 0 0 0 1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('-2 -1 2 2 2 7') == '0 0 0 0 0 1'\nassert solution('2 2 2 7 7') == '-1 1 1 0 0 1'\nassert solution('0 -2 -1 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 -2 2 2 7') == '1 0 0 0 0 1'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 -7') == '1 0 0 0 0 -1'\nassert solution('0 1 2 2 -2 -7') == '1 0 0 0 0 -2'\nassert solution('0 1 -2 2 2 7') == '1 0 0 0 0 2'\nassert solution('-1 -2 2 2 2 -7') == '1 0 0 0 0 -2'\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0') == '1 1 1 1 1 1'\nassert solution('-1 2 3 -3 -4 5') == '2 2 2 2 2 2'\n",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7 -1') == '1 0 0 0 0 0 1'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n123456 0.6666\nqwerty 0.3334''') == '1.3334'\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(''.join([str(i) for i in range(1, 13)])) == '1.3333333333333333'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nassert solution('2\\nqwerty 1.3333') == '1.3333'\nassert solution('3\\n12345 qwerty 1.3333') == '1.3333'\nassert solution('4\\n123456 123456 0.6666') == '0.3333'\nassert solution('5\\n123456 123456 123456 0.6666') == '0.3333'\n",
        "num_ids_2": 49,
        "num_ids_4": 92
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1.3334\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join([\n    '2',\n    '123456 0.6666',\n    'qwerty 0.3334',\n])) == '1.3334'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"\n\nassert solution(\"\"\"\n1\n1234567890 0.25000\nqwerty 0.83333\n\"\"\") == \"1.8333\"\n\nassert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"\n\nassert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"\n\nassert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('\\n'.join([\"123456 0.6666\", \"qwerty 0.3334\"])) == '1.3334'\nassert solution('\\n'.join([\"123456 0.6666\", \"qwerty 0.3334\"])) == '1.3334'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join(['1\\n', '1234\\n', '1234\\n', '1\\n', '1234\\n'])) == '1.3333'\nassert solution('\\n'.join(['5\\n', '1234\\n', '1234\\n', '1\\n', '1234\\n'])) == '1.3333'\nassert solution('\\n'.join(['10\\n', '12345\\n', '12345\\n', '1\\n', '12345\\n'])) == '1.3333'\nassert solution('\\n'.join(['50\\n', '1234\\n', '1234\\n', '1\\n', '1234\\n'])) == '1.3333'\n",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\nassert solution('''\n6\nhello1234.5 0.25\n123456qwerty 0.25\nqwerty10.0 0.25\nqwerty 1.0 0.25\nqwerty 2.0 0.25\n123456 qwerty 1.0\n''') == '1.6667'\nassert solution('''\n3\nqwerty 0.25\nqwerty 1.0 0.25\nqwerty 1.5 0.25\n''') == '1.3333'\nassert solution('''\n3\nqwerty 0.25\nqwerty 0.25 0.25\nqwerty 0.25\n''') == '0.25'\nassert solution('''\n3\nqwerty 0.25\nqwerty 0.25 0.25\nqwerty 0.25\n''') == '0.25'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\\\n3 1\n1 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n3 3\n3 3 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\\\n2 3\n3 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n4 3\n3 3 3 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n1 1\n1 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n2\n3\n3\n4\n1\n3\n\"\"\") == '1'\nassert solution(r\"\"\"\n3\n5\n5\n4\n1\n4\n\"\"\") == '3'\nassert solution(r\"\"\"\n3\n10\n9\n7\n5\n2\n\"\"\") == '7'\nassert solution(r\"\"\"\n4\n8\n8\n7\n7\n2\n\"\"\") == '8'\nassert solution(r\"\"\"\n3\n4\n4\n3\n2\n3\n\"\"\") == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n''') == '1'\nassert solution('''\n5 1\n1 1 2 3 4\n''') == '1'\nassert solution('''\n10 1\n1 2 3 4 5 6 7 8 9 10\n''') == '9'\nassert solution('''\n20 1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('10 3') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '2'\nassert solution('3 3') == '3'\n\nstdin = \"\"\"\n2 3\n5 5 3\n7 7 5\n10 10 7\n10 8 8 8\n10 9 9 9\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1]) == '1'\nassert solution([3, 1, 2]) == '1'\nassert solution([3, 2, 4]) == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"3 100000 1 2 3 4\") == \"2\"\nassert solution(\"100000 2 100000 2 100000 3\") == \"4\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 1') == '1'\nassert solution('6 1') == '2'\nassert solution('1 2') == '2'\nassert solution('2 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''\nG:\nF: -------------------------------------*--------------------\nE:\nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: -----------------------------------------------*----------\nf:\ne: ----------------------------------------------------------\nd:\nc:\nb:\na:\n'''\nassert solution('''\n10\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''\nG:\nF: -------------------------------------*--------------------\nE:\nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: -----------------------------------------------*----------\nf:\ne: ----------------------------------------------------------\nd:\nc:\nb:\na:\n'''\nassert solution('''\n9\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''\nG:\nF: -------------------------------------*--------------------\nE:\nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: -----------------------------------------------*----------\nf:\ne:\nd:\nc:\nb:\na:\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"27\") == \"G:       \\nF:        *    \\nE:       *       *          \\nD:      *       **    *\\nC:     *     *    *    **    *\\nB:      -------------------------*-\\nA:     *       *\\ng:     *       *       *          *\\nf:       *       *       *          *\\ne:        *       *       *          *\\nd:      *       *       *          *\\nc:     *       *       *          *\\nb:      -------------------------*\\na:     *       *\\n\"\n\nassert solution(\"1\") == \"G:                                                        \\nF:                                                                \\nE:                                                                \\nD:                                                                \\nC:                                                                \\nB:                                                                \\nA:                                                        \\ng:                                                                \\nf:                                                                \\ne:                                                                \\nd:                                                                \\nc:                                                                \\nb:                                                                \\na:                                                 \\n\"\n\nassert solution(\"2\") == \"G:                                                        \\nF:                                                         \\nE:                                                         \\nD:                                                         \\nC: *                                                        \\nB:                                                         \\nA: *                                                        \\ng: *                                                        \\nf: *                                                        \\ne:                                                         \\nd:                                                         \\nc: *                                                        \\nb: *                                                        \\na: *                                                \\n\"\n\nassert solution(\"1\") == \"G:                                                             \\nF:                                                                 \\nE:                                                                 \\nD:                                                                 \\nC:                                                                 \\nB:                                                                 \\nA:                                                                 \\ng:                                                                 \\nf:                                                                 \\ne:                                                                 \\nd:                                                                 \\nc:                                                                 \\nb:                                                                 \\na:                                                 \\n\"\n\nassert solution(\"2\") == \"G:                                                             \\nF:                                                                 \\nE:                                                                 \\nD:                                                                 \\nC:                                                                 \\nB:                                                                 \\nA:                                                                 \\ng:                                                                 \\nf:                                                                 \\ne:                                                                 \\nd:                                                                 \\nc:                                                                 \\nb:                                                                 \\na:                                                 \\n\"",
        "num_ids_2": 239,
        "num_ids_4": 432
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"27\") == \"G:                                                                                      \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                                           \\ne: ----------------------------------------------------------\\nd:                                                           \\nc:                                                           \\nb:                                                           \\na: ----------------------------------------------------------\\n\"",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''\nG:           \nF: ----------------------------------------------------------\nE:           *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                   \nc:                                                   \nb:                                                   \na: ----------------------------------------------------------\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 'G:       '\nassert solution(\"2\") == 'F: -------------------------------------*--------------------\\nE:       *       *          *             *       *         *         ** *       *\\nD: ----*-------**-*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         *         ** *       *\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *\\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                   \\nc:                                                   \\nb:                                                   \\na: ----------------------------------------------------------\\n'\nassert solution(\"3\") == 'G:       '\nassert solution(\"4\") == 'F: -------------------------------------*--------------------\\nE:       *       *          *             *       *         *         ** *       *\\nD: ----*-------**-*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         *         ** *       *\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *\\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                   \\nc:                                                   \\nb:                                                   \\na: ----------------------------------------------------------\\n'\n",
        "num_ids_2": 151,
        "num_ids_4": 302
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '\\n*\\n'\nassert solution('2') == '\\n*\\n*\\n'\nassert solution('3') == '\\n*\\n*\\n*\\n*\\n'\nassert solution('4') == '\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n'\nassert solution('5') == '\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n'\n",
        "num_ids_2": 31,
        "num_ids_4": 86
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\\n') == 'G:                                                                                                                                \\nF: ---------------------------------*--------------------*-------*-----------------*-------------*-------*-----------------*-----------------*-*-----------------------*---------*-------------*----------*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-",
        "num_ids_2": 1203,
        "num_ids_4": 1203
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('27') == '''G:                                    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\nassert solution('59') == '''A: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n\nA: \nB: \nC: \nD: \nE: \nF: \nG: \n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"27\") == \"\"\"G:\nF:\nE:\nD:\nC:\nB:\nA:\ng:\nf:\ne:\nd:\nc:\nb:\na:\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('27') == 'G: \\nF: ---------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA: \\ng: -----------------------------------------------*----------\\nf: \\ne: ----------------------------------------------------------\\nd: \\nc: \\nb: \\na: ----------------------------------------------------------'",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"impossible\"\nassert solution(\"3\\n1 2 3\") == \"possible\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'possible'\nassert solution('1 1 1') == 'impossible'\nassert solution('1 2 3 4 5 6') == 'impossible'\nassert solution
        "num_ids_2": 26,
        "num_ids_4": 1658
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\"\nassert solution(\"3\\n1 1 2\\n\") == \"impossible\"\nassert solution(\"3\\n1 3 2\\n\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n\") == \"impossible\"\nassert solution(\"3\\n2 2 2\\n\") == \"impossible\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'possible'\n\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'possible'\nassert solution('''\n10\n1 3 2 5 4 6 3 7 6 2\n''') == 'impossible'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 1\\n') == 'possible'\nassert solution('1\\n2\\n') == 'impossible'\n'''\n\nimport sys\nimport math\n\nn = int(input())\n\nsticks_length = list(map(int,input().split()))\n\nsticks_length.sort()\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'possible'\nassert solution('''\n2\n3 4 5\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"possible\"\n\nassert solution(\"\"\"\n3\n1 2 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3\n2 1 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n2 2\n\"\"\") == \"impossible\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1\\n') == 'possible', \"Should be 'possible'\"\nassert solution('2 4 4\\n') == 'impossible', \"Should be 'impossible'\"\nassert solution('3 2 4\\n') == 'impossible', \"Should be 'impossible'\"\nassert solution('10 5 6\\n') == 'impossible', \"Should be 'impossible'\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"2\\n1 2\") == \"impossible\"\nassert solution(\"10\\n3 3 3 1 1 2 2 2\") == \"impossible\"\n\n--Input Sample 2--\n\nSample Input:\n2\n1 2\nSample Output:\nimpossible\n",
        "num_ids_2": 31,
        "num_ids_4": 52
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\nassert solution(\"10\\n5 5 5 5 5 5 5 5 5\") == \"5\"\nassert solution(\"10\\n7 8 9 5 6 2 7 8 1\") == \"8\"\nassert solution(\"10\\n9 9 9 9 9 9 9 9 9 9\") == \"9\"\nassert solution(\"10\\n7 8 9 5 6 2 7 8 1\") == \"5\"\n",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '3'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3 3 2 1 2 2 1 1 3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '3'\nprint('SUCCESS!!')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('10\\n4 3 3 2 1 2 2 1 1 3\\n10\\n') == '4'\nassert solution('10\\n4 3 3 2 1 2 2 1 1 3\\n2\\n1\\n') == '1'\n",
        "num_ids_2": 49,
        "num_ids_4": 79
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n4 3 3 2 1 2 2 1 1 3\n''') == '3'\nassert solution('''\n7\n3 1 1 1 2 2 2\n''') == '3'\nassert solution('''\n2\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 1 1\n1 1 1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('5 2 3 4 1 2 1') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3 3 2 1 2 2 1 1 3\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\n') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '35.54'\nassert solution('10') == '14.48'\nassert solution('20') == '11.44'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '35.54'\nassert solution('8') == 'CARTER'\nassert solution('4') == 'ASHMEADE'\nassert solution('9') == 'ASHMEADE'\nassert solution('10') == 'ASHMEADE'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nPOWELL\\nFRATER\\nBLAKE\\nBOLT\\n'\nassert solution('''\n10\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nPOWELL 9.69 8.72\nFRATER 9.88 8.93\nBLAKE 9.78 8.72\nBOLT 9.78 8.73\n''') == '30.72\\nPOWELL\\nBLAKE\\nFRATER\\nCARTER\\nBOLT\\n'\n'''\nimport itertools\nfrom math import ceil\nfrom functools import lru_cache\n\nfrom numpy import array, zeros\nfrom numpy.random import choice\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '36.04'\n\nassert solution('5') == '36.34'\n\nassert solution('4') == '36.49'\n\nassert solution('3') == '36.44'\n\nassert solution('2') == '36.54'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'POWELL\\nBOLT\\nCARTER\\nASHMEADE'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 4\\n5 6') == '2'\nassert solution('2 1\\n1 4\\n5 6') == '3'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6\\n') == '2'\nassert solution('10\\n-5 -2 5 -2 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5 -1 5 -1 -5\\n-5",
        "num_ids_2": 1529,
        "num_ids_4": 1529
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2\n2 4\n5 6\n''') == \"2\"\nassert solution('''\n5\n1 2\n2 4\n5 6\n''') == \"4\"\nassert solution('''\n5\n1 2\n1 4\n2 4\n2 5\n''') == \"3\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"2\"\nassert solution(\"3\\n-5 -5 -5\\n-5 -5 5\\n-5 5 5\\n-5 5 5\") == \"1\"\nassert solution(\"8\\n1 2\\n5 6\\n2 3\\n3 4\\n3 5\\n4 5\\n7 6\\n8 7\") == \"4\"\n",
        "num_ids_2": 59,
        "num_ids_4": 101
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n5 6') == '2'\nassert solution('1\\n2\\n4\\n3\\n5 6') == '3'\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1 2') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2') == '1'\nassert solution('4\\n1 2') == '2'\nassert solution('5\\n1 2') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('6') == '2'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''hey''') == 'heey'\nassert solution('''heyheey''') == 'heheehey'\nassert solution('''heyhey''') == 'hehehehehehe'\nassert solution('''heyheyheeyheyehey''') == 'hehehehehehehehehehehe'\nassert solution('''heyheyheyheyeheyheeyhey''') == 'hehehehehehehehehehehehehe'\n",
        "num_ids_2": 31,
        "num_ids_4": 79
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heye\"\nassert solution(\"heyhey\") == \"hehehe\"\nassert solution(\"heyheyhey\") == \"hehehehehehehe\"\nassert solution(\"hehehehehehe\") == \"hehehehehehehehe\"\nassert solution(\"heheheheheheheheh\") == \"hehehehehehehehehehhehehe\"",
        "num_ids_2": 24,
        "num_ids_4": 64
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hey') == 'heey'\nassert solution('heheh') == 'hehehe'\nassert solution('hehehehehehe') == 'hehehehehehehe'\n",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hey') == 'hee'\nassert solution('hehe') == 'heehe'\nassert solution('heyyyy') == 'hehehe'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('hey') == 'heey'\nassert solution('eee') == 'hee'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hey') == 'heey'\nassert solution('howdy') == 'howdy'\nassert solution('hey howdy') == 'heheay yyyy'\n",
        "num_ids_2": 23,
        "num_ids_4": 40
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"heeey\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('hey') == 'heey'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"I love you\") == \"I I I love you\"\nassert solution(\"this is not a test\") == \"this is not a test\"\nassert solution(\"Howdy\") == \"Hello Howdy\"\nassert solution(\"Hi\") == \"Hi\"",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heeey\"\nassert solution(\"Hello\") == \"Heelllloo\"\nassert solution(\"heeee\") == \"heeeeelll\"\nassert solution(\"Hi\") == \"Hiii\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\n\n---\nSample Input:\n5\n0 0 1 0 2\n1 1 1 0 2\n2 0 0 1 2\n0 0 0 0 2\n0 0 1 0 2\nSample Output:\n1\n1\n1\n1\n1\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '1 3 4 2 5'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 2\\n1 2 0\\n2 3 3\\n\") == \"1 2\"\nassert solution(\"3\\n0 1 1\\n1 0 2\\n1 2 0\\n2 3 3\\n\") == \"1 3\"\nprint('solution is ok')\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0''') == '1 2\\n1 3\\n1 4'\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1 2\\n1 3\\n1 4\\n\", \"1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5\") == \"1 2\\n1 4\\n1 5\\n1 3\\n1 6\\n1 7\\n1 8\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n3 4\\n3 6\\n3 7\\n3 8\\n4 5\\n4 7\\n4 8\\n5 6\\n5 7\\n5 8\\n6 7\\n6 8\\n7 8\\n8 7\\n8 6\\n8 5\\n8 4\\n8 3\\n8 2\\n7 5\\n7 6\\n7 8\\n6 8\\n5 7\\n4 8\\n3 7\\n2 8\\n2 5\\n2 6\\n2 4\\n2 3\\n2 1\\n2 0\\n1 3\\n1 2\\n1 0\\n0 1\\n0 2\\n0 3\\n\"\n",
        "num_ids_2": 252,
        "num_ids_4": 252
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n4\n''') == '1 2\\n1 3\\n1 4\\n', \"Should print the shortest distance between villages 1 and 2\"\nprint(solution('''\n2\n4\n5\n2\n'''))\nassert solution('''\n2\n4\n5\n6\n''') == '1 2\\n1 3\\n1 4\\n2 4\\n', \"Should print the shortest distance between villages 1 and 2\"\nprint(solution('''\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"3\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n3 4 3 0\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"6\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n3 4 3 0\\n4 5 3 0\") == \"1 2\\n1 3\\n1 4\\n1 5\"\n",
        "num_ids_2": 86,
        "num_ids_4": 178
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", solution(\"EWPGAJRB\")\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('BKSJCDHZ') == 'ABCD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('AJRB') == 'BKSC'\nassert solution('AJRB') == 'BKSC'\nassert solution('EWPG') == 'EWPG'\nassert solution('EWPG') == 'EWPG'\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\nEWPGAJRB\n''') == 'ABCD'\nassert solution(\n'''\nZYWBZJZB\n''') == 'ZYWBZJZB'\nassert solution(\n'''\nBYDTEWT\n''') == 'BYDTEWT'\nassert solution(\n'''\nKHMEWCX\n''') == 'KHMEWCX'\nassert solution(\n'''\nWELHS\n''') == 'WELHS'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('CDJAXDPPFF') == 'ABCD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n\"\"\"\n\n'''\ninput_string = input()\n\noutput_string = \"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EWPAAB''') == 'ABAB'\n''')",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''hello\nworld''') == 'ello'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abc') == 'b'\nassert solution('aabb') == 'ab'\nassert solution('aab') == 'aa'\nassert solution('cdd') == 'c'\n\nassert solution('aabb') == 'aab'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abc') == 'acb'\nassert solution('aabb') == 'ab'\nassert solution('abbb') == 'b'\nassert solution('aabcdde') == 'abcdee'\nassert solution('abcdee') == 'abcdee'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabc\n''') == 'bc'\nassert solution('''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abc') == 'b'\nassert solution('aab') == 'b'\nassert solution('aad') == 'a'\nassert solution('aaaaaaaa') == 'a'\nassert solution('bbbbb') == 'a'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == \"b\"\nassert solution(\"aabc\") == \"a\"\nassert solution(\"abcdefg\") == \"bcefg\"\n",
        "num_ids_2": 21,
        "num_ids_4": 35
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abc') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"a\"\nassert solution(\"baac\") == \"c\"\nassert solution(\"bbaac\") == \"a\"\nassert solution(\"acb\") == \"c\"\nassert solution(\"acbcd\") == \"c\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abc') == 'a'\nassert solution('aab') == 'b'\nassert solution('abb') == 'a'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('x') == 1\nassert solution('abcd') == 2\nassert solution('aba') == 2\nassert solution('abcdabc') == 3\n\n\"\"\"\n\n\"\"\"\nsolution(stdin)\n\n\"\"\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n\nassert solution('a') == 'no'\nassert solution('h') == 'no'\nassert solution('aa') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\nassert solution('''h\naaaah''') == 'no'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\n''')\nimport sys\nfrom io import StringIO\nimport unittest\nimport collections",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\nassert solution('''aaah\nh''') == 'no'\nassert solution('''aaah\nh''') == 'no'\nassert solution('''aaah\nh''') == 'no'\nassert solution('''aaah\nh''') == 'no'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaaaah\") == \"go\"\n\nprint(solution(input()))\n\"\"\"\n\nimport math\n\naaah = \"aaah\"\naah = \"aah\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaah') == 'go', 'Try harder'\nassert solution('aaaaah') == 'no', 'Try harder'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaah\\nhhhhh') == 'no'\nassert solution('aaah\\naaah') == 'go'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaah\") == \"go\", \"Easy\"\nassert solution(\"aaaaah\") == \"no\", \"Medium\"\nassert solution(\"aaa\") == \"no\", \"Hard\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1B2A1A2A2A2') == 'B'\nassert solution('A2B2A1A1A2A2A2') == 'A'\nassert solution('A2B2A1B1A2A2A2') == 'B'\nassert solution('A2B2A1B1A1A2A2') == 'A'\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('ABBBBBBBBBBBBBBB') == 'B'\nassert solution('AAABBBAAAB') == 'A'\nassert solution('ABBABABAA') == 'B'",
        "num_ids_2": 42,
        "num_ids_4": 70
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A1B1A2B2A1A2A2A2') == 'A'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B1A2B2A1A2A2A2\") == \"B\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"A\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1A2A2A2B2B2A1A2B2A2A2A2\") == \"B\"\nassert solution(\"B2A1A2A2A2B2B2A1A2B2A2A2A2\") == \"B\"\n",
        "num_ids_2": 33,
        "num_ids_4": 103
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B2A1A2A2A2A2A2A2A2A2A2A2A2\") == \"B\"\nassert solution(\"B2B1A2A2A2A2A2A2A2A2A2A2A2A2\") == \"B\"\nassert solution(\"B2B2A2A2A2A2A2A2A2A2A2A2A2A2\") == \"A\"\nassert solution(\"A2B1A2B2A1A2A2A2A2A2A2A2A2A2\") == \"B\"\n",
        "num_ids_2": 60,
        "num_ids_4": 134
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"A2B1A2B2A1A2A2A2\"\n) == \"A\"\nassert solution(\n
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\nA1B2\n\"\"\") == \"A\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n2 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\n\nassert solution(\n'''\n4 4\n1 2 5\n2 3 5\n3 4 6\n''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '6 5\\n'\n    '1 6 20 4\\n'\n    '5 3 2 4\\n'\n    '1 2 2\\n'\n    '2 3 8\\n'\n    '2 4 3\\n'\n    '3 6 10\\n'\n    '3 5 15'\n) == '21'\nassert solution(\n    '10 10\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3 5 1\\n'\n    '1 3",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\nassert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '27'\nassert solution('''\n1 1\n1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\") == \"21\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"2 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6 20 4\\n5 3 2 4\\n1 2 2') == '21'\nassert solution('10 12 50 30\\n1 2 3\\n2 3 5\\n3 4 4\\n4 5 3\\n5 6 5\\n6 7 6\\n7 8 8\\n8 9 4\\n9 10 3\\n10 2 2\\n11 2 6\\n11 5 5\\n11 8 4\\n11 9 9\\n11 10 7\\n12 2 2\\n12 3 7\\n12 4 7\\n12 5 4\\n12 6 7\\n13 2 2\\n13 3 7\\n13 4 7\\n13 5 7\\n13 6 7\\n14 2 2\\n14 3 7\\n14 4 7\\n14 5 7\\n14 6 7') == '23'\nassert solution('100 10 1000 5\\n1 2 1\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n26 28 29\\n27 29 30') == '120'\nassert solution('100 10 200 5\\n1 2 1\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n26 28 29\\n27 29 30\\n28 29 31\\n29 31 32\\n30 32 33') == '225'",
        "num_ids_2": 187,
        "num_ids_4": 508
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5\\n1 3 2\\n2 3 8') == \"21\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3 2\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\nassert solution(\n'''\n2 2\n1 1 1\n''') == '3'\nassert solution(\n'''\n2 2\n1 1\n''') == '3'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n3 1 2\\n2 1 2\\n1 2 2\\n3 6 10\\n1 2 3') == '21'\nassert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == '21'\nassert solution('5 5\\n5 4 2\\n1 2 2\\n2 3 2\\n3 4 3\\n2 4 2\\n4 4 4\\n1 2 5\\n') == '11'",
        "num_ids_2": 86,
        "num_ids_4": 134
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 20 4') == '21'\nassert solution('6 5') == '21'\nassert solution('5 3 2 4') == '7'\nassert solution('5 3 2 4') == '7'\nassert solution('6 5') == '21'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D 123456789\") == \"123456789\"\nprint(\"You've done it! Nice job!\")\n\n'''\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"E H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('E') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D') == 'HHHeellloWooorrrrlld!!'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'\n\"\"\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"E HELLO WORLD!\\nD HELLO WORLD!\\nE HELLO WORLD!!\") == \"HHe2l3o1W1o3r4l2d1!2\"\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''E HHHeellloWooorrrrlld!!''') == 'H3e2l3o1W1o3r4l2d1!'\nprint('All Tests Passed')\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D E fguvibguv') == 'fguvibguv'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Bob'\nassert solution('10') == 'Alice'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"Alice\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 'Alice'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Alice'\nassert solution('4') == 'Bob'\nassert solution('5') == 'Alice'\nassert solution('10') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\nassert solution(\"3\") == \"Bob\"\nassert solution(\"4\") == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('4') == 'Alice'\nassert solution('5') == 'Bob'\nassert solution('6') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) in [\"Alice\", \"Bob\"]\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Alice'\nassert solution('5') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 5 3\") == \"5+5=10\"\nassert solution(\"5 5 5\") == \"10+5=15\"\nassert solution(\"5 4 4\") == \"4+4=8\"\nassert solution(\"4 5 4\") == \"4+5=9\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n\"\"\"\n\nimport sys\n\na, b, c = [int(x) for x in sys.stdin.readline().split()]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 8\n''') == \"5+3=8\"\nassert solution('''1 2 1\n''') == \"1+2=3\"\nassert solution('''1 3 2\n''') == \"1+2=5\"\nassert solution('''1 5 3\n''') == \"1+2=4\"\nassert solution('''8 10 5\n''') == \"8+5=13\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('4 1 5') == '4+1=5'\nassert solution('4 1 3') == '4+1=3'\nassert solution('5 4 3') == '5+4=3'\nassert solution('8 2 7') == '8+2=7'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"6 1 2\") == \"6+1=7\"\nassert solution(\"5 6 1\") == \"5+6=7\"\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 2\n\n1 1 2''') == '3+2=5'\nassert solution('''5 2 1\n\n5 2 1''') == '2+1=5'\nassert solution('''5 7 3\n\n5 7 3''') == '8-3=5'\n\nassert solution('''2 2 2\n\n2 2 2''') == '4+2=6'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('10 2 3') == '10+2=7'\nassert solution('5 10 -3') == '5-3=12'\nassert solution('7 5 3') == '7+5=12'\n\n\"\"\"\n\nstdin = input()\nsolution = input()\n\nprint(stdin)\nprint(solution)\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"2 2 1\") == \"2+2=4\"\nassert solution(\"0 0 0\") == \"0=0\"\nassert solution(\"4 3 1\") == \"4+3=5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n3 2 2 1 1 3 1 1\n''') == \"YES\"\nassert solution('''\n3\n1 1 1\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8\n2 2 2 1 1 3 1 1\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n3 2 1 1 3 1 1\"\n    ) == \"YES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 2\n''') == 'NO'\n\nassert solution('''\n5\n1 2 1 1 2\n''') == 'NO'\n\nassert solution('''\n6\n1 2 2 1 1 3\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n3 2\n1 1 3 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5\n3 2 2 1 1 1\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"8\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"4\\n1 2 2 1 1\") == \"NO\"\nassert solution(\"5\\n1 2 2 1 1 3\") == \"YES\"\nassert solution(\"5\\n1 2 2 1 1 3 2\") == \"NO\"\nassert solution(\"5\\n1 2 2 1 1 2 1\") == \"YES\"\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\n\nn, *d = [int(n) for n in stdin.strip().split()]\nprint('YES' if sum(d) == n - 1 else 'NO')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 2 2 1 1 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n8\n2 2 2 1 1 3 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n10\n2 2 2 1 1 3 1 1 1 3\n\"\"\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\n    \"8\\n5 2 1 2 3 1 2 1\") == \"NO\"\nassert solution(\n    \"7\\n5 1 4 4 2 5 5 1\") == \"YES\"\nassert solution(\n    \"10\\n5 2 1 2 1 1 2 1 1 2 1 1\") == \"YES\"\nassert solution(\n    \"5\\n2 1 2 1 1 2\") == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"demon\"\nassert solution(\"1\") == \"ghost\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    \"demon\",\n    \"ghost\",\n    \"mummy\",\n    \"witch\",\n    \"demon\",\n    \"ghost\",\n    \"mummy\",\n    \"witch\",\n    \"ghost\",\n    \"mummy\",\n    \"witch\"\n]) == \"ghost\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"mummy\"\nassert solution(\"1\") == \"ghost\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == \"ghost\", \"Should be ghost\"\nassert solution('mummy') == \"mummy\", \"Should be mummy\"\nassert solution('witch') == \"witch\", \"Should be witch\"\nassert solution('demon') == \"demon\", \"Should be demon\"\nassert solution('demons') == \"demons\", \"Should be demons\"\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == \"ghost\"\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == \"ghost\"\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == \"demon\"\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == \"mummy\"\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == \"mummy\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'ghost'\n\nSample Input:\n1\nw\nSample Output:\nw\n\"\"\"\n\nfrom collections import defaultdict\n\nn = int(input())\ncategories = defaultdict(list)\n\nfor i in range(n):\n    name, category = input().split()\n    categories[category].append(name)\n\nwinner = sorted(categories.items(), key=lambda x: len(x[1]))[-1]\n\nprint(winner[0])\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'ghost'\nassert solution('4') =='mummy'\nassert solution('5') == 'witch'\n\"\"\"\n\nn = int(input())\n\nscore = []\n\nfor _ in range(n):\n    score.append(list(input()))\n\nans = list(score[0])\n\nfor i in range(1, n):\n    for j in range(len(ans)):\n        if ans[j] == 'a':\n            ans[j] = score[i][j]\n        else:\n            if ans[j]!= score[i][j]:\n                ans[j] = min(ans[j], score[i][j])\n\nans = ''.join(ans)\nprint(ans)",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nghomestorm\\nmummy\\nwitch\\ndemon\\ndemon') =='mummy'\nassert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\nghoulish\\nghost\\nwitch\\nwitch\\ndemon\\nwitch') == 'witch'\nassert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\nghoulish\\nghost\\nwitch\\nwitch\\ndemon\\nwitch\\nghoulish\\nwitch') == 'witch'\n",
        "num_ids_2": 74,
        "num_ids_4": 127
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"mummy\"\nassert solution(\"7\") == \"mummy\"\nassert solution(\"11\") == \"mummy\"\nassert solution(\"24\") == \"mummy\"\nassert solution(\"51\") == \"mummy\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'witch'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\") == '\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n'\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163') == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163'\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"\"\"Artist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Artist Album Song_Title Length_seconds') == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n\"\"\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:') == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n'\nassert solution('5\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:') == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n'\nassert solution('5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:') == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n'\nassert solution('5\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:') == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n'\nassert solution('5\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:') == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n'\n",
        "num_ids_2": 346,
        "num_ids_4": 679
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    1\n    3\n    Artist\n    Album\n    Song_Title\n    Length_seconds\n    ''') == '''\n    Artist Album Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    George_Winston Summer Lullaby 215\n    '''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '\\n' + \\\n'Geo_Winston Summer Lullaby 215\\n' + \\\n'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n' + \\\n'James_Taylor Dad_Loves_His_Work London_Town 236\\n' + \\\n'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n' + \\\n'Tchaikovsky Piano_Favorites November 163\\n' + \\\n'George_Winston Summer Lullaby 215\\n'\n\nassert solution('3') == '\\n' + \\\n'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n' + \\\n'James_Taylor Dad_Loves_His_Work London_Town 236\\n' + \\\n'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n' + \\\n'Tchaikovsky Piano_Favorites November 163\\n' + \\\n'George_Winston Summer Lullaby 215\\n'\n\nassert solution('2') == '\\n' + \\\n'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n' + \\\n'James_Taylor Dad_Loves_His_Work London_Town 236\\n' + \\\n'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n' + \\\n'Tchaikovsky Piano_Favorites November 163\\n' + \\\n'George_Winston Summer Lullaby 215\\n'\n\nassert solution('1') == '\\n' + \\\n'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n' + \\\n'James_Taylor Dad_Loves_His_Work London_Town 236\\n' + \\\n'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n' + \\\n'Tchaikovsky Piano_Favorites November 163\\n' + \\\n'George_Winston Summer Lullaby 215\\n'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"2\\n1\"\nassert solution(\"5\\n3 1 5 3\") == \"3 1 2 5\"\nassert solution(\"5\\n3 1 5 3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 35,
        "num_ids_4": 1220
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Artist Album Song_Title Length_seconds\\n\"\nassert solution(\"2\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\n\"\nassert solution(\"3\") == \"James_Taylor Dad_Loves_His_Work London_Town 236\\n\"\nassert solution(\"4\") == \"James_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\nassert solution(\"5\") == \"George_Winston Summer Lullaby 215\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\n\nassert solution('''\n3 10 7\n5 5 5 5 5 5\n''') == 'NO'\n\nassert solution('''\n1 10 5\n2 2 2 3\n''') == 'YES'\n\nassert solution('''\n3 10 5\n2 2 2 3\n''') == 'NO'\n\nassert solution('''\n1 10 10\n1 1 1 1 1 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == 'YES'\nassert solution('3 4 1') == 'NO'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 7') == \"YES\"\n\nimport sys\nsys.stdin = open('../inputs/input-04-I.txt')\nfrom base import Solution",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5\\n') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'NO'\nassert solution('''\n3 1 3\n1 3 1\n''') == 'NO'\n'''\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '1 1 1 1 1 1 1'\n    ) == 'YES'\n\nassert solution(\n    '3 3 5 5 5'\n    ) == 'NO'\n\nprint(\n    solution(\n        input()\n        )\n    )\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n2 10 7\n5 5 5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 10 7\\n\"\n    \"5 5 5 5 5 5\\n\"\n    ) == \"YES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('10') == 'Not Effective'\nassert solution('10') == 'Not Effective'\nassert solution('10') == 'Not Effective'\nassert solution('10') == 'Not Effective'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nYYNN\\nYYYY\\nYYNY\\nYYNN\\nYYYY\") == \"66.666667\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nYYNN\\nYYYY\\nYYNY\\nYYNN\\nYYYY\") == \"50.000000\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('2') == 'Not Effective'\nassert solution('3') == '66.67%'\nassert solution('4') == '50.00%'\nassert solution('5') == '50.00%'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('15') == 'Not Effective'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYNN\nNNNY\nYYNN\nYYYY\nYYNY\nYYNN\nYYYY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"Not Effective\"\nassert solution(\"1\") == \"Not Effective\"\nassert solution(\"2\") == \"66.666667\"\nassert solution(\"5\") == \"Not Effective\"\nassert solution(\"4\") == \"50.000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('30') == '66.67'\nassert solution('35') == '50.000000'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == '66.666667'\nassert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYYY\nYYYN\nYYYY\n''') == '50.000000'\nassert solution('''\n5\nNNNNNN\nNNNNNN\nNNNNNN\nNNNNNN\nNNNNNN\n''') == 'Not Effective'\nassert solution('''\n1\nNNNNNN\n''') == 'Not Effective'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"Not Effective\"\nassert solution(\"5\") == \"66.666\"\nassert solution(\"10\") == \"Not Effective\"\nassert solution(\"10\") == \"Not Effective\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nBAACC') == '3'\nassert solution('5\\nBDBA') == '2'\nassert solution('5\\nBCDB') == '2'\nassert solution('5\\nABAB') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '1'\nassert solution('15') == '4'\nassert solution('20') == '2'\nassert solution('100') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('3') == 'Bruno'\nassert solution('4') == 'Bruno'\nassert solution('6') == 'Goran'\nassert solution('7') == 'Goran'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"0\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nBAACC\\n') == '3'\nassert solution('10\\nABABCABABCABABCABABABC\\n') == '2'\nassert solution('10\\nABABCABABCABABCABABABC\\n') == '1'\nassert solution('20\\nAABAACABABAAABBAAABAAABAA\\n') == '3'\n",
        "num_ids_2": 43,
        "num_ids_4": 97
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('20') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nAACB\") == \"3\"\nassert solution(\"5\\nAABBA\") == \"4\"\nassert solution(\"6\\nABABA\") == \"6\"\nassert solution(\"7\\nAAAAB\") == \"7\"\nassert solution(\"8\\nAAAAB\") == \"8\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nBAACC\") == \"Bruno\"\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Goran'\nassert solution('5') == 'Adrian'\nassert solution('1') == 'Adrian'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '3 543'\n\nassert solution('''\n1 D right\n2 B wrong\n3 E wrong\n4 C wrong\n5 A wrong\n6 H wrong\n-1\n''') == '1 -1'\n\nassert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\n''') == '3 -1'\n\nassert solution('''\n1 D right\n2 B wrong\n3 E wrong\n4 C wrong\n5 A wrong\n6 H wrong\n-1\n''') == '-1 -1'\n\nassert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\n''') == '3 -1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == \"3 543\"\n\nassert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == \"3 543\"\n\nassert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n''') == \"3 543\"\n\nassert solution('''\n-1\n''') == \"0 0\"\n\nassert solution('''\n-1\n''') == \"0 0\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'\nassert solution('''7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong\n''') == '502'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '3 543'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n\"\"\") == \"3 543\"\n\nassert solution(r\"\"\"\n1 H right\n2 B wrong\n3 E wrong\n4 E right\n\"\"\") == \"1 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\nassert solution('7 H right\\n15 B wrong\\n30 E wrong\\n35 E right\\n80 B wrong\\n80 B right\\n100 D wrong\\n100 C wrong\\n300 C right\\n300 D wrong') == '4 543'\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\n\nSample Input:\n7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong\n\nSample Output:\n4 503\n'''\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n') == '3 543'\n\n\"\"\"\nimport collections\n\nimport itertools",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"6 4\n3 1 2 3 1 1\n3 2 3 3 3 3\n3 2 4 4 3 4\n3 3 4 3 4 4\n3 3 3 3 4 3 3\n3 4 4 3 2 4 4 3\n3 1 3 2 2 1 4 2\n4 3 1 2 3 2 4\n3 2 3 3 4 3 3\n3 1 2 3 1 3 3\n3 3 3 3 4 3 4\n3 2 4 4 3 4 2 4\n\"\"\"\n) == \"-1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\nSample Output:\n5\n",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1 5\\n3 4 2 5 2 5 3 4 4 2 3\\n') == '5'\nassert solution('20 20\\n16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16 16 16 16 16\\n16 16 16 16 16 16 16 16",
        "num_ids_2": 1510,
        "num_ids_4": 1510
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == \"5\"\n\nassert solution('9 10\\n8 3 4 1 2 5 8 6\\n3 4 7 6 9 5 1 3\\n8 7 5 4 1 6 8 1\\n5 1 8 1 9 1 8 2\\n8 2 4 1 2 5 1 6\\n5 4 3 6 3 9 5 2\\n2 2 7 7 4 1 5 1\\n9 9 1 5 2 3 4\\n3 4 7 3 1 3 3 4\\n') == \"-1\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n10 2\n1 3 4\n1 1 5\n3 2 4\n3 2 5\n4 1 5\n4 3 5\n5 1 5\n5 3 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 5\") == \"5\"\nassert solution(\"20 4\") == \"-1\"\nassert solution(\"20 1\") == \"20\"\nassert solution(\"5 4 3 2 1 2 1 4\") == \"7\"\nassert solution(\"5 5 3 4 1 5 3 1 1 4\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n\nassert solution('''5\n1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'\nassert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '-1'\n",
        "num_ids_2": 267,
        "num_ids_4": 267
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n1 7\n5 5\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n5\n1 100\n5 5\n\"\"\") == \"edward is right\"\nassert solution(\"\"\"\n4\n1 2\n0 1\n1 2\n3 3\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n5\n1 100\n5 5\n0 1\n1 2\n3 3\n\"\"\") == \"edward is right\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 7\\n5 5\\n') == 'gunilla has a point'\nassert solution('2\\n1 7\\n5 5\\n') == 'edward is right'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 7\\n5 5') == 'gunilla has a point'\nassert solution('4 4\\n3 3') == 'gunilla has a point'\nassert solution('2 5\\n1 2') == 'edward is right'\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'gunilla has a point'\nprint(solution())\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 7\n5 5\n''') == 'gunilla has a point'\n\nassert solution('''\n2\n10 10\n0 9\nSample Output:\ngunilla has a point\n''') == 'gunilla has a point'\n\nassert solution('''\n1\n1\nSample Output:\nedward is right\n''') == 'edward is right'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'gunilla has a point'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 7\n5 5\n''') == 'gunilla has a point'\nassert solution('''\n5 3\n6 4\n''') == 'edward is right'\nassert solution('''\n9 4\n5 6\n''') == 'edward is right'\nassert solution('''\n5 3\n4 5\n''') == 'gunilla has a point'\nassert solution('''\n5 4\n5 5\n''') == 'edward is right'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n7\\n5 5') == 'gunilla has a point'\nprint('Solution: ', solution('1\\n7\\n5 5'))\nprint('Runtime:'+ str((datetime.now() - start_time).total_seconds()))\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"gunilla has a point\"\nassert solution(\"1 7\") == \"edward has a point\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"gunilla has a point\"\nassert solution(\"2\") == \"gunilla has a point\"\nassert solution(\"5\") == \"gunilla has a point\"\nassert solution(\"1 7\") == \"edward is right\"\nassert solution(\"5 5\") == \"edward is right\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'",
        "num_ids_2": 114,
        "num_ids_4": 228
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n\"\n    \"t 1 10\\nt 2 1\\nt 2 3\\n\"\n    \"s 1\\ns 2\\ns 3\\ns 4\\n\") == \"5\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4'\nassert solution('2 3\\nt 1\\n') == '2'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4 4 4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"1\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"1\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"1\"\n",
        "num_ids_2": 76,
        "num_ids_4": 150
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 11\\n1 10\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n') == \"4 4 4 4 4\"\nassert solution('10 11\\n1 10\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n') == \"4 4 4 4 4\"\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015'\nassert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 2') == '1982'\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nassert solution('''\n5\nSweden 2015\nIceland 1982\nIceland 1960\nIceland 1975\nIceland 1983\nNorway 1999\n''') == '1983'\n'''\nfor i in range(int(input())):\n    print(solution(input()))\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nIceland 2016\\nSweden 2015\\nIceland 1982\") == \"2015\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2''') == '2015'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nassert solution('''\n10\nVietnam 2013\nBelgium 1997\nCanada 2004\nRussia 2011\nChina 2017\nSwitzerland 2009\nMexico 2006\nPoland 2007\nGermany 2008\nFrance 2010\nJapan 2011\nAustralia 2006\nChina 2007\n''') == '2010'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nIceland 2016\\nIceland 1982\\nIceland 2016\\nIceland 1\\nIceland 1\\nIceland 2') == '2016'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nIceland 2016\\nIceland 1982\\nSweden 2015\\nIceland 2\\nIceland 2\\nNorway 1999\\nIceland 2') == '1982'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1985'\nassert solution('1') == '1985'\nassert solution('1\\n1') == '1986'\n",
        "num_ids_2": 18,
        "num_ids_4": 31
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"20\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('a') == '1'\nassert solution('a') == '1'\nassert solution('$') == '1'\nassert solution('$') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '1'\nassert solution('a') == '1'\nassert solution('aa') == '2'\nassert solution('aaa') == '2'\nassert solution('aab') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    'abbcccddddeeeee') == '10'\nassert solution(\n    'abbd') == '0'\nassert solution(\n    '') == '0'\nassert solution(\n    'aabcc') == '0'\nassert solution(\n    'aa') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\nassert solution(\"abbcccdddd\") == \"0\"\nassert solution(\"\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 39
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''abbcccddddeeeee''') == '10'\nassert solution('''abbcccddddeeeeeb''') == '11'\nassert solution('''abbcccddddeeeec''') == '10'\nassert solution('''abbcccddddeeee'') == '9'\nassert solution('''abbcccddddeeeeeaa''') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n''') == '10'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n\nassert solution('abcccdddde') == '0'\n\nassert solution('abcccddddeee') == '1'\n\nassert solution('abcccddddcde') == '0'\n\nassert solution('abcccddddee') == '1'",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency.. is a blight on.. and its humanity'\n'''\nThe return type is a string.\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency,.. and its. humanity'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"\"\"Engineering will save the world from inefficiency\n. is a blight on.. and its\nhumanity\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering save the world from inefficiency.'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'Inefficiency... is a blight on... and its humanity.'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\") == \"Engineering save the world from inefficiency\"\nassert solution(\"Inefficiency is a blight on the world and its humanity\") == \"Inefficiency... and its humanity\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering. will save the world from inefficiency... and its. humanity'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\") == \"Engineering.. and its humanity\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''Engineering\nwill save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering will save the world from inefficiency.. is a blight on.. and its humanity'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency.\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency.. and its humanity\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering... Engineering will save the world from inefficiency... Engineering... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity... Humanity
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') =='satisfactory'\nassert solution('10 10') == 'unsatisfactory'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == \"satisfactory\"\nassert solution('''5 2\n-1 -2 3\n1 -2 3\n1 2 -3''') == \"unsatisfactory\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"satisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\n\"\"\"\nimport sys",
        "num_ids_2": 90,
        "num_ids_4": 135
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\nassert solution('''\n8 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n1 -2 -3\n1 -2 2\n''') == 'unsatisfactory'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"satisfactory\"\nassert solution(\"4 6\") == \"unsatisfactory\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\nassert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') =='satisfactory'\nassert solution('5 5\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') == 'unsatisfactory'\nassert solution('5 2\\n-1 -2 3\\n-1 -2 -3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') =='satisfactory'\nassert solution('5 5\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') == 'unsatisfactory'\nassert solution('5 2\\n-1 -2 3\\n-1 -2 -3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') =='satisfactory'\n",
        "num_ids_2": 94,
        "num_ids_4": 190
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 0 1') =='satisfactory'\nassert solution('2 2 1 1') == 'unsatisfactory'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') =='satisfactory'\nassert solution('-1 2 3') == 'unsatisfactory'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"none\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('5\\n1 2 3 4') == '3'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 1 1 5 3 4 6 6\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"none\"\nassert solution(\"1 1 1 1 5 3 4 6 6\") == \"4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 1 5 3 4 6 6') == '4'\nassert solution('1') == 'none'\nassert solution('3') == 'none'\nassert solution('6') == 'none'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('8\\n3 5 2 1 7 4 8') == '0'\nassert solution('8\\n1 1 1 1 3 4 6 6') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"4\", \"First\"\nassert solution(\"1 1 1 5 3 4 6 6\") == \"4\", \"Second\"\nassert solution(\"\") == \"none\", \"Third\"\nassert solution(\"12\") == \"none\", \"Fourth\"",
        "num_ids_2": 33,
        "num_ids_4": 58
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6\\n') == '4', \"First\"\nassert solution('8\\n1 1 1 5 3 4 6 6\\n') == 'none', \"Second\"\nassert solution('8\\n1 1 1 5 3 4 6 6\\n') == 'none', \"Third\"\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\nassert solution('25:00:00') == '07:00:00'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20:00:00') == '8:00:00'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"00:00:00\",\"00:00:00\") == \"00:00:00\"\nassert solution(\"23:59:59\",\"04:00:00\") == \"23:59:59\"\nassert solution(\"23:59:59\",\"00:00:00\") == \"24:00:00\"\nassert solution(\"23:59:59\",\"00:00:10\") == \"23:59:59\"\nassert solution(\"00:00:00\",\"00:00:00\") == \"00:00:00\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\nassert solution('00:00:00') == '08:00:00'\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '16:00:00'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20:00:00','04:00:00') == '08:00:00'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20:00:00\",\"04:00:00\") == \"08:00:00\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\nassert solution_1() == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('31 6') == '4'\nassert solution('1 1') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '10'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '4'\nassert solution('20 2') == '11'\nassert solution('10 2') == '9'\nassert solution('20 20') == '20'\nprint('All test cases passed!')\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n6\") == \"4\"\nassert solution(\"31 6\") == \"4\"\nassert solution(\"100000000000 6\") == \"999999999999\"\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 6\n''') == '4'\nassert solution('''\n8 9\n''') == '5'\nassert solution('''\n1 10\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('31 6') == '4'\nassert solution('20 1') == '1'\nassert solution('2 1') == '2'\nassert solution('100 100') == '100'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13 8\") == \"4\"\nassert solution(\"5 9\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('10') == '9.999999999999999'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1.00000000000000\"\nassert solution(\"2\") == \"2.718281828459045\"\nassert solution(\"3\") == \"3.14159265358979\"\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2.0'\nassert solution('3') == '2.3333333333333333'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '2.71828182845905'\nassert solution('3') == '2.2250738585072014'\nassert solution('4') == '3.141592653589793'\nassert solution('5') == '2.22044604925031'\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('10') == '8.0'\nassert solution('20') == '17.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2.718281828459045'\nassert solution('0') == '1'\nassert solution('1000') == '8.222222222222222'\n",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2.71828182845905'\nassert solution('0') == '1'\nassert solution('10') == '2.71828182845905'\nassert solution('3') == '2.7'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n\n''') == '2.6666666666666665'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('5') == '3.333333333333333'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('20') == '18.487793135077933'\nassert solution('100') == '101.49755960563216'\n",
        "num_ids_2": 33,
        "num_ids_4": 51
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5 3 7\n\"\"\"\n) == \"paul\"\n\"\"\"\n=====\nYour code goes here\n=====\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 7''') == 'paul'\nassert solution('''3 5 7''') == 'opponent'\n'''",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 5 7\") == \"opponent\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('5 2 6') == 'opponent'\nassert solution('9 6 7') == 'paul'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"opponent\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'paul'\nassert solution('5 3 7') == 'opponent'\nassert solution('1 2 3 4 5') == 'opponent'\nassert solution('1 2 5 3 4') == 'paul'\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'paul'\nassert solution('2') == 'opponent'\nassert solution('3') == 'opponent'\nassert solution('4') == 'opponent'\nassert solution('5') == 'paul'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 7\n    3\n    1\n    2\n    1\n    2\n    2\n    4\n    3\n    1\n    2\n    4''') == \"opponent\"\nassert solution('''3\n    1\n    3\n    2\n    1\n    3\n    1\n    1\n    1\n    3\n    1\n    2\n    1\n    2\n    1\n    1\n    1\n    1\n    2\n    1\n    2\n    1\n    1\n    1\n    2''') == \"paul\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"6 5 7\") == \"opponent\"\nprint(\"You passed all test cases!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 3 2\") == \"opponent\"\nassert solution(\"5 5 3\") == \"paul\"\nassert solution(\"10 10 5\") == \"paul\"\nassert solution(\"10 10 10\") == \"paul\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n0 0 0 1 1\n1 1 0 1 1\n1 1 0 0 1\n1 1 0 0 1\n1 1 1 1 1\n0 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '3'\n\nassert solution('''12\n
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1''') == '2'\nassert solution('''3''') == '4'\nassert solution('''5''') == '3'\nassert solution('''10''') == '9'\nassert solution('''100''') == '98'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"2\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"5\\n\") == \"1\"\nassert solution(\"5\\n\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\nassert solution(\"AbC\") == \"Yes\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"aBc\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('123456') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"Yes\"\nassert solution(\"123456\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"ABC\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('12') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('123A') == 'Yes'\nassert solution('a123') == 'No'\nassert solution('a123A') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1234\\n123a') == 'No'\nassert solution('1010\\n1010a') == 'Yes'\n\ninput_str = stdin\npassword = input_str",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\nassert solution('abc') == 'a'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('papapa') == 'papapa'\nassert solution('aapa') == 'apa'\nassert solution('papapapa') == 'papapapa'\nassert solution('apaapa') == 'apaapa'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"zeka\") == \"e k a p a\"\n\n[exec(input().strip()) for _ in range(int(input()))]\n\"\"\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('zepelepenapa papapripikapa') == \"zelena paprika\"\nassert solution('apapapripikapa') == \"apapapripikapa\"\nassert solution('lulub') == \"lulub\"\nassert solution('apapaprapapapa') == \"apapaprapapapa\"",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('papapripikapa') == 'papapa'\nassert solution('papaprapapa') == 'papaprapapa'\n",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 1') == '-28.735483870967742'\nassert solution('-12 -8') == 'IMPOSSIBLE'\nassert solution('-12 8') == '-100.000001'\nassert solution('0 8') == '-28.735483870967742'\nassert solution('0 4') == '28.735483870967742'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '-64'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('10 10') == 'ALL GOOD'\nassert solution('-3 1') == '-3'\nassert solution('-10 -2') == '-20'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('32 2') == '-32'\nassert solution('16 -10') == '16'\nassert solution('100 100') == 'IMPOSSIBLE'\nassert solution('200 200') == 'ALL GOOD'\nassert solution('-1 0') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'IMPOSSIBLE'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32 2') == '-32'\nassert solution('45 20') == 'ALL GOOD'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(f\"32 2\") == \"-32\"\nassert solution(f\"32 4\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '-32', f\"actual: {solution('''0 2''')}\"; assert solution('''\n0 2\n''') == '",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"32 3\") == \"IMPOSSIBLE\"\nassert solution(\"32 4\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('32 2') == '-32'\nassert solution('41 3') == 'IMPOSSIBLE'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n1 3 4') == 'both\\none\\none'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 3\n2 1 3\n''') == 'both'\nassert solution('''3 1 3\n1 4 3\n''') == 'one'\nassert solution('''3 2 3\n1 2 2\n''') == 'none'\n\n\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('2 2 2 3') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'both', '1st example'\nassert solution('1 3 4') == 'none', '2nd example'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"2 4 4\") == \"none\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2,2,3,3]) == \"both\"\nassert solution([1,3,4,3]) == \"one\"\nassert solution([1,3,4,3]) == \"one\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'both'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('1 1 3 4') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 2, 3, 3]) == 'both'\nassert solution([1, 3, 4, 3]) == 'one'\nassert solution([1, 3, 4, 2]) == 'none'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"4 5 10\") == \"7\"\n\nimport random\n\nnums = sorted(list(map(int, input().split())))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    4\n    6\n    8\n''') == '10'\n\nassert solution('''\n    1\n    2\n    3\n''') == '5'\n\nassert solution('''\n    0\n    3\n    4\n''') == '1'\n\nassert solution('''\n    2\n    1\n    3\n''') == '4'\n\nassert solution('''\n    1\n    2\n    4\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('-5 6 7') == '-10'\nassert solution('-1 1 -1') == '-2'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n6\n8\n''') == '10'\nassert solution('''\n4\n6\n5\n''') == '5'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"4 6 7\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('4 5 -1') == '6'\nassert solution('-4 5 3') == '5'\n\"\"\"\n\nimport sys",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"4 7 8\") == \"10\"\nassert solution(\"8 7 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"-4 6 8\") == \"10\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 6 8\n''') == '10'\nprint('Check your solution.')\nassert solution('''\n-4 6 8\n''') == '10'\nprint('Check your solution.')\nassert solution('''\n100\n''') == '100'\nprint('Check your solution.')\nassert solution('''\n-100\n''') == '100'\nprint('Check your solution.')\nassert solution('''\n0\n''') == '0'\nprint('Check your solution.')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6 8\") == \"10\"\n\nassert solution(\"1 5 9\") == \"10\"\n\nassert solution(\"2 4 5\") == \"10\"\n\nassert solution(\"4 8 12\") == \"12\"\n\nassert solution(\"4 5 8\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('500 70') == '533'\nassert solution('5 200') == '5333'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '500 70\\n') == '533'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('500 70') == '533'\nassert solution('1 5') == '2'\nassert solution('1 0') == '1'\nassert solution('1 0') == '1'\nassert solution('100 0') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"10 50\") == \"45\"\nassert solution(\"10 100\") == \"105\"\nassert solution(\"10 250\") == \"115\"\nassert solution(\"100 10\") == \"105\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('500 70') == '533'\nassert solution('30 80') == '33'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('500 70') == '533'\nassert solution('10 4') == '16'\nassert solution('1000 1000') == '100000'\nassert solution('-100 0') == '0'\nassert solution('100 -100') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('500 70') == '533'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"500 70\\n\"\n) == \"533\"\n\nassert solution(\n    \"1000 50\\n\"\n) == \"1028\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''500 70''') == '533'\nassert solution('''250 95''') == '344'\nassert solution('''100 99''') == '100'\n''')\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('500 70') == '533'\nassert solution('500 120') == '541'\nassert solution('500 90') == '515'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('2 1') == '39.0'\nassert solution('3 6') == '40.0'\nassert solution('2 3') == '38.0'\n\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == 'NaN'\nprint(solution(\"2 9\\n69 60\\n100 60\"))\n\nassert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n20 30') == '30.0'\nassert solution('2 5\\n70 60') == '39.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '0.5555555555555555'\nassert solution('3 2') == '0.07407407407407407'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"2 9\n69 60\n100 60\n\"\"\") == \"39.0\nassert solution(\n\"\"\"2 5\n1 5\n1 1\n\"\"\") == \"35.0\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 57 71') == '9.783333333333337'\nassert solution('4 3 28 50') == '18.0'\nassert solution('2 2 10') == '10.0'\nassert solution('3 1 0') == '1.0'",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 9]) == '39.0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n100 80') == '81.0'\n\n\"\"\"\nfrom math import sqrt",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n69 60\n100 60\n2\n\"\"\"\n) == \"39.0\"\nassert solution(\n\"\"\"\n3\n69 60\n100 60\n3\n\"\"\"\n) == \"30.0\"\nassert solution(\n\"\"\"\n3\n10 6\n7 12\n1 2\n4 3\n\"\"\"\n) == \"7.0\"\nassert solution(\n\"\"\"\n5\n0 10\n4 4\n4 4\n4 1\n4 0\n\"\"\"\n) == \"4.0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('1 2') == '2.0'\nassert solution('6 10') == '45.0'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_value) == output_value",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n23 27 31 28 30\n''') == '2 28'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n-1\n2\n3\n4\n5\n\"\"\") == \"2 4\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2 28'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2\n2 3 4\n2\n2 2 4\n''') == '3 4'\n\nassert solution('''\n2\n-1 2\n''') == '-1'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n23 27 31 28 30\") == \"2 28\"\nassert solution(\"5\\n-20 -15 -12 -8 -2 0\") == \"2 -12\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\nprint(solution(input()))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n23 27 31 28 30\nSample Input 2:\n10\n-20 -15 -10 -20 -20 -10 -30 -20 -10 -40 -20 -20 -10 -40 -30 -20 -20 -40 -30\nSample Output 2:\n1\n''') == '2 28'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n2 2 2 2 3 2 1 1\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 5\n1 2 2\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\\\n3 4\n1 2 3\n\"\"\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('4 2 3') == '2'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 1 2 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 3') == '2'\nassert solution('2 6\\n1 2 3') == '1'\nassert solution('5 5\\n1 2 3') == '1'\nassert solution('4 6\\n1 2 3') == '1'\nassert solution('1 7\\n1 2 3') == '2'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == '2'\n\nassert solution('''\n3 5\n1 2 1\n''') == '0'\n\nassert solution('''\n3 6\n1 2 1\n''') == '3'\n\nassert solution('''\n3 5\n1 2 1\n''') == '2'\n\nassert solution('''\n3 5\n1 2\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 6') == '2'\nassert solution('6 10') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 2\\n') == '2'\n\n'''\nfrom collections import defaultdict\nn, k = map(int, input().split())\nd = defaultdict(list)\nfor i in range(n):\n    d[input()].append(i+1)\n\nfor _ in range(k):\n    d[input()] = []\nprint(len(d.keys()))",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '1'\n\nassert solution('-1') == '1'\nassert solution('9') == '9'\nassert solution('21') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"7\"\nassert solution(\"100\") == \"10\"\nassert solution(\"100\") == \"10\"\nassert solution(\"100\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '8'\nassert solution('3') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '9'\nassert solution('9') == '9'\nassert solution('10') == '9'\nassert solution('20') == '9'\nassert solution('100') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '10'\nassert solution('3') == '5'\n'''\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1\nMWWMWMMWM\n'''\n) == '9'\n\nassert solution(\n'''\n4\nWMMMM\n'''\n) == '2'\n\nassert solution(\n'''\n5\nWWWWM\n'''\n) == '2'\n\nassert solution(\n'''\n12\nMMWMMWMMWMMWMMW\n'''\n) == '5'\n\nassert solution(\n'''\n1\nWWW\n'''\n) == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nWMMW\n''') == '6\nassert solution('''\n10\nWMMW\nM\n''') == '2\nassert solution('''\n1\nW\n''') == '2\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '9'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\nWWM\n''') == '4'\n'''\nNote: There can be multiple correct solutions.\n'''\nassert solution('''\n8\nMWMWM\n''') == '4'\n'''\nNote: There can be multiple correct solutions.\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"4\n-2 3 undo 2\n1\n0\n0\n1\"\"\") == \"3\"\nassert solution(r\"\"\"5\n8 -2 3 undo 2\n1\n0\n0\n1\n2\n0\n0\"\"\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"8 -2 3 undo 2\"\n) == \"3\"\nassert solution(\n    \"6 10\\n\"\n    \"5 3 4 2 1\\n\"\n    \"3 1 -4 undo 2\\n\"\n) == \"4\"\nassert solution(\n    \"13 10\\n\"\n    \"8 -2 3 undo 2\\n\"\n    \"2 5 1 -4\\n\"\n) == \"3\"\nassert solution(\n    \"25 15\\n\"\n    \"5 -3 1 undo 2\\n\"\n    \"2 5 1 undo\\n\"\n    \"3 4 -2 undo\\n\"\n) == \"2\"\nassert solution(\n    \"10 10\\n\"\n    \"4 2 -1\\n\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output\n\nInput:\n6\n8 -2 3 undo 2\n10 0 -2 1\n\nOutput:\n2\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n6\n2 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n3\n\nInput:\n5 4\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n2\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n6\n-2 -1 -1\n\nOutput:\n1\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n3\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 4\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n3\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 4\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n8 -2 3 undo 2\n1 -2 1 undo 2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n2\n\nInput:\n5 4\n8 -2 3 undo 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n1 -2 2\n2 1 -2\n\nOutput:\n1\n\nInput:\n6\n0 0 -1\n\nOutput:\n2\n\nInput:\n5 2\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 8 -2 3 undo 2') == '3'\nassert solution('9 9 -2 3 undo 2') == '2'\nassert solution('20 5 -2 3 undo 2') == '20'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n6 -1\nundo 2\nundo 4\nundo 3\nundo 1\n''') == '3'\nassert solution('''\n4\n2\n-3\n-2\nundo 1\n''') == '3'\nassert solution('''\n4\n3\n-2\n2\n''') == '2'\nassert solution('''\n4\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '3'\nassert solution('1 1') == '1'\nassert solution('1 1 0') == '1'\nassert solution('5 1') == '1'\nassert solution('5 -1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"3\"\nassert solution(\"3 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('5 3\\n8 -2 undo 2') == '1'\nassert solution('5 3\\n8 -2 undo 2') == '2'\nassert solution('5 3\\n8 -2 undo 2') == '4'\nassert solution('5 3\\n8 undo 2') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '3'\nassert solution('20 4') == '3'\nassert solution('5 -1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6 7'\nassert solution('1 2 3') == '9 8 7'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n1 2 3\n3 2 1\n''') == '6 7'\nassert solution('''\n4 4\n1 2 3 5\n2 4 6 7\n3 4 1 5\n4 2 6 7\n''') == '1 6'\nassert solution('''\n5 6\n3 4 1 2 5 6\n4 2 7 5\n2 3 6 4 5\n3 4 1 2 5\n5 4 1 2 3\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3\n3 2 1\n''') == '6 7'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6 7'\nassert solution('1 2 3') == '6 7'\nassert solution('1 2 3 1 2 1 3') == '6 7'",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\"\nassert solution(\"2 4\\n2 1 2 1\\n1 2 3\") == \"7 6\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6 7'\nassert solution('4 2') == '6 5'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n3 2 1') == '6 7'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 3\\n3 2 1') == '6 7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nals mollen\\nmollen mollen mollen mollen mollen\\n4\\nals when\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\") == \"64 incorrect\\n64 incorrect\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nals mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 incorrect\\n665 correct\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"incorrect\"\nassert solution(\"\"\"\n    als mollen mollen mollen mollen mollen mollen mollen\n    \"\"\") == \"correct\"\nassert solution(\"\"\"\n    als when correct\n    moles moles correct\n    moles destroy correct\n    moles mills incorrect\n    \"\"\") == \"7 correct\"\nassert solution(\"\"\"\n    als when correct\n    moles moles correct\n    moles destroy correct\n    moles mills incorrect\n    \"\"\") == \"7 incorrect\"\nassert solution(\"\"\"\n    als when correct\n    moles moles correct\n    moles destroy correct\n    moles mills incorrect\n    \"\"\") == \"10 incorrect\"\n",
        "num_ids_2": 15,
        "num_ids_4": 25
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"\nassert solution(\"1\\n\") == \"1\\ncorrect\\n\"\nassert solution(\"1\\ncorrect\\n\") == \"1\\ncorrect\\n\"\nassert solution(\"2\\nincorrect\\n\") == \"2\\ncorrect\\n\"\nassert solution(\"3\\ncorrect\\ncorrect\\n\") == \"3\\ncorrect\\ncorrect\\n\"\n",
        "num_ids_2": 73,
        "num_ids_4": 114
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"correct\"\nassert solution(\"8\") == \"correct\"\nassert solution(\"1\") == \"incorrect\"\nassert solution(\"0\") == \"incorrect\"\nassert solution(\"3\") == \"correct\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct\\n665 incorrect'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == '64 correct\\n665 incorrect'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 correct'\nassert solution('2') == '1 incorrect'\nassert solution('1') == '3 correct'\nassert solution('0') == '5 correct'\nassert solution('4') == '7 correct'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nals mollen mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n') == '64 correct\\n665 incorrect'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nals mollen mollen mollen mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\nSample Output:\n64 correct\n665 incorrect\n''') == '''64 correct\n665 incorrect'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 3') == '7'\nassert solution('2\\n1 2\\n1 3') == '6'\nassert solution('2\\n3 2\\n1 3') == '5'\nassert solution('2\\n3 2\\n1 2') == '5'\nassert solution('1\\n1 2\\n1 2') == '4'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3 4 3') == '7'\nassert solution('1\\n3 4 2 3') == '3'\nassert solution('2\\n1 2 3 3') == '4'\nassert solution('1\\n3 3 5 3') == '4'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('4') == '5'\nassert solution('100') == '5'\nassert solution('4') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 3 4 3') == '7'\nassert solution('10\\n2 4 4 4 4 4 4') == '8'\nassert solution('100\\n2 1 2 1 1 2 2 2 2') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 3 4 3\n''') == '7'\n\nassert solution('''\n4\n2 3 4 3\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3 4 3\n''') == '7'\nassert solution('''3\n2 3 4\n''') == '4'\nassert solution('''4\n2 3 4 3\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 3 4 3') == '7'\nassert solution(\n    '4 1 2 3') == '4'\nassert solution(\n    '4 2 4 3') == '4'\nassert solution(\n    '8 9 4 3') == '10'\nassert solution(\n    '8 4 2 3') == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 3 4\\n\") == \"7\"\nassert solution(\"1\\n3 3 4\\n\") == \"10\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3 4') == '7'\nassert solution('1\\n3 2 4') == '5'\nassert solution('10\\n7 3 2 4 1 3') == '9'\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\", \"Test 1 for solution()\"\n\nassert solution(\"\"\"\n4\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\", \"Test 2 for solution()\"\n\nassert solution(\"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\", \"Test 3 for solution()\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    1\n    0.0 0.0\n    2.0 2.0\n    \"\"\"\n) == \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''1\n0\n''') == '0.0 0.0\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n0 0\n1 1\n0 2\n4\n6\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n0 0\\n1 1\\n0 2') == '2.0 2.0\\n0 4.0'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '2.0 2.0\\n0 4.0\\n'\nassert solution('4\\n10 10\\n10 10\\n15 15\\n10 15\\n5 5\\n') == '8.0 8.0\\n8.0 12.0\\n6.0 6.0\\n6.0 14.0\\n'\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2.0 2.0'\nassert solution('10') == '4.0 4.0'\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\"\nassert solution(\"\"\"\n10\n-2 -1 -1 -2 -2 0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0\n\"\"\") == \"-2.0 -1.0 0.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0\"\nassert solution(\"\"\"\n1\n1 0\n0 2\n\"\"\") == \"1.0 2.0\\n0.0 2.0\\n0.0 2.0\\n\"\nassert solution(\"\"\"\n1\n3 1\n0 2\n\"\"\") == \"3.0 2.0\\n0.0 2.0\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n5 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0 4.0'\nassert solution('1\\n10 0\\n0 1\\n0 2\\n1 1\\n0 2\\n3 1\\n0 2\\n3 2\\n') == '0.0 0.0\\n0.0 4.0\\n1.0 4.0\\n1.5 3.0\\n1.5 2.0\\n2.5 3.0\\n2.5 1.0\\n3.5 1.0\\n3.5 0.0\\n4.5 0.0'\n",
        "num_ids_2": 167,
        "num_ids_4": 167
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0.0 0.0\"\nassert solution(\"2\") == \"2.0 2.0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n''') == '1', \"First Test Case\"\nassert solution('''\n1\n''') == '1', \"Second Test Case\"\nassert solution('''\n2\n''') == '2', \"Third Test Case\"\nassert solution('''\n3\n''') == '3', \"Fourth Test Case\"\nassert solution('''\n4\n''') == '4', \"Fifth Test Case\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '3'\nassert solution('10') == '5'\nassert solution('12') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n5\n5\n4\n''') == '3'\n\nassert solution('''\n1\n10\n15\n''') == '6'\n\nassert solution('''\n1\n3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3\\n2\\n4\\n1\") == \"3\"\nassert solution(\"3\\n1 2 3\\n2\\n3\\n1\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5\\n2\\n3\\n4\\n5\\n6\") == \"2\"\nassert solution(\"3\\n2 5\\n2\\n3\\n1\\n1\\n2\\n\") == \"2\"\nassert solution(\"2\\n3 6\\n2\\n5\\n3\\n4\\n2\\n\") == \"5\"\n",
        "num_ids_2": 48,
        "num_ids_4": 111
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('10\\n') == '10'\nassert solution('1000\\n') == '1000'\nassert solution('9999\\n') == '9999'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(0).read()) == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == 1\nassert solution(\"4\") == 2\nassert solution(\"5\") == 3\nassert solution(\"123\") == 4\nassert solution(\"100\") == 5",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1', f\"Expected 1, but printed {solution('1')}\"\nassert solution('5') == '7', f\"Expected 7, but printed {solution('5')}\"\n\"\"\"\nimport sys\nsys.setrecursionlimit(100000)",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '34'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n12 16\n''') == '34'\n\nassert solution('''\n1 10\n1 2\n''') == '9'\n\nassert solution('''\n1 10\n3 3\n''') == '8'\n\nassert solution('''\n4 1\n1 2\n1 2\n''') == '6'\n\nassert solution('''\n3 4\n1 2\n1 1\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n1 1\n10 9\n\n''') == \"13\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n12 16\") == \"34\"\nassert solution(\"3 1\\n3 3\") == \"6\"\nassert solution(\"10 10\\n50 60\") == \"110\"\nassert solution(\"2 5\\n100 100\") == \"200\"\nassert solution(\"100 100\\n1000 1000\") == \"2000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '34'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n12 16\n2 5\n1 5''') == '32'\nassert solution('''10 6\n6 2\n0 1\n1 0''') == '8'\nassert solution('''4 1\n20 1\n1 10\n2 2''') == '17'\n\n'''\nI assume that there will always be a solution\n\n'''\n\n'''\nHere's a short python script to solve the problem\n\nimport sys\nimport math",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n12 16\n''') == '34'\nassert solution('''\n4 4\n8 5\n''') == '5'\n\n'''\n    - Output:\n34\n'''\n\n\n'''\n    - Input:\n    4 4\n    8 5\n    16 8\n    16 8\n    Output:\n    8\n'''\n\n\n'''\n    - Input:\n    4 1\n    4 1\n    4 1\n    4 1\n    Output:\n    3\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"34\"\nassert solution(\"10 2\") == \"22\"\nassert solution(\"10 2 3\") == \"24\"\nassert solution(\"4 1 5\") == \"17\"\nassert solution(\"4 1 6\") == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 1\n10 16\n''') == '34'\nassert solution('''\n4 1\n8 16\n''') == '36'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1 2 1') == '2'\nassert solution('4\\n4 4 5 2') == '4'\nassert solution('3\\n1 1 2') == '0'\nassert solution('2\\n2 3') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 3 1\\n\") == \"3\"\nassert solution(\"5\\n1 1 2 2 1\\n\") == \"1\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n2\n1\n''') == '3'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n5\n1 2 3 4 5 6 7 8 9 10\n''') == '6'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '8'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n5\n1 2 3 4 5 6 7 8 9 10\n2\n1 2 3 4 5 6 7 8 9 10\n3\n1 2 3 4 5 6 7 8 9 10\n4\n1 2 3 4 5 6 7 8 9 10\n5\n1 2 3 4 5 6 7 8 9 10\n6\n1 2 3 4 5 6 7 8 9 10\n7\n1 2 3 4 5 6 7 8 9 10\n8\n1 2 3 4 5 6 7 8 9 10\n9\n1 2 3 4 5 6 7 8 9 10\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 3 1\n''') == '3'\nassert solution('''\n4\n2 5 4 1\n''') == '2'\nassert solution('''\n1\n4\n1 1 2 2\n''') == '3'\nassert solution('''\n3\n2 4 5\n''') == '1'\nassert solution('''\n4\n1 2 3 2\n''') == '2'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2 3 1\n2 3 4 1\n3 4 5 1\n4 5 6 1\n5 6 7 1\n6 7 8 1\n7 8 9 1\n8 9 10 1\n9 10 11 1\n10 11 12 1\n11 12 13 1\n12 13 14 1\n13 14 15 1\n14 15 16 1\n15 16 17 1\n16 17 18 1\n17 18 19 1\n18 19 20 1\n19 20 21 1\n20 21 22 1\n21 22 23 1\n22 23 24 1\n23 24 25 1\n24 25 26 1\n25 26 27 1\n26 27 28 1\n27 28 29 1\n28 29 30 1\n29 30 31 1\n30 31 32 1\n31 32 33 1\n32 33 34 1\n33 34 35 1\n34 35 36 1\n35 36 37 1\n36 37 38 1\n37 38 39 1\n38 39 40 1\n39 40 41 1\n40 41 42 1\n41 42 43 1\n42 43 44 1\n43 44 45 1\n44 45 46 1\n45 46 47 1\n46 47 48 1\n47 48 49 1\n48 49 50 1\n49 50 51 1\n50 51 52 1\n51 52 53 1\n52 53 54 1\n53 54 55 1\n54 55 56 1\n55 56 57 1\n56 57 58 1\n57 58 59 1\n58 59 60 1\n59 60 61 1\n60 61 62 1\n61 62 63 1\n62 63 64 1\n63 63 65 1\n63 64 66 1\n64 64 67 1\n65 65 68 1\n65 66 69 1\n66 69 70 1\n67 69 71 1\n67 70 72 1\n70 72 73 1\n69 72 74 1\n68 72 75 1\n67 72 76 1\n66 72 77 1\n65 72 78 1\n64 72 79 1\n63 72 80 1\n62 72 81 1\n61 72 82 1\n60 72 83 1\n59 72 84 1\n58 72 85 1\n57 72 86 1\n56 72 87 1\n55 72 88 1\n54 72 89 1\n53 72 90 1\n52 72 91 1\n51 72 92 1\n50 72 93 1\n49 72 94 1\n48 72 95 1\n47 72 96 1\n46 72 97 1\n45 72 98 1\n44 72 99 1\n43 72 100 1\n42 72 101 1\n41 72 102 1\n40 72 103 1\n39 72 104 1\n38 72 105 1\n37 72 106 1\n36 72 107 1\n35 72 108 1\n34 72 109 1\n33 72 110 1\n32 72 111 1\n31 72 112 1\n30 72 113 1\n29 72 114 1\n28 72 115 1\n27 72 116 1\n26 72 117 1\n25 72 118 1\n24 72 119 1\n23 72 120 1\n22 72 121 1\n21 72 122 1\n20 72 123 1\n19 72 124 1\n18 72 125 1\n17 72 126 1\n16 72 127 1\n15 72 128 1\n14 72 129 1\n13 72 130 1\n12 72 131 1\n11 72 132 1\n10 72 133 1\n9 72 134 1\n8 72 135 1\n7 72 136 1\n6 72 137 1\n5 72 138 1\n4 72 139 1\n3 72 140 1\n2 72 141 1\n1 72 142 1\n0 72 143 1\n0 72 144 1\n1 72 145 1\n2 72 146 1\n3 72 147 1\n4 72 148 1\n5 72 149 1\n6 72 150 1\n7 72 151 1\n8 72 152 1\n9 72 153 1\n10 72 154 1\n11 72 155 1\n12 72 156 1\n13 72 157 1\n14 72 158 1\n15 72 159 1\n16 72 160 1\n17 72 161 1\n18 72 162 1\n19 72 163 1\n20 72 164 1\n21 72 165 1\n22 72 166 1\n23 72 167 1\n24 72 168 1\n25 72 169 1\n26 72 170 1\n27 72 171 1\n28 72 172 1\n29 72 173 1\n30 72 174 1\n31 72 175 1\n32 72 176 1\n33 72 177 1\n34 72 178 1\n35 72 179 1\n36 72 180 1\n37 72 181 1\n38 72 182 1\n39 72 183 1\n40 72 184 1\n41 72 185 1\n42 72 186 1\n43 72 187 1\n44 72 188 1\n45 72 189 1\n46 72 190 1\n47 72 191 1\n48 72 192 1\n49 72 193 1\n50 72 194 1\n51 72 195 1\n52 72 196 1\n53 72 197 1\n54 72 198 1\n55 72 199 1\n56 72 200 1\n57 72 201 1\n58 72 202 1\n59 72 203 1\n60 72 204 1\n61 72 205 1\n62 72 206 1\n63 72 207 1\n64 72 208 1\n65 72 209 1\n66 72 210 1\n67 72 211 1\n68 72 212 1\n69 72 213 1\n70 72 214 1\n71 72 215 1\n72 72 216 1\n73 72 217 1\n74 72 218 1\n75 72 219 1\n76 72 220 1\n77 72 221 1\n78 72 222 1\n79 72 223 1\n80 72 224 1\n81 72 225 1\n82 72 226 1\n83 72 227 1\n84 72 228 1\n85 72 229 1\n86 72 230 1\n87 72 231 1\n88 72 232 1\n89 72 233 1\n90 72 234 1\n91 72 235 1\n92 72 236 1\n93 72 237 1\n94 72 238 1\n95 72 239 1\n96 72 240 1\n97 72 241 1\n98 72 242 1\n99 72 243 1\n100 72 244 1\n101 72 245 1\n102 72 246 1\n103 72 247 1\n104 72 248 1\n105 72 249 1\n106 72 250 1\n107 72 251 1\n108 72 252 1\n109 72 253 1\n110 72 254 1\n111 72 255 1\n112 72 256 1\n113 72 257 1\n114 72 258 1\n115 72 259 1\n116 72 260 1\n117 72 261 1\n118 72 262 1\n119 72 263 1\n120 72 264 1\n121 72 265 1\n122 72 266 1\n123 72 267 1\n124 72 268 1\n125 72 269 1\n126 72 270 1\n127 72 271 1\n128 72 272 1\n129 72 273 1\n130 72 274 1\n131 72 275 1\n132 72 276 1\n133 72 277 1\n134 72 278 1\n135 72 279 1\n136 72 280 1\n137 72 281 1\n138 72 282 1\n139 72 283 1\n140 72 284 1\n141 72 285 1\n142 72 286 1\n143 72 287 1\n144 72 288 1\n145 72 289 1\n146 72 290 1\n147 72 291 1\n148 72 292 1\n149 72 293 1\n150 72 294 1\n151 72 295 1\n152 72 296 1\n153 72 297 1\n154 72 298 1\n155 72 299 1\n156 72 300 1\n157 72 301 1\n158 72 302 1\n159 72 303 1\n160 72 304 1\n161 72 305 1\n162 72 306 1\n163 72 307 1\n164 72 308 1\n165 72 309 1\n166 72 310 1\n167 72 311 1\n168 72 312 1\n169 72 313 1\n170 72 314 1\n171 72 315 1\n172 72 316 1\n173 72 317 1\n174 72 318 1\n175 72 319 1\n176 72 320 1\n177 72 321 1\n178 72 322 1\n179 72 323 1\n180 72 324 1\n181 72 325 1\n182 72 326 1\n183 72 327 1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"4\\n1 2 1 1\") == \"4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n100\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"21\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 3 1 2\\n') == '3'\nassert solution('9\\n1 2 3 1 2 3 2 2 4\\n') == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.0') == '1088'\nassert solution('20.0') == '1947'\nassert solution('15.0') == '12'\n\nprint(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1088'\nassert solution('123.456') == '113889'\nassert solution('1.1') == '100'\nassert solution('2.2') == '200'\nassert solution('1.01') == '1099'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.0') == '1088'\nassert solution('0.1') == '1088'\nassert solution('0.01') == '1088'\nassert solution('0.0001') == '1088'\nassert solution('0.001') == '1088'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"0.001\") == \"1\"\nassert solution(\"0.01\") == \"10\"\nassert solution(\"100\") == \"100\"\nassert solution(\"5.1\") == \"105\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1') == '1'\nassert solution('1.1') == '1'\nassert solution('1.001') == '1'\nassert solution('0.1') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1088'\nassert solution('3.142') == '3.142'\nassert solution('0.1') == '1'\nassert solution('0.0001') == '0.0001'\nassert solution('0.001') == '0.001'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10.20\") == \"10\"\nassert solution(\"10.3\") == \"10\"\nassert solution(\"2.0\") == \"2\"\nassert solution(\"7.00\") == \"700\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.0') == '1088', \"Error with example\"\nassert solution('3.0') == '310', \"Error with example\"\nassert solution('4.0') == '541', \"Error with example\"\nassert solution('5.0') == '603', \"Error with example\"\nassert solution('6.0') == '716', \"Error with example\"\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.1') == '988'\nassert solution('1.2') == '988'\nassert solution('1.3') == '988'\nassert solution('1.4') == '992'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.0') == '1088'\nassert solution('0.4') == '99'\nassert solution('0.89') == '109'\nassert solution('3.14') == '928'\nassert solution('-1.0') == '-1088'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.09365853658536586'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 4\") == \"25.000000000\"\nassert solution(\"0 5\") == \"26.5000000000\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 4\") == \"25.000000000\"\n\nprint(solution(input()))\n\"\"\"\n\nn,s = (int(i) for i in input().split())\nlst = [list(map(int, input().split())) for i in range(n)]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 1\") == \"0.0\"\nassert solution(\"0 0.1\") == \"0.1\"\nassert solution(\"1 2 3 4\") == \"25.000000000\"\nassert solution(\"0 0 0 0\") == \"4.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n1 4 5\\n1 5 6\\n1 6 7\\n2 3 4\\n2 4 5\\n2 5 6\\n2 6 7\\n3 4 5\\n3 5 6\\n3 6 7') == '25.000000000'\nassert solution('10 5\\n8 7 5\\n4 4 2\\n2 2 8\\n2 8 2\\n7 7 5\\n8 4 4\\n4 9 9\\n6 9 5\\n7 7 5\\n2 4 8\\n6 9 5\\n7 7 5\\n8 9 8\\n1 6 9\\n6 7 8\\n7 5 7\\n6 6 8\\n7 6 7\\n8 4 6\\n4 5 7\\n6 4 8\\n5 6 5\\n8 5 7\\n1 6 7\\n4 6 9\\n1 7 8\\n6 4 9\\n8 4 9\\n9 7 6\\n8 7 7\\n8 8 8\\n1 4 9\\n4 5 5\\n6 7 8\\n7 8 7\\n1 6 7\\n9 9 9\\n2 8 8\\n6 7 8\\n7 7 7\\n4 6 9\\n5 5 8\\n8 7 7\\n9 8 8\\n7 9 9\\n6 7 8\\n4 4 4\\n4 5 5\\n5 6 5\\n6 6 6\\n8 3 9\\n1 4 8\\n6 4 4\\n8 4 9\\n4 4 4\\n4 9 4\\n7 6 6\\n6 3 7\\n8 5 7\\n2 5 3\\n8 5 7\\n5 5 7\\n3 6 4\\n2 8 4\\n5 5 4\\n3 6 5\\n4 4 4\\n5 5 5\\n4 9 4\\n5 5 5\\n2 8 3\\n8 3 4\\n7 5 5\\n7 5 5\\n4 4 4\\n7 5 5\\n5 5 5\\n3 5 5\\n3 5 4\\n8 8 8\\n4 4 8\\n4 4 4\\n6 7 5\\n6 7 5\\n5 5 5\\n7 6 5\\n7 7 6\\n5 5 6\\n1 5 5\\n2 4 4\\n4 4 5\\n2 4 4\\n3 8 3\\n2 4 4\\n5 7 5\\n5 7 5\\n6 5 7\\n6 7 5\\n5 5 5\\n7 7 5\\n8 5 7\\n8 5 7\\n7 5 7\\n7 5 7\\n8 9 8\\n8 9 8\\n7 7 7\\n7 9 7\\n8 9 7\\n7 9 7\\n9 9 9\\n4 9 9\\n9 7 7\\n7 7 7\\n8 8 8\\n7 9 7\\n4 4 8\\n1 8 8\\n8 8 8\\n1 5 5\\n6 6 6\\n6 6 6\\n4 4 4\\n4 4 4\\n6 6 6\\n6 6 6\\n7 5 7\\n7 5 7\\n3 6 5\\n4 6 6\\n6 6 6\\n5 6 6\\n8 8 8\\n4 5 7\\n5 5 7\\n5 5 7\\n6 6 6\\n6 6 6\\n7 7 7\\n7 7 7\\n4 4 4\\n4 4 4\\n5 5 5\\n6 6 5\\n6 6 5\\n7 7 5\\n7 7 5\\n5 5 5\\n6 6 5\\n6 6 5\\n7 7 6\\n7 7 6\\n5 5 6\\n4 4 4\\n6 6 6\\n4 5 5\\n6 6 5\\n6 6 5\\n7 7 6\\n7 7 6\\n8 9 8\\n8 9 8\\n7 7 7\\n7 9 7\\n8 9 8\\n7 9 7\\n9 9 9\\n7 7 7\\n7 7 7\\n8 8 8\\n7 8 8\\n7 8 8\\n6 7 7\\n6 8 7\\n8 7 7\\n5 8 7\\n9 9 9\\n8 8 8\\n7 7 7\\n7 7 7\\n1 6 6\\n8 5 7\\n5 5 5\\n8 5 7\\n6 5 7\\n6 5 7\\n8 6 6\\n5 5 5\\n5 5 5\\n8 7 7\\n6 6 6\\n6 6 6\\n6 6 6\\n8 8 8\\n8 8 8\\n7 7 7\\n7 7 7\\n5 5 5\\n4 4 4\\n4 4 4\\n6 7 6\\n6 7 6\\n7 7 6\\n7 7 6\\n5 5 5\\n4 4 4\\n4 4 4\\n8 8 8\\n4 4 8\\n4 4 4\\n6 7 6\\n6 7 6\\n7 7 6\\n7 7 6\\n5 5 5\\n4 4 4\\n4 4 4\\n8 8 8\\n7 6 6\\n7 7 6\\n8 8 8\\n7 7 7\\n7 7 7\\n5 5 5\\n5 5 5\\n8 7 7\\n9 9 9\\n1 4 8\\n6 4 4\\n8 4 9\\n4 4 4\\n4 9 4\\n7 6 6\\n7 6 6\\n8 8 8\\n7 7 7\\n7 7 7\\n5 5 5\\n5 5 5\\n8 5 7\\n6 6 6\\n6 6 6\\n7 7 7\\n7 7 7\\n5 5 5\\n5 5 5\\n8 8 8\\n7 7 7\\n7 7 7\\n5 5 5\\n4 4 4\\n4 4 4\\n6 7 5\\n6 7 5\\n7 7 5\\n7 7 5\\n5 5 5\\n4 4 4\\n4 4 4\\n7 6 6\\n7 6 6\\n8 8 8\\n7 7 7\\n7 7 7\\n5 5 5\\n5 5 5\\n8 8 8\\n7 7 7\\n7 7 7\\n8 8 8\\n7 7 7\\n7 7 7\\n9 9 9\\n8 8 8\\n7 7 7\\n7 7 7\\n9 9 9\\n7 7 7\\n7 7 7\\",
        "num_ids_2": 1467,
        "num_ids_4": 1467
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '25.000000000'\nassert solution('1 2') == '25.000000000'\nassert solution('2 2') == '25.000000000'\nassert solution('2 3') == '25.000000000'\nassert solution('3 3') == '25.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4') == '25.000000000'\nassert solution('3 2') == '13.50000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 4') == '25.000000000'\nprint('Solution = ', solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 4\") == \"25.000000000\"\nassert solution(\"5 5\") == \"33.3333333333\"\nassert solution(\"100 100 100\") == \"1.0000000000\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 1 2 1\\n2 2 2 2\\n3 3 2 3\\n4 4 3 4') == '25.000000000'\nassert solution('1 4\\n1 1 2 1\\n2 2 2 2\\n3 3 2 3\\n4 4 3 4') == '8.000000000'\nprint('all tests passed')",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 4\n3\n4\n5\n6\n7\n''') == 'DA\\nDA\\nDA\\nNE\\nNE'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4\\n\") == \"DA\", \"Wrong output\"\nassert solution(\"3\\n\") == \"DA\", \"Wrong output\"\nassert solution(\"4\\n\") == \"NE\", \"Wrong output\"\nassert solution(\"1\\n\") == \"NE\", \"Wrong output\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 1\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n1\n4\n5\n6\n7\n''') == 'NE'\nassert solution('''\n5 3 1\n3\n4\n5\n6\n7\n''') == 'NE'\n\n'''\n    This is more challenging because you can have many matches lying in the box, but the match that fits in the box must be as long as the entire box.\n\nTask\n\nYou are given a list of $N$ integers, each integer representing the length of a match. You are also given two integers, $W$ and $H$ representing the dimensions of a box.\n\nA match is said to fit in the box if all the matches lie in the box (i.e. there are no matches lying in the box but all match lengths are a multiple of the box dimensions).\n\nReturn a list of the lengths of all the matches that fit in the box. If there are no matches, return an empty list.\n\nNote\n\nA box is a rectangular parallelepiped with a side length of $W$ and a side length of $H$.\n\nInput\n\nThe input consists of an integer $N$ and two integers $W$ and $H$.\n\nEach of the first $N$ lines contains a single integer between $1$ and $1000$ (inclusive), the length of one match.\n\nOutput\n\nThe output is a single integer, which is the total length of all the matches that fit in the box, in the order they were given in the input.\n\nExamples\n\nInput\n\nInput 1:\n\n5 3 4\n3\n4\n5\n6\n7\n\nOutput 1:\n\n6\n\nInput 2:\n\n5 1 3\n1\n4\n5\n6\n7\n\nOutput 2:\n\n2\n\nInput 3:\n\n5 1 2\n1\n4\n5\n6\n7\n\nOutput 3:\n\n2\n\nInput 4:\n\n5 2 4\n1\n2\n3\n4\n5\n6\n7\n\nOutput 4:\n\n3\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 4\") == \"DA\", \"Wrong output\"\nassert solution(\"5 3 5\") == \"NE\", \"Wrong output\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('1 1 3') == 'DA'\nassert solution('10 10 3') == 'DA'\nassert solution('2 2 3') == 'NE'\nassert solution('4 4 4') == 'NE'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 4\n3\n4\n5\n6\n7''') == \"DA\"\nassert solution('''5 3 4\n3\n4\n5\n6\n7''') == \"NE\"\nassert solution('''5 3 4\n1\n2\n3\n4\n5''') == \"DA\"\n'''",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'NE'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\"\nassert solution(\"3 2 4\\n4\\n5\\n6\\n7\") == \"DA\"\nassert solution(\"2 2 4\\n4\\n5\\n6\\n7\") == \"NE\"\n\nstdin = \"\"\"\n3 3 4\n3\n4\n5\n6\n7\n\"\"\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 4\") == \"DA\"\nassert solution(\"3\") == \"DA\"\nassert solution(\"2 4\") == \"NE\"\nassert solution(\"4\") == \"NE\"\nassert solution(\"2 5 4\") == \"NE\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 0\n3 0\n5 0\n''') == '4'\nassert solution('''\n3 0\n0 0\n0 0\n''') == '0'\nassert solution('''\n2 0\n0 0\n0 0\n''') == '6'\n\"\"\"\n\nfrom datetime import datetime",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 0\n7 42\n''') == '6'\nassert solution('''\n1\n0 0\n1 42\n''') == '1'\nassert solution('''\n2\n0 0\n7 41\n''') == '7'\nassert solution('''\n3\n0 0\n1 1\n2 4\n''') == '1'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n0 0\n7 42\n''') == '6'\nassert solution('''\n2\n0 0\n9 17\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 0\n7 42\n''') == '6'\n\"\"\"\nThe key is that you can use a very simple array to keep track of the time that we have seen in the past and the distance in the past.\n\nA simple way to keep track of the time and distance in the past would be to keep track of the time that the last photograph took, and the distance along the road that was taken.\n\nWhy do we need to do this? Well, there are a lot of ways to do this. We could just keep the sum of all distances and the sum of all times, and then return the larger.\n\nThis is bad because we don't have enough information to tell if we were going forward or backward along the road. We need to know when we were going forward, we need to know when we were going backward, and we need to know how long ago it was going forward or backward, so we need to keep track of the sum of all times and the sum of all distances.\n\nThe simple way to keep track of the sum of all times and the sum of all distances is to keep track of the sum of the previous times and sum of the previous distances.\n\nNow, how can we do this faster? For the previous line of code, we need to know when we were going forward or backward, and since we can tell if we were going forward or backward, we can just subtract the times and distances.\n\nAs a result, we can just do the sum of the previous times and the previous distances.\n\nOkay, that\u2019s not too bad.\n\nHow about this? We can actually add up all the previous times and distances and add up all the previous times and distances, and we get a new sum.\n\nThen we can take the product of the previous times and previous distances and add it to the sum of the current times and current distances.\n\nWe can do this recursively, and keep adding up the previous sum of times and previous sum of distances until we get a sum of all times and all distances, which we can then add to the current sum of times and current sum of distances.\n\nOkay, this is slow. But what if we know that we can get the distance and time difference before the current time, and the time difference after the current time?\n\nWe know that the current time is after the previous time, and the current time is before the previous time. So the difference in distance and time is the time difference since the previous time.\n\nWell, we know that we can get the distance and time difference before the current time, so we can do this recursively. We can get the difference in time and distance at any time, since we know that time is always before the current time, and distance is always greater than 0.\n\nOkay, now we can do this. We can subtract the current time from the previous time to get a time difference, and we can subtract the previous distance from the current distance.\n\nOkay, now the following is pretty simple:\n\nSo we can do this recursively. We can subtract the current time from the previous time to get a time difference, and we can subtract the previous distance from the current distance to get a time difference.\n\nNow, we can just add up these differences in the previous time and previous distance.\n\nOkay, we can also do this recursively:\n\nSo we can just add up all the time differences and all the distances, and we can just add the difference in time and difference in distance, and we can get the speed at any point in time.\n\nOkay, so now we can write a very simple recursive function.",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == \"6\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == \"6\"\nassert solution(\"3\\n1 2\\n3 3\\n5 4\\n7 6\\n9 8\\n11 10\") == \"9\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0\n7 42\n''') == '6'\nassert solution('''\n2\n5 11\n2 45\n''') == '10'\nassert solution('''\n3\n1 0\n4 5\n4 6\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('2') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n0 0\n7 42\n\"\"\") == \"6\"\nassert solution(\"\"\"5\n5 2\n7 1\n6 4\n3 7\n10 3\n\"\"\") == \"12\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 2') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 3') == '1'\nassert solution('3\\n1 3') == '1'\nassert solution('4\\n1 3') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n2\\n2\\n3\\n4\\n5\\n5\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n",
        "num_ids_2": 1620,
        "num_ids_4": 1620
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n-> A\\n-> B') == 'correct'\nassert solution('3\\nA->B\\n->A\\n->C') == 'correct'\nassert solution('1\\n->\\n->') == 'correct'\nassert solution('1\\n->\\n->\\n->') == 'correct'\nassert solution('5\\nAB->BC\\n->A\\n->C\\n->B') == 'correct'\n",
        "num_ids_2": 41,
        "num_ids_4": 76
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'correct'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n-> 1\\n1\\n1\\n2\\n-> 2\\n3\\n2\\n3\\n3') == 'correct'\nassert solution('1\\n-> 1\\n1\\n1\\n2\\n-> 2\\n3\\n2\\n3\\n3') == 'correct'\nassert solution('1\\n-> 1\\n1\\n1\\n2\\n-> 2\\n3\\n2\\n3\\n3\\n3\\n3') == 'correct'\nassert solution('1\\n-> 1\\n1\\n1\\n2\\n-> 2\\n3\\n2\\n3\\n3\\n3\\n3') == 'correct'\nassert solution('1\\n-> 1\\n1\\n1\\n2\\n-> 2\\n3\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == 'correct'\n",
        "num_ids_2": 78,
        "num_ids_4": 168
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'correct'\nassert solution('5') == '1'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> 1\n-> 2\n1 2 -> 3\n''') == '2'\nassert solution('''\n-> 1\n-> 2\n1 1 -> 3\n''') == '2'\nassert solution('''\n-> 1\n-> 2\n1 2 3\n''') == 'correct'\nassert solution('''\n-> 1\n-> 2\n1 1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"correct\"\nassert solution(\"1\") == \"correct\"\nassert solution(\"1 5 5 2 1 2 4 2 5 5 3 3 5 4 5 5 2 2 4 2 3 2 4 2 5 4 3 3 4 4 3\") == \"correct\"\nassert solution(\"1 2 3 4 5\") == \"incorrect\"\nassert solution(\"1 2 3 4 5 5 4\") == \"incorrect\"\n",
        "num_ids_2": 20,
        "num_ids_4": 75
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n') == '2'\nassert solution('3\\n-> ALICE\\n-> BOB\\nCARL -> ALEX\\nCARL -> JON\\nALICE BOB -> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nCARL -> ALEX\\nCARL -> JON\\nALICE BOB -> CARL') == '2'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nCARL -> ALEX\\nALICE BOB -> CARL') == 'correct'\n",
        "num_ids_2": 60,
        "num_ids_4": 146
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> CARL\nALICE BOB -> CARL\n''') == '1'\nassert solution('''\n-> ALICE\n-> CARL\nALICE BOB -> CARL\n''') == '2'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"correct\"\nassert solution(\"3\") == \"correct\"\nassert solution(\"4\") == \"correct\"\nassert solution(\"5\") == \"correct\"\nassert solution(\"6\") == \"correct\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == \"Connie Froggatt\"\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == \"Barbara Skinner\"\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == \"Barbara Skinner\"\n'''\n\nimport re\n\nvotes = {\n    \"Penny\": 0,\n    \"Marti\": 0,\n    \"Connie\": 0,\n    \"Joseph\": 0,\n    \"Connie\": 0,\n    \"Penny\": 0,\n    \"Connie\": 0,\n    \"Bruce\": 0,\n    \"Connie\": 0,\n    \"Barbara\": 0,\n    \"Barbara\": 0,\n}\n\nfor line in stdin:\n    line = line.strip()\n    line = line.split()\n    if line[-1] == \"***\":\n        continue\n    for candidate in line:\n        votes[candidate] += 1\n    \nbest = None\nbest_count = 0\nfor candidate in votes:\n    if votes[candidate] > best_count:\n        best_count = votes[candidate]\n        best = candidate",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Connie Froggatt\"\n\"\"\"\n\n\nimport collections\nimport math\n\nvotes = {}\nfor line in stdin.splitlines():\n    # print(line)\n    tokens = line.split()\n    # print(tokens)\n    for name in tokens:\n        votes[name] = votes.get(name, 0) + 1\n    \nprint(votes)\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Connie Froggatt'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Penny Franklin'\n",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nPenny\nFranklin\nMarti\nGraham\nConnie\nFroggatt\n''') == 'Connie Froggatt', 'Failed: First'\nassert solution('''\nPenny\nFranklin\nMarti\nGraham\nConnie\nFroggatt\n''') == 'Connie Froggatt', 'Failed: Second'\nassert solution('''\nPenny\nFranklin\nMarti\nGraham\nConnie\nFroggatt\n''') == 'Connie Froggatt', 'Failed: Third'\nassert solution('''\nPenny\nFranklin\nMarti\nGraham\nConnie\nFroggatt\n''') == 'Connie Froggatt', 'Failed: Fourth'\nassert solution('''\nPenny\nFranklin\nMarti\nGraham\nConnie\nFroggatt\n''') == 'Connie Froggatt', 'Failed: Fifth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt') == 'Connie Froggatt'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt') == 'Runoff!'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt') == 'Connie Froggatt'",
        "num_ids_2": 125,
        "num_ids_4": 191
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == \"Penny Franklin\"\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == \"Runoff!\\n\"",
        "num_ids_2": 149,
        "num_ids_4": 149
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\nassert solution('pennyl_franklin\\nmarti_graham\\nconnie_froggatt\\njoseph_ivers\\nconnie_froggatt\\npennyl_franklin\\nconnie_froggatt\\nbruce_stanger\\nconnie_froggatt\\nbarbara_skinner\\nbarbara_skinner\\n***') == 'connie_froggatt'\n",
        "num_ids_2": 180,
        "num_ids_4": 180
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Penny Franklin\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Penny Franklin\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Penny Franklin\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Penny Franklin\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Penny Franklin\"\n",
        "num_ids_2": 148,
        "num_ids_4": 296
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt', 'First Test'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner', 'Second Test'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt', 'Third Test'\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''\nA R2D2\nChewbacca\nGraf Eht Far Huttese\nGaw Karen\nHan Solo\nJabba-the-Hutt\nLuke\nMewtwo\nR2D2\nSisyphus\nTedi\nVegele\nVladislav\n''') == '1'\nassert solution('''\nA Jabba-the-Hutt\nBib-Fortuna\nChewbacca\nDisco Droid\nDmitrii\nEtruscan\nFreya\nFrodo\nGanondorf\nHan Solo\nHektor\nHiawatha\nHotham\nJabba-the-Hutt\nLuke\nMewtwo\nPennywise\nR2D2\nSisi Zord\nVladislav\n''') == '2'\nassert solution('''\nA\nB\nC\nD\nE\nF\nG\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nX\nY\nZ\n''') == '3'\nassert solution('''\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '2'\nassert solution('100') == '21'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '2'\nassert solution('6\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '3'\nassert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '4'\nassert solution('17\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '0'\n",
        "num_ids_2": 180,
        "num_ids_4": 360
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''8\nChewbacca Huttese Basic\nLuke Jawaese Binary\nSputnik Starshine Basic\nKrusty Krueger Huttese Basic\nNaser Jawaese Jawaese\nHan Solo Jawaese Jawaese\nR2D2 Binary Jawaese\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '4'\nassert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '3'\nassert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '4'\nassert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\nassert solution('10\\nLuke Skywalker Jaavini Jawaese\\nR2D2 Jawaese Koon Koon Jawaese\\nGangplank Jawaese\\nR2D2 Jawaese Grog Jawaese\\nR2D2 Jawaese R2D2 Jawaese\\nR2D2 Jawaese Gun Jawaese\\nR2D2 Jawaese Gumm Jawaese\\nR2D2 Jawaese R2D2 Jawaese\\nR2D2 Jawaese Omg Jawaese\\nR2D2 Jawaese Jawaese') == '1'\n",
        "num_ids_2": 232,
        "num_ids_4": 232
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\"\nprint(solution(input()))\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\n\"\"\"\n3 1000 2 3\n100\n0 1 1\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\n\"\"\"\n1 10 2 2\n1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n3 2 2 1\n1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n5 0 2 3 2\n\"\"\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n3 1002 3 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n3 1002 3 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n3 1002 3 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n3 1002 3 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') == '900'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('2 1 2 2') == '0'\nassert solution('5 1 2 3 4') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('8 1000 2 3') == '50000'\nassert solution('15 1000 2 3') == '10000'",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n3 1000 2 3\n200\n1 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n3 1000 2 3\n200\n1 2 2\n200\n27 3 20\n''') == '100'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('20') =='stay home'\nassert solution('300') =='stay home'\nassert solution('27 3 20') == '900'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"stay home\"\nassert solution(\"1 1 0 2\") == \"5\"\nassert solution(\"1 1 0 2\") == \"5\"\nassert solution(\"3 1 0 2\") == \"4\"\nassert solution(\"3 1 0 2\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\") == \"900\"\nassert solution(\"3 1000 2 3\\n100\\n1 0 1\\n300\") == \"300\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\") == \"300\"\nassert solution(\"3 1000 2 3\\n100\\n1 0 1\\n300\") == \"300\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\") == \"300\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'A# C D# F'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    C D F D C D F F F C \n    \"\"\"\n) == \"A# C D# F\"\nassert solution(\n    \"\"\"\n    G G G G E E E E E E E \n    \"\"\"\n) == \"G\"\nassert solution(\n    \"\"\"\n    A A A A A A A A A A \n    \"\"\"\n) == \"none\"\nassert solution(\n    \"\"\"\n    D D D E E E E E E E \n    \"\"\"\n) == \"D\"\nassert solution(\n    \"\"\"\n    A A A A A A A A A A \n    \"\"\"\n) == \"A# C D# F\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nC D F D C D F F F C\") == \"A# C D# F\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\nC D F D C D F F F C') == \"A# C D# F\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"A# C D# F\"\nassert solution(\"1\") == \"A# C D# F\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nC D F D C D F F C \n''') == 'A# C D# F'\n\nassert solution('''\nC D F D C D F F C \n''') == 'A# C D# F'\n\nassert solution('''\nC D F D C D F F C \n''') == 'A# C D# F'\n\nassert solution('''\nC D F D C D F F C \n''') == 'A# C D# F'\n\nassert solution('''\nC D F D C D F F C \n''') == 'A# C D# F'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nA B C D E F\nG\nC D E F G\nB E D F C\nD F C E G\nE F D G''') == 'A# E D# G'\nassert solution('''6\nF E G A D E C\nC\nC D E F\nG\nA\nG F D''') == 'C D# E E# F F# G'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nA D F\n''') == 'A# D D D# F F F# D D D# F F F# D D D# F'''\n\nassert solution('''5\nD D D D D D\n''') == 'D D D D D D# D D D# D D D D# D D D# D D D# D D D D# D'''\n\nassert solution('''8\nA D D D D D D D D D\n''') == 'A D D D D D D D D D D# D D D D# D D D D# D D D D D D D D D D D D# D D D D D'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\nC D F D C D F F F C\n''') == \"A# C D# F\"\nassert solution('''\n5\nC D F E A\n''') == \"A# C D# F E\"\nassert solution('''\n7\nC D F E A G F E G C\n''') == \"A# C D# F E G\"\nassert solution('''\n10\nC D F E A G F E G C\n''') == \"none\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\nC D F D C D F F F C \n''') == 'A# C D# F'\nassert solution('''\n5\nB D E F G F F F C\n''') == 'C D E F G F F'\nassert solution('''\n2\nD D D D D D D D D D D\n''') == 'C D E F G F F'\nassert solution('''\n3\nD D D D D D D D D D D\n''') == 'C D E F G F F'\nassert solution('''\n4\nA A A A A A A A A A A\n''') == 'A B C D E F G'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('ju l\u00e6rt er bra') == 'haer talar vi rikssvenska'\n",
        "num_ids_2": 60,
        "num_ids_4": 86
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4dda \u00e4dda \u00e4dda\") == \"\u00e4dda \u00e4dda \u00e4dda\"\nassert solution(\"\u00e4dda \u00e4dda \u00e4dda \u00e4dda\") == \"\u00e4dda \u00e4dda \u00e4dda \u00e4dda\"\nassert solution(\"\u00e4dda \u00e4dda \u00e4dda \u00e4dda \u00e4dda\") == \"\u00e4dda \u00e4dda \u00e4dda \u00e4dda \u00e4dda\"\n",
        "num_ids_2": 60,
        "num_ids_4": 128
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n\"\"\"\nimport re",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('dae ae ju traeligt vi') == 'haer talar vi rikssvenska'\nassert solution('ei aa haer talar vi') == 'ei ae ja haer talar vi'\nassert solution('ei aa haer talar vi i') == 'ei aa haer talar vi'\nassert solution('ai ai haer talar vi') == 'ai ai ai talar vi'\n",
        "num_ids_2": 58,
        "num_ids_4": 108
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''dae ae ju traeligt va\n''') == 'haer talar vi rikssvenska'\nassert solution('''dae ae ju talagt va\n''') == 'haer talar vi rikssvenska'\nassert solution('''dae ae ju traeligt va\ndae\n''') == 'haer talar vi rikssvenska'",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nprint('all tests passed')\n\"\"\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a e e a') == 'dae ae ju traeligt va', 'First'\nassert solution('ae ae ee ae') == 'haer talar vi rikssvenska', 'Second'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n\"\"\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\\n1\\n1\\n0\\n1\") == \"E..E#\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"E.E#\"\nassert solution(\"1 1\") == \"E\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution_example) == solution_output\nassert solution(solution_invalid1) == solution_output\nassert solution(solution_invalid2) == solution_output\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == 'EEEEE'\nassert solution('8 7') == 'E..E#E'\nassert solution('1 2') == 'E..E.'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\nassert solution(\"15 4\") == \"E..E#E.E..E#E.E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E\"",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6\\n..E.\\n..E#\\n##...\\n......\\n##...#') == 'E.E#E\\nE.E.#E\\nE.E.E.\\n.E.E.E\\n###E.E#'\nassert solution('7 7\\n###.\\n##...\\n#####\\n###.\\n#####\\n###.\\n###.\\n###.\\n#####\\n#####') == '###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.",
        "num_ids_2": 1590,
        "num_ids_4": 1590
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\nassert solution(\"5 5\") == \"E.E.E.\\nE.E.E.\\n.E.E.E\\n.E.E.E\\n.E.E.E\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == 'E..E#.'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\nassert solution(\"3 3\\n###.#\\n#.#.#\\n###.#\\n#.#.#\\n\") == \"E#E#E\\n###E#E\\n###E#E\\n###E#E\\n###E#E\"\n",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 2 1 10 3 4\n14 9 9 9''') == '12 10 3 8 4 2'\nassert solution('''2 1 4 5 3 6 7\n9 10 1 3 2 6''') == '9 1 3 2 6 7'\nassert solution('''6 3 7 2 4 5\n5 6 1 2 3 4''') == '6 1 2 3 4 5'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"15 9 2 8 6 2 12 1 5 4\") == \"15 9 2 8 6 2 12 1 5 4\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1 2 3 4 5 6 7 8\"\n",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'\nprint('all tests passed')\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([12, 8, 2, 4, 10, 3, 25, 14]) == \"12 10 3 8 4 2\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'\nassert solution('''1 2 2 3 3 4 4 5''') == '2 3 4 5 1 2'\nassert solution('''1 5 2 3 5 5 6''') == '2 5 1 5 5 3'\nassert solution('''5 1 2 1 5 2 5''') == '2 1 3 2 1'\nassert solution('''11 10 2 3 10 6 8 5''') == '3 10 2 6 8 1 5'\n",
        "num_ids_2": 50,
        "num_ids_4": 97
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('1 2 3 4 5 6 7 8') == '1 2 3 4 5 6 7 8'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0 0') == '0'\nassert solution('1 0 0') == '1'\nassert solution('1 0 3') == '4'\nassert solution('1 2 4') == '5'\nassert solution('100 100 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    1\n    2\n    3\n    ''') == '3'\n\nassert solution(\n    '''\n    10\n    1\n    3\n    ''') == '4'\n\nassert solution(\n    '''\n    5\n    0\n    4\n    ''') == '4'\n\nassert solution(\n    '''\n    1\n    0\n    100000\n    ''') == '100000'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2\\n4') == '4'\nassert solution('8\\n9\\n3') == '7'\nassert solution('10\\n0\\n3') == '10'\n\n'''",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''9 0 3\n4''') == '4'\nassert solution('''10 0 3\n4''') == '0'\nassert solution('''10 0 3\n5''') == '-1'\nassert solution('''11 0 3\n5''') == '-1'\nassert solution('''11 0 3\n6''') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 0 3\n''') == '4'\nassert solution('''\n3 5 1\n''') == '0'\nassert solution('''\n3 0 1\n''') == '0'\nassert solution('''\n5 0 0\n''') == '0'\n'''\nExplanation:\nTim starts with $e=3$ empty bottles, f=0 empty bottles, and c=1 empty bottle.\nOn his extra thirsty day, he can only get $e=3$ empty bottles.\nHowever, he can also get $f=3$ empty bottles, as he can pay for the new empty bottles in the street, and thus, drink $4$ sodas on his day.\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 5\\n') == '4'\nassert solution('10 0 0\\n') == '0'\nprint('YOUR CODE IS CORRECT!')\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 0 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 0 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 0 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 0 0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n8 0 0\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '12'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1010\n''') == '12'\nassert solution('''\n0\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\"\n\nassert solution(\"01\") == \"1\"\n\nassert solution(\"100\") == \"10\"\n\nassert solution(\"101\") == \"11\"\n\nassert solution(\"1111\") == \"111\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1010\") == \"12\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1111') == '7'\nassert solution('101') == '5'\nassert solution('1') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"0000\") == \"0000\"\nassert solution(\"1111\") == \"31\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"0101\") == \"3\"\nassert solution(\"101\") == \"10\"\nassert solution(\"01\") == \"1\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"A\"\nassert solution(\"1010\") == \"BC\"\nassert solution(\"101010101010\") == \"ABCDEF\"\nassert solution(\"101010101011\") == \"ABCDEF\"",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1010\") == \"12\"\nprint(solution(\"1010\"))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1010') == '12'\nassert solution('111') == '27'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n.o\\n.o') == '2'\nassert solution('3 3\\noo\\no.\\no') == '4'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"2 3\\n.o\\no..\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n...o\n.o..''') == '2'\nassert solution('''5 2\n.o..\n...o\no..o\n.ooo\n.ooo\n''') == '4'\nassert solution('''3 4\n.ooo\no.o.\n...o\n''') == '3'\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INP) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"2\"\nprint(solution(input_string))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n.o\\n.o\") == \"2\"\nassert solution(\"1 2\\n.o\\n.o\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n5 4\n..o.\n.oo.\no...\n.ooo.\no....\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n1 1\n.\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n1 1\no\n\"\"\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n.o\no..\n''') == '2'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n.\\n.\\n') == '1'\nassert solution('2\\n3\\n.o\\n.o\\n.o\\n.o') == '2'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('1 2') == 'LADICA'\nassert solution('1 3') == 'SMECE'\nassert solution('1 2') == 'SMECE'\nassert solution('1 3') == 'SMECE'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 2\n1 3\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 3\n1 3\n1 3\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 3\n1 3\n1 2\n''') == 'SMECE'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 2\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 2\n1 2\n1 3\n1 3\n''') == 'SMECE'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\\nSMECE\\nSMECE\\nSMECE\\nLADICA\\nSMECE\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n3 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"10 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 6\\n6 7\\n6 8\\n6 9\\n6 10\\n7 7\\n7 8\\n7 9\\n7 10\\n8 8\\n8 9\\n8 10\\n9 9\\n9 10\\n10 10\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\"\n",
        "num_ids_2": 349,
        "num_ids_4": 349
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('5 5') == 'LADICA'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nSMECE\\nSMECE\\nSMECE\\nSMECE\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\") == \"LADICA\\nSMECE\\nSMECE\\nSMECE\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 3\") == \"SMECE\\nSMECE\\nSMECE\"\nassert solution(\"5 3\\n1 2\\n1 3\") == \"LADICA\"\nassert solution(\"5 3\\n1 2\") == \"SMECE\"\n",
        "num_ids_2": 97,
        "num_ids_4": 153
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n2 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''\n5 3\n1 2\n1 3\n2 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n2 3\n1 2\n1 2\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n2 3\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 2\n''') == 'SMECE'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 2 1 3\n''') == '1 2 3 0'\n\nassert solution('''\n3\n0 1 2\n''') == '1 2 0'\n\n'''\n\nSample Input:\n2\n0\n4\n1\nSample Output:\n1 2 3 4\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0\n2\n1\n3\nSample Input:\n4\n1\n1\n0\n2\nSample Output:\n0 1 2 3\n''') == '0 1 2 3'\nassert solution('''\n4\n0\n1\n1\n2\nSample Output:\n0 1 2 3\n''') == '0 1 2 3'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 2'\nassert solution('1\\n2') == '1 2'\nassert solution('1\\n3') == '3 1'\n\nassert solution('5\\n1 4 3 2') == '1 2 3 4 5'\n",
        "num_ids_2": 23,
        "num_ids_4": 57
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('2 3') == '1 2 3'\n\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1 2'\nassert solution('10') == '5 6 7 8 9 10 12 13 14 15 16 17 18 19'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n1 2\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n2\n3 1\n\"\"\") == \"3 1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4\") == \"1 2\"\nassert solution(\"4\\n0 1 2 3\") == \"1 2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0\nSample Input:\n3\n0 2 1\nSample Output:\n0 1 2\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 2') == '5'\nassert solution('2 4 4') == '4'\nassert solution('2 5 2') == '5'\nassert solution('2 4 4') == '4'\nassert solution('2 5 2') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4 2\n0 1\n0 2\n0 3\n0 4\n1 2''') == '4'\n\nprint(solution('''\n10 10 10 10 10\n1 1 2 2 2 1 1\n1 1 3 3 1 1 1\n1 1 3 3 1 2 1\n1 2 2 2 1 1 1\n1 2 2 2 1 2 1\n1 2 3 3 1 1 1\n1 2 3 3 1 2 1\n1 2 3 3 1 2 2\n1 3 3 1 2 1 1\n1 3 3 1 2 1 2\n1 3 3 1 2 2 1\n1 3 3 1 2 2 2\n2 3 3 1 2 1 1\n2 3 3 1 2 1 2\n2 3 3 1 2 2 2\n2 3 3 1 1 1 1\n2 3 3 1 1 1 2\n2 3 3 1 1 2 1\n2 3 3 1 1 2 2\n2 3 3 1 2 1 1\n2 3 3 1 2 1 2\n2 3 3 1 2 2 1\n2 3 3 1 2 2 2\n3 3 1 1 1 1 1\n3 3 1 1 1 1 2\n3 3 1 1 1 2 1\n3 3 1 1 1 2 2\n3 3 1 1 2 1 1\n3 3 1 1 2 1 2\n3 3 1 2 1 1 1\n3 3 1 2 1 1 2\n3 3 1 2 1 2 1\n3 3 1 2 1 2 2\n3 3 1 2 2 1 1\n3 3 1 2 2 1 2\n3 3 1 2 2 2 1\n3 3 1 2 2 2 2\n4 4 4 4 4 4 4'''))",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3 5') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '0'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n') == '1'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"\n\nprint(solution())",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n\") == \"1\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('5 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '4'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '2'\n\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n2\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n3\") == \"0\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n3\") == \"0\"\n",
        "num_ids_2": 79,
        "num_ids_4": 159
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4 3 1'\nassert solution('1') == '1'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"5\") == \"4 3 1 2\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"7\") == \"5 4 3 1 2\"\nassert solution(\"1\") == \"impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3\n    1 3 4\n''') == '4 3 1'\n\nassert solution('''\n    5\n    1 2 1 3 2\n''') == '3 2 1 4 1'\n\nassert solution('''\n    6\n    1 2 2 3 3 4\n''') == '3 4 2 1'\n\nassert solution('''\n    7\n    1 2 2 3 3 4 4\n''') == '4 4 3 2 1'\n\nassert solution('''\n    10\n    1 1 2 2 2 3 2 2 4 3 4 4\n''') == '2 4 4 4 2 1 3 2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"2 3 4\") == \"4 3 1\"\nassert solution(\"2 4 3 1\") == \"impossible\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4 3 1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == '4 3 1'\nassert solution('4') == '4 3 1'\nassert solution('5') == '4 3 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"4 3 1\"\nassert solution(\"4\") == \"4 3 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2\") == \"1 2 1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n5 2 6 3 4 1\n''') == '4 3 1 5 2 6'\nassert solution('''\n6\n1 3 4 5 2 6\n''') == '4 3 1 5 2 6'\nassert solution('''\n8\n1 3 2 4 5 6 7\n''') == '6 5 4 7 1 3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 4') == '4 3 1'\nassert solution('2 3 4') == '4 3 2'\nassert solution('3 4 5') == '4 3 5'\nassert solution('2 2 3') == '2 3 2'\nassert solution('5 5 5 5') == '5 5 5 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 10\\n') == '18.400'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 5') == '18.400', \"Wrong answer\"\nassert solution('5 6') == '27.000', \"Wrong answer\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 2') == '18.400'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 10') == '18.40000'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 20 15\n3 10\n''') == '18.400'\nassert solution('''\n2 20 15\n3 10\n''') == '25.200'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 20 15\\n3 10\\n') == \"18.400\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 20 15\\n3 10\\n') == '18.400'\nassert solution('1 1\\n4 4\\n') == '0.000'\nassert solution('1 1\\n2 2\\n') == '0.000'",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 20 15') == '18.400', 'Your solution needs to return a correct string'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 10\n3 1\n2 1\n4 1\n5 1\n6 1\n''') == '18.400'\nassert solution('''2 20 15\n3 10\n3 1\n2 1\n4 1\n5 1\n6 1\n''') == '20.000'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0\\n2\\n10') == '3.000'\nassert solution('1\\n3 0\\n5\\n10') == '6.000'\nassert solution('1\\n4 0\\n5\\n10') == '5.000'\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n...H\\n...H\\n.....\\n.....\\n.....\\n') == '3'\nassert solution('10\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n.H.H.S.\\n') == '2'\nassert solution('5\\n....H\\n...S\\n...S\\n.H.H\\n.....\\n') == '1'\n\"\"\"\n",
        "num_ids_2": 167,
        "num_ids_4": 200
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\n\nSample Input:\n10\n....S\n....S\n....S\n....S\n....S\n....S\n....S\n....S\n....S\n....H\n.....\nSample Output:\n6\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n....H\n.....\nS....\n....H\n.....\n''') == '5'\nassert solution('''\n....H\n.....\nS....\n....H\n.....\n''') == '4'\nassert solution('''\n.....\nS....\n....H\n.....\n''') == '4'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n.H.H..\\n.....\\nS.S.S.H\\n.H..H.S...\\n.....\\n') == '2'\n\n--Python--\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n.H.H.S.H.H.S\\n.H.H.H.H.S.S.H\\n.H.H.H.H.S.S.S.H\\n.H.H.H.H.S.H.H\\n.S.S.H.S.S.S.S.S\") == \"15\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('5\\n...H\\n.S...\\n.H...\\n...H\\n') == '3'\nassert solution('5\\n...H\\n.S...\\n.H...\\n...H\\n.H...\\n...H\\n') == '7'",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n...H\\n.....\\n...H\\n.....\\n') == '5'\nassert solution('2\\n...H\\n.....\\n...H\\n.....\\n') == '4'\nassert solution('1\\n.....\\n.....\\n.....\\n') == '0'\nassert solution('9\\n...H\\n.....\\n...H\\n.....\\n') == '4'\nassert solution('20\\n........\\n........\\n........\\n........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\n.........\\",
        "num_ids_2": 52,
        "num_ids_4": 99
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('5\\nH.\\nH..\\n.S.\\nH...\\nH....') == '4'\n\n[execution time limit] 4 seconds (py3)\n\n[input] string stdin\n\n[output] string",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n.S.H.\\n.H.S.') == '2'\nassert solution('2\\n.S.H.\\n.H.S.') == '2'\nassert solution('5\\n.S.H.\\n.H.S.\\n.H.S.\\n.S.H.') == '5'\nassert solution('2\\n.S.H.\\n.H.S.\\n.H.S.\\n.S.H.') == '4'\nassert solution('10\\n.S.H.\\n.H.S.\\n.H.S.\\n.S.H.\\n.H.S.\\n.H.S.\\n.H.S.\\n.H.S.\\n.S.H.\\n.S.H.') == '13'\n\n'''\n\nN = int(input())\ngrid = []\n\nfor i in range(N):\n    grid.append(list(input()))\n\nans = 0",
        "num_ids_2": 48,
        "num_ids_4": 124
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n2 4\n1 3 5\n''') == '0'\nprint(solution('''\n5 2 3\n2 4\n1 3 5\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2 5\") == \"0\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"3 3 4\") == \"1\"\nassert solution(\"1 2\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5 2 3\\n2 4\\n1 3 5\\n') == '0'\nassert solution(\n    '5 2 3\\n5 2\\n1 3 5\\n') == '1'\nassert solution(\n    '5 2 3\\n1 2\\n2 3 5\\n') == '2'\n\nassert solution(\n    '5 2 3\\n2 5\\n3 4\\n') == '0'\nassert solution(\n    '5 2 3\\n1 2\\n3 4\\n') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 2 3\n2 4\n1 3 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2 6\n1 2\n6 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 2 3\n2 4\n1 3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 5 3\n2 4\n1 3 5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2 2 2\n1 2\n2 2\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 2 3\n2 4\n1 3 5\n''') == '0'\nassert solution(\n'''\n5 2 3\n1 2\n1 3 4\n''') == '1'\nassert solution(\n'''\n5 2 3\n2 2\n3 2\n''') == '1'\nassert solution(\n'''\n5 2 3\n2 3\n3 3\n''') == '2'\nassert solution(\n'''\n5 2 3\n2 1\n3 3\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 2') == '2'\nassert solution('4') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n2 4') == '0'\nassert solution('5 2 3\\n1 3 5') == '1'\nassert solution('5 2 3\\n4 1 5') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0'\nassert solution('5 2 4\\n1 2\\n2 4') == '2'\nassert solution('5 2 4\\n1 2 3\\n2 4') == '0'\nassert solution('5 2 4\\n1 2 3\\n2 3') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input.str) == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5\\n') == '0'\nassert solution('4\\n4\\n4\\n1 2 3\\n') == '1'\nassert solution('4\\n4\\n1\\n4 1 2 3\\n') == '1'\n",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0.000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('4 3') == '0.66666667'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('10 10') == '0.000000000'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '0.000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0.000000000'\n\n\"\"\"\nimport math\n\nR, C = map(int, input().split())\nprint(math.pi*R*R/C)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n\n''') == '0.000000000'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0.000000000'\n\nassert solution('2 2') == '0.5000000000000004'\n\nassert solution('1 20') == '0.7500000000000002'\n\"\"\"\nimport math\n\nR, C = list(map(int, input().split()))\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '0.000000000'\nassert solution('5 5') == '0.99970000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\n\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == \"5\"\nassert solution('3') == \"1\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2'\nprint(solution('''1\n100\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == \"2\"\nassert solution('''\n2\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == \"1\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '12'\nassert solution('5') == None\nassert solution('100') == None\nassert solution('1') == None",
        "num_ids_2": 18,
        "num_ids_4": 34
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1730') == '1729'\nassert solution('5') == None\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1730\") == \"1729\"\nassert solution(\"2\\n1000\") == \"1099\"\nassert solution(\"3\\n90\") == \"89\"\nassert solution(\"4\\n100\") == \"100\"\nassert solution(\"5\\n200\") == \"199\"\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('18\\n') == '18\\n'\nassert solution('0\\n') == 'None\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '9'\nassert solution('12') == '11'\nassert solution('1000') == '999'\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('100000000') == '100000000'\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1730\") == \"1729\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('3') == None\nassert solution('6') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1729'\nassert solution('2') == 'None'\nassert solution('4') == 'None'\nassert solution('5') == 'None'\nassert solution('6') == 'None'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3') == '8'\nassert solution('5\\n3\\n') == '8'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"65536\") == \"16\"\nassert solution(\"9999\") == \"16\"\nassert solution(\"123\") == \"1\"\nassert solution(\"12\") == \"0\"\nassert solution(\"11\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"65536\") == \"16\"\nassert solution(\"9\") == \"1\"\nassert solution(\"100\") == \"3\"\nassert solution(\"-100\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('65536') == '16'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('65536') == '16'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('15') == '5'\nassert solution('0') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('65536') == '16'\nassert solution('7') == '1'\nassert solution('5') == '2'\nassert solution('3') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n....\n....\n....\n...K\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('2') == '-1'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '-1'\nassert solution('10') == '4'\nassert solution('100') == '4'\nassert solution('1000') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '1'\nassert solution('11') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n....\n....\nK\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n3\n....\n....\n...\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n.....\n.....\n...K\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n...#\n...#\n...#\n...#\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n....\n....\n....\n...#\nK\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n.S.E\\n..#E\\nS#.#\\n......\\n\") == \"3\"\nassert solution(\"4\\n.S.E\\n..#E\\nS#.#\\n......\\n\") == \"2\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('50') == '5'\nassert solution('100') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"12\") == \"8\"\nassert solution(\"20\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n...\\n...\\n...') == '1'\nassert solution('1\\n.\\n.\\n.\\n') == '-'\nassert solution('2\\n...\\n#\\n...\\n') == '2'\nassert solution('4\\n...\\n...\\n...\\n') == '2'\n",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_value) == '2'\ninput_value = \"\"\"4\n.K\n..#\n.#.#\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '23'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"too late\"\nassert solution(\"5 5 1 2 99 3\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\n98\\n7\\n7\\n') == '23'\nassert solution('1\\n1\\n') == 'too late'\n'''",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'too late'\nassert solution('5') == '42'\nassert solution('100 5') == '23'\nassert solution('100 3') == 'too late'\nassert solution('100 2') == 'too late'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('42\\n') == 'too late'\nassert solution('23\\n') == '23'\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1') == '23'\n",
        "num_ids_2": 53,
        "num_ids_4": 79
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2\\n99') == '23'\nassert solution('5\\n42\\n2\\n99\\n1') == '23'\nassert solution('100\\n5\\n2\\n99\\n1') == 'too late'\nassert solution('100\\n5\\n42\\n99\\n1') == '23'\nassert solution('100\\n5\\n99\\n2\\n1') == '23'\n'''\n\nr, n = list(map(int, input().split(' ')))\n\nbooked = list(map(int, input().split(' ')))\n\navailable = [i for i in range(1, r+1) if i not in booked]\n\nfor i in available:\n    print(i) if i in booked else print('too late')",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n4\\n1\\n2\\n99') == '23'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('playfair example') == 'HELLO WORLD'\nassert solution('hide the gold in the tree stump') == 'HELLO WORLD'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BFGJIODFRVXZKYXMBQULNWHVX\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n       5\n       Q ABCDEFGHIKLMNOPQRSTUVXY\n       Q ABCDEFGHIKLMNOPQRSTU\n       A BCDEFGHIKLMNOPQRSTUVX\n       Y ABCDEFGHIKLMNOPQRSTU\n       F ABCDEFGHIKLMNOPQRSTV\n       X ABCDEFGHIKLMNOPQRSTUV\n       M ABCDEFGHIKLMNOPQRSTUV\n       B ACDEFGHIKLMNOPQRSTU\n       C DEFGHIKLMNOPQRSTUV\n       D GHIKLMNOPQRSTUVX\n       G ABCDEFGHIKLMNOPQRSTU\n       H ABCDEFGHIKLMNOPQRSTV\n       J ABCDEFGHIKLMNOPQRSTU\n       K ABCDEFGHIKLMNOPQRSTV\n       N ABCDEFGHIKLMNOPQRSTUV\n       O ABCDEFGHIKLMNOPQRSTUV\n       S ABCDEFGHIKLMNOPQRSTUV\n       T ABCDEFGHIKLMNOPQRSTU\n       U ABCDEFGHIKLMNOPQRSTUV\n       V ABCDEFGHIKLMNOPQRSTU\n       W ABCDEFGHIKLMNOPQRSTUV\n       Z ABCDEFGHIKLMNOPQRSTUV\n        ''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\nassert solution('''\n    5\n    Q ABCDEFGHIKLMNOPQRSTUVXY\n    Q ABCDEFGHIKLMNOPQRSTU\n    A BCDEFGHIKLMNOPQRSTUVX\n    Y ABCDEFGHIKLMNOPQRSTU\n    F ABCDEFGHIKLMNOPQRSTV\n    X ABCDEFGHIKLMNOPQRSTUV\n    M ABCDEFGHIKLMNOPQRSTUV\n    B ACDEFGHIKLMNOPQRSTU\n    C DEFGHIKLMNOPQRSTUV\n    D GHIKLMNOPQRSTUVX\n    G ABCDEFGHIKLMNOPQRSTU\n    H ABCDEFGHIKLMNOPQRSTV\n    J ABCDEFGHIKLMNOPQRSTU\n    K ABCDEFGHIKLMNOPQRSTV\n    N ABCDEFGHIKLMNOPQRSTUV\n    O ABCDEFGHIKLMNOPQRSTUV\n    S ABCDEFGHIKLMNOPQRSTUV\n    T ABCDEFGHIKLMNOPQRSTU\n    U ABCDEFGHIKLMNOPQRSTUV\n    V ABCDEFGHIKLMNOPQRSTU\n    W ABCDEFGHIKLMNOPQRSTUV\n    Z ABCDEFGHIKLMNOPQRSTUV\n        ''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"HIDE THE GOLD IN THE TREESTUMP\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n\"\"\"\n\n\nimport re",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''playfair example''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''hide the gold in the tree stump''') == 'XMCGSKDYQHXUGFZBJVVLNUJXIN'\n\n'''\n\nsolution(input())\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\np\ny\nh\ne\nl\nl\no\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''\nq\nu\ni\ne\ns\n''') == 'MPXNLQSLGYIFZEVTRBI'\nassert solution('''\na\nb\nc\n''') == 'KLMNXQQCYIIVQGTZ'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('The quick brown fox jumps over the lazy dog.') == 'XIJGMVNPBXYRYAZBZGQXEGXPNM'\nassert solution('QQQQ') == 'QQQQ'\nassert solution('HMBL') == 'XXWZ'\nassert solution('ZQZQ') == 'ZQZQ'\n",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"playfair example\") == \"MHKUNAVJIYPGZLLEZNYDMCQX\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"playfair example\nhide the gold in the tree stump\"\"\"\n) == \"\"\"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('playfair example') == 'HELLOOXOVZWRRNNNQMYSDFAIJF'\nassert solution('hide the gold in the tree stump') == 'HGNNRVOJHMGZPDMIQCEXDZQFVSTZUW'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$2$).\"\n\nassert solution(\"1.000 1.000 1.000 1.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n\nassert solution(\"1.000 1.000 2.000 1.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n\nassert solution(\"1.000 1.000 2.000 1.000\") == \"The gopher cannot escape.\"\n",
        "num_ids_2": 70,
        "num_ids_4": 130
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$, $2$).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$, $2$).\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('100.000 100.000') == 'The gopher can escape through the hole at ($100$,$100$).'\nassert solution('1.000 1.500') == 'The gopher cannot escape. '\nassert solution('1.000 1.000') == 'The gopher cannot escape. '\n",
        "num_ids_2": 66,
        "num_ids_4": 116
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n1.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(r\"\"\"\n2.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(r\"\"\"\n2.000 2.000 1.000 1.000\n1.500 1.500\n\"\"\") == \"The gopher cannot escape.\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$2$).'\n",
        "num_ids_2": 61,
        "num_ids_4": 97
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1.000 1.000 2.000 2.000\n1.500 1.500\nSample Input:\n2.000 2.000 5.000 1.000\n0.000 0.000''') == 'The gopher can escape through the hole at ($x$,$y$).'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n0.000 0.000 1.000 1.000\n1.000 0.000\n0.000 0.000\n1.000 1.000\n0.000 1.000\n0.000 1.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n0.000 2.000\n1.000 2.000\n0.000 2.000\n0.000 2.",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at (1, 1).'\nassert solution('1.000 1.000 3.000 3.000') == 'The gopher cannot escape.'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at (1, 1).'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at (1, 1).'\n",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500') == 'The gopher can escape through the hole at (1.500,1.500).'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 2.000') == 'The gopher cannot escape.\\nThe gopher can escape through the hole at (1.500,1.500).'\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Y\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 7\n4 4''') == 'Y'\nassert solution('''4 3\n3 4''') == 'N'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 4\n3 3\n3\"\"\") == \"Y\"\n\nassert solution(\n\"\"\"2 4\n3 3\n3\"\"\") == \"N\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 0\\n1 0\\n1 0\"\n    ) == \"Y\"\n\nassert solution(\n    \"2 4\\n2 5\\n2 5\"\n    ) == \"Y\"\n\nassert solution(\n    \"1 4\\n1 2\\n3 2\\n2 4\"\n    ) == \"Y\"\n\nassert solution(\n    \"5 4\\n5 2\\n5 5\\n4 3\"\n    ) == \"Y\"\n\nassert solution(\n    \"2 4\\n1 3\\n2 3\\n1 3\"\n    ) == \"N\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3\n5\n''') == 'Y'\nassert solution('''4\n2 2\n3\n''') == 'N'\nassert solution('''4\n3 3\n4\n''') == 'Y'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1 1\n3 3\n10\n''') == 'Y'\nassert solution(\n'''\n-1000 -1000\n-1000 -1000\n-1000 -1000\n''') == 'N'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"Y\"\nassert solution(\"3 3\") == \"Y\"\nassert solution(\"3\") == \"N\"\nassert solution(\"\") == \"N\"",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('3 4\\n3 5\\n4 3') == 'N'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Y\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'Y'\nassert solution('5 7') == 'N'\nassert solution('1 2') == 'N'\nassert solution('1 1') == 'Y'\nassert solution('-3 -3') == 'Y'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n', \"Wrong solution\"\nassert solution('''10 10\n.V...#.#.\n.#.#.###.\n######.##\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\".V...\\n.......\\n.......\\n...#...\\n..###..\\n.V###V\") == \"..VVV..\\n.VV#VV.\\n.V###V.\\n.V###V.\\n.V###V.\"\nprint(\"First Test passed!\")\n\nstdin = \"\"\"5 7\n...V...\n.......\n.......\n...#...\n..###..\n\"\"\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7\") == \"\"\"..VV..\n.VV#VV.\n.V###V.\n.V###V.\n.V###V.\n\"\"\"\n\n\"\"\"\nint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the input\n    # Reading from standard input\n\nprint(input())\n    # Reading the input\n    # Using input() to read the",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7\") == \"..VV..\\n.VV#V.\\n.V###V\\nVVVVV\\n.....\"\nassert solution(\"4 4\") == \"......\\n......\\n.....V\\n.V...V\\n.V..V.\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n...V...\\n......\\n\") == \".....V.....\\n.....V.....\\n.....V.....\\n....V.....\"\nassert solution(\"2\\n4\\n...##...\\n........\\n\") == \"...######\\n.##.#..##\\n.#.##..#\\n..#.##.#\\n..#..##.\\n..##.##.\\n...######\\n\"\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 7\\n\"\n    \".V...\\n\"\n    \".......\\n\"\n    \".......\\n\"\n    \"...#...\\n\"\n    \"..###..\\n\"\n    \"Sample Output:\") == \".....\\n.....\\n.....\\n.....\\n.....\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n...V...\n.......\n.......\n''') == '...V...\\n...V...\\n...V...\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '11'\nassert solution('9') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"101\") == \"10\"\nassert solution(\"1000\") == \"10\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"1011\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '11'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '11'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('11') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '11'\nassert solution('101') == '01'\nassert solution('1000001') == '1000001'\nassert solution('1111') == '11'\nassert solution('111') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '11'\nassert solution('101') == '01'\nassert solution('1101101') == '1001'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '11'\nassert solution('101') == '11'\nassert solution('101010') == '11'\nassert solution('101101') == '11'\nassert solution('100') == '0'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('00') == '0'\nassert solution('011') == '11'\nassert solution('111') == '11'\nassert solution('1000000') == '1000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"18\") == \"8\"\nassert solution(\"12\") == \"10\"\n\nprint(\"All tests passed\")\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '11'\nassert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '9'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\"\nassert solution(\"15\\njPitNaKeT\\nsmrArOpMl\\nhefOeRd\\nfLeEtP\\npeaOrN\\nJkRlJfRa\\nxYAn\\nmabuOd\\nPJfNa\\npjFnA\\ntnKd\\nsDReOm\\njFnEbO\\n\") == \"10\"\nassert solution(\"20\\njPitNaKeT\\nsmrArOpMl\\nhefOeRd\\nfLeEtP\\npeaOrN\\nJkRlJfRa\\nxYAn\\nmabuOd\\nPJfNa\\npjFnA\\ntnKd\\nsDReOm\\njFnEbO\\n\") == \"9\"\nassert solution(\"25\\njPitNaKeT\\nsmrArOpMl\\nhefOeRd\\nfLeEtP\\npeaOrN\\nJkRlJfRa\\nxYAn\\nmabuOd\\nPJfNa\\npjFnA\\ntnKd\\nsDReOm\\njFnEbO\\n\") == \"8\"\n",
        "num_ids_2": 173,
        "num_ids_4": 373
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"I must watch Star Wars with my daughter\"\nassert solution(\"2\") == \"I must watch Star Wars with my daughter\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12\\npink\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '9'\nassert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '9'\nassert solution('12\\npink\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '9'\nassert solution('1\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '1'\nassert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '1'\n",
        "num_ids_2": 121,
        "num_ids_4": 220
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12\\npink\\nturqrose\\npink') == 'I must watch Star Wars with my daughter'\nassert solution('4\\nLemonPink') == 'I must watch Star Wars with my daughter'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '9', \"Should be 9\"\nassert solution('13') == '2', \"Should be 2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\", \"Test #1 Failed\"\nassert solution(\"12\") == \"9\", \"Test #2 Failed\"\nassert solution(\"12\") == \"9\", \"Test #3 Failed\"\nassert solution(\"100\") == \"16\", \"Test #4 Failed\"\nassert solution(\"10\") == \"2\", \"Test #5 Failed\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == '9'\nassert solution('12') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == '9'\nassert solution('12 5') == '9'\nassert solution('12 5 p') == '9'\nassert solution('12 5 p black') == '9'\nassert solution('12 5 p black p') == '9'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '9'\nassert solution('1') == '1'\nassert solution('10') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['1 5 3', 'ABC']) == '1 3 5'\n\nassert solution(['9 8 2', 'BAC']) == '9 8 2'\n\nassert solution(['3 4 1', 'BCA']) == '3 4 1'\n\nassert solution(['8 6 3', 'AABB']) == '8 6 3'\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 3') == '1 3 5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"1 3 5\") == \"1 3 5\"\nassert solution(\"1 5 3\") == \"1 3 5\"\n\"\"\"\n\na, b, c = input().split()\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 5 3\nAB''') == '1 3 5'\nassert solution('''\n1 5 2\nAC''') == '1 2 3'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 3 5') == '1 3 5'\nassert solution('1 2 3') == '1 3 2'\nassert solution('1 2 3 4') == '1 3 4 2'\nassert solution('1 2 3 4 5') == '1 3 4 5 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"buy 1 15\\n\"\n    \"split 3\\n\"\n    \"sell 1 5\\n\"\n    \"die 4\") == \"8.00000000\"\nassert solution(\n    \"buy 1 15\\n\"\n    \"split 3\\n\"\n    \"sell 1 5\\n\"\n    \"split 2\\n\"\n    \"die 1\\n\"\n    \"die 3\\n\"\n    \"sell 2\\n\"\n    \"buy 1 1\\n\"\n    \"sell 1 2\\n\"\n    \"sell 2 3\\n\"\n    \"sell 3 4\\n\"\n    \"sell 4 5\\n\"\n    \"buy 1 5\\n\"\n    \"buy 2 1\\n\"\n    \"buy 3 2\\n\"\n    \"sell 5 4\\n\"\n    \"sell 4 1\\n\"\n    \"sell 4 2\\n\"\n    \"sell 4 3\\n\"\n    \"sell 4 4\\n\"\n    \"buy 3 3\\n\"\n    \"sell 3 5\\n\"\n    \"sell 3 4\\n\"\n    \"sell 3 2\\n\"\n    \"sell 3 1\\n\"\n    \"buy 3 1\\n\"\n    \"sell 1 5\\n\"\n    \"sell 1 4\\n\"\n    \"sell 1 3\\n\"\n    \"sell 1 2\\n\"\n    \"sell 1 1\\n\"\n    \"buy 2 5\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 3\\n\"\n    \"sell 2 1\\n\"\n    \"sell 2 2\\n\"\n    \"buy 2 3\\n\"\n    \"sell 2 5\\n\"\n    \"sell 2 4\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 1\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 1\\n\"\n    \"sell 1 4\\n\"\n    \"sell 1 3\\n\"\n    \"sell 1 2\\n\"\n    \"sell 1 1\\n\"\n    \"sell 1 2\\n\"\n    \"sell 1 3\\n\"\n    \"sell 1 2\\n\"\n    \"sell 1 1\\n\"\n    \"buy 1 5\\n\"\n    \"buy 1 5\\n\"\n    \"buy 1 5\\n\"\n    \"buy 1 5\\n\"\n    \"sell 5 1\\n\"\n    \"sell 5 2\\n\"\n    \"sell 5 2\\n\"\n    \"sell 5 3\\n\"\n    \"sell 5 4\\n\"\n    \"sell 5 5\\n\"\n    \"buy 1 4\\n\"\n    \"sell 1 4\\n\"\n    \"sell 1 3\\n\"\n    \"sell 1 2\\n\"\n    \"sell 1 1\\n\"\n    \"sell 1 2\\n\"\n    \"sell 1 3\\n\"\n    \"sell 1 4\\n\"\n    \"sell 1 5\\n\"\n    \"sell 2 4\\n\"\n    \"sell 2 3\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 1\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 1\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 3\\n\"\n    \"sell 2 4\\n\"\n    \"sell 2 5\\n\"\n    \"sell 2 6\\n\"\n    \"sell 2 7\\n\"\n    \"sell 2 8\\n\"\n    \"sell 2 9\\n\"\n    \"sell 2 10\\n\"\n    \"buy 2 6\\n\"\n    \"sell 2 6\\n\"\n    \"sell 2 5\\n\"\n    \"sell 2 4\\n\"\n    \"sell 2 3\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 1\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 1\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 2\\n\"\n    \"sell 2 1\\n\"\n    \"sell 1 4\\n\"\n    \"sell 1 3\\n\"\n    \"sell 1 2\\n\"\n    \"sell 1 1\\",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n10\\n') == '8.00000000'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nbuy 1 10\nbuy 2 15\nsell 4\nbuy 3 15\nbuy 5 15\nsell 3\nsplit 2\nsell 2\n''') == '28.9199999999'\n\nassert solution('''\nbuy 1 10\nsell 3\nbuy 1 10\nbuy 1 10\nsell 2\n''') == '12.000000001'\n\nassert solution('''\nbuy 1 10\nbuy 1 10\nsell 3\nbuy 1 10\nbuy 2 15\nsell 2\n''') == '8.000000001'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('buy 1 15') == '8.00000000'\nassert solution('sell 1 5') == '0.00000000'\nassert solution('split 3') == '0.00000000'\nassert solution('die 4') == '0.00000000'\nassert solution('buy 1 10') == '8.00000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('buy 1 15\\nbuy 3\\ndie 4\\n') == '8.00000000'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsell 1 5\nbuy 3\nsplit 3\n\"\"\") == \"8.00000000\"\nassert solution(\"\"\"\nbuy 1 15\nsell 1 5\nsell 1 5\nsell 1 5\nsell 1 5\nsell 1 5\ndie 4\n\"\"\") == \"26.500000000000001\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n\"\"\") == \"8.00000000\"\nassert solution(\"\"\"\nbuy 1 15\nsell 1 5\ndie 4\n\"\"\") == \"8.00000000\"\nassert solution(\"\"\"\nbuy 5 4\nsell 1 2\nsell 5 5\nbuy 7 8\nbuy 5 5\nbuy 2 4\nsell 1 2\nsplit 5\ndie 4\n\"\"\") == \"20.00000000\"\nassert solution(\"\"\"\nbuy 5 4\nsell 1 2\nsell 5 5\nbuy 7 8\nbuy 5 5\nbuy 2 4\nsell 1 2\nsplit 5\ndie 4\n\"\"\") == \"21.00000000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('buy 1 15') == '8.00000000'\nassert solution('sell 1 5') == '7.00000000'\nassert solution('split 3') == '6.00000000'\nassert solution('die 4') == '7.00000000'\n\n'''\n\nn = int(stdin.readline())\nwhile n!=0:\n    x = int(stdin.readline())\n    if x == 0:\n        print('0')\n        n = n-1\n        continue\n    if x%3==0:\n        y = x//3\n        print(y)\n        n = n-1\n    elif x%3==1:\n        y = x*0.3\n        print(y)\n        n = n-1\n    elif x%3==2:\n        y = x*0.7\n        print(y)\n        n = n-1\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\ndie 4') == '8.00000000'\nassert solution('buy 1 5\\nbuy 1 15\\nsell 1 5\\nsell 1 5\\nsell 1 5\\ndie 4') == '25.00000000'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n''') == '8.00000000'\nassert solution('''\nbuy 2 30\nbuy 1 4\nsell 1 5\n''') == '7.99999999'\nassert solution('''\nbuy 1 25\nsell 1 5\n''') == '31.00000000'\nassert solution('''\nbuy 1 30\nsell 1 5\n''') == '31.00000000'\nassert solution('''\nbuy 1 10\nsell 1 5\n''') == '9.500000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"808\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('808') == '8'\nassert solution('1122') == '2'\nassert solution('0000') == '0'\nassert solution('1111') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n808\n''') == '8'\nassert solution('''\n2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n8\n1\n''') == '8'\nassert solution('''\n808\n1\n1\n''') == '8'\nassert solution('''\n9\n''') == '9'\nassert solution('''\n9\n9\n1\n''') == '9'\nassert solution('''\n9\n8\n9\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '8'\nassert solution('808') == '8'\nassert solution('4') == '4'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\nassert solution('''\n1 1\nLL\n''') == '1'\nassert solution('''\n5 5\nCCCCCCCCCCC\nCCCCCCCCCCC\nCCCCCCCCCCC\nCCCCCCCCCCC\nCCCCCCCCCCC\nCCCCCCCCCCC\nCCCCCCCCCCC\n''') == '6'\nassert solution('''\n5 5\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nCCCC\nCCCC\nCCCC\n''') == '0'\nassert solution('''\n3 3\nCCCC\nCCCC\nCCCC\n''') == '0'\nassert solution('''\n5 5\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == \"0\"\nassert solution('''\n4 5\nCCCCL\nCCCCL\nCCCCL\nCCCCL\n''') == \"1\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nLLLLLLLLLL\nCCCCCCCCCCCCCCCCCCCCCCC\nLLLLLLLLLL\nCCCCCCCCCCCCCCCCCCCCCCC\nLLLLLLLLLL\nCCCCCCCCCCCCCCCCCCCCCCC\nCCCCCCCCCCCCCCCCCCCCCCC\nLLLLLLLLLL\nCCCCCCCCCCCCCCCCCCCCCCCCCCCC\n''') == '0'\nassert solution('''\n4\nCCCCCCCCCCCCC\nLLLLLLLLLL\nCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nLLLLLLLLLL\n
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\nWWWWWCCCC\\nWWWWWCCCC\\nWWWWWCCCC\\nWWWWWCCCC\\n') == 0\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\nLWWWWWWWW\\nLLCCCCCCCC\\nWWWWWWWWWW\\nLCCCCCCCCCC\\nWWWWWWWWWW') == \"0\"\nassert solution('5 5\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL') == \"3\"\nassert solution('5 5\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL') == \"2\"\nassert solution('5 5\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL') == \"1\"\nassert solution('5 5\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL\\nLLLLLLLLLL') == \"0\"\n",
        "num_ids_2": 86,
        "num_ids_4": 164
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\nassert solution('5 5\\nCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC\\nCCCCCCCCCC') == 1",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\") == \"5\"\n",
        "num_ids_2": 77,
        "num_ids_4": 166
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1', \"Should be 1\"\nassert solution('3 2') == '0', \"Should be 0\"\nassert solution('5 3') == '3', \"Should be 3\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 S\\nTH\\n9C') == '60'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\"\n) == \"60\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 S') == '60'\nassert solution('3 S') == '60'\nassert solution('4 H') == '60'\nassert solution('5 D') == '60'\nassert solution('6 C') == '60'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 S\n9C\nKS\nQS\nJS\nTD\nAD''') == '60'\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 H\n2 C\n3 S\n4 D\n5 H\n6 C\n7 D\n8 C\n9 H\n10 H\n11 H\n12 H\n13 C\n14 H\n15 C\n16 H\n17 C\n18 H\n19 D\n20 H\n21 D\n22 H\n23 C\n24 H\n25 H\n26 H\n27 H\n28 C\n29 D\n30 H\n31 D\n32 H\n33 H\n34 D\n35 H\n36 H\n37 D\n38 H\n39 H\n40 H\n41 C\n42 H\n43 H\n44 H\n45 H\n46 H\n47 C\n48 H\n49 H\n50 H\n51 H\n52 H\n53 D\n54 D\n55 C\n56 H\n57 D\n58 D\n59 D\n60 D\n61 H\n62 D\n63 D\n64 D\n65 H\n66 D\n67 D\n68 D\n69 D\n70 D\n71 D\n72 D\n73 D\n74 D\n75 D\n76 D\n77 D\n78 D\n79 D\n80 D\n81 D\n82 D\n83 D\n84 D\n85 D\n86 D\n87 D\n88 D\n89 D\n90 D\n91 D\n92 D\n93 D\n94 D\n95 D\n96 D\n97 D\n98 D\n99 D\n100 D\n101 D\n102 D\n103 D\n104 D\n105 D\n106 D\n107 D\n108 D\n109 D\n110 D\n111 D\n112 D\n113 D\n114 D\n115 D\n116 D\n117 D\n118 D\n119 D\n120 D\n121 D\n122 D\n123 D\n124 D\n125 D\n126 D\n127 D\n128 D\n129 D\n130 D\n131 D\n132 D\n133 D\n134 D\n135 D\n136 D\n137 D\n138 D\n139 D\n140 D\n141 D\n142 D\n143 D\n144 D\n145 D\n146 D\n147 D\n148 D\n149 D\n150 D\n151 D\n152 D\n153 D\n154 D\n155 D\n156 D\n157 D\n158 D\n159 D\n160 D\n161 D\n162 D\n163 D\n164 D\n165 D\n166 D\n167 D\n168 D\n169 D\n170 D\n171 D\n172 D\n173 D\n174 D\n175 D\n176 D\n177 D\n178 D\n179 D\n180 D\n181 D\n182 D\n183 D\n184 D\n185 D\n186 D\n187 D\n188 D\n189 D\n190 D\n191 D\n192 D\n193 D\n194 D\n195 D\n196 D\n197 D\n198 D\n199 D\n200 D\n201 D\n202 D\n203 D\n204 D\n205 D\n206 D\n207 D\n208 D\n209 D\n210 D\n211 D\n212 D\n213 D\n214 D\n215 D\n216 D\n217 D\n218 D\n219 D\n220 D\n221 D\n222 D\n223 D\n224 D\n225 D\n226 D\n227 D\n228 D\n229 D\n230 D\n231 D\n232 D\n233 D\n234 D\n235 D\n236 D\n237 D\n238 D\n239 D\n240 D\n241 D\n242 D\n243 D\n244 D\n245 D\n246 D\n247 D\n248 D\n249 D\n250 D\n251 D\n252 D\n253 D\n254 D\n255 D\n256 D\n257 D\n258 D\n259 D\n260 D\n261 D\n262 D\n263 D\n264 D\n265 D\n266 D\n267 D\n268 D\n269 D\n270 D\n271 D\n272 D\n273 D\n274 D\n275 D\n276 D\n277 D\n278 D\n279 D\n280 D\n281 D\n282 D\n283 D\n284 D\n285 D\n286 D\n287 D\n288 D\n289 D\n290 D\n291 D\n292 D\n293 D\n294 D\n295 D\n296 D\n297 D\n298 D\n299 D\n300 D\n301 D\n302 D\n303 D\n304 D\n305 D\n306 D\n307 D\n308 D\n309 D\n310 D\n311 D\n312 D\n313 D\n314 D\n315 D\n316 D\n317 D\n318 D\n319 D\n320 D\n321 D\n322 D\n323 D\n324 D\n325 D\n326 D\n327 D\n328 D\n329 D\n330 D\n331 D\n332 D\n333 D\n334 D\n335 D\n336 D\n337 D\n338 D\n339 D\n340 D\n341 D\n342 D\n343 D\n344 D\n345 D\n346 D\n347 D\n348 D\n349 D\n350 D\n351 D\n352 D\n353 D\n354 D\n355 D\n356 D\n357 D\n358 D\n359 D\n360 D\n361 D\n362 D\n363 D\n364 D\n365 D\n366 D\n367 D\n368 D\n369 D\n370 D\n371 D\n372 D\n373 D\n374 D\n375 D\n376 D\n377 D\n378 D\n379 D\n380 D\n381 D\n382 D\n383 D\n384 D\n385 D\n386 D\n387 D\n388 D\n389 D\n390 D\n391 D\n392 D\n393 D\n394 D\n395 D\n396 D\n397 D\n398 D\n399 D\n400 D\n401 D\n402 D\n403 D\n404 D\n405 D\n406 D\n407 D\n408 D\n409 D\n410 D\n411 D\n412 D\n413 D\n414 D\n415 D\n416 D\n417 D\n418 D\n419 D\n420 D\n421 D\n422 D\n423 D\n424 D\n425 D\n426 D\n427 D\n428 D\n429 D\n430 D\n431 D\n432 D\n433 D\n434 D\n435 D\n436 D\n437 D\n438 D\n439 D\n440 D\n441 D\n442 D\n443 D\n444 D\n445 D\n446 D\n447 D\n448 D\n449 D\n450 D\n451 D\n452 D\n453 D\n454 D\n455 D\n456 D\n457 D\n458 D\n459 D\n460 D\n461 D\n462 D\n463 D\n464 D\n465 D\n466 D\n467 D\n468 D\n469 D\n470 D\n471 D\n472 D\n473 D\n474 D\n475 D\n476 D\n477 D\n478 D\n479 D\n480 D\n481 D\n482 D\n483 D\n484 D\n485 D\n486 D\n487 D\n488 D\n489 D\n490 D\n491 D\n492 D\n493 D\n494 D\n495 D\n496 D\n497 D\n498 D\n499 D\n500 D\n501 D\n502 D\n503 D\n504 D\n505",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"1 S\") == \"20\"\nassert solution(\"2 H\") == \"31\"\nassert solution(\"1 H\") == \"21\"\nassert solution(\"2 D\") == \"23\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 S') == '60', '\"2 S\" test failed'\nassert solution('TH') == '10', '\"TH\" test failed'\nassert solution('9C') == '20', '\"9C\" test failed'\nassert solution('KS') == '14', '\"KS\" test failed'\nassert solution('QS') == '10', '\"QS\" test failed'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 H\nTH\n9C\nKS''') == '60'\nassert solution('''4 D\nAH\n8C\n7S\n7H''') == '49'\nassert solution('''4 C\nTH\n9H\n8S''') == '52'\n''')\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 H\nTH\nJH\n2 S\n\"\"\") == \"60\"\nprint(solution(input()))",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('this is very annoying\\nthiss iss veery annoying') =='se'\n\n'''\n\nimport re\n\nline1 = input()\nline2 = input()\n\nl1 = len(line1)\nl2 = len(line2)",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nthis is very annoying\nthiss iss veery annoying\n''') =='se'\nassert solution('''\nhello world\n\nhi\n''') == 'eh'\nassert solution('''\na\nb\n''') == 'a'\nassert solution('''\na b\n''') == ''\nassert solution('''\n''') == ''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('I am a very annoying person') == 'Ie'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying''') =='se'\n\n''')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\nassert solution(\"this is stupid\") == \"\"\nassert solution(\"this is funny\") == \"se\"\nassert solution(\"asdf\") == \"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n\n'''\n\n\ns = input()\nt = input()",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"thiss is very annoying\") == \"se\"\nassert solution(\"thiss is veery annoying\") == \"se\"\nassert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\nassert solution(\"this iss veery annoying\") == \"se\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('this is very annoying') =='se'\n\nassert solution('thiss iss veery annoying') =='se'\n\nassert solution('hello there!') == '!'\n\nassert solution('hello there!') == '!'\n\nassert solution('hello there!') == '!'\n\"\"\"\n\n\"\"\"\n----SOLUTION----\n1. Using a list of tuples, convert stdin into a list of tuples.\n2. Create a list of tuples of the form (value, count), where value is the character and count is the number of times it appears.\n3. Sort the list by value (first element), then count (second element), in descending order, and return the first value.\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == '3'\nassert solution('10 10 10\\n0 0 1 1 2 3 4 5 6 7 8 9') == '3'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 0') == '3'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 8 7 6') == '2'\nassert solution('1 2 3 4 5 9 8 7 6') == '3'\nassert solution('1 2 3 4 5 9 8 7 6 7') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''5 3 1\n0 0 1 1 2\n''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 3 5') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 2 0\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 0\n0 0 1 1 2\n''') == '3'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n4\n0 0 1 1 2\n''') == \"3\"\nassert solution('''\n1 1\n1\n0 0 1 1 2\n''') == \"1\"\nassert solution('''\n4\n1\n4\n0 0 1 1 2\n''') == \"2\"\nassert solution('''\n4\n0\n1\n4\n0 0 1 1 2\n''') == \"4\"\nassert solution('''\n3\n0 0 1 1 2\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\n\nassert solution('''\n5 3 0\n0 0 1 1 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 0\\n0 1 2\\n\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '2'\nassert solution('1\\n100\\n9') == '9'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1\\n2\\n3\\n') == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"6\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n4\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"3\\n3\\n5\") == \"6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '24'\nassert solution('5') == '120'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n100\\n10') == '1'\nassert solution('100\\n1\\n10') == '1'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('3 1 2') == '5'\nassert solution('3 1 1') == '3'\nassert solution('3 1 1 2') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n') == '4 2'\nassert solution('5\\n5 9 6 3 2\\n') == '4 8'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3\n    3 1 2\n    \"\"\") == \"4 2\"\n\nassert solution(\"\"\"\n    4\n    3 1 2 3\n    \"\"\") == \"6 2\"\n\nassert solution(\"\"\"\n    5\n    4 1 2 3\n    \"\"\") == \"10 3\"\n\nassert solution(\"\"\"\n    10\n    9 3 2 1\n    \"\"\") == \"27 6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 1 2\n''') == '4 2'\nassert solution('''\n4\n4 1 5 3 2\n''') == '11 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '5 3'\nassert solution('1 2 3 4') == '5 3 4'\nassert solution('1 2 3 4 5') == '5 4 4 5'\nassert solution('1 2 3 4 5 6') == '5 4 5 6'\nassert solution('1 2 3 4 5 6 7') == '5 5 5 6 6'\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 2 1') == '4 2'\nassert solution('5 1 3 2 4 5') == '10 5'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n2 1 1\\n') == '2 2'\nassert solution('3\\n1 2 3\\n') == '4 2'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n') == '14 15'\nassert solution('0\\n0 0\\n') == '0 0'",
        "num_ids_2": 36,
        "num_ids_4": 83
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4 2'\nassert solution('2') == '3 2'\nassert solution('1') == '1 2'\nassert solution('1 1') == '2 3'\nassert solution('2 1 1 2 1 1 1') == '3 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, \"Should be able to tell the values of the pieces\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\nassert solution('5\\n1 2 3 4 5') == '6 2'\nassert solution('5\\n1 2 3 4 5\\n6 1 2 3 4 5') == '9 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 60
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1\n''') == '2'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('10 3 1') == '3'\nassert solution('100 3 1') == '4'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 1\n5\n3\n4\n2\n4\n1\n3\n4\n2''') == '4', 'First'\nassert solution('''5 3 5\n5\n1\n2\n3\n4\n5''') == '3', 'Second'\nassert solution('''5 2 4\n1\n1\n2\n2\n2\n1\n3\n3\n4\n4\n4\n3''') == '0', 'Third'\nassert solution('''5 2 4\n2\n2\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4''') == '0', 'Fourth'\nassert solution('''5 1 3\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5''') == '4', 'Fifth'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('5 2 2') == '3'\nassert solution('5 2 3') == '4'\nassert solution('5 2 4') == '5'\nassert solution('5 2 5') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 4') == '1'\nassert solution('10 3 1') == '4'\nassert solution('12 1 1') == '3'\nassert solution('1000 1 1') == '7'\nassert solution('10000 1 1') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 1\nSample Input 2:\n1 5 1\nSample Output 2:\n0\n''') == '0'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 1\n''') == '2'\nassert solution('''6 3 6\n''') == '3'''\nassert solution('''10 10 2\n''') == '2'\n\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1\\n') == '2'\nassert solution('1 10 10\\n') == '10'\nassert solution('3 3 5\\n') == '2'\nassert solution('4 7 1\\n') == '3'\nassert solution('4 9 2\\n') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n7''') == '288'\nassert solution('''10''') == '2762'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '36'\nassert solution('3') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('5\\n7') == '288'\nassert solution('8\\n4') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '36'\nassert solution('7') == '288'\nassert solution('10000000000') == '10000000000'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"36\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"144\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n''') == '36'\nassert solution('''\n4\n''') == '2'\nassert solution('''\n2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '36'\nassert solution('7') == '288'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '36'\nassert solution('8') == '64'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '36'\nassert solution('100') == '100000000'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2 3 4 1'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('4 2 3 1') == '4 2 2 3 1'\nassert solution('10 10 10 10') == '10 10 10 10'\n",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3\\n') == '1 2 3'\nassert solution('2\\n4 3\\n') == '1 2 3 4'\nassert solution('3\\n4 2\\n') == '1 2 3 4'\nassert solution('3\\n2 4\\n') == '1 2 3 4'\nassert solution('3\\n2 4 3\\n') == '1 2 3 4'\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 3 3 1') == '2 3 4 1'\n\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2 1 2\") == \"3 4 1\"\nassert solution(\"2 1 3 1\") == \"3 4 1\"\nassert solution(\"3 1 3 2\") == \"3 2 4 1\"\nassert solution(\"4 1 3 1\") == \"2 3 4 1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3 3 1') == '2 3 4 1'\nassert solution('5\\n2 3 2 1') == '2 3 4 1'\nassert solution('5\\n2 3 4 1') == '2 3 4 1'\nassert solution('5\\n2 3 2 4 1') == '2 3 4 1'\nassert solution('5\\n2 3 4 4 1') == '2 3 4 1'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 2 3 4\"\nassert solution(\"8\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"",
        "num_ids_2": 30,
        "num_ids_4": 49
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\") == \"2 3 4 1\"\nassert solution(\"4\\n2 3 3 1\") == \"2 4 1 3\"\nassert solution(\"5\\n2 3 4 2 1\") == \"2 1 3 4 5\"\n",
        "num_ids_2": 37,
        "num_ids_4": 58
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 3 3 1\n2 3 1\n2 2 3\n2 1 2\n2 1 2\n''') == '2 3 4 1'\n\nassert solution('''\n5\n1 1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '1 1 1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 5\\n\"\n    \"left_oar\\n\"\n    \"right_oar\\n\"\n    \"left_oar\\n\"\n    \"hull\\n\"\n    \"right_oar\\n\"\n) == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\nleft_oar\\nleft_oar') == '4'\nassert solution('3 4\\nleft_oar\\nright_oar\\nleft_oar\\nhull') == '1'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '4'\n\"\"\"\n\nimport math\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('3 5') == '5'\nassert solution('3 3') == '2'\n\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('1 1\\nhull') == 'paradox avoided'\n\nSample Input 1:\n3 5\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\nboat\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n''') == \"4\"\nassert solution('''\n3 5\nleft_oar\nright_oar\nright_oar\nhull\nright_oar\n''') == \"2\"\nassert solution('''\n3 5\nright_oar\nleft_oar\nleft_oar\nhull\nright_oar\n''') == \"3\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n''') == '1'\nassert solution('''\n1\nhull\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 5\nright_oar\nright_oar\nright_oar\nleft_oar\nleft_oar\n''') == '3'\n\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\n\n\"\"\"\nfrom collections import defaultdict\n\nP, N = list(map(int, input().split()))\n\nboat = defaultdict(int)\n\nfor _ in range(N):\n    boat[input()] += 1\n\nanswer = 0\nwhile P > 0:\n    for k, v in boat.items():\n        if v == 0:\n            continue\n        if k == 'hull':\n            continue\n        boat[k] -= 1\n        P -= 1\n        answer = max(answer, _)\n        if P == 0:\n            break\n\nprint(answer)\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n4 5\\n7 8\\n') == '7 7'\nassert solution('2 4\\n3 5\\n6 7\\n') == '6 7'\nassert solution('1 2\\n3 4\\n2 4\\n') == '3 5'\nassert solution('5 2\\n7 4\\n8 6\\n') == '8 7'\nassert solution('8 2\\n9 4\\n10 6\\n') == '10 7'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n5 7\\n7 5\\n\") == \"7 7\"\nassert solution(\"3 3\\n3 3\\n3 3\\n\") == \"3 3\"\nassert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n6 7\\n5 5\\n4 5') == '4 5'\nassert solution('2 5\\n5 7\\n7 5\\n4 5') == '4 5'\nassert solution('2 5\\n5 7\\n7 5\\n4 5') == '4 5'\nassert solution('2 5\\n5 7\\n7 5\\n4 5') == '4 5'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '7 7'\nassert solution('5 7') == '7 5'\nassert solution('7 5') == '5 5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\n\"\"\"\nimport re\nfrom collections import Counter\n\nx = []\ny = []\n\nfor i in range(3):\n    x.append(list(map(int, re.findall('\\d+', input()))))\n\nx.sort()\ny.sort()\n\nfor i in range(len(x)):\n    for j in range(len(y)):\n        if (x[i][0] == y[j][0] or x[i][0] == y[j][1] or x[i][1] == y[j][0] or x[i][1] == y[j][1]):\n            x[i] = y[j]\n            x.sort()\n            break\n\nprint(x[2])\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n3\\n1\\n') == '7 7'\nassert solution('4\\n7 4\\n7 4\\n4 4\\n') == '7 7'\nassert solution('3\\n5 2\\n5 3\\n5 2\\n') == '7 7'\nassert solution('6\\n2 6\\n3 7\\n4 6\\n5 6\\n6 6\\n') == '7 7'\nassert solution('5\\n10 10\\n9 5\\n3 5\\n4 10\\n8 2\\n') == '9 5'\n",
        "num_ids_2": 47,
        "num_ids_4": 105
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 1\\n3 4\\n5 5\") == \"1 1\"\nassert solution(\"2 4\\n2 5\\n3 5\\n1 5\") == \"2 4\"\nassert solution(\"3 4\\n3 5\\n1 5\\n2 5\") == \"3 4\"\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('10 10\\n10 5\\n5 10\\n') == '7 5'\nassert solution('100 100\\n100 50\\n50 100\\n') == '200 200'\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\nprint('coding complete')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.01'\nassert solution('2') =='measurement error'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1 61\n\"\"\") == \"1.016666667\"\nassert solution(\"\"\"\n2\n6 2\n\"\"\") == \"3.3333333333\"\nassert solution(\"\"\"\n1\n1 60\n\"\"\") == \"measurement error\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 10\n5 20\n7 30\n''') == \"0.85\"\n\nassert solution('''\n2\n1 60\n1 60\n''') == \"1.0\"\n\nassert solution('''\n2\n3 60\n5 60\n''') == \"measurement error\"\n\nassert solution('''\n2\n1 60\n2 60\n''') == \"0.5\"\n\nassert solution('''\n2\n2 60\n3 60\n''') == \"measurement error\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n1 61\n\"\"\") == \"1.016666667\"\nassert solution(\"\"\"\n6\n1 100\n2 51\n3 55\n4 55\n5 55\n5 55\n\"\"\") == \"2.5\"\nassert solution(\"\"\"\n6\n1 2\n2 7\n3 5\n4 4\n5 1\n5 2\n\"\"\") == \"2.5\"\nassert solution(\"\"\"\n5\n1 23\n2 23\n3 23\n4 23\n5 23\n5 23\n\"\"\") == \"3.0\"\nassert solution(\"\"\"\n6\n1 10\n2 11\n3 10\n4 10\n5 11\n5 10\n\"\"\") == \"3.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"1\\n1 62\") == \"measurement error\"\nassert solution(\"2\\n3 66\") == \"1.033333333\"\nassert solution(\"2\\n6 39\") == \"1.75\"\nassert solution(\"3\\n1 55\") == \"0.0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('2\\n2 60') == '1.016666667'\nassert solution('3\\n3 60 2') == '1.016666667'\nassert solution('4\\n4 60 1 2') == '1.016666667'\nassert solution('5\\n5 60 2 1 2') == '1.016666667'\n",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"2\\n1 61\") == \"0.016666667\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1.016666667\"\nassert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"1\\n1\\n1\") == \"measurement error\"",
        "num_ids_2": 32,
        "num_ids_4": 51
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1.016666667\"\nassert solution(\"2\") == \"measurement error\"\nassert solution(\"3\") == \"measurement error\"\nassert solution(\"4\") == \"measurement error\"\nassert solution(\"5\") == \"measurement error\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1\\n'\n    '1 61\\n'\n    '2 2\\n'\n    '3 3\\n'\n    '4 4\\n'\n    '5 5\\n'\n    '6 6\\n'\n    '7 7\\n'\n    '8 8\\n'\n    '9 9\\n'\n    '10 10\\n'\n    '11 11\\n'\n    '12 12\\n'\n    '13 13\\n'\n    '14 14\\n'\n    '15 15\\n'\n    '16 16\\n'\n    '17 17\\n'\n    '18 18\\n'\n    '19 19\\n'\n    '20 20\\n'\n    '21 21\\n'\n    '22 22\\n'\n    '23 23\\n'\n    '24 24\\n'\n    '25 25\\n'\n    '26 26\\n'\n    '27 27\\n'\n    '28 28\\n'\n    '29 29\\n'\n    '30 30\\n'\n    '31 31\\n'\n    '32 32\\n'\n    '33 33\\n'\n    '34 34\\n'\n    '35 35\\n'\n    '36 36\\n'\n    '37 37\\n'\n    '38 38\\n'\n    '39 39\\n'\n    '40 40\\n'\n    '41 41\\n'\n    '42 42\\n'\n    '43 43\\n'\n    '44 44\\n'\n    '45 45\\n'\n    '46 46\\n'\n    '47 47\\n'\n    '48 48\\n'\n    '49 49\\n'\n    '50 50\\n'\n    '51 51\\n'\n    '52 52\\n'\n    '53 53\\n'\n    '54 54\\n'\n    '55 55\\n'\n    '56 56\\n'\n    '57 57\\n'\n    '58 58\\n'\n    '59 59\\n'\n    '60 60\\n'\n    '61 61\\n'\n    '62 62\\n'\n    '63 63\\n'\n    '64 64\\n'\n    '65 65\\n'\n    '66 66\\n'\n    '67 67\\n'\n    '68 68\\n'\n    '69 69\\n'\n    '70 70\\n'\n    '71 71\\n'\n    '72 72\\n'\n    '73 73\\n'\n    '74 74\\n'\n    '75 75\\n'\n    '76 76\\n'\n    '77 77\\n'\n    '78 78\\n'\n    '79 79\\n'\n    '80 80\\n'\n    '81 81\\n'\n    '82 82\\n'\n    '83 83\\n'\n    '84 84\\n'\n    '85 85\\n'\n    '86 86\\n'\n    '87 87\\n'\n    '88 88\\n'\n    '89 89\\n'\n    '90 90\\n'\n    '91 91\\n'\n    '92 92\\n'\n    '93 93\\n'\n    '94 94\\n'\n    '95 95\\n'\n    '96 96\\n'\n    '97 97\\n'\n    '98 98\\n'\n    '99 99\\n'\n    '100 100\\n'\n    '101 101\\n'\n    '102 102\\n'\n    '103 103\\n'\n    '104 104\\n'\n    '105 105\\n'\n    '106 106\\n'\n    '107 107\\n'\n    '108 108\\n'\n    '109 109\\n'\n    '110 110\\n'\n    '111 111\\n'\n    '112 112\\n'\n    '113 113\\n'\n    '114 114\\n'\n    '115 115\\n'\n    '116 116\\n'\n    '117 117\\n'\n    '118 118\\n'\n    '119 119\\n'\n    '120 120\\n'\n    '121 121\\n'\n    '122 122\\n'\n    '123 123\\n'\n    '124 124\\n'\n    '125 125\\n'\n    '126 126\\n'\n    '127 127\\n'\n    '128 128\\n'\n    '129 129\\n'\n    '130 130\\n'\n    '131 131\\n'\n    '132 132\\n'\n    '133 133\\n'\n    '134 134\\n'\n    '135 135\\n'\n    '136 136\\n'\n    '137 137\\n'\n    '138 138\\n'\n    '139 139\\n'\n    '140 140\\n'\n    '141 141\\n'\n    '142 142\\n'\n    '143 143\\n'\n    '144 144\\n'\n    '145 145\\n'\n    '146 146\\n'\n    '147 147\\n'\n    '148 148\\n'\n    '149 149\\n'\n    '150 150\\n'\n    '151 151\\n'\n    '152 152\\n'\n    '153 153\\n'\n    '154 154\\n'\n    '155 155\\n'\n    '156 156\\n'\n    '157 157\\n'\n    '158 158\\n'\n    '159 159\\n'\n    '160 160\\n'\n    '161 161\\n'\n    '162 162\\n'\n    '163 163\\n'\n    '164 164\\n'\n    '165 165\\n'\n    '166 166\\n'\n    '167 167\\n'\n    '168 168\\n'\n    '169 169\\n'\n    '170 170\\n'\n    '171 171\\n'\n    '172 172\\n'\n    '173 173\\n'\n    '174 174\\n'\n    '175 175\\n'\n    '176 176\\n'\n    '177 177\\n'\n    '178 178\\n'\n    '179 179\\n'\n    '180 180\\n'\n    '181 181\\n'\n    '182 182\\n'\n    '183 183\\n'\n    '184 184\\n'\n    '185 185\\n'\n    '186 186\\n'\n    '187 187\\n'\n    '188 188\\n'\n    '189 189\\n'\n    '190 190\\n'\n    '191 191\\n'\n    '192 192\\n'\n    '193 193\\n'\n    '194",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''VGVXCUBEZDBCQJZDFVTFQSICRKLHUACXXYHDPQKZFBVVQGZFXXKPQNFFVUJLNQTFZQVYGQJLNQQJUDGVXTQZHVYNRGQQHZNQXQVHZRNQPQQDTQPRGQQTQQQQVQQTQQXQQQQTQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ",
        "num_ids_2": 1572,
        "num_ids_4": 1572
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"CALGARY\"\n\"\"\"\nfrom collections import defaultdict\n\nt = int(input())\nfor _ in range(t):\n    m,k = input().split()\n    m = list(m)\n    k = list(k)\n    even = m[::2]\n    odd = m[1::2]\n    keys = defaultdict(str)\n    for i in range(len(k)):\n        keys[int(i/2)] = k[i]\n    d = {}\n    for i in range(len(odd)):\n        d[i] = keys[int(i/2)]\n    print(''.join([d[i] for i in even + odd]))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''CKLIMHVRR\nSDRKHIGUYS''') == 'CALGARY'\nassert solution('''QHWRXBUJHJRQMR\nARVRHDFNRTFMOS''') == 'CALGARY'\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CPMCRYY', 'ALBERTA') == 'CALGARY'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"CPMCRYY\nALBERTA\"\"\") == \"CALGARY\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"C\") == \"C\"\nassert solution(\"CALGARY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"ALBERTA\"\nprint(\"YOUR CODE IS CORRECT!\")\n",
        "num_ids_2": 17,
        "num_ids_4": 47
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    'CPMCRYY\\nALBERTA') == 'CALGARY'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nCALGARY\nALBERTA\n''') == 'CALGARY'\n\nassert solution('''\nCALGARY\nALBERTA\n''') == 'CALGARY'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CPMCRYY','ALBERTA') == 'CALGARY'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\"\"\"\n\n\n\"\"\"\nTLE\n\"\"\"\nclass Solution:\n    def __init__(self):\n        self.arr = []\n        self.n = 0\n    def solve(self, stdin):\n        self.arr = stdin.split('\\n')\n        for i in range(len(self.arr)):\n            self.arr[i] = int(self.arr[i])\n        self.n = len(self.arr)\n        res = self.helper(0)\n        return res\n    \n    def helper(self, curr_idx):\n        # if curr_idx + 1 == self.n:\n        #     return curr_idx + 1\n        \n        # curr_idx = self.helper(curr_idx + 1)\n        # for j in range(curr_idx, curr_idx + 1):\n        #     if j < curr_idx + 1:\n        #         continue\n        #     if self.arr[j] > self.arr[curr_idx]:\n        #         curr_idx = j\n        #         break\n        for i in range(curr_idx + 1, self.n):\n            if self.arr[i] < self.arr[curr_idx]:\n                curr_idx = i\n                break\n            \n        res = curr_idx + 1\n        return res\n\n\nimport heapq\nclass Solution:\n    def __init__(self):\n        self.min_heap = []\n        self.max_heap = []\n        self.res = 0\n    def solve(self, stdin):\n        for i in range(len(stdin)):\n            heapq.heappush(self.min_heap, stdin[i])\n            heapq.heappush(self.max_heap, -1*stdin[i])\n        while len(self.min_heap)!= 0 and len(self.max_heap)!= 0:\n            min_val = heapq.heappop(self.min_heap)\n            max_val = -1*heapq.heappop(self.max_heap)\n            if min_val <= max_val:\n                res = min_val\n                continue\n            else:\n                self.res += abs(min_val)\n                break\n        return str(self.res)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AB') == '3'\nassert solution('BCD') == '2'\nassert solution('ABABC') == '1'\nassert solution('AABAAABAAAB') == '3'\nassert solution('ACBAAABAAAB') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"1\"\nassert solution(\"BB\") == \"2\"\nassert solution(\"C\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    'AB\\n'\n    ) == '3'\nassert solution(\n    'CABC\\n'\n    ) == '2'\nassert solution(\n    'ABCD'\n    ) == '0'\nassert solution(\n
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AB') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AB') == '3'\nassert solution('ABBC') == '3'\nassert solution('ABC') == '3'\nassert solution('ABCD') == '4'\nassert solution('ABAB') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"ABC\") == \"2\"\nassert solution(\"ABCD\") == \"1\"\nassert solution(\"AABC\") == \"1\"\nassert solution(\"ACD\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''AB\nBA\nCA''') == '2'\nassert solution('''ABCAB\nABCABA\nACABAC''') == '2'\nassert solution('''ABCAB\nBCBAC\nABCCA''') == '3'\nassert solution('''ABCABC\nABCBABC\nBCACACD''') == '2'\nassert solution('''ABCABC\nABCBABC\nBCACACD\nABCBABC''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AB') == '3'\nassert solution('ABD') == '2'\nassert solution('BA') == '1'\nassert solution('ABDCAABA') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1\n1 1\n1\n1''') == '3'\nassert solution('''3 3 3\n2\n1 1\n1\n1\n1\n1''') == '6'\nassert solution('''3 3 3\n1\n1 1\n1\n1\n1\n1\n1''') == '4'\nassert solution('''10 10 10\n1\n1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 3 4 2') == '5'\nassert solution('1 4 3 2') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 1 2 3 4 4') == '4'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"5 6 7 4\") == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '3'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 5 3\") == \"8\"\nassert solution(\"3 4 3 2\") == \"3\"\nassert solution(\"2 4 2 3\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '3'\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('2 3 5 6') == '9'\nassert solution('7 10 2 6') == '11'\nassert solution('4 1 5 3') == '4'\nassert solution('0 3 4 2') == '2'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"99 1\") == \"98\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input(\"\")) == \"4\"\n\"\"\"\n\nimport math\n\na, b = map(int, input().split())\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('103 27') == '4'\nassert solution('7 10') == '2'\nassert solution('5 5') == '1'\nassert solution('5 2') == '2'\nassert solution('10 20') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"103 27\") == \"4\"\nprint(solution(\"103 27\"))\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123') == '123'\nassert solution('171') == '200'\nassert solution('11111') == '11111'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n        5\n        4\n        3 2\n        2 3\n        1 5\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n        5\n        4\n        2 5\n        3 5\n        5 1\n    \"\"\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n100 5\n''') == '5'\nassert solution('''\n10 3\n''') == '2'\nassert solution('''\n15 8\n''') == '4'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"4\", \"Should be 4\"\nassert solution(\"1 2\") == \"1\", \"Should be 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15 17') == '2'\nassert solution('103 27') == '4'\nassert solution('1 1') == '2'\nassert solution('1234 5678') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution(\"103 27\") == \"4\"\nassert solution(\"3 23\") == \"2\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    }
]