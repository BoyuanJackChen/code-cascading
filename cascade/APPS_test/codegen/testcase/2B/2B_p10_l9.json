[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == \"5\"\nprint(solution(input()))\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5 1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5 1 8 6'",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"1 8 6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\n\nprint('The maximum number of edges which belong to at least one of the simple paths between $1$ and $6$ is $5$. ')\nprint('')\nprint('The path between $1$ and $6$ consists of edges $(1, 2), (2, 3), (3, 4), (4, 5)$ and the path between $5$ and $6$ consists of edges $(4, 5), (4, 6)$.')\nprint('')\nprint('The union of these paths is $(1, 2), (2, 3), (3, 4), (4, 5), (4, 6)$ so the answer is $5$.')\nprint('')\nprint('The first answer can be found by choosing vertices $1, 2, 4$.')\nprint('')\nprint('The second answer can be found by choosing vertices $1, 3, 5$.')\nprint('')\nprint('The third answer can be found by choosing vertices $1, 5, 8$.')\nprint('')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\nassert solution('1 2') == '1 8 6'\nassert solution('2 3') == '1 8 6'\nassert solution('3 4') == '1 8 6'\nassert solution('4 5') == '1 8 6'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '0'\nassert solution(\"4\") == '2'\nassert solution(\"10\") == '5'\nassert solution(\"4\") == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '5'\nassert solution('6') == '1 8 6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3') == '5'\nassert solution('5\\n1 2\\n2 3\\n3 4') == '1 8 6'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5') == '1 8 6'\n",
        "num_ids_2": 42,
        "num_ids_4": 70
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5 1 8 6'\nassert solution('3') == '1 8 6'\nassert solution('6') == '3 1 8 6'\nassert solution('8') == '5 1 8 6'\nassert solution('6') == '3 1 8 6'",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('5 3 6 2') == '3 6'\nprint(solution('10 2 8 1 2 4 1 20 4 5'))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '20 8'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 6') == '8 6'\nassert solution('5\\n4 5 5 6') == '20 8'\nassert solution('1\\n2 1 2 3') == '3'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n10\n10 2 8 1 2 4 1 20 4 5\n    \"\"\"\n) == \"20 8\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n1 1\n''') == '2 3'\n\nassert solution('''\n3 3\n2 3\n''') == '3 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input().split()) == \"20 8\"\nassert solution(input().split()) == \"8 20\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3\\n1 2 3') == '3 2'\nassert solution('4\\n1 3 2 1\\n1 3 2 1') == '1 3 2 1'\nassert solution('7\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1') == '1'",
        "num_ids_2": 46,
        "num_ids_4": 76
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"10 6 2 2 4 1 1 5\") == \"20 6\"\n\nstdin = input()\nx,y = map(int,stdin.split())\n\nprint(x+y)\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"20 8\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\") == \"56\"\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24', 'First Test'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56', 'Second Test'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"24\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == \"4\"\nassert solution(input_data2) == \"RRRR\"\nassert solution(input_data3) == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n\"\"\"\n\nimport sys\nfrom collections import deque\n\ninput = sys.stdin.readline\n\nn = int(input())\narr = deque(int(input()) for _ in range(n))\n\nk = 0\nans = ''\n\nwhile arr:\n    a = arr.popleft()\n    if a > k:\n        k = a\n        ans = 'R' + ans\n    else:\n        ans = 'L' + ans\n\nprint(k)\nprint(ans)\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4'\nassert solution('7\\n1 3 5 6 5 4 2') == '6'\nassert solution('3\\n2 2 2') == '1'\nassert solution('4\\n2 2 2') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == 'LRRR'\nassert solution(input()) == 'LLRR'\nassert solution(input()) == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\nassert solution('4') == 'LLRR'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '4'\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\nassert solution('4') == '1'\n\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 4 3 2''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\nassert solution('''3\n2 2 2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4 4 7 4 1\n''') == '3'\n\nassert solution('''\n5 2 2 5 2 5\n''') == '3'\n\nassert solution('''\n2\n1 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n2 5 3 3 7\n''') == '3'\nassert solution('''3\n2 5 2 5\n''') == '-1'\nassert solution('''5\n4 4 4 7 7\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n4 5\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution() == '-1'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('5') == '3'\nassert solution('4') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"1 3 3 7\") == \"3\"\nassert solution(\"1 5\") == \"1\"\nassert solution
        "num_ids_2": 28,
        "num_ids_4": 1442
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '3'\nassert solution('4') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 5 4 7') == '3'\nassert solution('4\\n3 6 4 5') == '-1'\nassert solution('4\\n2 5 4 7') == '3'",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 4 4 7 4 1') == '3'\nassert solution('5\\n2 2 5 2 5') == '3'\nassert solution('4\\n1 3 3 7') == '-1'",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5 2 5 2 5\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2 4 4\\n\"\n    \"1 1 3 5\\n\"\n    \"3 1 5 5\\n\"\n) == \"NO\"\nassert solution(\n    \"5 2 10 5\\n\"\n    \"0 0 4 6\\n\"\n    \"0 0 7 4\\n\"\n) == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\nassert solution('''\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 2 4 4\n1 1 3 5\n3 1 5 5\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3 3 7 5\n0 0 4 6\n0 0 7 4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n1 1 3 5\n2 1 3 5\n4 1 3 5\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n1 1 3 5\n2 1 4 3\n4 1 4 3\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 7 5\") == 'YES'\nassert solution(\"2 2 4 4\") == 'NO'\nassert solution(\"5 2 10 5\") == 'YES'\nassert solution(\"0 0 1000000 1000000\") == 'YES'\nassert solution(\"0 0 499999 1000000\") == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['1098']) == '20'\nassert solution(['10']) == '19'\nassert solution(['10']) == '19'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1098') == '20'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\n\n\"\"\"\nimport math",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == solution('1098') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"20\"\nassert solution(\"1098\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == \"5 3 1 2 4\"\nassert solution('7') == \"7 4 2 3 6 5 1\"\nassert solution('7') == \"7 3 2 1 4 5 6\"\nassert solution('7') == \"7 4 2 3 6 5 1\"\nassert solution('7') == \"7 3 2 1 4 5 6\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3 1 2 4 5'\nassert solution('7') == '7 3 2 1 4 5 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 1 2 4 5'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('7') == '7 3 2 1 4 5 6'\n\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == stdout_",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n5 0 0 2 4''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1''') == '7 4 2 3 6 5 1'\nassert solution('''5\n2 1 0 0 0''') == '2 1 4 5 3'\n\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n4 1 0 2\n''') == \"3 4 1 2\"\nassert solution('''5\n5 0 0 2 4\n''') == \"3 4 1 2\"\nassert solution('''7\n7 0 0 1 4 0 6\n''') == \"7 3 2 1 4 5 6\"\nassert solution('''7\n7 4 0 3 0 5 1\n''') == \"7 4 2 3 6 5 1\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4', \"Simple\"\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6', \"Simple\"\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1', \"Simple\"\nassert solution('''5\n2 1 0 0 0\n''') == '2 1 4 5 3', \"Empty\"\nassert solution('''7\n4 2 1 0 3 6 5\n''') == '4 2 1 4 5 3 6', \"Simple\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7 4 2 3 6 5 1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3 2 1 4 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"\nassert solution(\"5 2\\n1 1 1 2 1\") == \"YES\\n2 1 1 2 1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 67
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('5 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 1\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 78
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('5 2') == 'NO'\nassert solution('4 2') == 'YES'\nassert solution('4 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == \"NO\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3') == 'YES\\n2 1 1 2 1'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == 'YES', \"First\"\nassert solution(\"5 2\") == 'NO', \"Second\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 5 2\n11010100101\n''') == '1'\nassert solution('''11 5 1\n11010100101\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"11\", \"5\", \"2\"]) == \"1\"\nassert solution([\"11\", \"5\", \"1\"]) == \"3\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"11 5 2\\n11010100101\"\n) == \"1\"\nassert solution(\n    \"11 5 1\\n11010100101\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''11 5 2\n11010100101\n''') == '1'\nassert solution('''11 5 1\n11010100101\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(t) == \"1\"\nassert solution(f) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''2\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2''') == 'YES\\nNO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''\n1\n1\n2\n''') == 'NO'\nassert solution('''\n1\n1\n1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n1 2 1') == 'YES'\nassert solution('5\\n5\\n1 2 2 3 2') == 'YES'\nassert solution('3\\n1 2\\n1 1 2') == 'NO'\nassert solution('3\\n3\\n1 2 1') == 'NO'\nassert solution('4\\n4\\n1 2 2 3') == 'NO'\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''1\n1\n2''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n2''') == 'YES'\nassert solution('''3\n2\n1\n''') == 'YES'\nassert solution('''4\n1\n1\n1\n''') == 'YES'\nassert solution('''5\n2\n1\n2\n1\n''') == 'YES'\nassert solution('''6\n3\n1\n1\n1\n1\n1\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2''') == \"YES\"\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == \"NO\"\nprint('Done!')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n22\\n1 3 4 5 6 7 8\") == \"1235434567\"\nassert solution(\"4\\n3321\\n1 2 1 2 1 2 1 2 1 2 2 1 2 1 2 1 2 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1",
        "num_ids_2": 1618,
        "num_ids_4": 1618
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"99999\"\nassert solution(\"4\") == \"99999\"\nassert solution(\"5\") == \"99999\"\nassert solution(\"1\") == \"99999\"\nassert solution(\"1\") == \"99999\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n12\n123456789\n''') == '123456789'\nprint(solution('''\n2\n1111\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('4') == '99999'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''\n3\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1557'\nassert solution('5') == '99999'\nassert solution('2') == '33'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"99999\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == \"1557\"\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == \"99999\"\nassert solution('''\n2\n33\n1 1 1 1 1 1 1 1 1\n''') == \"33\"\nassert solution('''\n3\n111\n9 8 7 6 5 4 3 2\n''') == \"99999\"\nassert solution('''\n4\n11111111\n9 8 7 6 5 4 3 2\n''') == \"99999\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"311\"\nassert solution(\"5\") == \"555555\"\nassert solution(\"10\") == \"99999\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution() == '1 1 3'\nassert solution() == '102'\nassert solution() == '114 228 456'\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"15 18 21\"\nassert solution(\"15 18 21\") == \"15 18 21\"\nassert solution(\"1 22 29\") == \"1 1 3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"4\"\nassert solution(\"15 18 21\") == \"4\"\nassert solution(\"100 100 101\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101''') == '1 1 1 3'\nassert solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101''') == '1 1 1 1'\nassert solution('''1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101''') == '2 2 2'\nassert solution('''4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101''') == '2 4 4'\nassert solution('''5\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101''') == '3 3 3 3 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n6\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4'\nassert solution('''\n2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1'\nassert solution('''\n6\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '2'\nassert solution('''\n4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '102'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '114 228 456'\nassert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '1 1 3'\nassert solution('5 10 15') == '4'\nassert solution('15 18 21') == '8'\nassert solution('100 100 101') == '7'\n",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 1 3'\nassert solution('''8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '102'\nassert solution('''10\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '114 228 456'\nassert solution('''20\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 2 3'\nassert solution('''30\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '114 228 456'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1 1 1'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 3 6'\nassert solution('5') == '1 5 15'\nassert solution('6') == '2 4 12'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 3 7\n''') == \"2\"\nassert solution('''\n2\n1 100000\n''') == \"0\"\nassert solution('''\n5\n1 9 3 5 7\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2 1 100000\") == \"0\"\nassert solution(\"1 5 8 9\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1 1 3 3 7\") == \"2\"\nassert solution(\"1 100000\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 3 3\n''') == \"2\"\n\nassert solution('''\n2\n1 100000\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 2 4\") == \"2\"\nassert solution(\"3\\n3 1 2\") == \"1\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"2\\n1 100000\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 3 3 7\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 1 100000') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 3 7\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 3 3 7\") == \"2\"\nassert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 2 3 7\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"10\\n1 100000 3 4 5 6 7 8 9 10\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5, 1, 2, 1, 1]) == \"2\"\nassert solution([1, 1, 1, 1, 1]) == \"1\"\nassert solution([4, 2, 1, 1, 1]) == \"3\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1''') == \"1 2 3 0 3\"\nassert solution('''3 2\n1 3 1\n1 2 1''') == \"-1\"\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution('''8 5\n3 2 4\n5 6 8\n9 1 2\n4 7 3''') == \"1 0 3 0 2 1 2 1 3 2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 3 0 3\"\nassert solution('''\n5 2\n1 3 1\n1 5 1\n''') == \"1 2 3 0 3\"\nassert solution('''\n3 2\n1 3 1\n1 2 1\n''') == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 18,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 2 1\") == \"1 2 3 0 3\", \"Example #1\"\nassert solution(\"10 2\\n4 7 2\\n1 10 3\") == \"2 2 2 1 1 0 4 3 4 4\", \"Example #2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) in (None, ''), \"Should print 0 if all exams are prepared, 1 otherwise.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 3 1\n1 5 1''') == \"1 2 3 0 3\"\nassert solution('''3 2\n1 3 1\n1 2 1\n''') == \"1 2 3 0 3\"\n\nassert solution('''5 2\n1 3 1\n1 5 1\n3 2\n4 8\n5 7''') == \"1 2 3 0 3 4 8\"\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''') == \"2 2 2 1 1 0 4 3 4 4\"\n\nassert solution('''10 3\n3 1\n1 10 3\n8 9 1\n''') == \"2 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 3 1\") == \"1 2 3 0 3\"\nassert solution(\"3 2\\n1 3 1\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\") == \"2 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 2\"\n    ) == \"1 2 3 0 3\"\nassert solution(\n    \"3 2\"\n    ) == \"-1\"\nassert solution(\n    \"10 3\"\n    ) == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\n    \"4 1 5 3\"\n    ) == \"0 1 1 1 0 1 1 0 1 0 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''120 51840\n    ''') == '7'\nassert solution('''42 42\n    ''') == '0'\nassert solution('''48 72\n    ''') == '-1'",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\nab') == 'ababababa', \"Your solution is too simple\"\nassert solution('3 2\\nabc') == 'ababababa', \"Your solution is too simple\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"1234\"\nassert solution(\"1 5 3 5\") == \"12345\"\nassert solution(\"1 5 5 5\") == \"12345\"\nassert solution(\"1 2 3 4\") == \"1234\"\nassert solution(\"1 3 2 3 4\") == \"12345\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'ababababa'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"ababababa\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'abababab'\nassert solution('abc') == 'abababab'\nassert solution('abb') == 'abababab'\n",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\nabc\n''') == 'abcbaba'\nassert solution('''2 4\nabcdefg\n''') == 'abcccccccgf'\nassert solution('''2 5\nabcdefg\n''') == 'abcdgfedcb'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\nabca') == 'ababababa', 'First'\nassert solution('3 2\\ncat') == 'catcat', 'Second'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\naba') == 'ababababa', '3 4\\naba'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 5 1 2 2\") == \"3\"\nassert solution(\"2 1 2 4 3\") == \"2 1 5\"\nassert solution(\"5 2 1 2 4 3\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\\n\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\"\nassert solution(\"4\\n8 3 5 2\\n\") == \"2\\n1 4\"\n",
        "num_ids_2": 46,
        "num_ids_4": 87
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"1\"\nassert solution('3') == \"2\"\nassert solution('4') == \"0\"\nassert solution('5') == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 2 4 3\") == \"3\"\nassert solution(\"5\\n2 1 2 4 3\") == \"2\"\nassert solution(\"5\\n8 3 5 2\") == \"0\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\nassert solution(input(\": \")) == '4'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output\n\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 5 1 2 2\n''') == '3'\nassert solution('''\n4\n8 3 5 2\n''') == '2'\nassert solution('''\n5\n2 1 2 4 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution() == '1 4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n5 3 1 2 2') == '3\\n1 2'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\n",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n') == '4'\nassert solution('6 6\\n') == '-1'\nassert solution('3 2\\n') == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'\nassert solution('5 7') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\nasdf') == '4'\nassert solution('5 6\\naaaaa') == '15'\nassert solution('5 7\\naaaaa') == -1\nassert solution('10 100\\najihiushda') == '233'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"10000000 10\") == \"10000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\nasdf\") == \"4\"\nassert solution(\"6 6\\naasdf\") == \"15\"\nassert solution(\"6 7\\naasdf\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"\nassert solution(\"10 100\\najihiushda\") == \"233\"\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == str(min_cost_tuple)\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'\nassert solution('100 10') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'\nassert solution() == 'NO'\n'''\n\nimport math",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '4 5 1\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '1 4\\n'\n    '2 3\\n'\n    '3 4\\n') == 'YES\\n'\nassert solution(\n    '4 5 3\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '1 4\\n'\n    '2 3\\n'\n    '3 4\\n') == 'YES\\n'\nassert solution(\n    '4 4 3\\n'\n    '1 2\\n'\n    '1 4\\n'\n    '2 3\\n'\n    '3 4\\n') == 'NO\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 4 3\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 1') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3') == 'YES\\n1 2\\n1 3\\n4 1'\nassert solution('4 4 3') == 'NO'\n",
        "num_ids_2": 48,
        "num_ids_4": 60
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 1\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''\n4 5 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3\") == \"YES\"\nassert solution(\"4 5 1\") == \"NO\"\nassert solution(\"4 4 3\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"5 4 4\") == \"NO\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 1') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3') == 'YES\\n1 2\\n1 3\\n4 1'\nassert solution('4 4 3') == 'NO'\n",
        "num_ids_2": 48,
        "num_ids_4": 60
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5 1\\n1 2') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4') == 'YES\\n1 2\\n1 3\\n4 1\\n4 3\\n4 2'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('01:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n\n10:00\n11:00\n\n''') == '10:30'\nassert solution('''\n\n11:10\n11:12\n\n''') == '11:11'\nassert solution('''\n\n01:02\n03:02\n\n''') == '02:02'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1:00\n1:15''') == '1:15'\nassert solution('''1:10\n2:00''') == '1:30'\nassert solution('''2:20\n2:50''') == '2:30'\nassert solution('''1:00\n2:00''') == '1:00'\nassert solution('''1:00\n1:00''') == '1:00'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10:00\n11:00''') == '10:30'\nassert solution('''11:10\n11:12''') == '11:11'\nassert solution('''01:02\n03:02''') == '02:02'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\n\nassert solution(\"01:02\") == \"02:02\"\n\nassert solution(\"03:02\") == \"02:02\"\n\nassert solution(\"00:00\") == \"00:00\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\nassert solution('''\n01:02\n03:02\n''') == '02:02'\nassert solution('''\n11:00\n11:00\n''') == '11:00'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('7') == '2'\nassert solution('100') == '4'\nassert solution('10203040506070809') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\nassert solution(\"84\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0'\nassert solution('27') == '1'\nassert solution('42') == '2'\nassert solution('13') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('27') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n\nassert solution('4') == '1'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution(stdin=\"\"\"\n4\n1 3\n2 6\n0 4\n3 3\n\n\"\"\") == '1'\nassert solution(stdin=\"\"\"\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n\"\"\") == '2'\nassert solution(stdin=\"\"\"\n3\n4 5\n1 2\n9 20\n\n\"\"\") == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n''') == '7'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\nassert solution('''\n2\n3 10\n1 5\n\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1 3\\n\"\n    \"2 6\\n\"\n    \"0 4\\n\"\n    \"3 3\"\n    ) == \"1\\n\"\n\nassert solution(\n    \"5\\n\"\n    \"2 6\\n\"\n    \"1 3\\n\"\n    \"0 4\\n\"\n    \"1 20\\n\"\n    \"0 4\"\n    ) == \"2\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"4 5\\n\"\n    \"1 2\"\n    ) == \"0\\n\"\n\nassert solution(\n    \"2\\n\"\n    \"3 10\\n\"\n    \"1 5\"\n    ) == \"7\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\n",
        "num_ids_2": 60,
        "num_ids_4": 84
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\\n\") == \"YES\"\nassert solution(\"2\\n\") == \"NO\"\nassert solution(\"3\\n\") == \"NO\"\nassert solution(\"2\\n1 1\\n\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n''') == 'NO'\n\nassert solution('''\n2\n10 10\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('4 5 3') == 'NO'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n\"\n    \"2 1 1 2 5\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"4 5 3\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"1\\n\"\n    \"0\\n\"\n) == \"YES\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n2 1 1 2 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"3\n4 5 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"1\n10 10\n\"\"\") == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('10') == 'YES'\nassert solution('11') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '4'\nassert solution(input('')) == '-1'\nassert solution(input('')) == '233'\nassert solution(input('')) == '233'\nassert solution(input('')) == '233'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\n') == '4'\nassert solution('5 6\\n') == '15'\nassert solution('5 7\\n') == '-1'\nassert solution('10 100\\n') == '233'\nassert solution('a b c d e f g h i j\\n') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n\"\n                \"asdf\") == \"4\"\nassert solution(\"5 6\\n\"\n                \"aaaaa\") == \"15\"\nassert solution(\"5 7\\n\"\n                \"aaaaa\") == \"-1\"\nassert solution(\"10 100\\n\"\n                \"ajihiushda\") == \"233\"\nassert solution(\"1 2\\n\"\n                \"1\") == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5\nasdf\n\n''') == \"4\"\n\nassert solution('''5 6\naaaaa\n\n''') == \"15\"\n\nassert solution('''5 7\naaaaa\n\n''') == \"-1\"\n\nassert solution('''10 100\najihiushda\n\n''') == \"233\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'\nassert solution('5 7') == '-1'\nassert solution('5 10') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5\\nqwe') == '4'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5\\n') == '4'\nassert solution('5 6\\n') == '15'\nassert solution('5 7\\n') == '-1'\nassert solution('10 100\\n') == '233'",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 1\n''') == '4'\nassert solution('''3 2 2\n''') == '7'\nassert solution('''1 100 1\n''') == '3'\nassert solution('''30 20 10\n''') == '39'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_lines) == \"39\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1 1\n''') == '4'\nassert solution('''3 2 2\n''') == '7'\nassert solution('''30 20 10\n''') == '39'\nassert solution('''2 5 2\n''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 1, 1]) == '4'\nassert solution([3, 2, 2]) == '7'\nassert solution([1, 100, 1]) == '3'\nassert solution([30, 20, 10]) == '39'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1\\n') == '4'\nassert solution('3 2 2\\n') == '7'\nassert solution('1 100 1\\n') == '3'\nassert solution('30 20 10\\n') == '39'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 1, 1]) == 4\nassert solution([3, 2, 2]) == 7\nassert solution([1, 100, 1]) == 3\nassert solution([30, 20, 10]) == 39",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"1 100 0\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\"\nassert solution(\"4 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"NO\"\n",
        "num_ids_2": 282,
        "num_ids_4": 282
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2''') == \"YES\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2''') == \"NO\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2''') == \"NO\"\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('1 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('5 5') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n') == 'NO'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n') == 'NO'\n",
        "num_ids_2": 190,
        "num_ids_4": 283
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES', 'test #1'\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'NO', 'test #2'\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'YES', 'test #3'\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2''') == 'NO', 'test #4'\nassert solution('''5 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == \"YES\"\nassert solution('''3 3\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == \"NO\"\nassert solution('''5 6\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n2\n1\n3\n''') == '0'\nassert solution('''8\n3\n1\n4\n''') == '1'\nassert solution('''6\n5\n2\n3\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n''') == '0'\nassert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4, 5, 6]) == 1\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 0\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == 1\n",
        "num_ids_2": 44,
        "num_ids_4": 72
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('10') == '2'\nassert solution('1000000') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"2\") == 1\nassert solution(\"3\") == 1\nassert solution(\"5\") == 1\nassert solution(\"6\") == 1",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n()))()\n\n''') == \"5\"\nassert solution('''\n3\n(()\n\n''') == \"4\"\nassert solution('''\n2\n(((\n\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(open(0).read()) == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n()(((()))())\") == \"5\"\nassert solution(\"3\\n(()((()))())\") == \"4\"\nassert solution(\"2\\n(((()))())\") == \"0\"\nassert solution(\"1\\n((()))\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n(((\n''') == 5)\nassert solution('''\n2\n()())\n''') == 4\nassert solution('''\n3\n(()())\n''') == 2\nassert solution('''\n4\n(())())()\n''') == 3\nassert solution('''\n5\n(((()))())\n''') == 5\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"2\") == 2\nassert solution(\"3\") == 1\nassert solution(\"4\") == 2\nassert solution(\"5\") == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n()))()\n\n2\n(((\n\n0\n''') == '5')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5071') == 4\nassert solution('705') == 1\nassert solution('1241367') == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 28
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5071''') == '4'\nassert solution('''705''') == '1'\nassert solution('''1241367''') == '-1'",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n\n---Input---\n\n5071\n\n---Output---\n\n4\n\n---Input---\n\n705\n\n---Output---\n\n1\n\n---Input---\n\n1241367\n\n---Output---\n\n-1\n''') == '4', 'First Failed Test Case'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\nassert solution('126757465') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5071') == '4', 'test failed'\nassert solution('705') == '1', 'test failed'\nassert solution('1241367') == '-1', 'test failed'",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '1 2 1 2 1 1 1'\nassert solution('5') == '1 1 1 1 1'\nassert solution('8') == '1 2 1 2 1 2 1 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '1 1 1 1 1 2 3 \nassert solution('7') == '1 1 1 1 1 2 3 \nassert solution('5') == '1 1 1 1 1'\nassert solution('11') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('9') == '1 1 1 1 1 1 1 1 1 1'",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\nabacbecfd\n\n5\naaabbcbb\n\n7\nabcdedc\n''') == '2\\n1 1 1 1 1 2 3'\nassert solution('''\n4\nabcd\n\n6\nabcdabcdabcd\n\n8\na\n\n9\nzab\n\n10\nzaba\n''') == '3\\n1 1 1 1 1 1 2 2 1 1 1 2 3 1 2 1 1 1 2 1'\nassert solution('''\n4\nabcd\n\n6\nabcdabcdabcd\n\n8\na\n\n9\nzab\n\n10\nzaba\n''') == '3\\n1 1 1 1 1 1 2 2 1 1 1 2 3 1 2 1 1 1 2 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abacbecfd\") == \"1 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2",
        "num_ids_2": 1505,
        "num_ids_4": 1505
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n\"\"\"\nfrom collections import defaultdict, deque\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '3'\nassert solution('7') == '1'\nassert solution('5') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\naaabbcbb\n''') == '''\n2\n1 1 1 1 1 2 3 \n'''\nassert solution('''\n7\nabcdedc\n''') == '''\n3\n1 1 1 1 1 2 3 \n'''\nassert solution('''\n8\naaabbcbb\n''') == '''\n2\n1 2 1 2 1 2 1 1\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\nabc\nabc\nabc\n''') == 'NO'\nassert solution('''\n5\na\naba\nabacaba\nba\naba\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"NO\"\nassert solution(\"3\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"5 12\") == \"0\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 1, 2, 3, 4, 5, 1, 6, 4]) == 5\nassert solution([5, 1, 2, 3, 4, 5, 1, 6, 4]) == 0\nassert solution([5, 1, 2, 3, 4, 5, 1, 6, 4]) == 5\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '5'\nassert solution(input()) == '0'\n\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 100') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3,9]) == 14\nassert solution([4,4]) == 12\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 10\n2\n3\n4\n''') == '8'\nassert solution('''\n1 3\n2\n3\n4\n''') == '12'\nassert solution('''\n1 5\n2\n3\n4\n5\n6\n''') == '12'\nassert solution('''\n3 2\n1\n4\n''') == '3'\nassert solution('''\n5 3\n1\n4\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n''') == '12'\nassert solution('''3 9\n''') == '14'\nassert solution('''3 6\n''') == '12'\nassert solution('''506 2708\n''') == '3218'\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 5\n3 2\n1 3\n1 4\n3 1\n4 2\n''') == '12'\nassert solution('''3 9\n3 9\n3 9\n3 9\n3 9\n''') == '14'\nassert solution('''9 3\n3 2\n3 2\n3 2\n3 2\n''') == '14'\nassert solution('''506 2708\n506 2708\n506 2708\n506 2708\n506 2708\n''') == '3218'\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == '14'\nassert solution(\"9 3\") == '14'\nassert solution(\"3 4\") == '12'\nassert solution(\"506 2708\") == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\nassert solution(\"4 3\") == \"14\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n''') == '12'\n\nassert solution('''\n3 9\n''') == '14'\n\nassert solution('''\n3 6\n''') == '12'\n\nassert solution('''\n506 2708\n''') == '3218'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"12\"\nassert solution(open(\"input.txt\").read()) == \"14\"\nassert solution(open(\"input.txt\").read()) == \"3218\"\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n''') == '12'\nassert solution('''\n3 9\n''') == '14'\nassert solution('''\n3 6\n''') == '12'\nassert solution('''\n506 2708\n''') == '3218'\nassert solution('''\n10 10\n''') == '54'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nabcd') == 'YES'\n\n\nimport itertools",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nabcde') == 'YES'\nassert solution('8\\nabcdedc') == 'YES'\nassert solution('7\\nabcde') == 'NO'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '6\\n'\n    'abacbecfd\\n'\n    ) == 'YES\\n'\n\n\nassert solution(\n    '7\\n'\n    'aaabbcbb\\n'\n    ) == 'YES\\n'\n\n\nassert solution(\n    '6\\n'\n    'abcde\\n'\n    ) == 'NO\\n'\n\n\nassert solution(\n    '5\\n'\n    'abcde\\n'\n    ) == 'YES\\n'\n\n\nassert solution(\n    '6\\n'\n    'abcd\\n'\n    ) == 'NO\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n9\nabacbecfd\n\nOutput\nYES\n001010101\n\nInput\n8\naaabbcbb\n\nOutput\nYES\n01011011\n\nInput\n7\nabcdedc\n\nOutput\nNO\n''') == 'NO'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\naaaa\n''') == 'YES'\nassert solution('''\n4\nabab\n''') == 'YES'\nassert solution('''\n4\nabba\n''') == 'NO'\nassert solution('''\n4\nbbbab\n''') == 'NO'\nassert solution('''\n5\naaaa\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\nabc\n\nOutput\nYES\n0\n0110''') == 'YES'\nassert solution('''\n8\nabc\n\nOutput\nNO''') == 'NO'\nassert solution('''\n9\nabc\n\nOutput\nYES''') == 'YES'\nassert solution('''\n8\nabc\n\nOutput\nNO''') == 'NO'\nassert solution('''\n7\nabc\n\nOutput\nYES''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\n\nassert solution('10') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'NO', \"Your solution needs to return 'NO' for the case of the empty string\"\nassert solution('2') == 'NO', \"Your solution needs to return 'NO' for the case of the string 'a'\"\nassert solution('3') == 'YES', \"Your solution needs to return 'YES' for the case of the string 'bc'\";\nassert solution('4') == 'YES', \"Your solution needs to return 'YES' for the case of the string 'bc'\";\n",
        "num_ids_2": 55,
        "num_ids_4": 113
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\nassert solution(sys.stdin.read()) == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\nassert solution('7') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '25'\nassert solution('3 2') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1,2]) == 25\nassert solution([3,4]) == -1\nassert solution([3,5]) == -1\nassert solution([5,7]) == -1\nassert solution([2,4]) == -1\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '25'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"25\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '25'\n\"\"\"\nimport math\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"-1 -1\") == \"-1\"\nassert solution(\"-2 -3\") == \"25\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == '-1'\nassert solution('-1 1') == '-1'\nassert solution('3 1') == '-1'\nassert solution('-1 -1') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"6 4\") == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"16 10\") == \"NO\", \"Bigger than all!\"\nassert solution(\"26 6\") == \"YES\", \"Smaller than all!\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\n1 2 3 4 5\n''') == 'NO'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n''') == 'YES'\nassert solution('''\n1 1\n''') == 'NO'\nassert solution('''\n8 3\n''') == 'YES'\nassert solution('''\n7 3\n''') == 'NO'\nassert solution('''\n13 5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"26 6\\n\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\\n\") == \"NO\\n\"\nassert solution(\"1 1\\n\") == \"YES\\n1\"\n\n\n##\n## In case of input data being supplied to your program, it should be assumed to be a console input. The output from your program will be printed on console. So, in this case, your program will not be run on the console and your program will be graded based on the console input.\n##\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3\n''') == 'YES'\nassert solution('''\n8 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('6 6') == 'NO'\nassert solution('8 3') == 'YES'\nassert solution('13 13') == 'NO'\nassert solution('12 6') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n\") == \"YES\\n1\"\nassert solution(\"8 3\\n\") == \"NO\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO\\n1'\nassert solution('1 1') == 'YES\\n1'\nassert solution('9 4') == 'NO\\n'",
        "num_ids_2": 33,
        "num_ids_4": 60
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''\n3 2\n300 -300\n1 299\n1 123\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5\n20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('5 2') == '4'\nassert solution('3 2') == '0'\nassert solution('4 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('5 100') == '0'\nassert solution('5 100 -100') == '0'\nassert solution('5 100 -300') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES', solution(input())\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n1 2\n1 3\n2 4\n1 2\n1 3\n''') == 'YES', 'First'\nassert solution('''\n1 2\n1 2\n1 3\n2 4\n1 2\n1 3\n''') == 'YES', 'Second'\nassert solution('''\n1 2\n1 2\n1 3\n2 4\n1 2\n1 3\n''') == 'NO', 'Third'\nassert solution('''\n1 2\n1 2\n1 3\n2 4\n1 2\n1 3\n''') == 'NO', 'Fourth'\nassert solution('''\n1 2\n1 2\n1 3\n2 4\n1 2\n1 3\n''') == 'NO', 'Fifth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('1') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"10\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution
        "num_ids_2": 768,
        "num_ids_4": 768
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'NO'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES', solution(None)\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n1\n1\n1''') == 'YES'\nassert solution('''2\n1\n2\n2''') == 'YES'\nassert solution('''3\n1\n3\n3''') == 'YES'\nassert solution('''4\n1\n4\n4\n4''') == 'YES'\nassert solution('''5\n1\n5\n5\n5''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"NO\"\n",
        "num_ids_2": 47,
        "num_ids_4": 78
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('5 2') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n\n''') == \"YES\"\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n\n''') == \"YES\"\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n\n''') == \"YES\"\n\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('3 10') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\nassert solution(\"3 10\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'\nassert solution('''\n5\n0\n0\n0\n0\n0\n''') == 'NO'\nassert solution('''\n10 10 10 10\n0 0 0 0 0 0 0 0 0 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0 \n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"10 1 5\\n3\") == \"NO\"\nassert solution(\"10 1 5\\n4\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n",
        "num_ids_2": 53,
        "num_ids_4": 95
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 3 2\n1 2 1''') == 'YES'\nassert solution('''10 1 11\n1''') == 'YES'\nassert solution('''10 1 5\n2''') == 'YES'\nassert solution('''5 9 5\n2''') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == \"YES\"\nassert solution('''\n10 1 11\n1\n''') == \"YES\"\nassert solution('''\n10 1 5\n2\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == 'YES\\n0 1 0 2 2 0 3'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\n\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\n\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('asdfasdf') == 'asdfasdf'\nassert solution('abcde') == 'abcde'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    bbaba\n    bb\n''') == 3\n\nassert solution('''\n    baaba\n    ab\n''') == 2\n\nassert solution('''\n    abcde\n    abcde\n''') == 0\n\nassert solution('''\n    asdfasdf\n    fasd\n''') == 3",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"baaba\") == 2\nassert solution(\"bbaba\") == 3\nassert solution(\"abcde\") == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('abcde') == 3\nassert solution('asdfasdf') == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nassert solution('aaa') == 5\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abcde') == 0\nassert solution('baaba') == 3\nassert solution('abcde') == 3\nassert solution('fasd') == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 1\nassert solution(\"ab\") == 2\n\n\n\n'''\n\nimport sys\n",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('bbb') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5.0') == '5 2'\nassert solution('3.1') == '3 2'\nassert solution('3.2') == '3 2'\nassert solution('2.9') == '2 3'\nassert solution('4.2') == '4 5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == None\nassert solution(\"\") == \"\"\nassert solution(\"1.1\") == \"2\"\nassert solution(\"1.2\") == \"2\"\nassert solution(\"1.3\") == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 39
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(x) == \"3 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n\nstdin = \"\"\"2.572479\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000') == '3 2'\nassert solution('2.999999') == '10 3'\nassert solution('4.999898') == '9 9'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\nassert solution(\"5.632167\") == \"2 5\"\nassert solution(\"1.022523\") == \"6 4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint('All tests passed')\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6 3 3\\n\"\n) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 3 3\n''') == 'YES'\nassert solution('''\n6 2 3\n''') == 'NO'\nassert solution('''\n10 4 3\n''') == 'YES'\nassert solution('''\n8 5 3\n''') == 'YES'\n\nprint(solution('''\n6 2 3\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3\") == \"YES\"\nassert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"6 9\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 2 3\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 3 3\n''') == 'YES'\nassert solution('''6 2 3\n''') == 'NO'\nassert solution('''10 4 3\n''') == 'YES'\nassert solution('''8 5 3\n''') == 'YES'\nassert solution('''10 3 4\n''') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input := '2 2 1') == \"1100\"\nassert solution(input := '3 3 3') == \"101100\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"6 3 6\") == \"111110101\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2 1\"\n    ) == \"1100\"\nassert solution(\n    \"3 3 3\"\n    ) == \"101100\"\nassert solution(\n    \"5 3 6\"\n    ) == \"01010100\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 2 1\n\"\"\"\n) == \"1100\"\n\nassert solution(\n\"\"\"\n3 3 3\n\"\"\"\n) == \"101100\"\n\nassert solution(\n\"\"\"\n5 3 6\n\"\"\"\n) == \"01010100\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'acbbac'\nassert solution('3') == 'cacbacbab'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\nab\\nbc\\n\") == \"acbbac\"\nassert solution(\n    \"1\\ncb\\nac\\n\") == \"cacbacbab\"\nassert solution(\n    \"0\\n\") == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\nab\nbc\n''') == 'acbbac'\nassert solution('''\n3\naa\nbc\n''') == 'cacbacbab'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\nab\nbc\n''') == \"YES\"\n\nassert solution('''\n3\naa\nbc\n''') == \"YES\"\n\nassert solution('''\n1\ncb\nac\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n-2 1\n\"\"\") == \"\"\"3 1 2\"\"\"\nassert solution(\"\"\"\n5\n1 1 1 1\n\"\"\") == \"\"\"1 2 3 4 5\"\"\"\nassert solution(\"\"\"\n4\n-1 2 2\n\"\"\") == \"-1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n-2 1\n\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1\n\n''') == '1 2 3 4 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n-2 1\\n\") == \"3 1 2\"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\\n\") == \"-\"\nassert solution(\"\") == \"-\"\nassert solution(\"\\n\") == \"-\"\n",
        "num_ids_2": 41,
        "num_ids_4": 66
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    1 1 1 1\n    ''') == '1 2 3 4 5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '-1'\nassert solution('5') == '1 2 3 4 5'",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n1''') == '1'\nassert solution('''3\n2 2 2\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2 3\n''') == \"1\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n2 2 2 3 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n2 3 1 4 7\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    5\n    2 2 2 3 3\n    '''\n) == '1'\n\nassert solution(\n    '''\n    5\n    1 2 3 4 5\n    '''\n) == '1'\n\nassert solution(\n    '''\n    7\n    0 0 0 1 2 1 1\n    '''\n) == '3'\n\nassert solution(\n    '''\n    7\n    0 1 2 1 1 2 1\n    '''\n) == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"5\") == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nassert solution(\"10\\n2 2 2 3 3 2 3 2 1\") == \"3\"\nprint(solution(input()))\n",
        "num_ids_2": 33,
        "num_ids_4": 54
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n''') == '2'\nassert solution('''5\n2 2 2 2 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 2 3\\n\"\n) == \"1\"\n\nassert solution(\n    \"5\\n\"\n    \"2 2 2 3 3\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"100\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '5'\nassert solution('100') == '9'\nassert solution('1000') == '19'\nassert solution('10000') == '89'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"5\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"3\\n\") == \"1\"\nassert solution(\"10\\n\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n''') == '5'\nassert solution('''10\n''') == '5'\nassert solution('''2\n5\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10\n''') == '5'\nassert solution('''1\n''') == '0'\nassert solution('''15\n''') == '5'\nassert solution('''35\n''') == '5'\nassert solution('''99\n''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n''') == '5'\n\nassert solution('''1\n''') == '0'\n\nassert solution('''10\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"20\") == \"6\"\nassert solution(\"999\") == \"60\"\nassert solution(\"9999\") == \"60\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"319\") == \"119 226\"\nassert solution(\"686\") == \"22 334\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"0 1\"\nassert solution(\"2\") == \"0 1\"\nassert solution(\"3\") == \"0 1\"\nassert solution(\"7\") == \"1 1 1 1 1 1 1\"\nassert solution(\"10\") == \"0 1 1 1 1 1 1 1 1 1 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('686') == '22 334'\nassert solution('80') == '0 6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == '0 1'\nassert solution(\"15\\n5 5 5\\n5 5 5\") == '0 15'\nassert solution(\"319\\n10 53 256\\n182 103 34\") == '119 226'\nprint('all test cases passed!')\n\n\n\n\n\"\"\"\nimport math\n\nn = int(input())\na_1, a_2, a_3 = map(int, input().split())\nb_1, b_2, b_3 = map(int, input().split())",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"319\") == \"119 226\"\nassert solution(\"686\") == \"22 334\"\nassert solution(\"479 178 29\") == \"11 145 530\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n15\n5 5 5\n5 5 5\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n''') == '119 226'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0 1 1\n1 1 0\n\n0 1 1\n1 1 0\n\n2\n3 4 5\n10 20 30\n\n2 3 4\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 4\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n2 3 4\n10 20 30\n\n2 3 4\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n2 3 4\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n2 3 4\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n\n1 1 1\n1 1 1\n\n3 4 5\n10 20 30\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '119 226'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '0 1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"4 4\"\nprint(solution(\"7\\n4 1 2 2 1 5 3\"))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('4') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3'\nassert solution('1 1 1 1') == '1 1'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '1 2 3 4 5'",
        "num_ids_2": 20,
        "num_ids_4": 60
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '6'\nassert solution('11') == '4 4 4 4 4 4 4'\nassert solution('10') == '10 10 10 10'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 4 4 4 4 4'\nassert solution('-3 -2 -1 0 1 2 3 4 5') == '2 3 4 4 4 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 69
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"4\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('12') == '1 1 2 2 2'\nassert solution('18') == '1 1 2 2 2 3 3 3 3 3 3'\n",
        "num_ids_2": 25,
        "num_ids_4": 59
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n4 1 2 2 1 5 3''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2 4 4'\nassert solution('''7\n4 1 2 2 1 5 3''') == '3 7 7'\nassert solution('''4\n1 1 1 1''') == '4 4 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('4') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 57
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"7\") == \"7 7\"\nassert solution(\"11\") == \"3 4 4\"",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 3 -3 3 -1''') == '3 3'\nassert solution('''4\n1 2 3 4''') == '1 1 2 2'\nassert solution('''7\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '2 3 4 4 4 4'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\n\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == \"YES\"\nassert solution('3') == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n3 1 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n5 3 1 2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n3 1 2\n\"\"\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\nassert solution('3\\n3 1 2') == 'NO'\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('1\\n3 2') == 'YES'\n\"\"\"\nimport unittest\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n3 1 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n6\n3 5 2 4 1 6\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n3 5 2 4 1\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == 'YES'\n\nassert solution('''\n6\n1 2 3 4 5 6\n''') == 'NO'\n\nassert solution('''\n10\n10 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1\n''') == 'YES'\n\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1\n''') == 'NO'\n\nassert solution('''\n10\n10 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nabcdef\naccd\n\n''') == '-1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('4') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"5\"\nassert solution(\"11\") == \"0\"\nassert solution(\"12\") == \"0\"\nassert solution(\"19\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == \"4\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nassert solution() == \"3 5 4 5\"\nassert solution() == \"-1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 27
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '4'\nassert solution('4') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\nassert solution('''3\na\nc\n''') == 'PPS'\nassert solution('''2\na\nc\n''') == 'PS'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\na\nc\n''') == \"PS\"\nassert solution('''\n3\na\nc\n''') == \"PS\"\nassert solution('''\n2\na\nc\n''') == \"PS\"\nassert solution('''\n4\na\nc\na\n''') == \"PS\"\nassert solution('''\n4\na\nc\na\n''') == \"PS\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\nassert solution('''3\na\nc\n''') == 'PS'\nassert solution('''2\na\nc\n''') == 'PS'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n''') == 'SPPSPSPS'\nassert solution('''\n3\na\nc\n\n''') == 'PS'\nassert solution('''\n2\na\nc\n''') == 'PS'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == 'SPPSPSPS'\nassert solution('''\n2\na\nc\n\n2\na\nc\n''') == 'PS'\nassert solution('''\n3\na\nc\n\n2\na\nc\n''') == 'SPSP'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nba\\naa\\na\\nabab\\na\\naba\\nbaba\\nab\\na\\n\") == \"PSPS\"\nassert solution(\"3\\na\\nc\\n\") == \"PPS\"\nassert solution(\"2\\na\\n\") == \"PS\"\n",
        "num_ids_2": 55,
        "num_ids_4": 69
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\nassert solution('''\n3\na\nc\n''') == 'PS'\nassert solution('''\n2\na\nc\n''') == 'PS'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == \"SPPSPSPS\"\nassert solution('''3\na\naa\naa\na\n''') == \"PPSS\"\nassert solution('''2\na\nc\n''') == \"PS\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"PPS\"\nassert solution() == \"PS\"\nassert solution() == \"SPS\"\nassert solution() == \"SP\"\nassert solution() == \"SPS\"\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n6\\n8\\n10\\n') == '1'\nassert solution('4\\n4\\n6\\n8\\n10\\n') == '2'\nassert solution('6\\n4\\n4\\n6\\n8\\n10\\n') == '3'\nassert solution('8\\n4\\n4\\n6\\n8\\n10\\n') == '4'\nassert solution('10\\n4\\n4\\n6\\n8\\n10\\n') == '5'\n",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '3'\nassert solution(4) == '4'\nassert solution(5) == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 6 8 10\") == \"1\"\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''6 2 6 8 10''') == '0'\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"5 8 7\") == \"0\"\nassert solution(\"15 32 4 7\") == \"2\"\nassert solution(\"32 32 32 32 32\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 6 8 10') == \"1\"\nassert solution('1 4 6 8 10') == \"0\"\nassert solution('0') == \"1\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    2 4 6 8 10\n    ''') == '1', solution('''\n    2 4 6 8 10\n    ''')\n\nassert solution('''\n    2 3 9 10\n    ''') == '2', solution('''\n    2 3 9 10\n    ''')\n'''\n\nfrom functools import reduce\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('5 9 7 6 10') == '3'\n\"\"\"\n\na, b, c, d, e = [int(x) for x in stdin.split()]\nprint(max(a,b,c,d,e))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n15\n''') == '1'\nassert solution('''\n10\n7\n''') == '0'\nassert solution('''\n5\n10\n''') == '0'\n\nprint(solution('''\n2\n4\n6\n8\n10\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 4, 6, 8, 10]) == \"1\"\nassert solution([4, 6, 10, 8, 2]) == \"1\"\nassert solution([8, 2, 10, 6, 4]) == \"1\"\nassert solution([10, 8, 2, 6, 4]) == \"1\"\nassert solution([6, 4, 10, 2, 8]) == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 1 1 1''') == '0'\nassert solution('''5\n1 1 0 0 0''') == '0'\nassert solution('''4\n1 1 1 1''') == '1'\nassert solution('''5\n1 1 0 0 0''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\n\nassert solution('''\n4\n1 1 1 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n5\n1 1 1 1\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\nassert solution('''\n1\n0\n''') == '0'\nassert solution('''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(samples[0]) == '2'\nassert solution(samples[1]) == '0'\nassert solution(samples[2]) == '0'\nassert solution(samples[3]) == '0'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 1 1\n''') == '0'\n\nassert solution('''5\n1 1 1 1\n''') == '0'\n\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nassert solution('''6\n1 1 1 1 0 1\n''') == '1'\n\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1 0 1\n''') == '0'\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\nprint(solution('''\n5\n1 1 0 0 0\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"\nprint('Congratulations! Your solution is correct.')\n\nTime Complexity: O(n)\nSpace Complexity: O(n)\n'''\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n6\n6 90 12 18 30 18\n''') == '4'\nassert solution('''\n4\n6 9 5 6\n''') == '1'\nassert solution('''\n3\n8 8 8\n''') == '1'\nassert solution('''\n8\n1 1 1 1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 4 5\n''') == '1', f'This should be `1`, but it printed `{solution('')}` instead.'\nassert solution('''\n6 90 12 18 30 18\n''') == '4', f'This should be `4`, but it printed `{solution('')}` instead.'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\nassert solution('0') == '1'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n''') == '1\nassert solution('''\n2\n1\n''') == '1\nassert solution('''\n3\n1 2\n''') == '1\nassert solution('''\n4\n1 2 3\n''') == '1\nassert solution('''\n5\n1 2 3 4\n''') == '2\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '4'\n\nstdin = '6'\nprint(solution(stdin))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 2 4 3 3 2\n''') == '2'\nassert solution('''6\n1 2 4 3 3 2\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n100\n''') == '1'\nassert solution('''\n1\n50\n''') == '1'\nassert solution('''\n10\n
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2 4 3 3 2''') == '2'\nassert solution('''6\n1 2 4 3 3 2''') == '2'\nassert solution('''6\n1 2 4 1 2 1''') == '2'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 2''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n3\n2\n2\n''') == '1'\n\nassert solution('''2\n1 2\n3\n''') == '2'\n\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 2 4\n''') == \"1\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 10\\n0 0 1 1 0 1 0 0 0 1\") == \"2\"\nassert solution(\"5 6\\n1 0 0 0 1\") == \"-\"\n",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '-1'\nassert solution('5 10') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == \"3\"\nassert solution('''\n5 3\n0 0 0 0 0\n''') == \"2\"\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == \"3\"\nassert solution('''\n10 10\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n''') == \"0\"\nassert solution('''\n100000 3\n0 0 1 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 0 0 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 0 1 0 0 1 0 1 1 0 0 0 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 0 0 0 1 1 0 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 1 0 1 1 0 0 0 1 1 0 0 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 1 1 1 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 1 0 1 0 0 1 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 0 1 0 0 0 0",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 0 0 0 1\") == \"3\"\nassert solution(\"5 10\\n0 0 1 1 0 1 0 0 0 1\") == \"2\"\nassert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == '3'\nassert solution('5 3\\n1 0 0 0 1') == '2'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == '3'",
        "num_ids_2": 37,
        "num_ids_4": 60
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nassert solution('5 10') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"\nprint(\"OK\")\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nassert solution('6 1') == '-1'\nassert solution('10 10') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\\n\"\nassert solution(\"3\") == \"3\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '6'\nassert solution('3') == '9'\nassert solution('4') == '12'\nassert solution('5') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"1000000\") == \"744\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"2\"\n\n\"\"\"\n\nfrom sys import stdin",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n(((())\n''') == '3'\n\nassert solution('''\n(()\n''') == '0'\n\nassert solution('''\n((()))\n''') == '0'\n\nassert solution('''\n((()()(()\n''') == '4'\n\nassert solution('''\n(((((((())))))))))\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 3\nassert solution('''(((())\n\n''') == 0\nassert solution('''((()))\n\n''') == 1\nassert solution('''())()\n\n''') == 0\nassert solution('''(()\n\n''') == 1\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''(((()''') == ''\nassert solution('''((()))''') == '1'\nassert solution('''))(''') == '0'\nassert solution('''(((()())(''') == '0'\nassert solution('''))(()())(''') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('()') == ''\nassert solution('(()') == '()'\nassert solution('(()()())') == '()()()()'\nassert solution('(()())()') == '()()()()()'\n",
        "num_ids_2": 16,
        "num_ids_4": 43
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '(((()))'\n) == 3\n\nassert solution(\n    '((()))'\n) == 0\n\nassert solution(\n    '(()()()()((()))'\n) == 4\n\nassert solution(\n    '()()()(((()))'\n) == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(samples[0]) == solutions[0]\nassert solution(samples[1]) == solutions[1]\nassert solution(samples[2]) == solutions[2]\nassert solution(samples[3]) == solutions[3]\nassert solution(samples[4]) == solutions[4]\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''((()))''') == \"0\"\nassert solution('''((()))''') == \"1\"\nassert solution('''((()))''') == \"2\"\nassert solution('''((()))''') == \"3\"\nassert solution('''((()))''') == \"4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n(((()\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('(((()))') == '3'\nassert solution('(((())))') == '3'\nassert solution(')(((()))') == '0'\nassert solution('(((((())(())))))') == '4'\nassert solution('))(()))(((((((())()()())))))') == '6'",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"baaba\"\n) == 2\n\nassert solution(\n    \"bbaba\"\n) == 3\n\nassert solution(\n    \"abcde\"\n) == 0\n\nassert solution(\n    \"asdfasdf\"\n) == 3\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"abcde\") == 3\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nbbaba\nbb\n''') == 3\nassert solution('''\nbaaba\nab\n''') == 2\nassert solution('''\nabcde\nabcde\n''') == 0\nassert solution('''\nasdfasdf\nfasd\n''') == 3\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nassert solution('bbb') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\naabbcddddeeffgggh\nddgggg\n''') == 4\n\nassert solution('''\naabbccddddeeffgggh\nddgggg\n''') == 3\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 1505,
        "num_ids_4": 1505
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0\nassert solution(\"baaba\") == 3\nassert solution(\"bbaba\") == 3\nassert solution(\"abcde\") == 2\nassert solution(\"abcdeb\") == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"abcdefgh\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"5 4 3 2\") == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"10 10 10 10\") == \"20\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"10 10 10 10\") == \"20\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 0 1 1') == '0'\nassert solution('10 10 10 10') == '100'\nassert solution('-1 -1 -1 -1') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"0 0 0 0\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_stdin) == output_stdin\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == '2'\nassert solution(\"1 2 1 1\") == '2'\nassert solution(\"1 2 1 1\") == '2'\nassert solution(\"1 2 1 1\") == '2'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 1 1\n''') == '2'\nassert solution('''\n1 2 1 1\n''') == '2'\nassert solution('''\n2 2 1 1\n''') == '2'\nassert solution('''\n2 2 1 1\n''') == '2'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == \"2\"\nassert solution('1 1 3 3') == \"6\"\nassert solution('1 1 2 1') == \"2\"\nassert solution('1 1 1 1') == \"1\"\nassert solution('10 50 100 10') == \"200\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1') == \"2\"\nassert solution('4 4 1 2') == \"8\"\nassert solution('2 1 3 5') == \"4\"\nassert solution('10 10 1 2') == \"20\"\nassert solution('1 1 1 1') == \"1\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4 5') == '2'\nassert solution('3\\n1 2\\n4 5') == '3'\nassert solution('6\\n2 1\\n4 5') == '1'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 50
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\\n2 1 4\\n\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"9 1 4 4 6 7\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '2'\nassert solution('1') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '2'\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '1'\nassert solution('6') == '1'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2\n    9 1 4 4 6 7\n    \"\"\") == \"2\"\nassert solution(\n    \"\"\"\n    6\n    9 1 4 4 6 7\n    \"\"\") == \"2\"\nassert solution(\n    \"\"\"\n    3\n    9 1 4 4 6 7\n    \"\"\") == \"3\"\nassert solution(\n    \"\"\"\n    4\n    9 1 4 4 6 7\n    \"\"\") == \"3\"\nassert solution(\n    \"\"\"\n    5\n    9 1 4 4 6 7\n    \"\"\") == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n8\n2 1 4 4 6 7\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('10\\n9 1 4 4 6 7') == '4'\nassert solution('10\\n8 9 1 4 4 6 7') == '2'\nassert solution('10\\n9 9 1 4 4 6 7') == '3'\nassert solution('10\\n9 9 1 4 4 6 7') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2 3\") == \"2\"\nassert solution(\"4 1 2 3 4 5\") == \"4\"\nassert solution(\"4 1 2 3 4 5 6\") == \"4\"\nassert solution(\"4 5 3 2 1\") == \"4\"\nassert solution(\"4 6 7 3 2 1\") == \"4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input) == '3'\nassert solution(input_data) == '2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 24 21 23\"\n) == \"3\"\nassert solution(\n    \"10 0 0 0\"\n) == \"0\"\nassert solution(\n    \"2 10 0 0\"\n) == \"0\"\nassert solution(\n    \"1 10 2 3\"\n) == \"3\"\nassert solution(\n    \"10 15 0 0\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 20 21 23\n16 17 14 20 20 11 22''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"20 19 14 12\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\n\n--------------------------------------------------------------------------------------------------------------------------------------------------\n\nIn the previous example, we had a story of a growing area of Vova. There is a man who wants to find out, how many good times of Vova can she spend in the area. To do this, she needs to know when Vova is going to sleep in each time. The time is represented by an integer $t$.\n\nLet's assume that a person makes a good sleep schedule after $a_i$ hours. The person goes to sleep before $a_i - 1$ hours, which will give him a maximum of $h$ hours of sleep. Thus, he will sleep between $a_i - 1$ and $a_i$ hours. If he is going to sleep at $a_i$, then he can sleep between $t + a_i$ and $t + a_i + 1$ hours.\n\nThus, Vova can sleep in these intervals: $a_i + 1$, $a_i + 2$ and $a_i + 3$.\n\nVova is going to sleep between time $t + a_1$, so she can sleep between $t + a_1$ and $t + a_2$.\n\nVova is going to sleep between time $t + a_2$ and $t + a_3$, so she can sleep between $t + a_2$ and $t + a_3$ and $t + a_3 + 1$.\n\nVova is going to sleep between time $t + a_3$ and $t + a_4$, so she can sleep between $t + a_3$ and $t + a_4$.\n\nVova is going to sleep between time $t + a_4$ and $t + a_5$, so she can sleep between $t + a_4$ and $t + a_5$ and $t + a_5 + 1$.\n\nVova is going to sleep between time $t + a_5$ and $t + a_6$, so she can sleep between $t + a_5$ and $t + a_6$.\n\nVova is going to sleep between time $t + a_6$ and $t + a_7$, so she can sleep between $t + a_6$ and $t + a_7$.\n\nVova is going to sleep between time $t + a_7$ and $t + a_8$, so she can sleep between $t + a_7$ and $t + a_8$.\n\nVova is going to sleep between time $t + a_8$ and $t + a_9$, so she can sleep between $t + a_8$ and $t + a_9$ and $t + a_9 + 1$.\n\nVova is going to sleep between time $t + a_9$ and $t + a_10$, so she can sleep between $t + a_9$ and $t + a_10$ and $t + a_10 + 1$.\n\nVova is going to sleep after time $t + a_10$, so she can sleep after $t + a_10$ and $t + a_10 + 1$ hours.\n\nSo, to get the maximum number of good times, she needs to act optimally. Which means she should act in the following way:\n\n\nAt time $t$, she can choose to sleep at $a_1$, $a_2$ and $a_3$.\nAt time $t+a_1$ she can sleep after $a_1 + 1$ hours, so she can sleep after $t + a_1 + 1$ and $t + a_1 + 2$ hours.\nAt time $t+a_2$ she can sleep after $a_2 + 1$ hours, so she can sleep after $t + a_2 + 1$ and $t + a_2 + 2$ hours.\nAt time $t+a_3$ she can sleep after $a_3 + 1$ hours, so she can sleep after $t + a_3 + 1$ and $t + a_3 + 2$ hours.\n\nAt time $t+a_4$ she can sleep after $a_4 + 1$ hours, so she can sleep after $t + a_4 + 1$ and $t + a_4 + 2$ hours.\nAt time $t+a_5$ she can sleep after $a_5 + 1$ hours, so she can sleep after $t + a_5 + 1$ and $t + a_5 + 2$ hours.\nAt time $t+a_6$ she can sleep after $a_6 + 1$ hours, so she can sleep after $t + a_6 + 1$ and $t + a_6 + 2$ hours.\nAt time $t+a_7$ she can sleep after $a_7 + 1$ hours, so she can sleep after $t + a_7 + 1$ and $t + a_7 + 2$ hours.\nAt time $t+a_8$ she can sleep after $a_8 + 1$ hours, so she can sleep after $t + a_8 + 1$ and $t + a_8 + 2$ hours.\nAt time $t+a_9$ she can sleep after $a_9 + 1$ hours, so she can sleep after $t + a_9 + 1$ and $t + a_9 + 2$ hours.\nAt time $t+a_10$ she can sleep after $a_10 + 1$ hours, so she can sleep after $t + a_10 + 1$ and $t + a_10 + 2$ hours.\n\nAt time $t+a_11$ she can sleep after $a_11 + 1$ hours, so she can sleep after $t + a_11 + 1$ and $t + a_11 + 2$ hours.\nAt time $t+a_12$ she can sleep after $a_12 + 1$ hours, so she can sleep after $t + a_12 + 1$ and $t + a_12 + 2$ hours.\nAt time $t+a_13$ she can sleep",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == \"3\"\n\nassert solution('''\n7 24 21 23\n20 12 23 11 22\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n5\\n6 7 10 21 23 24 49') == '4'\nassert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '1'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'",
        "num_ids_2": 47,
        "num_ids_4": 82
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4\\n'\nassert solution('5\\n2 10 50 110 250\\n') == '1\\n'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3\\n'",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('6') == '3'\nprint('all tests passed')\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"3\"\nassert solution('6') == \"1\"\nassert solution('10') == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 10 50 110 250\\n\") == \"4\\n\"\nassert solution(\"5\\n4 7 12 100 150 199\\n\") == \"3\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n2 4 8 3 6\"\n    ) == \"1 2\"\nassert solution(\n    \"5\\n5 2 11 3 7\"\n    ) == \"2 4\"\nassert solution(\n    \"6\\n2 5 10 1 10 2\"\n    ) == \"1 4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 4'\nassert solution([2, 4, 8, 3, 6]) == '1 4'\nassert solution([5, 2, 11, 3, 7]) == '1 4'\n\nstdin = \"\"\"\n3\n3 9 5\n\"\"\"\nprint(solution(stdin.strip().splitlines()))\n",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 4\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 2'\nassert solution() == '2 4'\nassert solution() == '1 4'\n\"\"\"\nfrom math import lcm\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 4\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 8 3 6\") == \"1 2\"\nassert solution(\"6\\n5 2 11 3 7\") == \"2 4\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('5') == '1 2'\nassert solution('5') == '1 2'\nassert solution('3') == '1 2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('\\n'.join(['0', '1', '2'])) == '0120'\nassert solution('\\n'.join(['1', '2', '0'])) == '0110'\nassert solution('\\n'.join(['2', '0', '1'])) == '0112'\nassert solution('\\n'.join(['1', '2', '0'])) == '0110'\nassert solution('\\n'.join(['0', '1', '2'])) == '0120'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211220'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211202'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n121') == '021'\nassert solution('6\\n000000') == '001122'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"021\"\nassert solution(input()) == \"2112\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"10\") == \"1010\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"110101\") == \"110101\"\nassert solution(\"110102\") == \"110101\"\nassert solution(\"111111\") == \"110101\"\nassert solution(\"120111\") == \"110101\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('120110') == '120120'\n",
        "num_ids_2": 21,
        "num_ids_4": 35
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '3'\nassert solution('6 3') == '2'\nassert solution('6 4') == '1'\nassert solution('6 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '3'\nassert solution('6 3') == '2'\nassert solution('6 4') == '1'\nassert solution('6 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '4'\nassert solution('6 3') == '4'\nassert solution('6 4') == '4'\nassert solution('6 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'\nassert solution('10 20') == '97'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1\\n3') == '4'\nassert solution('6 1\\n3') == '4'\nassert solution('6 1\\n3') == '4'\nassert solution('6 1\\n3') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '4'\nassert solution('6 1') == '4'\nassert solution('6 0') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '0'\nassert solution('6 3') == '0'\nassert solution('6 4') == '0'\nassert solution('6 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([6, 1]) == \"4\"\nassert solution([6, 2]) == \"2\"\nassert solution([6, 3]) == \"0\"\nassert solution([6, 4]) == \"1\"\nassert solution([6, 5]) == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"6 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"3 4 5\") == \"3\"\nassert solution(\"5 7 8\") == \"4\"\nassert solution(\"9 8 7\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"4 2 4\") == \"4\"\nassert solution(\"3 0 0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"5 2 4\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 3 4') == '4'\nassert solution('-6 3 4') == '4'\nassert solution('-6 -3 4') == '-4'\nassert solution('-6 -3 -4') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2 4\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"2 5 8\") == \"5\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 4 -8\") == \"2\"\nassert solution(\"0 5 -8\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('-10 2 4') == '10'\nassert solution('-15 -10 4') == '2'\nassert solution('-20 -15 4') == '-2'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('12 3 5') == '0'\nassert solution('12 2 4') == '-1'\nassert solution('7 3 5') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('5 4 3') == '5'\nassert solution('-2 -1 0 1 2') == '-1'\nassert solution('-1 -1 -1 -1') == '0'\nassert solution('5 5 5 5') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 58
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('4 5 6') == '5'\nassert solution('3 2 3') == '3'\nassert solution('3 2 4') == '2'\nassert solution('3 2 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 2 4\") == \"0\"\nassert solution(\"1 10 4\") == \"0\"\nassert solution(\"1 -3 4\") == \"3\"\nassert solution(\"1 10 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\nassert solution('2128506') == '10'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == \"2\"\nassert solution('14') == \"0\"\nassert solution('61441') == \"2\"\nassert solution('571576') == \"10\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1123566') == '2'\nassert solution('581348') == '1'\nassert solution('147638') == '0'\nassert solution('61441') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''11\n\n14''') == \"2\"\nassert solution('''61441\n\n''') == \"0\"\nassert solution('''571576\n\n''') == \"10\"\nassert solution('''2128506\n\n''') == \"3\"\nassert solution('''100000000000000000\n\n''') == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 33
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('11235726') == '3'\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '2'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n\n''') == \"27\"\nassert solution('''\n7\n\n''') == \"210\"\nassert solution('''\n12\n\n''') == \"2712\"\nassert solution('''\n17\n\n''') == \"8517\"\nassert solution('''\n24\n\n''') == \"1224\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '27'\nassert solution('4') == '24'\nassert solution('5') == '125'\nassert solution('6') == '216'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"27\"\nassert solution(input()) == \"27\"\nassert solution(input()) == \"27\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '36'\nassert solution('7') == '49'\nassert solution('8') == '64'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '10'\nassert solution('10') == '10'\nassert solution('123') == '123'\nassert solution('123') == '123'\nassert solution('123') == '123'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n''') == '2'\nassert solution('''\n100\n''') == '7'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '4'\nassert solution('3') == '6'\nassert solution('5') == '15'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\nprint(solution(open(0).read()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\nimport sys\nprint(solution(sys.stdin.read()))",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"48\") == \"0\"\nassert solution(\"13\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '1'\nassert solution('100') == '0'\nassert solution('999') == '0'\nassert solution('123') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 3 1') == '4', \"Wrong answer\"\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 5 3 1') == '4'\nassert solution('4\\n3 3 1 1') == '1'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2\\n5\\n3\\n1\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 2 3') == '4'\n\nassert solution('5 5 3 3') == '5'\n\nassert solution('5 5 1 2') == '4'\n\nassert solution('5 5 2 3') == '5'\n\nassert solution('5 5 3 3') == '4'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 5 3 1\") == \"1\"\nassert solution(\"1 4 5 3 1\") == \"4\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution([\"1 2\", \"3 4\"]) == \"8\"\n\"\"\"\n\n\"\"\"\n------NON-REWRITING SOLUTION------\n\nSolution:",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 5 3 1') == '4', \"Wrong\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 5 3 1''') == '4'\nassert solution('''1 2 3''') == '0'\nassert solution('''1 2 1''') == '3'\nassert solution('''1 1 1''') == '3'\nassert solution('''1 1 1 1''') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\nassert solution(\"10 4 5 1\") == \"9\"\n\n\n-----Explanation-----\n\nThe array contains four elements (1,2,3,4), and we have to manipulate\none of them, i.e. 1.\n\nSay, what we want to manipulate? 1. In our array, we want to manipulate element 2.\n\nSo, our solution is to swap 1 and 2:",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\\n\") == \"2\\n8\\n1\"\nassert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\\n\") == \"1\\n1\\n1\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution('1\\n8 7') == '8'\nassert solution('1\\n999999733 999999732') == '1'\nassert solution('2\\n8 1') == '8'\nassert solution('3\\n8 1') == '1'\n\n\"\"\"\nimport sys\n",
        "num_ids_2": 22,
        "num_ids_4": 55
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''4\n10 10\n4 5\n2 2\n1 1\n''') == '1'\n\nassert solution('''3\n1 1\n1 1\n''') == '1'\nassert solution('''4\n1 5\n1 2\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999733\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input('7 9')) == '1'\nassert solution(input('10 1')) == '1'\nassert solution(input('8 1')) == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 5\n1 2\n2 4\n1 4\n2 1\n2 1\n3 1\n4 1\n2 1\n2 1\n2 1\n''') == '2'\nprint('The answer is:', solution('''\n6 5\n8 3\n1 2\n2 4\n3 4\n4 5\n5 3\n6 1\n6 1\n6 2\n7 1\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\"\nassert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999953 999999572\\n999999953 999999573\") == \"1\"\nassert solution(\"5\\n5 5\\n5 1\\n4 4\\n999999953 999999572\\n999999953 999999573\") == \"1\"\nassert solution(\"5\\n1 1\\n1 1\\n1 1\\n999999953 999999572\\n999999953 999999573\") == \"1\"\nassert solution(\"5\\n999999953 999999572\\n999999953 999999573\") == \"1\"\n",
        "num_ids_2": 78,
        "num_ids_4": 154
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"99999967\"\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 26
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n8 7\\n8 1') == '2'\nassert solution('2\\n6 10\\n999999999733 999999732') == '1'\nassert solution('3\\n6 10\\n99999999973 999999733') == '1'",
        "num_ids_2": 42,
        "num_ids_4": 66
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\", 'Sample Test 1'\nassert solution(\"10 10\") == \"7\", 'Sample Test 2'\nassert solution(\"10 10\") == \"7\", 'Sample Test 3'\n\n\"\"\"\n\n\nclass Solution:\n    def bulbSwitch(self, n: int, m: int, k: int) -> int:\n        return (m ** (1 / n)) * (k - 1) + 1\n\n\ns = Solution()\nprint(s.bulbSwitch(n=2, m=2, k=2))\nprint(s.bulbSwitch(n=10, m=10, k=5))\nprint(s.bulbSwitch(n=10, m=10, k=10))\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2\\n0 1') == '1'\nassert solution('2 3\\n2 1 2\\n0 1\\n1 2\\n2 3') == '2'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 4\") == \"8\"\nassert solution(\"10 3\") == \"12\"\n\n---\n-----Task-----\n\nYou are given a sorted array arr of unique integers. Sort the array into the smallest possible order (not necessarily in ascending order).\n\nReturn any permutation of the array that leads to a new sorted array.\n\n\n-----Examples-----\n\nExample 1:\n\nInput: arr = [1, 2, 3]\nOutput: [1, 3, 2]\n\nExample 2:\n\nInput: arr = [1, 1, 5]\nOutput: [1, 1, 5]\n\nExample 3:\n\nInput: arr = [3, 4, 1, 5]\nOutput: [3, 1, 4, 5]\n\nExample 4:\n\nInput: arr = [1, 3, 5, 4]\nOutput: [1, 4, 3, 5]\n\nExample 5:\n\nInput: arr = [1, 2, 3, 4]\nOutput: []\n\n\n-----Constraints-----\n\n[time limit] 5000ms\n\n[input] array.integer arr\n\n1 \\leq arr.length \\leq 10\n1 \\leq arr[i] \\leq 10^9\n[output] array.integer\n\n\n-----Explanation-----\n\nMerge Sort Algorithm:\n\nSort arr:\n\n[1, 2, 3]\n    [1, 2]\n            [1, 2, 3]\n    [1, 2, 3]\n    [1]\n            [1, 2, 3]\n            [1, 2]\n            [1, 2]\n            [1, 3]\n            [1]\n            [2, 3]\n            [2]\n            [2]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n            [3]\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''5 2\n2 1 2\n1 2\n0 1\n0 0\n0 1''') == '4'\nassert solution('''5 2\n2 1 2\n1 2\n0 1\n0 0\n0 1''') == '0'\nprint('All tests passed!')\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n0 1\\n\") == \"1\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\"\nassert solution(\"2 2\\n1 2\\n0 1\\n\") == \"0\"\n\nstdin = sys.stdin.read()\nprint(solution(stdin))\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 10 0''') == '5.0000000000'\nassert solution('''5 6 10 0''') == '5.812500000000'\nassert solution('''7 5 10 0''') == '8.1250000000000'\nassert solution('''7 6 10 0''') == '8.43750000000000'\nassert solution('''7 5 15 0''') == '8.87500000000000'\n",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2\") == \"1.000000000000\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4 9 0\n''') == '5.00000000000000000000'\nassert solution('''\n1 5 8 1\n''') == '1.5000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 9 0') == '5.0000000000'\nassert solution('10 5 5 0') == '5.0000000000'\nassert solution('10 6 0 0') == '5.0000000000'\nassert solution('10 6 0 1') == '5.0000000000'\nassert solution('5 1 1 0') == '5.0000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 9 0') == '5.0'\nassert solution('5 4 3 0') == '4.3333333333333'\nassert solution('3 4 3 0') == '3.0'\nassert solution('3 4 0 0') == '4.0'\nassert solution('3 0 0 0') == '3.0'\n\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('1 1 100') == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 9 0''') == \"5.00000000000000000000\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5.00000000000000000000\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4 9 0\n''') == \"5.0000000000\"\nassert solution('''\n-3 2 5 0\n''') == \"5.0000000000\"\nassert solution('''\n10 10 0 0\n''') == \"110.0000000000\"\nassert solution('''\n100 100 0 0\n''') == \"100.0000000000\"\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3 4 9 0\n''') == '5.0000000000000'\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\n\nstdin = input()\nassert len(stdin.split()) == 2\n\na, m = map(int, stdin.split())\na = list(map(int, stdin.split()))\n\nodd_array = []\neven_array = []\nfor i in range(len(a)):\n    if i % 2 == 0:\n        even_array.append(a[i])\n    else:\n        odd_array.append(a[i])\n\nodd_array.sort()\neven_array.sort()\nodd_array.reverse()\neven_array.reverse()\n\nindex = 0\ncount = 0\nwhile index < len(odd_array):\n    if odd_array[index] == m:\n        count += 1\n        index += 2\n    else:\n        index += 1\nwhile index < len(even_array):\n    if even_array[index] == m:\n        count += 1\n        index += 2\n    else:\n        index += 1\nprint(count)",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n') == '97'",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"8\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"15 2\") == \"97\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4 5 60 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == \"8\"\nassert solution('3 1\\n1 1 1\\n') == \"6\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '6'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\nassert solution('10 1') == '6'\nassert solution('2 2') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n3 2\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '4', f\"wtf? {solution('2 2')}\"\nassert solution('1 0') == '0', f\"wtf? {solution('1 0')}\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n3 5\n3 4\n2 4\n2 5\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\n\nassert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '7'\n\nassert solution('''\n1 0\n1000000\n\n''') == '0'\n\nassert solution('''\n2 2\n0 0\n2 2\n1 2\n\n''') == '0'\n\nassert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '6'\nassert solution('10 1') == '9'\nassert solution('10 10') == '0'\nassert solution('100 0') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 0\n1000000\n''') == '0'\nassert solution('''1 4\n2 4\n3 4\n2 4\n2 4\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nfced\\nxyz\\nr\\ndabcef\\naz\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('2\\nfced\\nxyz\\n') == 'Yes\\nNo\\n'\nassert solution('3\\nfced\\nxyz\\n') == 'No\\nYes\\n'\nassert solution('4\\nfced\\nxyz\\n') == 'Yes\\nNo\\nNo\\n'\nassert solution('4\\nfced\\nxyz\\n') == 'Yes\\nNo\\nNo\\n'\n",
        "num_ids_2": 76,
        "num_ids_4": 129
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"Yes\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == 'Yes'\nassert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(x) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\n\n'''",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\n\", \"Example test case\"\nassert solution(\"5\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\n\", \"Example test case\"\nassert solution(\"5\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\n\", \"Example test case\"\nassert solution(\"5\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\n\", \"Example test case\"\nassert solution(\"1\") == \"\", \"One string\"\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"3\\nabba\\nabab\\nabb\") == \"No\"\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"6\\n2\"\nassert solution(input + \"\\n\" + input + \"\\n\" + input) == \"7\\n3\\n2\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\nassert solution('5 4') == '7'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n'''\n) == '6'\nassert solution(\n    '''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n'''\n) == '7'\nassert solution(\n    '''\n1 0\n1000000\n\n'''\n) == '0'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''\n1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == str(6)\nassert solution() == str(7)\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('1000000') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\"\nassert solution(\"5 5\\n1 2 1 2 1\\n2 3\\n1 4\\n4 5\\n2 5\\n\") == \"7\\n2\\n3 2\"\n",
        "num_ids_2": 62,
        "num_ids_4": 105
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"\n1 0\n1000000\n\"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\n\nassert solution('''\n7\n1 3 5 6 7 4 2\n''') == '7'\n\nassert solution('''\n3\n1 2 3\n''') == '3'\n\nassert solution('''\n4\n1 2 4 3\n''') == '4'\n\nassert solution('''\n3\n1 2 3\n''') == 'LLL'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"3\") == \"LLL\"\nassert solution(\"4\") == \"LLRL\"\nassert solution(\"1 2 3\") == \"LLL\"\n\n\n\n\"\"\"\n\nimport collections\nimport itertools\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nassert solution(\"1 2 3\") == \"LLL\"\nassert solution(\"1 2 4 3\") == \"RLRR\"\nassert solution(\"1 2 4 3\") == \"RLRR\"\nassert solution(\"1 2 4 3\") == \"LLL\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"LLL\"\n\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution() == 'LLRL'\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == \"4\"\nassert solution('7') == \"7\"\nassert solution('3') == \"LLL\"\nassert solution('4') == \"LLRL\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(0).read()) in [1, 4, 2]\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 5 3 4\n\n''') == '4'\nassert solution('''\n2\n1 2\n\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"4\\n1 2 3 4\") == \"4\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == stdout_\nprint(solution(input_))\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''2\n1 2\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n''') == '4', \"First\"\nassert solution('''\n2\n1 2\n''') == '2', \"Second\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5\\n1 2 5 3 4\\n\"\n) == \"4\"\nassert solution(\n    \"7\\n6 5 4 3 2 4 3\\n\"\n) == \"2\"\nassert solution(\n    \"10\\n1 2 3 4 5 6 7 8 9 10\\n\"\n) == \"10\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"7\\n6 5 4 3 2 4 3\"\n) == \"2\"\nassert solution(\n    \"2\\n1 2\"\n) == \"1\"\nassert solution(\n    \"10\\n1 2 3 4 5 6 7 8 9 10\"\n) == \"9\"\nassert solution(\n    \"10\\n2 3 5 7 8 9 10 11 12\"\n) == \"10\"\nassert solution(\n    \"5\\n1 2 3 4 5\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 2 5 3 4\n''') == '4'\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"1\"\n\nassert solution(\"5 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 2 2 4 5\"\n) == \"1\"\n\nassert solution(\n    \"5 3\\n\"\n    \"1 2 3 4 5\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 4 5''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n\") == \"1\"\nassert solution(\"5 3\\n\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(inp) == out\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n') == '1'\nassert solution('5 3\\n') == '1'\nassert solution('5 3\\n') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 4\") == \"4\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"7 4 4\") == \"4\"\nassert solution(\"2 5 5\") == \"1\"\nassert solution(\"6 7 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"10 5 4\") == \"5\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"9 3 3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 3 4\n5 5 5 5 5 5 5 5''') == '3'\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 4 5') == '5'\nassert solution('2 2 2') == '1'\nassert solution('1') == '1'\nassert solution('1 2 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n8 3 4\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"7 3 4\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"9 9 9\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('10 6 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n8 3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 10 4\n\"\"\") == \"12\"\n\"\"\"\nInput is given from STDIN in the following format:\nN A B\n\nInput is handled and passed to the solution function as follows:\nsolution(str(line))\n\nThis function is expected to return an integer. The function body is expected to be implemented in the following manner:\n\ninitialize an array of size N + 1 to contain only zeroes.\nconvert the input to an integer to obtain the size of the array.\ninitialize the count to be 0.\nusing a for loop, iterate through each integer in the input.\ncheck if the current number of elements in the array, is the same as the size of the input.\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 0 1') == '1'\n\"\"\"\n\nfrom math import factorial\n\nstdin = input().split()\nN = int(stdin[0])\nA = int(stdin[1])\nB = int(stdin[2])\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3\\n1\\n2') == '4'\nassert solution('8\\n8 2 12 6 4 24 16 3\\n2\\n') == '-1'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    2 4 9 6 3\n    1\n    ''') == '48'\nassert solution('''\n    7\n    1 2 5 8 13 14\n    ''') == '13'\nassert solution('''\n    2\n    2 3\n    ''') == '1'\nassert solution('''\n    3\n    6 3\n    ''') == '3'\nassert solution('''\n    10\n    5 2 3 7 11 13 17 19\n    4\n    ''') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n8 2 12 6 4 24 16 3\n1\n2\n\"\"\") == \"4\", \"Should be 4\"\n\nassert solution(\"\"\"\n5\n4 2 7 5 9 6\n3\n2 3 9\n\"\"\") == \"7\", \"Should be 7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == \"48\"\n\nassert solution('''\n2\n3\n1 2 3\n4\n5\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"48\"\nassert solution(\"1\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '48', 'First'\nassert solution('1') == '-1', 'Second'\nassert solution('2') == '4', 'Third'\n\nstdin = input()\nn = int(input())\nd = list(map(int, input().split()))\nprint(solution(stdin))\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '-1'\nassert solution('2') == '4'\nassert solution('6') == '36'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n8\n8 2 12 6 4 24 16 3\n\"\"\") == \"48\", \"First\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\", \"Second\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '6'\nassert solution('1') == '2'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '3\\n5 6 1\\n', \"test 1 failed\"\nassert solution(sys.stdin.read()) == '2\\n2 4\\n', \"test 2 failed\"\nassert solution(sys.stdin.read()) == '1\\n6\\n', \"test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 78
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n5 6 1\"\nassert solution(input()) == \"2\\n2 4 \nassert solution(input()) == \"1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"5\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"5\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3\\n5 6 1'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2\\n2 4'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1\\n6'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 4 2 4 4\n''') == '2 4'\n\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\n\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\n\nassert solution('''\n5\n1 2 2 2 2\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n6 6 6 6 6') == '1\\n6'\nassert solution('5\\n7 7 7 7 7') == '1\\n7'\nassert solution('5\\n8 8 8 8 8') == '1\\n8'\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"6\\n5 6 1\\n\"\nassert solution(\"6\") == \"3\\n6 6 1\\n\"\nassert solution(\"5\") == \"2\\n5 6 1\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n7''') == '5'\nassert solution('''25\n26''') == '26'\nassert solution('''36\n37''') == '37'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('20') == '22'\nassert solution('1000') == '1002'\nassert solution('1500') == '1501'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '435'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('42') == '44'\nassert solution('99') == '103'\nassert solution('432') == '435'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"aac\"\n\nassert solution(\"\"\"\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"aba\"\n\nassert solution(\"\"\"\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"\"\n\nassert solution(\"\"\"\nabac\n3\n2 1 0\nabc\n1\n0\na\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"aac\"\n\nassert solution(\"\"\"\nabac\n3\n2 1 0\nabc\n1\n0\nba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"ba\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == \"aac\"\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == \"aba\"\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == \"c\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"abc\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"abc\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\na\n1\n0\n''') == \"a\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"input.txt\") == \"output.txt\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'aba'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'ab'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0''') == 'ab'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\naac\naab\nabc\n\"\"\") == \"aac\"\nassert solution(\n\"\"\"\naba\n\"\"\") == \"aba\"\nassert solution(\n\"\"\"\naba\n\"\"\") == \"\"\nassert solution(\n\"\"\"\nabc\n\"\"\") == \"abc\"\nassert solution(\n\"\"\"\naba\n\"\"\") == \"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nabac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\\n\") == \"aac\"\nassert solution(\"3\\nabac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\\n\") == \"a\"\nassert solution(\"10\\n38 13 24 14 11 5 3 24 17 0\\n\") == \"ecoosdcefr\"\n",
        "num_ids_2": 133,
        "num_ids_4": 161
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"aac\"\nassert solution(\"\"\"\na\n2\n1 1\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"a\"\nassert solution(\"\"\"\na\n2\n1 1\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"b\"\nassert solution(\"\"\"\na\n2\n1 1\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"b\"\nassert solution(\"\"\"\na\n2\n1 1\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"c\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28\n\n29\n\n30\n\n31\n\n32\n\n33\n\n34\n\n35\n\n36\n\n37\n\n38\n\n39\n\n40\n\n41\n\n42\n\n43\n\n44\n\n45\n\n46\n\n47\n\n48\n\n49\n\n50\n\n51\n\n52\n\n53\n\n54\n\n55\n\n56\n\n57\n\n58\n\n59\n\n60\n\n61\n\n62\n\n63\n\n64\n\n65\n\n66\n\n67\n\n68\n\n69\n\n70\n\n71\n\n72\n\n73\n\n74\n\n75\n\n76\n\n77\n\n78\n\n79\n\n80\n\n81\n\n82\n\n83\n\n84\n\n85\n\n86\n\n87\n\n88\n\n89\n\n90\n\n91\n\n92\n\n93\n\n94\n\n95\n\n96\n\n97\n\n98\n\n99\n\n100''') == 'b'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"a\"\nassert solution() == \"a\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'b'\nassert solution('3') == 'bb'\nassert solution('4') == 'bbb'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''2\n0''') == 'a'\nassert solution(\n'''3\n4''') == 'a'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"a\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'a'\nassert solution('3') == 'a'\nassert solution('4') == 'a'\nassert solution('5') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'b'\nprint('\"solution()\" is ok')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"bb\"\nassert solution(\"5\") == \"zzz\"\nassert solution(\"100\") == \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
        "num_ids_2": 20,
        "num_ids_4": 1578
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '12'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\", \"Empty test\"\nassert solution(\"to be or not to be\") == \"12\", \"Simple test\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\", \"Simple test\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\", \"Simple test\"\n",
        "num_ids_2": 31,
        "num_ids_4": 78
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nto be or not to be\n''') == '12'\nassert solution('''\naa bb aa aa bb bb\n''') == '11'\nassert solution('''\nAB aa AB bb\n''') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"6\\n\") == \"6\"\nassert solution(\"10\\n\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"10\") == \"13\"\nassert solution(\"6\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '12'\n\nassert solution('1') == '1'\n\nassert solution('10') == '11'\n\nassert solution('6') == '13'\n\nassert solution('10') == '10'",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''to be or not to be''') == '12'\nassert solution('''aa bb aa aa bb bb''') == '13'\nassert solution('''aa ab aa ab bb ab aa ab aa bb aa''') == '11'\n",
        "num_ids_2": 41,
        "num_ids_4": 70
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\\na ab a a b ab a a b c\") == \"12\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''5 1\n1 2000 2000 2''') == '4000'\nassert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nprint('all tests passed')\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1 2\"\nassert solution(\"8 3\") == \"20\"\nassert solution(\"5 1\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '1'\nassert solution('4 2') == '2'\nassert solution('3 2') == '3'\nassert solution('5 1') == '4'\nassert solution('3 1') == '3'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '20'\nassert solution(input_) == '3 2 3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\nassert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1\n1 1 1 1 1''') == '1'\n\nassert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\n\nassert solution('''5 1\n1 1 1 1 1''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''\n5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n4 2\n1 2000 2000 2\n''') == '4000'\nassert solution('''\n8 3\n1 1 1 1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1\n1 1 1 1 1''') == '1'\n\nassert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution('5') == '0'\nassert solution('10') == '0'\nassert solution('8') == '3'\nassert solution('16') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4 -2 3 2\n''') == '1'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('5 -2 3 -9 2') == '0'\nassert solution('9') == '6'\nassert solution('8') == '3'",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('4 -2 3 2') == '0'\nassert solution('5 -2 3 -9 2') == '0'\nassert solution('9') == '6'\nassert solution('8') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '1'\n\nInput\n10\n-5 3 4 -9 5 -2 -3 4 -1 -5 5 -1\n\nOutput\n3\n\nInput\n9\n-1 1 -1 1 -1 1 1 -1 -1\n\nOutput\n1\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 -5 3 2\n''') == '1'\n\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('9') == '6'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n\n''') == '0\nassert solution('''\n4\n4 10\n3 6\n5 4\n1 2\n''') == '2\nassert solution('''\n5\n5 100\n3 5\n2 5\n0 5\n1 4\n\n''') == '10\nassert solution('''\n7\n2 4\n0 1\n2 3\n0 4\n1 2\n2 3\n3 4\n''') == '5\nassert solution('''\n5\n5 100\n3 5\n2 5\n1 4\n2 3\n3 4\n''') == '10\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n2\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"1 100\") == \"0\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"2 1000000000\") == \"2000000000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10\nassert solution('''2\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2\nassert solution('''3\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n5\n5\n1\n1\n''') == '0'\nassert solution('''\n2\n5\n5\n1\n1\n''') == '2'\nassert solution('''\n3\n10\n10\n1\n1\n''') == '10'\nassert solution('''\n1\n1000000000\n1000000000\n1000000000\n1000000000\n''') == '2000000000'\nassert solution('''\n5\n5\n5\n2\n2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n5\\n2\\n100') == '0'\nassert solution('1\\n100\\n1\\n0') == '2'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n\") == \"0\"\nassert solution(\"3\\n7\\n\") == \"10\"\nassert solution(\"2\\n5\\n\") == \"2\"\nassert solution(\"5\\n8\\n\") == \"10\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n10\n1000000000 1000000000\n2000000000\n''') == '2'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n3\n5\n2\n100\n2000000000\n1000000000 1000000000''') == '0\nassert solution('''1\n5\n2\n100\n2000000000\n1000000000 1000000000''') == '2'\nassert solution('''5\n3\n5\n2\n100\n2000000000\n1000000000 1000000000''') == '10'\nassert solution('''5\n3\n5\n2\n100\n2000000000\n1000000000 1000000000''') == '8'\nassert solution('''5\n3\n5\n2\n100\n2000000000\n1000000000 1000000000''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"-1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"9\"\nassert solution(\"99\") == \"98\"\nassert solution(\"111\") == \"110\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"1\"\nassert solution('101') == \"4\"\nassert solution('1') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"4\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '4'\nassert solution('100') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('101') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''101''') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('101') == '4'\nassert solution('111') == 'None'\nassert solution('12') == 'None'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"11\") == \"None\"\nassert solution(\"101\") == \"4\"\nassert solution(\"11\") == \"None\"\nassert solution(\"101\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\", \"Test 1: Empty\"\nassert solution(\"101\") == \"4\", \"Test 2: Single\"\nassert solution(\"101001\") == \"3\", \"Test 3: Double\"\nassert solution(\"1010101\") == \"4\", \"Test 4: Triple\"\nassert solution(\"101101101\") == \"4\", \"Test 5: Multiple\"\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\nassert solution('10 10') == '1'\n\nstdin = input()\n\nn, m = list(map(int, stdin.split()))\n\np = list(map(int, input().split()))",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9''') == '48'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 4\\n2 4 5 3 1\"\n    ) == \"4\"\n\nassert solution(\n    \"5 5\\n1 2 3 4 5\"\n    ) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 8'\n    '2 3 1 1 2'\n    ) == '4'\n\nassert solution(\n    '5 16'\n    '5 5 5 5 5'\n    ) == '2'\n\nassert solution(\n    '5 26'\n    '5 5 5 5 5'\n    ) == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''5 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 16\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5\\n2 3 1 1 2') == '4'\nassert solution('1 7\\n1 3 1 1 2') == '-1'\nassert solution('5 6\\n1 3 1 1 2') == '2'\n",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 16\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''5 31\n1 2 4 5 6 3 6 7 5 8 9 10 10 8 7 6 5 4 3 2 1 1 2 3\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4', f\"First\"\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2', f\"Second\"\nassert solution('''5 16\n5 5 5 5 5\n''') == '1', f\"Third\"\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1', f\"Fourth\"\nassert solution('''5 36\n5 5 5 5 5\n''') == '2', f\"Fifth\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''5 27\n5 5 5 5 5\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n24 21 14 10\n''') == \"3\"\n\nassert solution('''\n2\n500 500\n''') == \"0\"\n\nassert solution('''\n3\n14 5 1\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"4\\n4 5 1\") == \"1\"\nassert solution(\"5\\n0 0 1\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n\nassert solution('6') == '-1'\nassert solution('7') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n24 21 14 10') == '3'\nassert solution('2\\n500 500') == '0'\nassert solution('3\\n1 3 6 9 12') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '0'\nassert solution('3') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n24 21 14 10\\n\") == \"3\\n\"\n\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\\n\"\n\nassert solution(\"3\\n14 5 1\\n\") == \"-1\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 3 6 9 12''') == \"1\"\nassert solution('''4\n24 21 14 10''') == \"3\"\nassert solution('''3\n14 5 1''') == \"-1\"\nassert solution('''5\n1 3 6 9 12''') == \"1\"\nassert solution('''2\n500 500''') == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n24 21 14 10') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1') == '-1'\nassert solution('5\\n1 3 6 9 12') == '1'",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\"\nassert solution(\"3\\n14 5 1\") == \"0\"\nassert solution(\"5\\n1 3 6 9 12\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\nassert solution(\"10 10 100 1000\") == '2'\nassert solution(\"5 2\") == '5'\nassert solution(\"3 3\") == '3'\nassert solution(\"1 2 3 4 5\") == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '5'\nassert solution('36 4 1 25 9 16') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5') == '4'\nassert solution('1 2 3 4 5 6') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '4'\nassert solution('1 2 3 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"6\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"4 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"1 10 100 1000\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '8'\nassert solution(input) == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"4 5 6\\n5 5 4 7\") == \"7\"\nassert solution(\"6 7\\n5 5 4 7\") == \"8\"\nassert solution(\"100 100 1\") == \"1\"\nassert solution(\"100 100 -1\") == \"-1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 65
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"3 4 5\\n3 4 5\") == \"0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\") == \"8\", \"Should return 8\"\nassert solution(\"10 10 7\") == \"8\", \"Should return 8\"\nassert solution(\"5 10 7\") == \"-1\", \"Should return -1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\") == '8'\nassert solution(\"5 10 5 6\") == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 1 2 3 4') == '-1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('1 1 1\\n0 0 0') == '0'\nassert solution('2 3 4\\n4 3 2 1') == '-1'",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\") == \"10\"\nassert solution(\"5 10 7\\n8 10 3 6\") == \"7\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n3') == 'No'\nassert solution('6 3 4\\n3') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n\nassert solution('''6 3 4\n3\n1\n3\n2\n\n''') == 'Yes\\nYes\\nYes\\nNo\\nNo\\nNo'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 4') == 'No\\nYes\\nNo\\nNo\\nYes'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'No\\nNo\\nYes\\nYes\\nYes\\nYes\\n'\nassert solution(input(\"\")) == 'No\\nNo\\nYes\\nYes\\nYes\\nYes\\n'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == ['Yes', 'No', 'Yes', 'No', 'Yes', 'No', 'No']\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('1 2 3 4') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes'\nassert solution('2 2 4 5') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes'\nassert solution('2 2 5 6 7') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes'",
        "num_ids_2": 55,
        "num_ids_4": 112
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\") == \"No\"\nassert solution(\"6 3 4\\n1\\n1\\n2\\n2\") == \"Yes\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\") == \"No\"\nassert solution(\"6 3 4\\n2\\n1\\n3\\n2\") == \"No\"\nassert solution(\"6 3 4\\n2\\n1\\n3\\n4\") == \"Yes\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == [\"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"No\"]\nassert solution(input()) == [\"No\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"Yes\", \"Yes\"]",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\n\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == \"YES\"\nassert solution('3 4') == \"YES\"\nassert solution('0 0 0 1') == \"YES\"\nassert solution('1 0 1 0') == \"YES\"\nassert solution('1 1 1 1') == \"NO\"\n\nstdin = \"\"\"\n3 3\n0 0 0\n1 0 1\n1 1 0\n\"\"\"\nprint(solution(stdin))\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == \"YES\"\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == \"YES\"\nassert solution('3 3\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == \"NO\"\nassert solution('6 6\\n0 0 0 0 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n') == \"NO\"",
        "num_ids_2": 52,
        "num_ids_4": 139
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'YES'\nassert solution('''3 3\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'NO'\nassert solution('''4 4\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n\n''') == 'NO'\nassert solution('''1 2\n0 0\n1 1\n\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('3 3') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''\n4 4\n0 0 0 0\n1 0 1 0\n1 1 0 1\n1 1 1 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''\n5 5\n0 0 0 1 2\n0 0 0 0 0\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\nassert solution('''\n5 5\n0 0 0 1 2\n0 0 0 0 0\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('3 3') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"4 6\") == \"NO\"\nassert solution(\"4 5\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('373') == 'Yes', 'Sample Test 1 Failed'\nassert solution('121') == 'No', 'Sample Test 2 Failed'\nassert solution('436') == 'Yes', 'Sample Test 3 Failed'\nassert solution('1') == 'Yes', 'Sample Test 4 Failed'\nassert solution('21') == 'No', 'Sample Test 5 Failed'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'Yes', \"base case\"\nassert solution('123') == 'Yes', \"single digit\"\nassert solution('112') == 'No', \"single digit\"\nassert solution('1324') == 'Yes', \"non-decimal\"\nassert solution('12') == 'Yes', \"non-decimal\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123') == 'Yes'\nassert solution('124') == 'No'\nassert solution('125') == 'Yes'\nassert solution('125') == 'No'\nassert solution('124') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\",\n    ) == \"Yes\", \"Should be Yes\"\n\nassert solution(\n    \"1 2\",\n    ) == \"No\", \"Should be No\"\n\nassert solution(\n    \"1 1 1\",\n    ) == \"Yes\", \"Should be Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n123\n''') == 'Yes'\nassert solution('''\n20\n''') == 'Yes'\n'''\n\n\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"Yes\"\n\nprint(solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"948\") == \"Yes\"\nassert solution(\"321\") == \"No\"\nassert solution(\"0\") == \"No\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n123\n''') == \"No\"\n\nassert solution('''\n644\n''') == \"Yes\"\n\nassert solution('''\n424\n''') == \"No\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'Yes'\nassert solution(input) == 'No'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\n'''\n\n\nimport sys\nimport os\nfrom collections import deque\nfrom functools import lru_cache\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\n\n'''\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n\n''') == '3'\nassert solution('''6 2 1\n1 0 0 1 0 1\n\n''') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\nassert solution('1 0 0 1 0 1') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\\n1 0 0 1 0 1\\n\") == \"5\"\n\nassert solution(\"6 2 1\\n0 0 0 1 0 1\\n\") == \"3\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 2 1\n1 0 0 1 0 1''') == \"3\"\nassert solution('''\n5 2 1\n0 1 0 1 0''') == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nprint('It works! Nice job!')\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nassert solution('''112-37''') == '375'\n",
        "num_ids_2": 45,
        "num_ids_4": 60
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2+2') == '4'\nassert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('112-37') == '375'\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\nstdin = '8-7+6-5+4-3+2-1-0'\nresult = solution(stdin)\nprint(result)",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"42\"\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4', \"You Failed, YEAAH!!\"\nassert solution('''2+2''') == '-46', \"You Failed, YEAAH!!\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nprint(solution(input()))\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"YES\", \"First\"\nassert solution(\"5 3\") == \"NO\", \"Second\"\nassert solution(\"4 3\") == \"YES\", \"Third\"\nassert solution(\"10 4\") == \"YES\", \"Fourth\"\n\nimport aoc\n\npuzzle = aoc.read_input(5, data_type=str)\n\nsolution = puzzle.solution(solution)",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"YES\\n1 1\\n3 3\"\nassert solution(\"5 5\") == \"YES\\n1 1\\n2 3\\n3 2\\n4 4\\n5 5\"\nassert solution(\"10 10\") == \"YES\\n1 1\\n2 3\\n3 4\\n4 5\\n5 3\\n3 4\\n4 2\\n4 1\\n3 1\"",
        "num_ids_2": 50,
        "num_ids_4": 97
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"YES\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"5 1\") == \"YES\"\nassert solution(\"6 1\") == \"NO\"\nassert solution(\"4 5\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\n\n'''\n\nn,k = map(int,input().split())\nprint('YES' if n*k == 2*n else 'NO')\nfor i in range(n):\n    b,g = map(int,input().split())\n    if g==b:\n        continue\n    elif (b-1) == g or (g-1) == b:\n        continue\n    elif b == g:\n        continue\n    elif (b-1)!= (g-1):\n        print('NO')\n        break\n    print(b,g)\nelse:\n    print('YES')\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('10 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n2 2') == 'YES\\n1 1\\n1 2'\nassert solution('10 4\\n2 1') == 'YES\\n2 1\\n3 4\\n4 3'\nassert solution('13 4\\n4 1') == 'NO'\n",
        "num_ids_2": 50,
        "num_ids_4": 65
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"18\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2\") == \"4\"\nassert solution(\"1 2 2\") == \"4\"\nassert solution(\"5 4 3\") == \"5\"\nassert solution(\"5 5 4\") == \"5\"\nassert solution(\"6 5 5\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n') == '3\\n'\nassert solution('4 2 1\\n') == '1\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2 2\n1 2\n''') == '-1'\n\nassert solution('''\n3 3\n1 2 5\n''') == '6'\n\nassert solution('''\n10 10\n1 2 3 4 5 6 7 8 9 10\n''') == '16'\n\nassert solution('''\n5 4\n1 5 3 4 1\n''') == '18'\n\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n\n''') == '18', 'easy'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n\n''') == '100', 'easy'\nassert solution('''\n4 3 1\n1 100 1 1\n\n''') == '100', 'hard'\nassert solution('''\n5 2 1\n1 2 3 5 1\n\n''') == '4', 'hard'\nassert solution('''\n1 2 3\n1 1 1 1\n\n''') == '2', 'hard'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\nassert solution('4 3 1') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1 1') == '100'\nassert solution('5 1 3') == '18'\nassert solution('6 1 5') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1 2\n5 1 3 10 1\n''') == '18'\nassert solution('''\n5 1 2\n5 1 3 10 1\n''') == '100'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 1 5\n10 30 30 70 10 10\n\"\"\") == \"-1\", \"Easy\"\nassert solution(\"\"\"\n5 2 3\n5 1 3 10 1\n\"\"\") == \"18\", \"Easy\"\nassert solution(\"\"\"\n6 1 5\n10 30 30 70 10 10\n\"\"\") == \"100\", \"Medium\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 2\"\n) == \"3\"\n\nassert solution(\n    \"6 1\"\n) == \"4\"\n\nassert solution(\n    \"4 1\"\n) == \"4\"\n\nassert solution(\n    \"12 6\"\n) == \"15\"\n\nassert solution(\n    \"12345678910\"\n) == \"39665852\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'\nassert solution('10 6') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n00100\n\n''') == '3'\n\nassert solution('''\n6 1\n000000\n\n''') == '4'\n\nassert solution('''\n12 1\n000010000100\n\n''') == '15'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"00100\\n\"\n    ) == \"3\\n\"\nassert solution(\n    \"6 1\\n\"\n    \"000000\\n\"\n    ) == \"4\\n\"\nassert solution(\n    \"4 1\\n\"\n    \"0011\\n\"\n    ) == \"4\\n\"\nassert solution(\n    \"12 6\\n\"\n    \"000010000100\\n\"\n    ) == \"15\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'\nassert solution('12 1') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"15\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '4'\nassert solution('12 6\\n000010000100') == '15'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == str(output_string)\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('aapple') == 'azzel'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('a') == 'Yes'\nassert solution('aa') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('abcd') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'apple'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"x\\ny\\nz\") == \"No\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('hello') == 'hello'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\", \"First\"\nassert solution(\"apple\") == \"Yes\", \"Second\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"azzel\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"8 7 5\") == \"17\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5 1\\n2 2 1\\n3 3 1\\n2 2 2\\n3 2 2\\n3 3 2\\n1 2 2\\n4 4') == '3'\nassert solution('8 10 3\\n3 5 2\\n3 5 2\\n3 2 2\\n3 2 3\\n2 3 3\\n3 4 4\\n2 4 5\\n3 2 4\\n2 5 5\\n1 2 5\\n2 4 5\\n3 4 4\\n2 4 2\\n3 4 3\\n2 5 3\\n3 2 2\\n2 4 3\\n3 2 3\\n3 4 2\\n4 5 2\\n1 2 4\\n3 1 5\\n1 3 4\\n2 5 5\\n2 5 2\\n2 5 2\\n1 3 5\\n2 4 2\\n2 5 2\\n3 1 4\\n1 3 3\\n2 1 4\\n3 3 4\\n1 3 2\\n2 3 2\\n3 2 4\\n3 2 4\\n2 4 3\\n3 1 5\\n2 2 5\\n3 2 2\\n2 1 4\\n3 2 3\\n2 2 5\\n2 4 3\\n2 1 4\\n3 2 4\\n2 2 4\\n2 2 3\\n2 1 2\\n2 5 4\\n2 2 4\\n2 5 4\\n1 5 2\\n2 3 3\\n1 2 2\\n2 3 3\\n3 3 2\\n2 3 2\\n3 1 5\\n1 2 3\\n2 5 3\\n2 4 2\\n2 5 2\\n2 4 2\\n2 5 4\\n3 3 3\\n1 5 2\\n2 4 2\\n2 4 3\\n3 2 3\\n2 2 4\\n3 1 4\\n1 4 5\\n1 5 3\\n2 3 3\\n3 5 3\\n3 4 2\\n1 3 3\\n2 1 5\\n2 5 3\\n2 4 2\\n1 1 4\\n2 5 3\\n2 1 4\\n1 3 3\\n1 1 2\\n1 1 5\\n1 2 3\\n2 3 3\\n3 2 3\\n3 4 3\\n3 2 2\\n2 5 2\\n1 4 3\\n1 3 3\\n1 3 2\\n1 3 2\\n1 3 4\\n1 3 2\\n1 3 4\\n1 3 5\\n1 5 1\\n2 2 1\\n1 4 5\\n1 5 3\\n1 2 1\\n2 2 5\\n2 5 5\\n3 3 5\\n2 2 3\\n3 3 1\\n2 3 4\\n3 4 4\\n3 4 4\\n2 4 2\\n3 3 2\\n1 2 3\\n2 1 3\\n2 5 1\\n2 5 3\\n3 2 5\\n2 4 3\\n2 3 5\\n2 1 4\\n2 5 3\\n2 1 4\\n2 3 3\\n3 4 3\\n2 5 2\\n2 4 3\\n2 4 4\\n2 4 4\\n1 3 1\\n1 4 5\\n2 5 2\\n2 4 4\\n3 4 4\\n1 2 2\\n1 3 5\\n1 3 2\\n2 2 5\\n1 4 4\\n2 2 3\\n1 2 5\\n1 1 4\\n2 1 5\\n1 2 5\\n2 1 4\\n2 1 4\\n2 5 2\\n2 5 2\\n3 3 3\\n3 5 4\\n2 2 2\\n1 3 4\\n3 5 3\\n2 5 3\\n1 4 5\\n2 4 3\\n2 4 5\\n2 4 5\\n1 2 5\\n2 2 4\\n2 5 3\\n2 4 4\\n1 4 5\\n1 3 5\\n2 2 4\\n2 5 4\\n1 4 2\\n1 5 4\\n1 5 3\\n2 4 5\\n3 4 2\\n2 5 2\\n1 3 5\\n2 4 5\\n3 4 4\\n1 3 5\\n1 5 2\\n2 5 2\\n2 4 4\\n3 4 4\\n2 5 5\\n2 4 3\\n2 5 5\\n3 5 2\\n1 5 4\\n2 4 5\\n2 4 5\\n3 4 5\\n2 5 3\\n2 5 3\\n2 5 4\\n3 5 3\\n1 5 4\\n2 4 4\\n2 5 4\\n2 4 4\\n1 3 5\\n2 4 3\\n2 5 3\\n1 3 4\\n1 4 4\\n1 4 4\\n1 5 4\\n1 5 4\\n1 4 4\\n1 5 4\\n2 5 3\\n2 5 4\\n2 4 5\\n2 5 3\\n1 2 3\\n2 5 4\\n1 3 5\\n1 5 2\\n2 5 3\\n2 4 3\\n1 5 4\\n1 3 5\\n1 5 5\\n2 4 5\\n2 5 2\\n2 4 4\\n1 4 5\\n2 5 4\\n2 5 4\\n2 5 5\\n1 4 5\\n2 5 5\\n2 5 3\\n2 5 5\\n3 5 2\\n2 5 4\\n1 3 5\\n1 5 4\\n2 5 5\\n1 5 4\\n1 5 4\\n1 5 5\\n1 5 4\\n2 5 3\\n2 5 2\\n2 5 5\\n1 5 5\\n2 4 5\\n2 5 4\\n2 5 5\\n2 5 4\\n2 5 5\\n2 5 5\\n2 5 5\\n2 5 4\\n2 5 3\\n2 5 4\\n3 4 5\\n2 5 4\\n2 5 5\\n1 4 5\\n1 5 4\\n1 5 2\\n2 5 4\\n1 3 5\\n2 5 3\\n1 5 5\\n2 5 4\\n2 5 5\\n2 5 4\\n2 5 5\\n2 5 4\\n2 5 5\\n2 5 4\\n2 5 5\\n2 5 5\\n2 5 5\\n2 5 4\\n2 5 5\\n2 5 5\\n1 5 5\\n1 5 3\\n2 5 4\\n1 5 5\\n2 5 4\\n1 5 5\\n1 5 4\\n1 5 5\\n2 5 5\\n2 5 4\\n2 5 5\\n1 5 5\\n2 5 4\\n2 5 5\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1 5 4\\n1",
        "num_ids_2": 1836,
        "num_ids_4": 1836
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n6 2\n1\n2\n3\n''') == '4'\n\nassert solution('''\n4\n3 3\n1\n4\n2\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n1\\n3\") == \"Yes\"\nassert solution(\"6\\n1\\n2\\n3\\n1\\n2\\n3\") == \"No\"\nassert solution(\"6\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 47,
        "num_ids_4": 1836
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 1\\n4 4 4\\n2 5 3\\n\") == \"3\"\nassert solution(\"3\\n1 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 49,
        "num_ids_4": 67
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5 3\") == \"2\"\nassert solution(\"6 5 1\") == \"3\"\nassert solution(\"6 10 3\") == \"5\"\nassert solution(\"6 10 0\") == \"0\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 9\\n100 110 200 300\\n4 5\\n3 4\\n6 3\\n10 10\\n7 5\\n3 3\\n9 1\\n2 5\\n10 5\\n5 1\\n4 4\\n9 5\\n10 7\\n5 5\\n7 3\\n5 5\\n10 10\\n2 5\\n6 6\\n5 6\\n4 7\\n10 5\\n2 3\\n7 9\\n1 7\\n10 7\\n2 9\\n5 9\\n7 6\\n1 8\\n5 5\\n4 3\\n7 9\\n8 4\\n4 3\\n2 1\\n5 2\\n9 5\\n7 5\\n3 8\\n10 6\\n1 7\\n1 5\\n5 8\\n5 7\\n8 7\\n9 8\\n3 2\\n5 5\\n2 2\\n4 3\\n4 3\\n2 9\\n5 7\\n2 5\\n2 4\\n8 1\\n6 4\\n8 3\\n1 7\\n8 1\\n2 4\\n3 8\\n7 5\\n3 8\\n3 4\\n2 6\\n7 8\\n1 1\\n4 2\\n5 5\\n1 6\\n5 2\\n9 1\\n8 5\\n6 6\\n3 4\\n5 5\\n3 1\\n2 1\\n3 4\\n8 5\\n5 2\\n8 8\\n5 8\\n2 2\\n4 5\\n4 6\\n4 8\\n2 6\\n8 3\\n7 6\\n3 8\\n3 4\\n7 9\\n7 6\\n7 3\\n5 8\\n3 5\\n7 8\\n4 9\\n6 2\\n8 5\\n9 1\\n8 5\\n8 2\\n5 3\\n6 3\\n4 8\\n8 5\\n5 4\\n4 7\\n5 1\\n5 2\\n4 4\\n3 4\\n4 4\\n4 6\\n6 8\\n6 7\\n4 8\\n2 7\\n2 4\\n6 8\\n2 3\\n5 2\\n5 3\\n6 1\\n8 3\\n5 3\\n6 2\\n2 2\\n5 6\\n6 6\\n8 1\\n5 2\\n5 4\\n2 6\\n6 2\\n5 1\\n5 1\\n4 6\\n6 4\\n4 8\\n4 4\\n6 6\\n3 5\\n8 6\\n6 7\\n6 3\\n3 7\\n1 7\\n4 5\\n8 5\\n7 5\\n7 5\\n8 3\\n5 2\\n8 8\\n6 6\\n4 5\\n7 2\\n5 3\\n6 6\\n7 6\\n5 5\\n2 7\\n8 8\\n5 5\\n7 4\\n4 5\\n4 2\\n4 6\\n5 7\\n4 5\\n2 7\\n6 3\\n5 4\\n6 2\\n3 5\\n5 1\\n2 4\\n5 3\\n7 3\\n2 1\\n6 6\\n6 5\\n5 5\\n4 8\\n6 6\\n8 5\\n2 3\\n8 8\\n6 4\\n4 2\\n8 8\\n5 7\\n3 4\\n5 7\\n7 6\\n4 8\\n1 7\\n2 7\\n5 4\\n7 2\\n6 6\\n1 5\\n8 5\\n6 3\\n4 1\\n6 3\\n4 5\\n3 1\\n5 3\\n8 5\\n8 4\\n7 5\\n3 7\\n5 3\\n5 6\\n3 4\\n5 5\\n7 5\\n4 6\\n5 3\\n8 1\\n2 4\\n8 6\\n3 2\\n4 6\\n7 3\\n8 3\\n4 6\\n8 4\\n1 5\\n5 3\\n5 5\\n4 3\\n6 4\\n5 3\\n5 5\\n2 3\\n5 5\\n6 4\\n4 8\\n5 1\\n4 5\\n6 6\\n5 8\\n8 1\\n3 6\\n5 7\\n2 3\\n6 7\\n4 8\\n7 3\\n3 6\\n3 3\\n4 2\\n2 2\\n4 5\\n6 6\\n5 1\\n7 2\\n4 4\\n2 1\\n4 7\\n6 2\\n5 3\\n6 6\\n2 4\\n3 6\\n4 7\\n6 5\\n2 4\\n2 7\\n6 7\\n6 5\\n5 8\\n6 4\\n6 5\\n3 6\\n8 1\\n5 6\\n2 3\\n5 7\\n4 6\\n2 7\\n2 4\\n7 1\\n6 5\\n5 5\\n7 3\\n3 6\\n2 5\\n8 1\\n4 1\\n8 4\\n6 6\\n5 6\\n4 6\\n8 4\\n7 4\\n7 3\\n6 6\\n7 4\\n5 6\\n2 8\\n3 2\\n5 5\\n4 2\\n8 5\\n4 6\\n8 5\\n5 4\\n1 1\\n7 1\\n5 7\\n2 6\\n5 4\\n5 4\\n4 5\\n2 1\\n5 7\\n2 5\\n4 7\\n7 4\\n4 3\\n5 6\\n5 6\\n2 2\\n4 5\\n4 5\\n7 4\\n4 4\\n4 5\\n8 4\\n6 5\\n5 5\\n6 5\\n2 4\\n5 1\\n4 4\\n8 1\\n8 5\\n6 4\\n4 8\\n5 6\\n5 4\\n7 7\\n5 5\\n5 3\\n3 5\\n8 2\\n5 8\\n1 4\\n3 8\\n3 6\\n8 7\\n4 8\\n8 5\\n5 3\\n1 3\\n3 2\\n5 3\\n6 5\\n5 2\\n3 2\\n4 5\\n8 6\\n2 3\\n6 3\\n5 2\\n5 2\\n6 3\\n8 4\\n4 2\\n4 5\\n5 1\\n6 3\\n3 2\\n7 5\\n5 6\\n7 4\\n3 6\\n5 1\\n3 3\\n8 7\\n4 3\\n3 2\\n7 4\\n5 4\\n5 8\\n2 4\\n4 8\\n6 4\\n8 2\\n4 2\\n6 4\\n1 4\\n7 4\\n2 3\\n5 4\\n8 2\\n5 3\\n1 4\\n4 1\\n6 4\\n4 1\\n4 8\\n2 3\\n8 7\\n6 4\\n5 4\\n5 8\\n4 4\\n3 4\\n8 5\\n2 5\\n1 3\\n3 4\\n1 7\\n4 1\\n1 6\\n1 2\\n4 7\\n3 4\\n8 8\\n2 6\\n6 2\\n5 4\\n7 3\\n3 6\\n8 4\\n7 2\\n5 3\\n5 8\\n5 2\\n5 4\\n8 4\\n5 1\\n4 8\\n5 6\\n5 7\\n8 2\\n7 3\\n3 2\\n1 4\\n4 2\\n1 1\\n4 1\\n8 1\\n5 3\\n1 4\\n3 2\\n5 2",
        "num_ids_2": 1836,
        "num_ids_4": 1836
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '20'\nassert solution('1000000') == '1000000'\nassert solution('8') == '15000'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n3\\n1') == 'YES'\nassert solution('4\\n3\\n3\\n1') == 'NO'\nassert solution('4\\n3\\n3\\n1') == 'YES'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 2') == '0'\nassert solution('10 5 2') == '5'\nassert solution('20 10 2') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 700') == '1'\nassert solution('4 700') == '1'\nassert solution('5 700') == '1'\n\nstdin = '1 50000'\nassert solution(stdin) == '0'\nstdin = '2 1000000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 500\") == \"5\"\nassert solution(\"5 800\") == \"1\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '5'\nassert solution('5 800') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('4 100\\n10 100\\n20 200\\n50 300') == '5'\n'''",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"5 800\") == \"4\"\nassert solution(\"2 500\") == \"0\"\nassert solution(\"3 200\") == \"1\"\nassert solution(\"4 100\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 700') == '3'\nassert solution('5 800') == '2'\nassert solution('5 200') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"3 500\\n5 800\\n4 500\\n2 500\\n5 800\") == \"2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 700\\n3 500\\n5 800\\n') == '3'\n\"\"\"\n\nfrom itertools import permutations",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 4 5 5 5 6\n3 5 4 5 5 5 6''') == '2'\nassert solution('''8 4 8 7 8 4 4 5\n2 3 4 2 2 3 2 2 4''') == '3'\nassert solution('''9 2 3 4 2 2 3 2 2 4\n3 3 4 2 3 2 4''') == '2'\nassert solution('''7 2 3 4 2 2 3 2 2 4\n4 5 6 7 8 9''') == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8 4 8 7 8 4 4 5\") == \"3\"\nassert solution(\"9 2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 52
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\n\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n4 8 8 7 8 4 4 5\n''') == \"2\"\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == \"3\"\nassert solution('''10\n5 5 4 5 5 5 6\n''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n5 5 4 5 5 5 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8\n4 8 8 7 8 4 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n9\n2 3 4 2 2 3 2 2 4\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\") == \"18\", \"Wrong\"\nassert solution(\"6 1 5\") == \"100\", \"Wrong\"\nassert solution(\"4 3 1\") == \"100\", \"Wrong\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"18\"\nprint(solution(input_))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\nassert solution('4 3 1') == '100'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 5\") == \"8\"\nassert solution(\"2 2 2\") == \"5\"\nassert solution(\"10 10 10 10 10 10\") == \"10\"\nassert solution(\"5 1 3 10 1\") == \"18\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution('''\n10 10 20 30 40 50\n20 50 10 20 40 30\n''') == '90'\nassert solution('''\n10 10 20 30 40 50\n20 50 10 20 40 30\n''') == '90'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\") == \"18\", \"Wrong!\"\nassert solution(\"5 1 3\") == \"100\", \"Wrong!\"\nassert solution(\"6 1 5\") == \"-1\", \"Wrong!\"\nassert solution(\"4 3 1\") == \"100\", \"Wrong!\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"5 1 3 10 1\") == \"100\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('5') == 'No'\nassert solution('-1') == 'No'\nassert solution('-2') == 'No'\nassert solution('-10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"11\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"5\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"12\") == \"No\"\nassert solution(\"5\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == 'Yes'\nassert solution('12') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'No'\nassert solution('10') == 'Yes'\nassert solution('20') == 'No'\nassert solution('1') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'Yes'\nassert solution('11') == 'Yes'\nassert solution('0') == 'No'\nassert solution('3') == 'No'\nassert solution('12') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n\n---\nTrue\n\n''') == 'Yes'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5 3\\n1 2 5') == '5 2 6'\nassert solution('2\\n2 2\\n3 2 5') == '2 2 6'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"",
        "num_ids_2": 17,
        "num_ids_4": 49
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2 2 6\"\nassert solution(\"10\") == \"2 2 8\"\nassert solution(\"2 2\") == \"0 0 0\"\nassert solution(\"3 5\") == \"2 2 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 2 5\\n2 1 5\\n1 2 5') == '2 2 6'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2 2 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3 5') == '2 2 6'\nassert solution('2\\n2 1 5') == '2 2 6'\nassert solution('3\\n1 2 5') == '2 2 6'\nassert solution('4\\n2 3 5') == '2 2 6'\nassert solution('5\\n2 1 5') == '2 2 6'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nprint('check passed')\nassert solution('1\\n1 1 5\\n1 2 5\\n2 2 5\\n3 2 5') == '0 0 0'\nprint('check passed')\nassert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n4 4 5\\n4 5 5') == '2 2 6'\nprint('check passed')\n",
        "num_ids_2": 64,
        "num_ids_4": 106
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"2 2 6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('redcoder') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('redcoder') == '1'\nassert solution('racecar') == '1'\nassert solution('karthik') == '2'\nassert solution('helloworld') == '2'\nassert solution('i love karthik') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"redcoder\") == \"oecodred\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('redcoder') =='redo'\n\nSolution 2\n\nThe minimum number of huga required is the number of characters that we need to change from one side to the other.\n\nExample:\n\nS = 'I will not be judged'\n\nWe need to change the first letter from I to O and the last letter from 'W' to 'R'.\n\nWe can only change a single letter at a time.\n\nThe solution here is simple: if a string is a palindrome, it is the only letter in the string. The number of changes is the number of letters - 1.\n\nOther cases:\n\nIf S is not a palindrome, we need to change the middle letter (letter in between the first and last letters).\n\nThe solution here is to use a window to check if the string is palindromic.\n\nLet's apply this idea in this example:\n\nS = 'I will not be judged'\n\nFirst, we will change the first letter to 'O'.\n\nThen, we'll change the last letter to 'R'.\n\nNow, we can check if the string is palindrome:\n\nThe middle letter 'I' is the only letter in the string.\n\nIf so, we will end up with an empty string and return 0.\n\nThe middle letter 'W' is not in the string.\n\nIf we change the last letter to 'R', we still need one more letter to change:\n\nThe middle letter 'I' is still the only letter in the string.\n\nIf we change the middle letter to 'R', we will end up with an empty string and return 0.\n\nThe middle letter 'I' is not in the string.\n\nIn other words, we need to change the middle letter only once.\n\nThe number of changes is 2.\n\nSo, the solution is:",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('redcoder') =='redcoder'\nassert solution('redcoder') =='redcoder'\nassert solution('redcoder') =='redcoder'\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('redcoder') =='redo'\nassert solution('hello') == 'helo'\nassert solution('hello') == 'helo'\nassert solution('hello') == 'helo'\nassert solution('hello') == 'helo'\n\"\"\"\nfrom collections import Counter\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('redcoder') == '1'\nassert solution('palin') == '0'\nassert solution('pancakes') == '3'\nassert solution('redcoder') == '0'\nassert solution('pancakes') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"aabb\") == \"2\"\nassert solution(\"abcd\") == \"3\"\nassert solution(\"aabbcd\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == \"Yes\"\n\n--------------------------------------\n\n'''\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'Yes'\nassert solution('25') == 'No'\n\"\"\"\n\nN = int(input())\n\nfor i in range(1, 10):\n    if N == i * i:\n        print('Yes')\n        break\nelse:\n    print('No')\n\nprint('No') if N!= i * i else print('Yes')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('15') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'No', \"Sample test case\"\nassert solution('11') == 'Yes', \"Sample test case\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"12\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"22\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'Yes'\nassert solution('30') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\n\nSample Input 0:\n\n5\n\nSample Output 0:\nYes\n\nSample Input 1:\n\n4\n\nSample Output 1:\nNo\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4 4 9 7 5\\n') == '5'\nassert solution('10\\n20 5 15 1 2 3 4 6 7\\n') == '15'\nassert solution('10\\n1 5 1 1 5 1 3 4\\n') == '10'\n",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"\nassert solution(\"10\\n10 10 10 10 10 10\") == \"10\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 4 9 7 5\") == \"5\"\nassert solution(\"5 4 4 9 7 5\") == \"0\"\nassert solution(\"100 10 9 7 5\") == \"7\"\nassert solution(\"100 100 100 100 100\") == \"9\"\nassert solution(\"1 2 3 4\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''10\n1 2 3 4 5 6 7 8 9''') == '10'\nassert solution('''1\n1 1 1''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4 3 2') == '1\\n'\nassert solution('5\\n4 4 9 7 5') == '5\\n'\nassert solution('5\\n5 5 5 5') == '0\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == -1\nassert solution('1 1') == '1'\nassert solution('1 2') == '-1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"5 6\"]) == \"10\"\nassert solution([\"2 3\"]) == \"6\"\nassert solution([\"-1 2\"]) == \"-1\"\nassert solution([\"20 5\"]) == \"10\"\nassert solution([\"-3 -3\"]) == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '10'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\", '2 * 1 = 2'\nassert solution(\"5 5\") == \"10\", '5 * 5 = 10'\nassert solution(\"7 3\") == \"14\", '7 * 3 = 14'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"10\\n10\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 5\n''') == '10'\nassert solution('''\n2 5\n''') == '10'\nassert solution('''\n5 5\n''') == '10'\nassert solution('''\n0 0\n''') == '-1'\nassert solution('''\n3 0\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"1.00\"\nassert solution(\"0 2\") == \"-1.00\"\nassert solution(\"10 1\") == \"10.00\"\nassert solution(\"1 1\") == \"1.00\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '10'\nassert solution('3 4') == '-1'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 5\") == \"10\"\nprint(\"Sample Test Passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 6\") == -1\nassert solution(\"5 2\") == \"10\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5\n10 12 1 2 14\n''') == '5'\nassert solution('''2 5\n10 12 1 2 14\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"6 5\\n1 10 2 3 4 5 6\\n\") == \"7\"\nassert solution(\"2 2\\n2 2\\n\") == \"1\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"18\"\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 4') == '4'\nassert solution('2 5') == '5'\n\"\"\"\n\nn, m = (int(i) for i in stdin.split())\n\nx_coordinates = [int(i) for i in stdin.split()]\n\nmoves = []\n\nfor i in range(1, m + 1):\n    x_1 = x_coordinates[i - 1]\n    x_2 = x_coordinates[i]\n    if x_1 > x_2:\n        x_1, x_2 = x_2, x_1\n\n    while x_1!= x_2:\n        if x_1 > x_2:\n            x_1, x_2 = x_2, x_1\n\n        moves.append(str(x_1 + 1))\n        x_1 += 1\n\nprint(len(moves))\nprint(' '.join(moves))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 5\n10 12 1 2 14\n''') == '5'\nassert solution('''4 4\n15 8 6 11\n''') == '3'\nassert solution('''4 3\n14 14 15 10\n''') == '6'\nassert solution('''5 5\n13 14 15 10 9\n''') == '1'\nassert solution('''7 3\n15 14 13 6 1 9 5\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"2 5\", \"10 12 1 2 14\"]) == \"5\"\nassert solution([\"2 6\", \"10 12 1 2 14\"]) == \"4\"\nassert solution([\"3 4\", \"10 12 1 2 14\"]) == \"3\"\nassert solution([\"4 5\", \"10 12 1 2 14\"]) == \"3\"\nassert solution([\"5 5\", \"10 12 1 2 14\"]) == \"3\"\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"10 2\\n1 2\\n\") == \"1\"\nassert solution(\"2 5\\n10 12 1 2 14\\n\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 3\\n2 3 2 3 2\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5') == '5'\nassert solution('2 5') == '1'\nassert solution('1 10') == '10'\nassert solution('2 10') == '1'\nassert solution('1 12') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 3') == '2'\nassert solution('3 6 3') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\nassert solution(\"5 6 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2\") == \"111\"\nassert solution(\"4 4 3\") == \"111\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''\n4 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestThis(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print(out)\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"\n4 4 3\n1 2\n2 3\n1 4\n4 3\n\"\"\"\n        output = \"\"\"\n2\n\"\"\"\n        self.",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4') == '1110'\nassert solution('4 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '101001'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n\") == \"2\\n1110\\n1011\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution(\"3\\n2\") == \"111010\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('3 4 3') == '12'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '2'\nassert solution('1 2') == '1110'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n2 1 1 2 5\n\n''') == 'YES'\n\nassert solution('''3\n4 5 3\n\n''') == 'YES'\n\nassert solution('''2\n10 10\n\n''') == 'YES'\n\n\nassert solution('''3\n1 2 3\n\n''') == 'NO'\n\nassert solution('''3\n1 2 3\n\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 3 1 5\n''') == 'YES'\nassert solution('''5\n4 5 3\n''') == 'YES'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''3\n1 2 3\n''') == 'NO'\nassert solution('''3\n1 2 3\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n4 5 3\n''') == 'NO'\nassert solution('''\n2\n10 10\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'YES', 'First'\nassert solution('4') == 'YES', 'Second'\nassert solution('5') == 'YES', 'Third'\nassert solution('6') == 'NO', 'Fourth'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n2\\n5\\n') == 'YES'\nassert solution('2\\n4\\n3\\n') == 'NO'\nassert solution('2\\n10\\n10\\n10\\n10\\n') == 'YES'\n",
        "num_ids_2": 42,
        "num_ids_4": 66
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\n\nassert solution('3') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n') == 'YES', solution('2\\n')\nassert solution('3\\n') == 'NO', solution('3\\n')\nassert solution('4\\n') == 'YES', solution('4\\n')\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n4 5 3\n5 4 1\n3 5 1''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 6\") == \"9\"\nassert solution(\"1000000000000 5\") == \"4999999999996\"\nassert solution(\"10 4\") == \"-1\"\nassert solution(\"100000000000000 5\") == \"499999999999999\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'\nassert solution('''10 4\n-3 -6 5 4\n''') == '-1'",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10000 6\n-1000 -2000 -3000 125 77 -4\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n1000000000000 5\n-1 0 0 0 0\n\"\"\") == \"4999999999996\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"-1\"\n",
        "num_ids_2": 48,
        "num_ids_4": 69
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\n\n---\n\nInput\n1000 6\n-100 -200 -300 125 77 -4\n\nOutput\n9\n\nInput\n1000000000000 5\n-1 0 0 0 0\n\nOutput\n4999999999996\n\nInput\n10 4\n-3 -6 5 4\n\nOutput\n-1\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\nassert solution('''\n1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"4999999999996\"\nprint(solution(solution.__doc__))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '-1'\nassert solution(stdin='''\n1000000000 1000000000\n1000000000000 1000000000000\n''') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000000000000 5') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\nassert solution('1000000000000 5') == '9'\nassert solution('1000000000000 5') == '4999999999996'",
        "num_ids_2": 30,
        "num_ids_4": 55
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nABCAB') == 'ABC'\nassert solution('3\\nABCD') == ''\nassert solution('2\\nAABB') == ''\nassert solution('2\\nAABB') == 'AB'\nassert solution('3\\nBBAA') == 'AB'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"AB\"\nassert solution(input()) == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"\nprint(solution(input()))\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\nABACABA''') == 'AB'\nassert solution('''5\nZZZAA''') == 'ZZ'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"\nassert solution(\"6\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nABACABA\n''') == 'AB'\nassert solution('''5\nZZZAA\n''') == 'ZZ'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('west') == 2, \"Your solution is wrong\"\nassert solution('codeforces') == 9, \"Your solution is wrong\"\nassert solution('test') == 7, \"Your solution is wrong\"\nassert solution('yes') == 1, \"Your solution is wrong\"",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('codeforces') == 'est'\nassert solution('test') == 'west'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"west\") == 2\nassert solution(\"codeforces\") == 9\nassert solution(\"test\") == 7\nassert solution(\"b\") == 1",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('west') == 'here'\nassert solution('test') == 'here'\nassert solution('yes') == 'es'\nassert solution('b') == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"test\") == 2\nassert solution(\"west\") == 9\nassert solution(\"b\") == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"codeforces\") == \"1\"\nassert solution(\"b\") == \"1\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"test\") == 2\nassert solution(\"west\") == 9\nassert solution(\"b\") == 1\n\"\"\"\nfrom math import ceil\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"west\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"codeforcesyes\") == \"yes\"\nassert solution(\"testyes\") == \"testyes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 7 11\") == \"3\"\nassert solution(\"6 10\") == \"4\"\n\"\"\"\n\nimport sys\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n1 7 11\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 2\n1 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('20 20') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"1 7 11\\n\"\n) == \"2\"\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 2') == '1'\nassert solution('4 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"aca\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"akakkakakakaka\") == \"Yes\"\nassert solution(\"akakakakakakakakakakakakakaka\") == \"Yes\"\nassert solution(\"akakakakakakakakakakakakakaka\") == \"No\"\nassert solution(\"babad\") == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 74
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akash') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"palindrome\") == \"No\"\nassert solution(\"aaaaaa\") == \"Yes\"\nassert solution(\"abababab\") == \"Yes\"\nassert solution(\"aba\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('akasaka') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('ak') == 'No'\nassert solution('a') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abccba') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('aaaaaa') == 'No'\nassert solution('aaaaaaaa') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"akakasaka\") == \"Yes\"\nassert solution(\"akasakaakakaka\") == \"Yes\"\nassert solution(\"asakasaka\") == \"No\"\nassert solution(\"akasakaakakakaakaka\") == \"No\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.5 2.1') == '2'\n\n\"\"\"\n\nA, B = map(float, stdin.split())\n\nprint(int(A * B))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('1.11') == '0'\nassert solution('-1.11') == '-1'\nassert solution('1.01') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1.10 1.10') == '1'\nassert solution('199 1.10') == '208'\nassert solution('1.10 1.10 1.10') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1.1\") == \"5\"\nassert solution(\"5 1.2\") == \"6\"\nassert solution(\"10 1.1\") == \"10\"\nassert solution(\"10 1.01\") == \"10\"\nassert solution(\"20 1.2\") == \"20\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('197 1.01') == '195'\nassert solution('198 1.99') == '198'\nassert solution('0 0.00') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10.5\") == \"15\"\nassert solution(\"-3 -5\") == \"-15\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0.5 1.5\") == \"1\"\nassert solution(\"-0.5 1.5\") == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"0.99 1.10\") == \"1\"\nassert solution(\"1.000000000000000001 1.000000000000000002\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1.1') == '1'\nassert solution('0.1') == '1'\nassert solution('0.1') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '0'\nassert solution('''\n5\n3\n1\n2\n3\n''') == '1'\nassert solution('''\n5\n6\n1\n2\n3\n''') == '0'\nassert solution('''\n4\n7\n1\n2\n3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n6\n1\n2\n3\n2000000000\n763243547''') == '3'\n\nassert solution('''4\n5\n1\n2\n3\n2000000000\n763243547''') == '0'\n\nassert solution('''10\n11\n1\n2\n3\n100000\n763243547''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2\n1\n3\n2000000000\n763243547''') == '1'\nassert solution('''6\n2\n1\n3\n2000000000\n763243547''') == '0'\nassert solution('''5\n3\n1\n3\n2000000000\n763243547''') == '1'\nassert solution('''6\n3\n1\n3\n2000000000\n763243547''') == '0'\nassert solution('''5\n4\n1\n3\n2000000000\n763243547''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n7') == '3'\nassert solution('1\\n2') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n4') == '0'\nassert solution('5\\n7') == '2'\nassert solution('10\\n2000000000') == '999999999'\nassert solution('11\\n7') == '0'\nassert solution('14\\n763243547') == '381621773'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3'\nassert solution('1\\n3\\n2\\n4\\n5\\n6\\n7') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '0'",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\", solution(\"3\")\nassert solution(\"4\") == \"1\", solution(\"4\")\nassert solution(\"5\") == \"1\", solution(\"5\")\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n10\n''') == \"1\", '1'\nassert solution('''\n1\n1\n''') == \"0\", '0'\nassert solution('''\n1\n100\n''') == \"0\", '0'\nassert solution('''\n2\n10\n''') == \"1\", '1'\nassert solution('''\n2\n100\n''') == \"1\", '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"5 4 5 1 2\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 3') == '3'\nassert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 4 5\n1 2\n2 3\n3 4\n4 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10 10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4 5\n1 2\n2 3\n3 4\n4 1''') == '1'\nassert solution('''9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    5 4 5\n    1 2\n    2 3\n    3 4\n    4 1\n    '''\n) == '1'\nassert solution(\n    '''\n    5 4 5\n    1 2\n    2 3\n    3 4\n    4 1\n    '''\n) == '0'\nassert solution(\n    '''\n    9 9 1\n    1 2\n    1 3\n    2 3\n    1 5\n    5 6\n    6 1\n    1 8\n    9 8\n    7 1\n    '''\n) == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('1 2\\n2 3\\n3 4\\n4 1') == '1'\n",
        "num_ids_2": 76,
        "num_ids_4": 127
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 1 1 4 4 4''') == '5'\nassert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 2 4 1\n''') == \"4\"\n\nassert solution('''6\n1 1 1 4 4 4\n''') == \"5\"\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2, 4, 1]) == 4\nassert solution([1, 1, 1, 4, 4, 4]) == 5\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 32\") == \"000001000002\"\nassert solution(\"2 63\") == \"000002000001\"\nassert solution(\"1 12\") == \"000001000001\"\n\nimport math\n\nn, m = map(int, input().split())\np = [0] * n\ny = []\nfor i in range(n):\n    p[i], y[i] = map(int, input().split())",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('1 32') == '000001000002'\nassert solution('2 63') == '000002000001'\nassert solution('1 12') == '000001000001'",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"2 1\") == \"000002000001\"\nassert solution(\"1 3\") == \"000001000001\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('2 4') == '000002000001'\nassert solution('4 5') == '000001000001'",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('1 32') == '000001000002'\nassert solution('2 63') == '000002000001'\nassert solution('1 12') == '000001000001'",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n1 32\n2 63\n1 12\n''') == '000001000002'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12''') == '000001000002\\n000002000001\\n000001000001'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('1 32') == '000002000001'\nassert solution('2 63') == '000001000001'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4,2,10,8,40]) == \"2\"\nassert solution([3,5,2,1,4]) == \"1\"\nassert solution([3,2,1,4]) == \"4\"\nassert solution([1,2,3,4]) == \"1\"\nassert solution([1,2,3,1]) == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 10 8 40\\n\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"9\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4 5 10\\n') == '2'\nassert solution('5\\n5 7 3\\n') == '2'\nassert solution('5\\n1 2 3 4 5\\n') == '2'\nassert solution('4\\n4 4 5 5\\n') == '0'\nassert solution('5\\n5 5 5 5\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('6') == '2'\nassert solution('10') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('6') == '0'\nassert solution('7') == '0'\nassert solution('8') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 8 10\\n') == '2'\nassert solution('6\\n5 6 5 6 6\\n') == '5'\nassert solution('5\\n1 1 2 2 2\\n') == '2'",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"9\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\\n\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\\n\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\\n\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 140
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"?(_-_/___*__):-___>__.\\n\"\n) == \"0010\"\nassert solution(\n    \"?(__-_+_/_____):-__>__,_____<__.\\n\"\n) == \"false\"\nassert solution(\n    \"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\"\n) == \"0250341\"\nassert solution(\n    \"?(__+___+__-___):-___>__.\\n\"\n) == \"0101\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0101'\nassert solution('?(__+___+__-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'",
        "num_ids_2": 54,
        "num_ids_4": 148
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n?(_-_/___*__):-___>__.\n''') == '0010'\nassert solution('''\n?(__-_+_/_____):-__>__,_____<__.\n''') == 'false'\nassert solution('''\n?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0250341'\nassert solution('''\n?(__+___+__-___):-___>__.\n''') == '0101'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '?(_-_/___*__):-___>__.\\n') == '0010'\n\nassert solution(\n    '?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\n\nassert solution(\n    '?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\n\nassert solution(\n    '?(__+___+__-___):-___>__.\\n') == '0101'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.    ') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.    ') == '0101'\n\n\n\n\"\"\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"_/___*__\") == \"0010\"\nassert solution(\"__-_+_/_____\") == \"false\"\nassert solution(\"______________________/____+_______*__-_____*______-___\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__\") == \"0101\"\n",
        "num_ids_2": 30,
        "num_ids_4": 79
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\n",
        "num_ids_2": 54,
        "num_ids_4": 105
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == \"3\"\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"5\"\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3 3 11\n    2 1 5\n    7 10 0\n    12 6 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n    3 4 2\n    1 3 3 3\n    0 3 3 2\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n    3 4 1000000000000000000\n    1 3 3 3\n    0 3 3 2\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3 3 11\n2 1 5\n7 10 0\n12 6 4\n\"\"\") == \"3\"\nassert solution(\n\"\"\"3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"3 4 0\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\"\"\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''rocesfedoc''') == 'codeforces'\nassert solution('''plmaetwoxesisiht''') == 'thisisexampletwo'\nassert solution('''1''') == 'z'\nassert solution('''5''') == 'z'\n",
        "num_ids_2": 43,
        "num_ids_4": 69
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'run'\nassert solution('10') == 'abcde'\nassert solution('16') == 'thisisatest'\nassert solution('1') == 'z'",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"codeforces\"\n\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        \n        for d in range(1, len(stdin)):\n            str = stdin[d:] + stdin[0:d]\n            str = str[::-1]\n            if str == stdin:\n                return str\n                \n        return stdin\n        \n        \n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\nassert solution('1') == 'z'",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\nrocesfedoc\") == \"codeforces\"\nassert solution(\"16\\nplmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"1\\nz\") == \"z\"\n\n\n'''\n",
        "num_ids_2": 43,
        "num_ids_4": 55
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'z'\nassert solution('10') == 'rocesfedoc'\nassert solution('16') == 'thisisexampletwo'",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == ''\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\nassert solution('1') == 'z'\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_fn) == 'codeforces'\n\n\"\"\"\n\nn = int(input())\ns = input()",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'codeforces'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5 14\n''') == \"19\"\nassert solution('''\n    5 14\n''') == \"19\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 14\\n') == '19'\nassert solution('381 492\\n') == '873'\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('2') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('0 5') == '5'\nassert solution('0 0') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"7 5\") == \"18\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 14\") == \"19\", \"First\"\nassert solution(\"381 492\") == \"873\", \"Second\"\nassert solution(\"5 16\") == \"15\", \"Third\"\nassert solution(\"5 14\") == \"19\", \"Fourth\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 14\n''') == '19'\nassert solution('''\n381 492\n''') == '873'\nprint('Solution is correct')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"++++++++>\\n++++++++>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\n++++++++>\\n++++++++>\\n+>+>\\n<[<->-]<\\",
        "num_ids_2": 1634,
        "num_ids_4": 1634
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2+3\") == \"++>\", solution(\"2+3\")\nassert solution(\"9-7\") == \"+++++++++>\", solution(\"9-7\")\n\n\n\"\"\"\n\n\nfrom typing import Generator\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2+3\n''') == '++>'\nassert solution('''\n9-7\n''') == '+++++++++>'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2+3') == '++>', \"Case 1\"\nassert solution('9-7') == '+++++++++>', \"Case 2\"\n\n\n\"\"\"\n\n\nfrom collections import deque",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2+3') == \"++>\"\nassert solution('9-7') == \"<[<->-]<\"\n\n\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''+''') == '++>'\nassert solution('''++''') == '+>'\nassert solution('''+''') == '>'\nassert solution('''+-''') == '<'\nassert solution('''+++''') == '>+'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"<[<->-]<\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2+3') == '++>', '1st example'\nassert solution('9-7') == '++++++++>', '2nd example'\nassert solution('1+1') == '++++++++>', '3rd example'\nassert solution('2-2') == '++++>', '4th example'\nassert solution('10+10') == '++++++++>', '5th example'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('9-7') == '+++++++++>'\nassert solution('2+3') == '++>+>'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '++++++++>'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''1\n3''') == '2'\nassert solution('''2\n2''') == '0'\n\nassert solution('''3\n1''') == '1'\nassert solution('''3\n2''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\\n2\\n5\\n2\"\nassert solution(\"4\") == \"8\\n2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"2\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1001\") == \"0\"\nassert solution(\"20\") == \"2\"\nassert solution(\"15\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '5'\nassert solution(input()) == '2'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1\n3\n20\n38\n56\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n2132\n506\n999999999999999999\n1000000000000000000\n\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5\n1\n3\n20\n38\n56\n\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '4'\nassert solution(input()) == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56\n''') == '1'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '8'\nassert solution('''5\n1\n3\n20\n38\n56\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('575') == '4'\nassert solution('100') == '1'\nassert solution('1') == '1'\nassert solution('1000') == '1'\nassert solution('8') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"103\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"9\") == \"0\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n4\n1\n4\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '4'\nassert solution('575') == '4'\nassert solution('3838') == '1'\nassert solution('475') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == '4'\nassert solution('30') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('575') == '4'\nassert solution('15') == '1'\nassert solution('100') == '2'\nassert solution('50') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == 1\nassert solution(\"0\") == 1\nassert solution(\"1\") == 1\nassert solution(\"00\") == 1\nassert solution(\"11\") == 1\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"111\") == \"2\"\nassert solution(\"101\") == \"2\"\nassert solution(\"00\") == \"0\"\nassert solution(\"110\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('000') == 1, \"Wrong result\"\nassert solution('111') == 1, \"Wrong result\"\nassert solution('101') == 0, \"Wrong result\"\nassert solution('011') == 1, \"Wrong result\"\nassert solution('001') == 1, \"Wrong result\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"00000\") == \"1\"\nassert solution(\"11111\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n0000\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n10001\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n10101\n\"\"\") == \"3\"\n\"\"\"\n\ninput = \"\"\"\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n000000\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('000000') == '1'\nassert solution('001') == '0'\nassert solution('0110') == '1'\nassert solution('1100') == '0'\nassert solution('1111') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == 1\nassert solution(\"0\") == 1\nassert solution(\"0\") == 1\nassert solution(\"11\") == 1\nassert solution(\"01\") == 2\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0001\") == \"1\"\nassert solution(\"1111\") == \"0\"\nassert solution(\"1010\") == \"0\"\nassert solution(\"0101\") == \"1\"\nassert solution(\"0111\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"111\") == \"2\"\nassert solution(\"011\") == \"2\"\nassert solution(\"101\") == \"2\"\nassert solution(\"001\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('6') == 'DENIED'\nassert solution('7') == 'APPROVED'\nassert solution('8') == 'DENIED'\nassert solution('9') == 'APPROVED'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"5\") == \"DENIED\"\nassert solution(\"5\") == \"APPROVED\"\nassert solution(\"5\") == \"DENIED\"\nassert solution(\"5\") == \"APPROVED\"\n\n\"\"\"\n\nN = int(input())\nnumbers = input().split(' ')\n\nfor i in range(len(numbers)):\n    if int(numbers[i])%2!= 0:\n        print(\"DENIED\")\n        break\n    elif int(numbers[i])%3!= 0:\n        print(\"DENIED\")\n        break\n    elif int(numbers[i])%5!= 0:\n        print(\"DENIED\")\n        break\n    else:\n        print(\"APPROVED\")\n        \n        \n        \n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n9\\n3\") == \"APPROVED\"\nassert solution(\"3\\n10\\n9\\n3\") == \"APPROVED\"\nassert solution(\"3\\n8\\n10\\n3\") == \"DENIED\"\n",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'APPROVED'\nassert solution(input()) == 'DENIED'\nassert solution(input()) == 'APPROVED'\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n6 7 9 10 31\n\"\"\") == \"APPROVED\"\n\nassert solution(\"\"\"\n10\n12 13 14\n\"\"\") == \"DENIED\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"APPROVED\"\nassert solution(\"3\\n1 5 1\\n\") == \"DENIED\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"APPROVED\"\n\n---\n",
        "num_ids_2": 37,
        "num_ids_4": 63
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"APPROVED\"\nassert solution(\"7\") == \"DENIED\"\nassert solution(\"10\") == \"APPROVED\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n6 7 9 10 31\\n') == 'APPROVED'\nassert solution('10\\n9 9 9 9 9 9 9 9 9 9\\n') == 'DENIED'\nassert solution('5\\n20 21 22 23 24\\n') == 'APPROVED'\n",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('10\\n10 10 10 10 10') == 'APPROVED'\nassert solution('5\\n10 10 10 10 10') == 'DENIED'",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('5\\n10 20 30 40 50') == 'DENIED'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UUUUUUUUDDDDDDD\") == \"No\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RLLRDRLLUULU') == 'No'\nassert solution('RUDLDDDUDRDDDD') == 'Yes'\nassert solution('RUDRUDRDDDDDLLRUDRDD') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 69
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LRUDLR') == 'No'\n\"\"\"\n\nimport re\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDDUDDDL') == 'No'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RRRR\") == \"No\"\nassert solution(\"DUDD\") == \"Yes\"\nassert solution(\"LLLD\") == \"Yes\"\nassert solution(\"LLRRDDDD\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDLLUDR\") == \"No\"\nassert solution(\"RULUDLLUDR\") == \"No\"\nassert solution(\"RUDLLUDRRLUDLLUDR\") == \"No\"\n",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RUDLUDR') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == \"Yes\"\nassert solution('UDDRLRRDDD') == \"No\"\nassert solution('LUDLRUDRUDD') == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDRRUUDL\") == \"No\"\n\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('3\\n0\\n1\\n2\\n3\\n4\\n') == '3'\nassert solution('1\\n0\\n1\\n2\\n3\\n4\\n') == '1'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n') == '2'\nassert solution('1\\n2\\n2\\n2\\n2\\n2\\n') == '3'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"4\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"4\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\n    \"10\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\n    \"15\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\n    \"20\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5\n\n''') == '7'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n4\\n3\\n2\\n1\\n5') == '7'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"10\") == \"20\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"7\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"3\\n4\") == \"4\"\nassert solution(\"5\\n6\") == \"6\"\nassert solution(\"7\\n8\") == \"8\"\nassert solution(\"9\\n10\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('-1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 2",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20') == '23'\nassert solution('30') == '31'\nassert solution('20') == '23'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20\\n') == '23'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"15\") == \"21\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('12') == '13'\nassert solution('20') == '23'\nassert solution('100') == '101'\nassert solution('1000') == '1001'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '5'\nassert solution('15') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('10') == '7'\nassert solution('15') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20') == '23'\nassert solution('30') == '29'\nassert solution('60') == '61'\nassert solution('90') == '91'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"9\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('10') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"\nassert solution(\"5 1 2 3 2 2\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"3\\n3 2 5 4\") == \"2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\nassert solution('100') == '1'\nassert solution('3 4') == '1'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3 1 3 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''8\n1 2 2 1 1 2 1 2''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9\") == \"3\"\nassert solution(\"1\\n2\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3 1 3 2\n''') == '1'\nassert solution('''4\n3 1 3 2\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 5 100 80\\n98\\n40\\n30\\n21\\n80') == '0'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('2 3 4 5') == '13'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"3 4 8\") == \"7\"\nassert solution(\"8 2 3\") == \"7\"\nassert solution(\"10 3 6 7 8\") == \"19\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"23\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n96\\n40\\n30\\n21\\n80\") == \"27\"\nassert solution(\"5 100 90 80\\n96\\n40\\n30\\n21\\n80\") == \"27\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"10 10 10 10\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5 100 90 80\n98\"\"\") == \"23\"\nassert solution(\"\"\"5 100 90 80\n40\"\"\") == \"4\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('5 100 90 80') == '22'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"3 1 2\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\nABCXYZ\n''') == 'CDEZAB'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"DEFGHIJKLMNOPQRSTUVWXYZ\") == \"VWXYZDEFGHIJKLMNOPQRSTU\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"CDEFGHIJKLMNOPQRSTUVW\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
        "num_ids_2": 51,
        "num_ids_4": 185
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['A', 'B', 'C', 'D']) == 'CDEZAB'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"XYZ\") == \"XZA\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"CDEZAB\"\nprint(solution(input()))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"CDEZAB\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    input()\n) == 'CDEZAB', \"Wrong result\"\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4 5 2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == \"3 4 2\"\nassert solution('''1\n2750131 199999''') == \"199999\"\nassert solution('''1\n3 6''') == \"6\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1\n3 5 2 3 2 4\n    \"\"\"\n) == \"\"\"\n3 4 2 \n\"\"\"\n\nassert solution(\n    \"\"\"\n2\n2 2 1\n    \"\"\"\n) == \"\"\"\n2 2\n\"\"\"\n\nassert solution(\n    \"\"\"\n1\n1 2 3\n    \"\"\"\n) == \"\"\"\n1 2 3\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3\") == \"Output\\n3 4 2\"\nassert solution(\"Input\\n3\\n4 2 3 5\") == \"Output\\n4 2 3 5 3\"\nassert solution(\"Input\\n1\\n2750131 199999\") == \"199999\"\n",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('2') == '2 4 2'\nassert solution('1') == '199999'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('1') == '199999'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3 4 2\"\nassert solution(\"2\") == \"4 2\"\nassert solution(\"1\") == \"199999\"\n\n\nimport sys\nfrom collections import deque\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\\n3 5 2 3 2 4\") == \"3 4 2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\\n3 5 2 3 2 4\") == \"3 4 2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('1') == '199999'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == '3 4 2'\nassert solution('''1\n2750131 199999''') == '199999'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('7 1\\n7 2 3 5 4 6') == '1121122'",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 4 5 3 1\n''') == '11111'\nassert solution('''5 1\n2 1 3 5 4\n''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6\n''') == '1121122'\nassert solution('''5 1\n2 4 5 3 1\n''') == '21112'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\n",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5 2\\n'\n    '2 4 5 3 1\\n'\n) == '11111\\n'\n\nassert solution(\n    '5 1\\n'\n    '2 1 3 5 4\\n'\n) == '22111\\n'\n\nassert solution(\n    '5 1\\n'\n    '2 4 5 3 1\\n'\n) == '21112\\n'\n\nassert solution(\n    '7 1\\n'\n    '7 2 1 3 5 4 6\\n'\n) == '1121122\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"1121122\"\n",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 2\n2 4 5 3 1\n\"\"\") == \"11111\"\nassert solution(\"\"\"\n5 1\n2 1 3 5 4\n\"\"\") == \"22111\"\nassert solution(\"\"\"\n7 1\n7 2 1 3 5 4 6\n\"\"\") == \"1121122\"\nassert solution(\"\"\"\n5 1\n2 4 5 3 1\n\"\"\") == \"21112\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '1111222'\nprint(solution(input))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\nassert solution(\"5 2\") == \"11111\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '1'\nassert solution('100') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('100') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 2 3 4\") == \"2\"\nassert solution(\"100 100 100 100 100\") == \"4\"",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 1 2 3\n''') == '2'\nassert solution('''\n2\n100 1\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n100 1\n\n''') == '2'\nassert solution('''\n4\n1 3 3 7\n\n''') == '4'\nassert solution('''\n10\n
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution([1, 2, 1, 2, 3]) == '2'\nassert solution([1, 2, 1, 2, 3, 3, 3, 3, 3, 3]) == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 1 2 3\n''') == '2'\nassert solution('''\n5\n1 2 1 2 3\n''') == '2'\nassert solution('''\n4\n100 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 1 2 3\n''') == '2'\nassert solution('''\n2\n100 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 1 2 3\\n') == '2'\nassert solution('2\\n100 1\\n') == '4'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 1 2 3\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n\") == \"1\"\nassert solution(\"5\\n\") == \"0\"\nassert solution(\"1\\n\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n') == '1'\nassert solution('5\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('10\\n') == '0'\nassert solution('10\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('1') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(\":\")) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'\nassert solution('1') == '1'\nassert solution('1023') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n4 7 1 5 4 9') == '1'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('1\\n16') == '1'\nassert solution('4\\n1 1 1 1023') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5\") == \"1\"\nassert solution(\"7\\n1 2 3 4 5\") == \"0\"\nassert solution(\"8\\n1 2 3 4 5\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"2\"\nassert solution(\"0101\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('0111') == '3'\nassert solution('1110') == '2'\nassert solution('0000') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11000\") == \"4\"\nassert solution(\"01111\") == \"3\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0011') == '4'\nassert solution('10111') == '1'\nassert solution('10111') == '1'\nassert solution('100100') == '1'\nassert solution('1000') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"011011110001\") == \"4\"\nassert solution(\"1111111111\") == \"1\"\nassert solution(\"0111111\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0011') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0011') == '4'\nassert solution('0111') == '3'\nassert solution('10111') == '3'\nassert solution('11011') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0011') == '4'\nassert solution('10111') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0101\") == \"01\"\nassert solution(\"0011\") == \"4\"\nassert solution(\"01\") == \"1\"\nassert solution(\"11\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 2') == '2'\nassert solution('5 2') == '1'\nassert solution('6 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('4 2\\n1 4\\n2 3') == '1'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 4\") == \"4\"\n\"\"\"\n\nimport sys\n\nsys.stdin = open(\"input.txt\")",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 1\\n1 1\\n2 2\\n\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '2'\nassert solution('1 3') == '1'\nassert solution('2 4') == '1'\nassert solution('4 4') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"2\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('10 20') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 3\n2 4''') == '2'\n'''\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 2 1') == '2'\nassert solution('4\\n1 2 2 1') == '2'\nassert solution('3\\n1 2 2 1') == '1'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"0\"\n\nimport sys\nfrom io import StringIO\nimport unittest\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"8\"\nassert solution(\"100\") == \"99\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\n1 2 2 1\"\"\") == \"2\"\nassert solution(\"\"\"2\n1 2\"\"\") == \"1\"\nassert solution(\"\"\"4\n1 2 2 1\"\"\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"20\\n1 3 2 4 5 6 7 8 9 10 1 2\") == \"21\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('3\\n1 2 1') == '1'\nassert solution('3\\n1 2 1') == '0'\n'''",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2 2 1\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '3'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n\nassert solution('''5 15\n-2 -3 4 1 6 7 8 9 10 11 12 13 14 15\n''') == '16'\n\nassert solution('''6 10\n-3 -4 -1 5 6 7 8 9 10 11\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\n2 1 -3\n\n''') == '3'\nassert solution('''\n2 4\n-1 1\n\n''') == '4'\nassert solution('''\n4 10\n2 4 1 2\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''3 5\n    2 1 -3\n    '''\n    ) == '3'\n\nassert solution(\n    '''2 4\n    -1 1\n    '''\n    ) == '4'\n\nassert solution(\n    '''4 10\n    2 4 1 2\n    '''\n    ) == '2'\n\nassert solution(\n    '''2 9\n    1 1\n    '''\n    ) == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5 5\n    2 1 -3\n''') == '3'\n\nassert solution('''\n    3 5\n    2 1 -3\n''') == '4'\n\nassert solution('''\n    4 10\n    2 4 1 2\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\nassert solution('''\n2 4\n-1 1\n''') == '4'\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4 5 3 2 1\\n') == '1 2 3 4 5\\n', \"1\"\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000\\n', \"2\"\nassert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8 \\n', \"3\"\nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28 \\n', \"4\"\nassert solution('3\\n42 8 84 \\n') == '8 84 42 \\n', \"5\"\n",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\nassert solution('''\n2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4 3 6 12'\nassert solution('6') == '6 3 12 4 8'\nassert solution('2') == '2 1'\nassert solution('2') == '2 1'",
        "num_ids_2": 27,
        "num_ids_4": 49
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '3 4 2 1'\nassert solution('6') == '9 3 6 12 4 8'\nassert solution('2') == '1000000000000000000 3000000000000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8'\nassert solution('6\\n42 28 84 126\\n') == '126 42 84 28'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '9 3 6 12 4 8', 'Wrong'\nassert solution('4') == '126 42 84 28', 'Wrong'\nassert solution('2') == '3000000000000000000 1000000000000000000', 'Wrong'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"3 4 8 6\"\nassert solution(\"5\") == \"3 4 8 6 7\"\nassert solution(\"8\") == \"3 4 8 6 7 8\"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"126 42 84 28\"\nassert solution(\"4\") == \"3 4 8 6\"\n",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8 \nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28 \nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000 \n",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"3 4\"\nassert solution(\"6\") == \"9 3 6 12 4 8\"\nassert solution(\"1000000000000000000 3000000000000000000\") == \"126 42 84 28\"",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\n\nassert solution('''4\n42 28 84 126\n''') == '126 42 84 28'\n\nassert solution('''3\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '8'\nassert solution('10') == '11'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n-1 2 5 8 11\n''') == '1 7 3 5'\n\nassert solution('''\n6\n3 5 4 7 10 12\n''') == '3 5 4 7 10 12'\n\nassert solution('''\n10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\n''') == '-9 -7 -5 -3 -1 -4'\n\nassert solution('''\n5\n3 2 5 4 7\n''') == '-1 -2 3 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 5 4 7 10\\n\") == \"3\\n7 3 5\"\nassert solution(\"5\\n-1 2 5 8 11\\n\") == \"1\\n8\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 3 4''') == '2'\nassert solution('''5\n-1 2 5 8 11''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n-1 2 5 8 11\n''') == '1 8 5'\nprint(solution('''4\n-1 2 5 8 11\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 5 4 7 10 12\") == \"2 5 7\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"5 8 11\"\nassert solution(\"5\\n-1 -2 -5 -8 -11\") == \"1 -11\"",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '8'\nassert solution('1') == '8'\nassert solution('6') == '1'\nassert solution('-1 2 5 8 11') == '8 2 5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n-1 2 5 8 11\") == \"1\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\"\nassert solution(\"4\\n-1 2 5 8 11\") == \"2\"\nassert solution(\"1\\n-1 2 5 8 11\") == \"4\"\nassert solution(\"1\\n-1 2 5 8 11\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"1\\n7 3 5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n-1 2 5 8 11''') == '1 3 5'\nassert solution('''8\n-1 2 5 8 11''') == '8'\nassert solution('''6\n-1 2 5 8 11''') == '1 3 5'\nassert solution('''4\n-1 2 5 8 11''') == '1 3'\nassert solution('''3\n-1 2 5 8 11''') == '1 2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"1 1 1\") == \"1 1\"\nassert solution(\"1 2 1\") == \"1 1\"\nassert solution(\"4 2 1\") == \"1 1\"\nassert solution(\"4 3 1\") == \"0 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3 3\n''') == '0 2'\nassert solution('''\n0 2\n''') == '0 2'\nassert solution('''\n0 1 1\n''') == '0 0'\nassert solution('''\n2 2 2\n''') == '0 0'\nassert solution('''\n2 1 1\n''') == '0 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3 3\n''') == '0 2'\nassert solution('''\n10 10 3\n''') == '10 10'\nassert solution('''\n0 10 3\n''') == '10 10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('2 2 3') == '0 2'\nassert solution('2 1 3') == '1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '0 2'\nassert solution('2 3 3') == '0 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 3') == '0 2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"0 2\"\nassert solution(\"1 1 1\") == \"0 1\"\nassert solution(\"2 5 3\") == \"0 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"1 1 1\") == \"0 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"102\") == \"3\"\nassert solution(\"103\") == \"3\"\nassert solution(\"104\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100\n''') == '3'\nassert solution('''\n1000000\n''') == '1'\n\n'''\nUsing the formula, we can determine the remaining balance after one year by,\n\nremaining balance = balance (1 + r) ^ (years * 12) - 100\n\nSo, the last line of code is,\n\nremaining balance = (1 + 1) ^ (years * 12) - 100 = (1 + r) ^ (years * 12) - 100\n\nThe first equation, r = 1 %, means,\n\nr * (1 + r) ^ (years * 12) - 100 = (1 + r) ^ (years * 12) - 100 = 1 % * (1 + 1) ^ (years * 12) - 100\n\nWe know,\n\nr * (1 + r) ^ (years * 12) - 100 = (1 + 1) ^ (years * 12) - 100\n\nSo, we know,\n\nr * (1 + r) ^ (years * 12) - 100 = 1 % * (1 + 1) ^ (years * 12) - 100\n\nNow, (1 + 1) ^ (years * 12) - 100 = (1 + r) ^ (years * 12) - 100\n\nWe know,\n\n1 + 1 = r\n\nSo, we know,\n\n1 + r = (1 + r)\n\nSo, the last line of code is,\n\nremaining balance = (1 + r)\n\nSo, the total number of years is years * 12, and the final balance is remaining balance * (1 + r) * (1 + r) ^ (years * 12)\n\nFor example, if the year is 1, then the remaining balance is,\n\nremaining balance = 100\n\nSo, the final balance is 100 * (1 + r) * (1 + r) ^ (1 * 12)\n\nThe final balance is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12)\n\nSo, the final number of years is,\n\nfinal balance * (1 + r) * (1 + r) ^ (1 * 12)\n\nSo, the final number of years is 1 * 12\n\nFinally, the final number of years is,\n\nfinal balance * (1 + r) * (1 + r) ^ (1 * 12) = final balance\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12)\n\nThe final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r)\n\nSo, the final number of years is,\n\nfinal balance = remaining balance * (1 + r) * (1 + r) ^ (1 * 12) * (1 + r) ^ (1 * 12) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1 + r) * (1",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"100\"\n) == \"1\"\nassert solution(\n    \"101\"\n) == \"2\"\nassert solution(\n    \"102\"\n) == \"3\"\nassert solution(\n    \"103\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('103') == '3'\nassert solution('1000') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '3'\nassert solution('103') == '3'\nassert solution('104') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('101') == '3'\nassert solution('102') == '2'\nassert solution('103') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"104\") == \"3\"\nassert solution(\"105\") == \"4\"\n\n----\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('103') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"103\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n''') == '9'\nassert solution('''4\n''') == '9'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n''') == '9'\nassert solution('''\n2\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '9'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '9'\nassert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('2') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n') == '6'\nassert solution('2\\n') == '9'\n\n\"\"\"\n\nfrom math import gcd",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 4 6''') == '10'\nassert solution('''4\n3 4 6''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '2'\nassert solution('7') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n3 4 6\n''') == '10'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2 3\") == \"2\"\nassert solution(\"2 2 3 4\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\nassert solution(\"3\\n3 4 6\") == \"10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('4\\n2 3 4') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('6 6') == 'Yes'\nassert solution('4 4') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('100') == 'No'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'Yes'\nassert solution('5') == 'No'\nassert solution('100') == 'Yes'\nassert solution('10000') == 'No'\n\n###\n\nclass Solution:\n    def doublet(self, d1, d2):\n        return d1 == d2 and d1 == d2\n    \n    def doublet_counter(self, N, rolls):\n        c = 0\n        for i in range(N - 2):\n            if self.doublet(rolls[i], rolls[i + 1]):\n                c += 1\n        return c >= 3\n    \n    def solution(self, stdin: str) -> str:\n        N = int(stdin)\n        rolls = [int(line) for line in stdin.split('\\n')]\n        return \"Yes\" if self.doublet_counter(N, rolls) else \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('4 5') == 'Yes'\nassert solution('4 5 2 6 7') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\"\"\"\n\nn = int(input())\nd1, d2 = map(int, input().split())\nd3, d4 = map(int, input().split())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\") == \"Yes\"\nassert solution(\"10\\n1 2 3 4 5 2 4 6 5 2\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 2 4 6 5 2 3\") == \"Yes\"\nassert solution(\"10\\n1 2 3 4 5 2 4 6 5 2 3 4\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 2 4 6 5 2 3 4 5\") == \"Yes\"",
        "num_ids_2": 36,
        "num_ids_4": 83
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sorted(stdin.splitlines())) == \"Yes\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '3'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\n\"\"\"\n\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"6\") == \"8\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4\"\n    ) == \"1\"\nassert solution(\n    \"1\"\n    ) == \"1\"\nassert solution(\n    \"5\"\n    ) == \"1\"\nassert solution(\n    \"2\"\n    ) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '3'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"4\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('4\\n3 6 5 1') == 'No'\nassert solution('6\\n3 4 5 1 2 7') == 'Yes'\nassert solution('6\\n3 5 4 1 2 7') == 'No'\nassert solution('6\\n3 6 5 1 2 7') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"5\\n10 9 6 1 2 4 3\") == \"Yes\"\nassert solution(\"6\\n7 12 7 4 1 2 3\") == \"No\"\n",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3 8 5 1\\n') == 'Yes'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n8 5 1\n''') == 'Yes'\nassert solution('''4\n3 8 5 1\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5\\n\"\n    \"3 8 5 1\"\n) == \"Yes\"\nassert solution(\n    \"4\\n\"\n    \"3 8 5 1\"\n) == \"No\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 8 5 1\n''') == 'Yes'\nassert solution('''5\n1 2 4 3 2\n''') == 'No'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"Yes\"\nprint(solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"702\"\nassert solution(\"10 2\") == \"702\"\nassert solution(\"5 2\") == \"202\"\nassert solution(\"1 2\") == \"202\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '-1'\nassert solution('2') == '1'\nassert solution('3') == '702'\n\n\"\"\"\n\nN, M = list(map(int, stdin.split()))\ns = list(map(int, stdin.split()))\nmin_num = 10**9\n\nfor i in range(1, N):\n    min_num = min(min_num, s[i] * (10 ** (i - 1)) + s[i - 1])\nprint(min_num)\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '702'\nassert solution('3 1') == '-1'\nassert solution('1 1') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '702'\nassert solution('3 3') == '702'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"702\", \"Your solution is not correct.\"\nassert solution(\"3 3\") == \"702\", \"Your solution is not correct.\"\nassert solution(\"2 1\") == \"0\", \"Your solution is not correct.\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"6 5\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"123\"\nassert solution(\"12343\") == \"12343\"\nassert solution(\"12345\") == \"12343\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('1 2\\n1 2\\n1 2') == '-1'\nassert solution('3 3\\n1 7\\n3 2') == '702'\n\n'''\n",
        "num_ids_2": 43,
        "num_ids_4": 62
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"702\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"10 9\") == \"1000\"\nassert solution(\"-1 1\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '9', 'SAMPLE TEST FAILED'\nassert solution('1000000 50') == '8', 'SAMPLE TEST FAILED'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 10') == '27'\nassert solution('3 200') == '39'\nassert solution('3 1000') == '7680'\nassert solution('10 10') == '40'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"9\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '9'\nassert solution('13 2') == '9'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 2\") == \"9\"\nassert solution(\"1 3\") == \"9\"\nassert solution(\"2 3\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"15 10\") == \"75\"\nassert solution(\"20 30\") == \"95\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"10 10\") == \"18\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 2\"\n) == \"9\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 1 1\n1 1 3\n1 3 1\n1 3 3\n2 2 2\n3 1 1\n3 1 3\n3 3 1\n3 3 3''') == '9'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('-9') == '1011'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-9') == '1011'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('-9') == '1011'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-9') == '1011'\nassert solution('-10') == '1010'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"101\"\nassert solution(\"9\") == \"1001\"\nassert solution(\"-5\") == \"100101\"\nassert solution(\"-9\") == \"100001\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"-9\") == \"1011\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"-9\") == \"1011\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1011'\nassert solution(input()) == '1011'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-5\") == \"10101\"\nassert solution(\"-10\") == \"10101010101\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-9') == '1011'\nassert solution('-10') == '1010'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"4 8\") == \"12\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"8 4\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"2 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 5\n4 9\n2 4\n''') == '12'\nassert solution('''2 1\n1 1\n''') == '0'\nassert solution('''2 2\n5 5\n3 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '12'\nassert solution('2 10') == '20'\nassert solution('2 5') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"2 4\") == \"12\"\nassert solution(\"2 3\") == \"12\"\nassert solution(\"3 5\") == \"20\"\nassert solution(\"3 2\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5\\n4 9') == '12'\nassert solution('2 5\\n2 4') == '6'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 5\") == \"12\"\nassert solution(\"4 9\") == \"24\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 5\\n'\n    '4 9\\n'\n    '2 4\\n'\n) == '12'\n\nassert solution(\n    '2 10\\n'\n    '2 5\\n'\n    '2 6\\n'\n) == '10'\n\nassert solution(\n    '1 5\\n'\n    '5 7\\n'\n    '10 7\\n'\n) == '18'\n\nassert solution(\n    '1 10\\n'\n    '1 7\\n'\n    '10 7\\n'\n) == '16'\n\nassert solution(\n    '3 3\\n'\n    '1 2\\n'\n    '3 3\\n'\n) == '12'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 5\n4 9\n2 4\n''') == '12'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '12'\nassert solution('5 6') == '12'\nassert solution('5 7') == '12'\nassert solution('5 8') == '11'\nassert solution('5 9') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('5\\n10 4 8 5 3') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\nassert solution(\"4\\n10 7 8 3\") == \"1\"\nassert solution(\"6\\n1 4 5 2 3\") == \"5\"",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '0'\nassert solution('7') == '1'\nassert solution('8') == '1'\nassert solution('9') == '2'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '2'\n\"\"\"\n\nfrom typing import List\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n = int(stdin)\n        h = list(map(int, stdin.split()))\n\n        if len(h) == 1:\n            return str(1)\n        \n        max_h = max(h)\n        max_i = h.index(max_h)\n        res = 1\n        prev_max_h = max_h\n\n        for i in range(max_i+1, n):\n            if h[i] > prev_max_h:\n                res += 1\n                prev_max_h = max(prev_max_h, h[i])\n        return str(res)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5 4 8 7 3\") == \"2\"\nassert solution(\"5 2 9 5 4 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '1'\nassert solution('10') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0'\nassert solution('5') == '2'\nassert solution('15') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\nassert solution(\"6\\n0 0 0 0 0 0\") == \"1\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == '2'\nassert solution('1\\n10 4 8 7 3') == '2'\nassert solution('1\\n2 3 4 5') == '1'\nassert solution('1\\n3 4 5') == '0'\nassert solution('1\\n2') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"1 2 2 4 5\"\n    ) == \"1\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 2 3 4 5\"\n    ) == \"2\"\n\nassert solution(\n    \"3 2\\n\"\n    \"1 2 3 4 5\"\n    ) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 3''') == '1'\nassert solution('''4 4\n1 2 2 3''') == '0'\nassert solution('''5 6\n1 2 3 4 5''') == '1'\nassert solution('''5 6\n1 2 3 4 5''') == '0'\nassert solution('''10 7\n1 3 5 7 11 15 19 21 25''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"5 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 3 3') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\nassert solution('5 3\\n') == '1'\nassert solution('5 3\\n') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_1) == \"1\"\nassert solution(example_input_2) == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 4 2 3\") == \"3\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"7 3\") == \"5\"\nassert solution(\"10 10\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n2\n4\n''') == '1', \"Example 1\"\nassert solution('''9 1\n1 2 2 4 2 3\n\n''') == '2', \"Example 2\"\nassert solution('''10 5\n1 2 2 4 2 3\n\n''') == '3', \"Example 3\"\nassert solution('''10 5\n1 2\n\n''') == '4', \"Example 4\"\nassert solution('''10 5\n1 2\n1 2\n\n''') == '0', \"Example 5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution_2() == \"4\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3\n''') == '4'\nassert solution('''5 1\n1\n''') == '1'\nassert solution('''10 1\n1 2 3 5 6 7 8 9 10\n''') == '2'\nassert solution('''18 1\n
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('6 5') == '4'\nassert solution('7 5') == '4'\nassert solution('8 6') == '5'\nassert solution('1') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n1 2 2 4 2 3\") == \"4\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\") == \"4\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"4 3 2\") == \"4\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 4 4\") == \"16\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"10\\n9\\n1000\\n42000000000000\\n\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    10 1 3\n    7 3 2\n    1 1000 1\n    1000000000000 42 88\n''') == '1000'\nassert solution('''\n    4\n    4 1 2\n    5 1 2\n    2 1 2\n    5 2 1\n''') == '42000000000000'\nassert solution('''\n    1\n    10 1\n    10 1\n    10 1\n    ''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n5 4 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 3') == '10'\nassert solution('7 3 2') == '7'\nassert solution('1 1000 1') == '1000000000000'\nassert solution('1000000000000 42 88') == '42000000000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10 1 3\\n7 3 2') == '10\\n9\\n1000\\n42000000000000'\nassert solution('2\\n8 1 3\\n5 3 2\\n10 1 3') == '8\\n9\\n1000\\n42000000000000'\nassert solution('3\\n1 10 1\\n1 3 2\\n1000 1\\n1000000000000 42\\n10 1 3') == '10\\n9\\n1000\\n42000000000000'\nassert solution('4\\n8 1 3\\n5 3 2\\n10 1 3\\n1 1000000 1\\n1000000000000 42\\n10 1 3') == '8\\n9\\n1000\\n42000000000000'\nassert solution('5\\n10 1 3\\n5 3 2\\n1 10 1\\n1 1000000 1\\n1000000000000 42\\n10 1 3') == '10\\n9\\n1000\\n42000000000000'",
        "num_ids_2": 69,
        "num_ids_4": 170
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n 10 1 3\\n 7 3 2\\n 1 1000 1\\n 1000000000000 42 88') == '10 9 1000 42000000000000'\nassert solution('5\\n 10 1 3\\n 7 3 2\\n 1 1000 1\\n 1000000000000 42 88') == '9 1000 42000000000000'\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 1 1\n3 3 1\n2 2 1\n4 4 1\n''') == '10\\n'\nassert solution('''2\n1 1 1\n2 2 1\n1 1000 1\n1 1000000 1\n''') == '1000\\n'\nassert solution('''5\n1 1 1\n2 2 1\n2 3 1\n3 3 1\n2 2 1\n1 1000 1\n''') == '42000000000000\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5 5 2\") == \"9\\n1000\\n42000000000000\\n\"\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10'\nassert solution('1\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n3\\n10\\n20\\n40\\n') == '9'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '2'\nassert solution('100 5') == '199'\nassert solution('5 5') == '1000'\nassert solution('1 1') == '1'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\") == \"0\"\nassert solution(\"2\\n4\") == \"1\"\nassert solution(\"1\\n3\") == \"2\"\nassert solution(\"4\\n8\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 6\n3 4 5\n''') == '2'\nprint(solution('''3 6\n3 4 5\n'''))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 6\n3 4 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 4, 5]) == '2'\nassert solution([3, 4, 6]) == '1'\nassert solution([3, 4, 7]) == '0'\nassert solution([3, 4, 8]) == '1'\nassert solution([3, 4, 9]) == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '2'\nassert solution('3 6') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 5\") == \"2\"\nassert solution(\"3 4 5\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"1 4\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 6\n3 4 5\n\"\"\") == \"2\"\n\"\"\"\n1.\n4,4,4\n\n2.\n5,5,5\n\n3.\n2,3,3,3\n\n4.\n1,2,2,2,2,2,2,2\n\"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 4 5\n1 2 3 4 5''') == '2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nhoge\\ne\\nhoge\\n\\n\\n\") == \"No\"\nassert solution(\"4\\nhoge\\n\\n\\n\\n\") == \"Yes\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\nassert solution('''2\nhoge\nenigma\n''') == 'Yes'\nassert solution('''3\nhoge\nenga\n''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nhoge\nhoge\nenigma''') == 'No'\nassert solution('''6\nhoge\nhoge\nenigma\nenigma\nenigma\nenigma''') == 'Yes'\nassert solution('''1\nhoge''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n\nfrom itertools import permutations\n\nn = int(input())\nwords = input().split(\" \")\nwords = list(map(lambda x: x.lower(), words))\n\nresult = []\nfor i in range(1, n+1):\n    result += list(map(lambda x: x[0] == x[-1], list(permutations(words, i))))\n\nprint(\"Yes\" if all(result) else \"No\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\neinstein\\n') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\nassert solution('''5\ntakahashi\ntakahashi\ntakahashi\ntakahashi\n''') == 'Yes'\nassert solution('''4\nhello\nhello\nhello\nhello\n''') == 'Yes'\nassert solution('''3\nparis\nparis\nparis\n''') == 'No'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"10 1\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1,1]) == '6', 'Wrong!'\nassert solution([2,2]) == '3', 'Wrong!'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n\") == \"6\"\nassert solution(\"1 1\\n\") == \"3\"\nassert solution(\"5 5\\n\") == \"15\"\nassert solution(\"0 0\\n\") == \"1\"\nassert solution(\"100 101\\n\") == \"100\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"10 2\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '6'\nassert solution('10 12') == '18'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 4') == '7'\nassert solution('3 5') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"1234567890\") == \"1234567890\"\nassert solution(\"a\") == \"x\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 51,
        "num_ids_4": 77
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"xyz\") == \"xyz\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\"\"\"\nimport re\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'xxxxxxx'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"xxxxxxx\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\n----------------------------------------------------------------------\n\nInput:\n5\nsardine\n\nOutput:\nxxxxxxx\n\nReplacing every character in S with x results in xxxxxxx.\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\n\"\"\"\n\nfrom typing import List\nimport unittest\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 1 1 3\\n') == 'Yes'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"15\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"18\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 3\\n\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"8\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"9\\n9 9 9 9 9 9 9 9\") == \"No\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('3\\n1 2 1 3') == 'No'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '1'\nassert solution('3 2 1') == '0'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 -10') == '1'\nassert solution('2 3 -10') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 -10\") == \"1\"\nassert solution(\"2 3 -10\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"3 1 3\") == \"2\"\nassert solution(\"3 2 4\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 3, -10]) == \"1\"\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 -10\") == \"1\", \"Test 1 failed\"\nassert solution(\"2 3 -10\") == \"1\", \"Test 2 failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 -10\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1900') == '100'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"N\"\n) == \"100\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('10') == '10'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2000') == '100'\nassert solution('8000') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1900\") == \"100\"\n\"\"\"\n\nimport sys\n\nN = int(sys.stdin.readline().strip())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('900') == '101'\nassert solution('1000') == '1'\nassert solution('5000') == '5'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '100'\n\n\"\"\"\n\nN = int(input())\n\nmoney = 1000\nchange = 0\n\nwhile money >= N and money!= N + 1:\n    if money == N:\n        change += 1\n        break\n    change += 1\n    money = money * 10\n\nchange = change + money - N\n\nprint(change)\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('123') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"20\") == \"1\"\nassert solution(\"35\") == \"1\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"5\") == \"20\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"\nimport sys\nimport math\n\ninput = lambda: sys.stdin.readline().rstrip()\n\nn = int(input())\nal = list(map(int, input().split()))\nbl = list(map(int, input().split()))",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3 5 2\n4 5\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n3 5 2\n4 5\n''') == '9'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 5 2\\n4 5') == '9'\nassert solution('2\\n3 5 2\\n4 5') == '9'\nassert solution('3\\n5 4\\n1 2 3') == '7'\nassert solution('4\\n4 5\\n1 2 3') == '7'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n3 5 2\n4 5\n''') == '9'\nassert solution('''\n2\n3 6\n4 5\n''') == '2'\nassert solution('''\n3\n2 3 2\n4 5\n''') == '6'\nassert solution('''\n3\n2 1 5\n3 2\n''') == '6'\nassert solution('''\n4\n4 3 2 4\n1 4\n2 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 5, 2]) == 9\nassert solution([4, 5, ]) == 0\nassert solution([1, 5, 3]) == 0\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '18'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 3 10 20') == 'No War'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('1 10 2 20') == 'No War'\nassert solution('1 1 1 1') == 'No War'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 10 20') == \"No War\"\nassert solution('3 2 10 20') == \"War\"\nassert solution('1 2 3 4') == \"War\"\nassert solution('2 1 3 4') == \"No War\"\nassert solution('3 4 5 6') == \"War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'War'\nassert solution('2 2 10 20') == 'No War'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"War\"\nassert solution(\"\"\"\n    3\n    2 10 20\n    8 15 13\n\"\"\") == \"War\"\nassert solution(\"\"\"\n    5\n    1 2 3 4 5\n    1 2\n    2 3\n    3 4\n    4 5\n\"\"\") == \"War\"\nassert solution(\"\"\"\n    5\n    1 2 3 4\n    1 2\n    3 4\n    4 5\n    5 4\n\"\"\") == \"War\"\nassert solution(\"\"\"\n    5\n    1 2 3 4\n    1 2\n    3 4\n    4 5\n    5 4\n\"\"\") == \"War\"\n",
        "num_ids_2": 15,
        "num_ids_4": 25
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"War\"\nprint(solution.__doc__)\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"4 5 10 20\") == \"War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"No War\"\nassert solution([3, 2, 10, 20]) == \"War\"\nassert solution([3, 2, 10, 20, 21]) == \"War\"\n",
        "num_ids_2": 32,
        "num_ids_4": 50
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"2\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(open(0).read()) == '6'\nprint(solution(stdin))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('4') == '9'\nassert solution('10') == '36'\nassert solution('11') == '7'\nassert solution('5') == '42'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"6\"\nassert solution(\"4\\n1\\n4\\n\") == \"7\"\nassert solution(\"5\\n3\\n4\\n5\\n\") == \"5\"\n\nimport math",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n0\\n0\") == \"0\"\nassert solution(\"4\\n3\\n0\\n0\") == \"1\"\nassert solution(\"5\\n4\\n1\\n1\") == \"1\"\nassert solution(\"10\\n10\\n0\\n0\") == \"10\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('2 2') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n4 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n2 3 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('5\\n1 2 3 4 5') == '0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 53
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '0'\n\n\"\"\"\n\nN = int(input())\nW = list(map(int, input().split()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2 3\") == \"0\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('2\\n5 5') == '0'\nassert solution('5\\n-5 -3') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"3 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3 3\\n'\n    '3 2 1\\n'\n    '1 2 3\\n'\n    '4 5 6\\n'\n    ) == '6\\n'\nassert solution(\n    '4 3\\n'\n    '1 6 3 4\\n'\n    '5 10 7 8\\n'\n    '9 2 11 12\\n'\n    ) == '2\\n'\nassert solution(\n    '3 4\\n'\n    '1 6 3 4\\n'\n    '5 10 7 8\\n'\n    '9 2 11 12\\n'\n    ) == '0\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == \"6\"\nassert solution('''\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == \"2\"\nassert solution('''\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == \"6\"\nassert solution('''\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == \"2\"\nassert solution('''\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\nprint(solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n'''))\nprint(solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n'''))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\nOutput\n2''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\nOutput\n2''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n\nassert solution('''\n    4 3\n    3 2 1\n    1 2 3\n    4 5 6\n''') == \"6\"\n\nassert solution('''\n    3 3\n    3 2 1\n    1 2 3\n    4 5 6\n''') == \"0\"\n\nassert solution('''\n    4 3\n    1 2 3\n    4 5 6\n    7 8 9\n    10 11 12\n''') == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5 10 2 3 14 5\n''') == '5'\nassert solution('''2\n1 100\n''') == '99'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\") == \"99\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n10 2 3 14 5\n\n''') == '5'\nassert solution('''\n2\n1 100\n\n''') == '99'\nassert solution('''\n6\n5 10 2 3 14 5\n\n''') == '5'\nassert solution('''\n2\n1 100\n\n''') == '100'\nassert solution('''\n3\n1 100\n\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"5\", \"10\", \"2\", \"3\", \"14\", \"5\"]) == \"5\"\nassert solution([\"2\", \"100\"]) == \"99\"\n\n\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '5'\nprint('All tests passed!')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 100\n''') == \"99\"\nassert solution('''\n5\n5 10 2 3 14 5\n''') == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution(\"7\\n1 0 1 0 1 0 1\") == '3'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n0 1 1 1\n''') == '2'\n\nassert solution('''\n2\n0 0 0\n''') == '0'\n\nassert solution('''\n2\n0 0 0\n''') == '0'\n\nassert solution('''\n3\n0 0 0\n''') == '0'\n\nassert solution('''\n4\n0 0 1 0 1\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0 1\\n\") == \"3\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"0\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\nassert solution(\"2\\n0 0\\n\") == \"0\"\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == '2'\nassert solution('''\n6\n0 1 0 1 1 0\n''') == '3'\nassert solution('''\n7\n1 0 1 1 1 0 1\n''') == '3'\nassert solution('''\n3\n0 0 0\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == \"2\"\nassert solution('6') == \"3\"\nassert solution('7') == \"0\"\nassert solution('3') == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == '2'\n\nassert solution('''\n6\n0 1 0 1 1 0\n''') == '3'\n\nassert solution('''\n7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution('''\n3\n0 0 0\n''') == '0'\n\nassert solution('''\n1\n0 0\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3\n1 0 1 0 1\n\n''') == '2'\n\nassert solution(\n'''\n7\n0 0 0 0 0 0 0\n\n''') == '0'\n\nassert solution(\n'''\n3\n1 0 1 1 0\n\n''') == '1'\n\nassert solution(\n'''\n5\n0 1 0 1 0 1\n\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('25') == '0'\nassert solution('27') == '1'\nassert solution('56') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1000000000\") == \"0\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n3\n3\n3\n5\n5\n5''') == '1'\nassert solution('''7\n1\n2\n2\n4\n4\n4\n5''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('8') == '1'\nassert solution('9') == '1'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nprint('Solution is correct.')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\nparmel\\nemmental\\nedam\\ncolby\\ngruyere\\nasiago\\n\") == '4'\n\nprint(solution(input()))\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == '3'\nassert solution('6') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3'\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == '4'\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"9\") == \"5\"\nassert solution(\"10\") == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"brie soft\", \"camembert soft\", \"feta soft\", \"goat soft\", \"muenster soft\", \"asiago hard\", \"cheddar hard\", \"gouda hard\", \"swiss hard\"]) == \"3\"\nassert solution([\"parmesan hard\", \"emmental hard\", \"edam hard\", \"colby hard\", \"gruyere hard\", \"asiago hard\", \"parmesan hard\"]) == \"4\"\nassert solution([\"parmesan hard\", \"brie soft\", \"muenster soft\", \"feta soft\", \"gouda hard\", \"gouda soft\", \"parmesan hard\"]) == \"1\"\n\n\n\"\"\"\n\n\n\nN=int(input())\ncheeses=[]\nfor _ in range(N):\n    cheeses.append(input())\ncheeses.sort()\ncheeses.sort(key=lambda x:x[1])\ncheeses.sort(key=lambda x:x[0])\n",
        "num_ids_2": 104,
        "num_ids_4": 153
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"3\"\nassert solution(\"6\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\nparmesan hard\nedam hard\ncolby hard\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n\"\"\") == \"1\"\n\n\"\"\"\n\nsolution('''\n\n3\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\n''')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9') == \"3\"\nassert solution('6') == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    brie soft\n    camembert soft\n    feta soft\n    goat soft\n    muenster soft\n    asiago hard\n    cheddar hard\n    gouda hard\n    swiss hard\n''') == '3'\nassert solution('''\n    parmesan hard\n    emmental hard\n    edam hard\n    colby hard\n    gruyere hard\n    asiago hard\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 1 2 1\n3 2 1 1\n\"\"\") == \"1 0 0 2\"\nassert solution(\"\"\"\n4\n0 1 2 1\n3 2 1 1\n\"\"\") == \"0 0 0 1 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 0 0 2 0 0 4'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 0 0 2 0 2 4'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0 1 2 1\n3 2 1 1\n\"\"\") == \"\"\"\n1 0 0 2 \n\"\"\"[1:-1]\n\nassert solution(\"\"\"\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n\"\"\") == \"\"\"\n0 0 0 1 0 2 4\n\"\"\"[1:-1]\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2', \"First\"\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4', \"Second\"\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 0 0 2 0 2 4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n0') == '1'\nassert solution('1\\n1\\n1') == '0'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"00\") == \"0\"\nassert solution(\"11\") == \"1\"\nassert solution(\"01\") == \"0\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input) == \"1\"\nassert solution(input) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0\n1\n1\n0\n''') == '0'\nassert solution('''\n0\n1\n1\n0\n''') == '1'\n'''\n--\n\n---Input\n0\n1\n1\n1\n\n---Output\n1\n'''\n---Output\n1\n\n'''\n-'''\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n1\n0\n''') == '0'\nassert solution('''1\n1\n0\n0\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\n\nclass Solution:\n    def run(self):\n        while True:\n            try:\n                s = input()\n                if s:\n                    print(s)\n                    if s == '1' or s == '0':\n                        print(s)\n                        break\n                else:\n                    break\n            except EOFError:\n                break\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\\n1\\n1\\n0\\n\") == \"0\"\nassert solution(\"0\\n0\\n1\\n0\\n\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\\n\") == \"0\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([0, 1, 1, 0]) == 0\nassert solution([1, 1, 0, 1]) == 1\nassert solution([0, 1, 0, 1]) == 1\nassert solution([1, 0, 1, 0]) == 0\nassert solution([1, 1, 1, 1]) == 1\n\n\n\"\"\"\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"10 100 200\") == \"No\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"0 0 0\") == \"No\"\nassert solution(\"12345 67890\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 10 20') == 'Yes','sample #1'\nassert solution('10 20 30') == 'No','sample #2'\nassert solution('1 1 1') == 'Yes','sample #3'\nassert solution('1 1 5') == 'Yes','sample #4'\nassert solution('1000 15 80') == 'Yes','sample #5'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes', \"Right answer is Yes\"\nassert solution('5 5 5') == 'No', \"Right answer is No\"\nassert solution('10 2 4') == 'No', \"Right answer is No\"\nassert solution('10 10 10') == 'Yes', \"Right answer is Yes\"\nassert solution('11 15 10') == 'No', \"Right answer is No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1000 15 80\n''') == 'Yes'\nassert solution('''1000 15 80\n''') == 'Yes'\nassert solution('''1000 15 80\n''') == 'Yes'\nassert solution('''1000 15 80\n''') == 'Yes'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1 10 5') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'Yes'\nassert solution('1000 10 80') == 'No'\nassert solution('1000 15 80') == 'No'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1000 15 80\n''') == 'Yes'\nassert solution('''0 1 2\n''') == 'No'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 1000 80') == 'Yes'\nassert solution('1000 100 80') == 'No'\nassert solution('1000 -20 80') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 100 80\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\") == \"No\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89') == 'Yes'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84') == 'Yes'\nassert solution('5\\n1 2 3\\n3 2 3\\n3 2 3') == 'No'\nassert solution('1\\n1 2 3\\n3 2 3') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 68,
        "num_ids_4": 88
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\") == \"Yes\", \"84 97 66\"\nassert solution(\"79 89 11\") == \"Yes\", \"79 89 11\"\nassert solution(\"61 59 7\") == \"Yes\", \"61 59 7\"\nassert solution(\"7\") == \"Yes\", \"7\"\nassert solution(\"89\") == \"Yes\", \"89\"\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'Yes'\n\nassert solution('''96 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84''') == 'No'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30''') == 'Yes'\nassert solution('''80 93 25\n85 78 90\n30 47 40\n55 52 77\n44 75 26\n78 75 9\n62 69 82\n98 10 31\n61 62 34\n65 25 18\n43 75 92\n54 78 92\n94 86 82\n47 46 12\n26 69 21\n97 20 29\n89 18 18\n36 40 97\n20 23 27\n75 69 29\n92 86 9\n60 57 26\n80 15 67\n88 47 43\n81 96 59\n39 11 79\n56 92 77\n99 13 83\n76 44 16\n29 12 25\n74 27 65\n70 23 65\n74 57 97\n34 21 98\n31 53 20\n10 17 17\n30 52 70\n33 35 50\n23 65 73\n85 35 12\n40 87 25\n79 89 19\n42 17 42\n38 47 86\n85 67 85\n62 29 69\n97 87 86\n89 76 67\n98 51 78\n51 57 81\n63 17 60\n70 19 67\n48 47 19\n70 51 79\n88 65 31\n75 62 35\n66 37 48\n62 55 70\n50 39 61\n11 43 50\n92 60 35\n12 65 32\n45 69 77\n29 74 13\n17 20 73\n78 16 20\n97 87 40\n92 87 76\n22 36 62\n93 83 95\n86 48 67\n58 23 36\n78 45 44\n38 69 43\n59 86 87\n89 86 69\n81 69 57\n51 87 81\n99 94 88\n57 63 48\n90 12 92\n70 48 63\n92 16 21\n88 43 35\n74 60 23\n83 96 67\n60 30 34\n57 18 49\n47 38 39\n95 39 87\n16 89 64\n73 25 76\n81 47 72\n83 60 48\n16 73 29\n79 43 62\n87 25 52\n78 40 34\n35 87 50\n78 47 21\n32 34 49\n83 75 17\n63 18 94\n51 37 78\n58 60 96\n75 46 83\n87 42 31\n37 43 37\n46 77 40\n33 65 43\n49 63 68\n32 46 65\n74 12 66\n88 81 25\n89 32 42\n98 78 10\n65 24 42\n78 16 22\n98 83 76\n62 13 49\n78 67 23\n51 96 33\n70 24 40\n65 36 45\n96 73 95\n33 53 87\n55 98 15\n58 85 43\n89 24 92\n41 43 97\n55 11 88\n47 79 43\n88 67 25\n57 72 10\n94 71 34\n88 44 20\n92 52 79\n99 96 17\n11 68 30\n88 60 65\n67 25 10\n93 70 51\n72 13 21\n50 25 66\n15 29 13\n11 52 65\n39 83 87\n83 28 23\n77 95 50\n75 11 68\n65 87 21\n82 78 35\n33 62 45\n55 37 73\n22 99 17\n30 14 81\n55 82 35\n90 60 33\n76 94 52\n91 16 13\n69 33 86\n69 56 23\n37 92 20\n61 59 83\n52 80 76\n95 61 60\n54 72 30\n73 67 64\n37 16 74\n89 52 57\n87 59 86\n82 46 21\n86 69 63\n72 34 30\n29 15 94\n51 63 10\n54 68 47\n87 16 40\n88 63 31\n69 76 94\n73 65 22\n98 78 38\n68 87 92\n13 63 59\n89 17 51\n86 69 77\n99 17 79\n77 44 23\n78 15 26\n25 37 21\n39 27 47\n17 39 33\n51 45 86\n95 63 98\n88 79 84\n32 35 22\n55 43 28\n76 60 47\n38 48 40\n50 50 37\n80 25 79\n46 69 61\n11 26 88\n39 56 92\n28 65 96\n32 13 44\n33 31 77\n37 42 69\n34 85 21\n58 34 95\n12 79 51\n63 43 82\n87 43 27\n98 10 66\n67 89 15\n86 98 68\n87 68 64\n51 41 12\n50 94 89\n95 80 50\n33 89 62\n37 22 16\n70 76 50\n88 92 35\n39 82 12\n43 18 69\n86 48 35\n81 79 85\n57 18 95\n87 38 74\n59 81 34\n68 50 23\n88 34 10\n11 89 23\n63 61 48\n67 50 25\n44 99 81\n57 66 95\n15 63 48\n89 30 66\n78 15 33\n37 20 38\n82 61 22\n76 46 86\n60 74 89\n51 94 79\n59 61 38\n59 78 48\n88 56 70\n25 25 44\n77 44 32\n70 79 83\n39 70 32\n78 17 63\n32 63 40\n51 79 86\n35 46 80\n51 23 29\n74 85 14\n79 16 56\n96 65 59\n65 48 63\n37 60 94\n37 39 25\n50 32 26\n99 88 26\n92 85 72\n88 46 17\n89 74 76\n44 16 95\n70 31 82\n69 66 56\n37 74 20\n78 12 49\n47 67 75\n37 89 23\n15 10 95\n38 29 31\n81 33 24\n65 24 49\n89 79 22\n79 29 17\n67 96 86\n70 74 23\n80 86 57\n88 47 34\n37 46 17\n73 75 58\n58 94 11\n89 52 79\n11 12 75\n88 16 11\n37 84 14\n95 36 94\n73 94 59\n65 85 96\n61 89 64\n35 23 59\n74 69 65\n83 37 50\n65 60 43\n66 92 65\n32 27 13\n59 30 23\n34 85 23\n87 76 21\n98 64 79\n58 59 65\n92 86 23\n48 56 79\n65 58 31\n33 87 38\n79 43 55\n80 92 56\n90 29 88\n89 41 14\n64 69 49\n82 50 82\n67 67 59\n55 20 35\n39 89 66\n37 23 48\n92 30 77\n83 46 26\n41 27 20\n62 71 55\n55 63 86\n91 76 77\n79 37 33\n70 88 39\n62 14 86\n23 12 62\n37 14 85\n75 95 57\n30 59 20\n25 68 66\n77 70 56\n23 32 94\n47 59 55\n77 79 87\n32 84 20\n78 88 61\n50 69 38\n75 92 63\n51 58 23\n62 70 46\n90 67 87\n94 14 78\n89 83 62\n94 26 62\n43 44 30\n80 37 23\n76 54 20\n81 17 61\n95 51 52\n87 65 30\n73 32 94\n26 74 29\n65 12 40\n79 13 79\n69 11 78\n41 96 73\n68 43 44\n43 68 78\n11 78 17\n15 46 84\n43 43 85\n79 64 23\n62 45 26\n86 19 62\n12 12 24\n67 32 50\n91 44 60\n94 33 28\n34 64 21\n40 14 69\n16 62 69\n98 86 44\n96 83 86\n12 81 41\n50 25 37\n85 46 79\n75 30 63\n74 78 46",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'No'\nassert solution('7') == 'No'\nassert solution('89') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('5 2') == '30'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"41 1\") == \"31\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '30'\nassert solution('41 2') == '30'\nassert solution('8 2') == '31'\nassert solution('1 10') == '-1'\nassert solution('4 5') == '30'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"40 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\nassert solution(\"41 -2\") == \"-1\"\nassert solution(\"40 -2\") == \"30\"\nassert solution(\"41 -2\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"41 2\") == \"30\"\nassert solution(\"40 2\") == \"30\"\nassert solution(\"43 2\") == \"29\"\nassert solution(\"45 2\") == \"28\"\n\n---> 8",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"41 2\") == \"30\"\nassert solution(\"51 3\") == \"0\"\nassert solution(\"5 2\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"41 2\\n5 5\") == \"30\"\nassert solution(\"41 2\\n10 9\") == \"30\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"30\"\nassert solution(\"3 3\") == \"30\"\nassert solution(\"4 4\") == \"30\"\nassert solution(\"10 10\") == \"30\"\nassert solution(\"3 4\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 2') == '30'\nassert solution('8 1') == '-1'\nassert solution('7 3') == '60'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 2') == '30'\nassert solution('10 2') == '30'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"0 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '2'\nassert solution('0 1') == '1'\nassert solution('2 0') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 0') == '0'\nassert solution('1 2') == '2'\nassert solution('1 3') == '1'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"0 10\") == \"10\"\nassert solution(\"1 50\") == \"49\"\nassert solution(\"2 10\") == \"9\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"5\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"0 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"0 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"1 4\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 4') == '4'\nassert solution('2 2') == '2'\nassert solution('1 2') == '2'\nassert solution('3 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 5\n''') == '5'\nassert solution('''0 1\n''') == '1'\nassert solution('''0 2\n''') == '2'\nassert solution('''0 3\n''') == '3'\nassert solution('''0 4\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\"\nassert solution(\"2\\n8 2 5\\n\") == \"2\"\nassert solution(\"3\\n6 7 2\\n\") == \"3\"\nassert solution(\"2\\n6 2 5\\n\") == \"1\"\nassert solution(\"10\\n1 3 2 3 4 5 6 7 8 9\\n\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('9') == '2'\nassert solution('9') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n5\\n7\\n7') == '2'\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '2'\nassert solution('8') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1 2 4 1\\n') == '1 2 3 4'\nassert solution('2\\n4 3 1 2\\n') == '3 1 2 4'\nassert solution('7\\n6 3 2 4 1 2 1\\n') == '3 1 2 4 1 2'\nassert solution('1\\n2 3 1 2 3 3 2\\n') == '1 2 3'\nassert solution('2\\n3 5 2 1 4 6 7\\n') == '1 2 3 4 5 6 7'\n",
        "num_ids_2": 43,
        "num_ids_4": 92
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1 2 3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 1 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3 1 2\"\nassert solution(\"2\") == \"3 1 2\"\nassert solution(\"1\") == \"1 2 3\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1\") == \"3 1 2\"\nassert solution(\"4 5 2 1\") == \"2 3 1 4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3 1\n''') == '3 1 2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 2 3 4 5', 'Wrong answer'\n\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('4\\n1 3 2 1') == '1 3 2 1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"2\") == \"1 2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 5 100') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 7 100') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution(\"4 5 1\")) == \"4\"\nassert solution(solution(\"4 5 2\")) == \"4\"\nassert solution(solution(\"4 5 3\")) == \"0\"\nassert solution(solution(\"4 5 4\")) == \"0\"\nassert solution(solution(\"4 5 5\")) == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 9 100') == '9'\nassert solution('10 9 5') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 10 100\") == \"0\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"10 7 100\"]) == \"9\"\n\ninput_numbers = []\ninput_numbers = input().split()\nA = int(input_numbers[0])\nB = int(input_numbers[1])\nX = int(input_numbers[2])\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(input())\nB = int(input())\nX = int(input())\n\nA = int(",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_values) == '9'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 12 100\") == \"0\"\nassert solution(\"10 0 100\") == \"0\"\nassert solution(\"10 1 100\") == \"0\"\nassert solution(\"10 11 100\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"11 11\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3 5\\n'\n    '150 100 200\\n'\n    '100 150 200\\n'\n    '100 200 150\\n') == '2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('15') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5') == '2'\nassert solution('6 5') == '2'\nassert solution('2 5') == '1'\nassert solution('4 5') == '1'\nassert solution('6 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\", \"Wrong\"\nassert solution(\"4 5\") == \"2\", \"Wrong\"\nassert solution(\"1 5\") == \"3\", \"Wrong\"\nassert solution(\"2\") == \"1\", \"Wrong\"\nassert solution(\"2 10\") == \"1\", \"Wrong\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 150, 150, 100, 200]) == \"2\"\nassert solution([1, 150, 150, 100, 200]) == \"3\"\nassert solution([1, 150, 150, 100, 200]) == \"4\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"4\", \"150\", \"140\", \"100\", \"200\"]) == \"2\"\nassert solution([\"4\", \"150\", \"140\", \"100\", \"200\"]) == \"2\"\nassert solution([\"4\", \"150\", \"140\", \"100\", \"200\"]) == \"2\"\nassert solution([\"4\", \"150\", \"140\", \"100\", \"200\"]) == \"2\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '4'\nassert solution('5 2 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 150') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Yes\", \"Should be Yes\"\nassert solution(\"1 100\") == \"No\", \"Should be No\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 1\") == \"No\"\nassert solution(\"3 2\") == \"No\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('10 5') == 'Yes'\nassert solution('10 5') == 'No'\n\"\"\"\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nitems = sorted(map(int, sys.stdin.readline().split()))\n\ntotal_votes = 0\n\nfor i in range(len(items)):\n    if total_votes < (1/M * len(items)):\n        total_votes += items[i]\n        if total_votes >= (1/M):\n            print('Yes')\n            break\n    else:\n        print('No')\n        break\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4 1\n    5 4 2 1\n    ''') == 'Yes'\n\nassert solution('''\n    4 2\n    3 5 4 1\n    ''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 1\n5 4 2 1\"\"\") == \"Yes\"\nassert solution(\"\"\"4 1\n4 2 1 3 2\"\"\") == \"No\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"Yes\", \"Should return 'Yes'\"\nassert solution(\"3 1\") == \"No\", \"Should return 'No'\"\nassert solution(\"4 2\") == \"Yes\", \"Should return 'Yes'\"\nassert solution(\"5 2\") == \"No\", \"Should return 'No'\"\nassert solution(\"6 2\") == \"Yes\", \"Should return 'Yes'\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"3 5 1 4 2\") == \"No\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"1\",\"1\",\"2\"]) == \"Yes\"\nassert solution([\"1\",\"1\",\"2\",\"3\",\"3\",\"3\",\"3\"]) == \"No\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"5 4 2 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n..#\n###\n''') == '5'\nassert solution('''3 5 4\n###.#\n##.##\n###.#\n''') == '7'\nassert solution('''5 5 6\n#####\n#####\n#####\n##.##\n##.##\n''') == '13'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\") == \"5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5'\nassert solution('''\n1 1 1\n.#\n.##\n''') == '0'\nassert solution('''\n1 1 0\n..\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 2\\n..#\\n###\\n') == '5'\nassert solution('4 5 2\\n##.#\\n##.#\\n##.#\\n##.#\\n') == '1'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''3 4 5\n####\n###\n##''') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3 2\n.#\n###''') == '5'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"1 1 2\") == \"3\"\nassert solution(\"3 3 2\") == \"3\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 2\n..#\n###\n''') == '5'\nassert solution('''\n5 3 2\n..#\n###\n''') == '10'\nassert solution('''\n5 5 2\n..#\n###\n''') == '11'\nassert solution('''\n5 5 2\n##..\n###\n''') == '2'\nassert solution('''\n5 5 2\n###..\n##..\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2020 20080\") == \"2\"\nassert solution(\"2020 2000\") == \"2\"\nassert solution(\"2020 2020\") == \"1\"\nassert solution(\"2020 2020 20\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('123 123') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 2041') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == None\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2020 2040') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2020 2040') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2020 2040''') == '2'\nassert solution('''20 20''') == '2020 2020'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 20') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == \"AC\", \"First\"\nassert solution(\"ATCODER\") == \"WA\", \"Second\"\nassert solution(\"ATCODER\") == \"WA\", \"Third\"\nassert solution(\"ATCODER\") == \"WA\", \"Fourth\"\nassert solution(\"ATCODER\") == \"AC\", \"Fifth\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AA\") == \"WA\"\nassert solution(\"AtCoder\") == \"WA\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('ABCD') == 'WA'\nassert solution('ABC') == 'WA'\nassert solution('AC') == 'AC'\nassert solution('ABCD') == 'AC'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AoCoder') == 'AC'\nassert solution('atcoder') == 'WA'\nassert solution('AtCoderC') == 'WA'\nassert solution('') == 'WA'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('AtCoder') == 'WA'\nassert solution('ATCO') == 'WA'\nassert solution('AotCoder') == 'WA'\nassert solution('Atco') == 'WA'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"AtCoder\") == \"WA\"\nassert solution(\"Atcoder\") == \"WA\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"AC\"\nassert solution(input()) == \"WA\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"AC\"\nassert solution(input()) == \"WA\"\nassert solution(input()) == \"AC\"\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"AtCoder\") == \"WA\"\nassert solution(\"ATA\") == \"WA\"\n\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'AC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"12345\") == \"2\"\nassert solution(\"12345\") == \"2\"\nassert solution(\"12345\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1233\") == \"3\"\nassert solution(\"2234\") == \"4\"\nassert solution(\"3333\") == \"5\"\nassert solution(\"4444\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1214') == '2'\nassert solution('12345') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1324') == '33333'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1214') == '2'\nassert solution('1224') == '2'\nassert solution('1111') == '1'\nassert solution('1324') == '3'\nassert solution('1215') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1214') == '2'\nassert solution('1324') == '33333'\nassert solution('13333') == '33344'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1324') == '1333224444'\nassert solution('1214') == '2'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1324') == '3'\nassert solution('1214') == '2'\nassert solution('123') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1324\") == \"33333\"\nassert solution(\"1214\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"5 5 3 4 2\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('10 5 8 2 1') == 'NO'\nassert solution('2 5 3 4 1') == 'YES'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n5 2 3 4 1\n''') == 'YES'\nassert solution('''1\n1 2 3 4\n''') == 'NO'\nassert solution('''3\n1 2 3\n''') == 'NO'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == 'NO'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == 'NO'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"NO\"\nassert solution(\"10\\n3 4 2 5 1 6 7 8 9 10\") == \"YES\"\nassert solution(\"10\\n3 4 2 5 1 7 6 8 9 10\") == \"NO\"\nassert solution(\"10\\n3 4 2 5 1 7 8 9 10\") == \"NO\"\n",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\n\n\"\"\"\nn = int(input())\nn_list = list(map(int, input().split()))\nans = 'YES'\n\nfor i in range(n-1):\n    for j in range(i+1,n):\n        if n_list[i] > n_list[j]:\n            n_list[i],n_list[j] = n_list[j],n_list[i]\n\nfor i in n_list:\n    if i == 1:\n        ans = 'NO'\n\nprint(ans)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('5 2 3 4') == 'NO'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nprint(solution(input()))\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"201920181\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000000000000000000000000000000000') == \"4\"\nassert solution('201920181') == \"4\"\nassert solution('1000000000000000000000000000000000') == \"33\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\nassert solution('3121') == '2'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('2438') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3''') == '2'\nassert solution('''3\n1 2 -1\n-6 -12 6''') == '0'\nassert solution('''4\n0 0 0 0\n1 2 3\n\n''') == '3'\nassert solution('''5\n1 2 -1\n-6 -12 6\n\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\\n\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3\\n\") == \"3\\n\"\nassert solution(\"3\\n-1 -2 3\\n-6 -12 6\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 105
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"3\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3\\n\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 79
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '0'\nassert solution('''4\n0 0 0 0\n1 2 3 4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"\n4\n-1 -2 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n2 4 7 11 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2 3\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n0 0 0 0\n1 2 3\n\"\"\") == \"0\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2 3\\n2 4 7 11 3\") == \"2\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\") == \"0\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\") == \"3\"",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n2 4 7\n''') == '2'\n\nassert solution('''4\n0 0 0 0\n1 2 3\n\n''') == '0'\n\nassert solution('''4\n1 2 3\n2 4 7\n''') == '3'\n\nassert solution('''2\n1 2 3\n2 4 7\n''') == '1'\n\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"6\"\nassert solution(\"15\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n'\n                'abaca?b') == '5'\nassert solution('7\\n'\n                'bambarbia') == '0'\nassert solution('9\\n'\n                'bambarbia') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"7\") == \"6 2\"\nassert solution(\"9\") == \"6 2\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"10\") == \"10\"\nassert solution(\"10\") == \"0\"\nassert solution(\"abaca?b\") == \"5\"\nassert solution(\"zabbbcc\") == \"6\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\ncodeforces\\ndodivthree\\n') == '5\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\n'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == \"5\"\nassert solution('7') == \"6\"\nassert solution('9') == \"10\"\nassert solution('2') == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6\ncodeforces\ndodivthree\n\n\"\"\") == \"5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\nabaca?b\nzabbbcc\n\n''') == \"5\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\ncodeforces\ndodivthree\n\nOutput\n5\n7 8\n4 9\n2 2\n9 10\n3 1\n\nInput\n7\nabaca?b\nzabbbcc\n\nOutput\n5\n6 5\n2 3\n4 6\n7 4\n1 2\n\nInput\n9\nbambarbia\nhellocode\n\nOutput\n0\n''') == '''\n5\n7 8\n4 9\n2 2\n9 10\n3 1\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '6', 'first example'\nassert solution('7') == '7','second example'\nassert solution('8') == '8', 'third example'\nassert solution('9') == '9', 'fourth example'\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '3'\nassert solution('11') == '4 4 4 4 4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 3 4 5'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5 -6 -7 -8 -9 -10') == '4 4 4 4 4 4'\n",
        "num_ids_2": 25,
        "num_ids_4": 93
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"4\"\nprint(solution(input()))\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3 4') == '1 2'\nassert solution('1 1 2 2 2') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 2 2 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3\\n7 7\\n2 3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n1 1'",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n-1 -1 -1 -1 -1\\n') == '3'\nassert solution('10\\n-3 -2 -1 0 1 2 3 4 5 6 7 8 9\\n') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\n",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"4\"\nassert solution('3') == \"4\"\nassert solution('4') == \"3\"\nassert solution('5') == \"4\"\nassert solution('6') == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 1 2 1 2\n''') == '2 3'\nassert solution('''\n7\n-1 -2 -3 -4 -5 -6 -7\n''') == '7 7 7 7 7'\nassert solution('''\n2\n1\n''') == '2 2'\nassert solution('''\n4\n1 1 1 1\n''') == '4 4 4 4'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '3 4 4 4 4 3 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4 4 1 1'\nassert solution('''\n5\n1 1 1 1 1\n''') == '4 4'\nassert solution('''\n7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '7 7 7 7 7'\n\nassert solution('''\n4\n4 1 2 2 1 5 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([6, 11, 45, 1, 10, 12, 11, 7, 19, 3, 3]) == 7\nassert solution([4, 2, 4, 10, 10]) == 0\nassert solution([5, 2, 3, 7, 19, 3, 3]) == 12\nassert solution([6, 11, 45, 1, 10, 12, 11, 7, 19, 3, 3]) == 1\nassert solution([5, 2, 4, 10, 10]) == 0\n\n\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"12\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"5 2\") == \"12\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"7\"\nassert solution(input_2) == \"0\"\nassert solution(input_3) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 11\\n\") == \"7\\n\"\nassert solution(\"4 2\\n\") == \"12\\n\"\nassert solution(\"5 2\\n\") == \"0\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7\n''') == '7'\nassert solution('''4 2\n2 78 4 10\n''') == '12'\nassert solution('''5 2\n3 7 19 3 3\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 11\n2 45 10 12 11 7\n''') == '7'\n\nassert solution('''\n3 2\n2 78 4 10\n''') == '12'\n\nassert solution('''\n5 2\n3 7 19 3 3\n''') == '0'\n\nassert solution('''\n4 2\n2 78 4 10\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('5\\n-2 -3 5 -1\\n') == '6'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '50'\nassert solution('2\\n5 1\\n') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('4\\n1 2 3 4\\n') == '4'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\"\nassert solution(\"10\\n0 0\\n\") == \"0\"\nassert solution(\"100\\n1 1\\n\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 5\n''') == '9'\n\nassert solution('''\n3\n2 5\n''') == '9'\n\nassert solution('''\n4\n2 5\n3 4\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '9'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 5\n''') == '9'\nassert solution('''\n3\n0 1\n''') == '1'\nassert solution('''\n5\n1 1 1 1 1\n''') == '5'\nassert solution('''\n4\n0 1 2 3\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n2 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3\n4 5 6\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3\n-1 -2 -3\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3\n-2 -3 -4\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3\n-1 -2 -3\n\"\"\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\") == \"110\"\nassert solution(\"1 3 3 100\") == \"110\"\nassert solution(\"1 2 2 10\") == \"10\"\nassert solution(\"2 3 2 10\") == \"10\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5 2 1\\n3 1 2 10\\n2 2 1 10') == '110'\nassert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 3') == '110'\nassert solution('1 2 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '110'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\") == \"110\"\nassert solution(\"10 2 2\") == \"120\"\nassert solution(\"10 5 5\") == \"120\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '110'\nassert solution('2 3 2 10') == '110'",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 1 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 3 3 100') == '110'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('5 5 5 3') == '110'\nassert solution('3 4 1 0 0 1 2') == '6'\nassert solution('0 0 0') == '0'\n\nprint(solution(input()))\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('10 10 10 10') == '10'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"9\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '3'\nassert solution('5\\n5 6 2 3 4') == '3'\nassert solution('6\\n1 2 3 4 5') == '4'\nassert solution('8\\n7 8 9 6 5 4 3 2') == '3'\nassert solution('6\\n1 2 3 4 5') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 4 6 3\n''') == '5'\nassert solution('''4\n1 4 6 3\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1 3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4 6 3') == '5'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('2 7 6 4') == '8'\nassert solution('3 9 4 6') == '5'\nassert solution('3 2 3 4') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2.276142373\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == \"2.276142\"\nassert solution('5') == \"5.333333\"\nassert solution('4') == \"2.666667\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749'\nassert solution('5\\n0 0\\n1 0\\n0 1\\n2 2\\n0 1\\n3 3\\n3 1\\n') == '2.0'\nassert solution('8\\n-1000 -1000\\n-1000 -1000\\n-1000 -1000\\n-1000 -1000\\n-1000 -1000\\n-1000 -1000\\n-1000 -1000\\n-1000 -1000\\n') == '3.4028235'\nassert solution('20\\n100 100\\n0 0\\n0 100\\n0 0\\n100 100\\n100 100\\n100 100\\n0 0\\n0 100\\n0 0\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n0 0\\n100 100\\n100 100\\n100 100\\n0 0\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n",
        "num_ids_2": 71,
        "num_ids_4": 1438
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2.276142'\nassert solution('4') == '3.336031'\nassert solution('5') == '3.807963'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1\n''') == '2.2761423749'\n\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n0 0\n1 0\n0 1\n\"\"\") == \"2.2761423749\"\nassert solution(\"\"\"5\n-4 -3\n-4 -3\n-4 -3\n-4 -3\n-4 -3\n\"\"\") == \"3.7714550085\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2.27614'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.2761423749'\nassert solution('10') == '9.5223635517'\nassert solution('11') == '9.5223635517'\nassert solution('12') == '9.5223635517'\nassert solution('13') == '9.5223635517'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\nassert solution(\"3\") == \"2.2761423749\"\n\"\"\"\nfrom math import sqrt",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2.2761423...'\nassert solution('4') == '2.276142...'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"2 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"10 4\") == \"4\"\nassert solution(\"100 4\") == \"12\"\nassert solution(\"100 10\") == \"22\"\nassert solution(\"10 10\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 4\\n\") == \"4\"\nassert solution(\"7 12\\n\") == \"6\"\nassert solution(\"11 1\\n\") == \"8\"\nassert solution(\"21 1\\n\") == \"20\"\nassert solution(\"101 1\\n\") == \"100\"\n\nSample tests (randomly generated)\n------Sample test case 1------\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"12 4\") == \"4\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\n\nA, B = [int(item) for item in stdin.split(\" \")]\n\ntotal = 2 * (A + B)\nprint(total)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 4') == '4'\nassert solution('6 4') == '4'\nassert solution('2 6') == '6'\nassert solution('12 30') == '30'\nassert solution('3 3') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    8 4\n    ''') == '4', 'First'\n\nassert solution('''\n    12 4\n    ''') == '4', 'Second'\n\n\"\"\"\n\n\nfrom math import floor\n\na, b = map(int, input().split())\n\nc = (a * b) - floor(a / 2) - floor(b / 2)\nprint(c)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"50 100\") == \"50\"\n\"\"\"\n\nimport sys\nA, B = map(int, input().split())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n12 4\n''') == '4'\nassert solution('''\n20 4\n''') == '20'\nassert solution('''\n100 99\n''') == '0'\nassert solution('''\n100 99\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10000\n\n''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"3\"\nassert solution(\"1111\") == \"2\"\n\nprint(solution.__doc__)\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10000') == '3'\nassert solution('1234') == '5'\nassert solution('123456789') == '7'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100') == '3'\nassert solution('10000') == '3'\nassert solution('10000000') == '5'\nassert solution('10000000000') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10000') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n5\n2\n10''') == '3'\nprint('Test passed')",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '3'\n\nassert solution('10000') == '3'\n\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '4'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n3\n2\n3\n1\n2\n1\n2\n2\n''') == '3'\nassert solution('''2\n3\n2\n3\n4\n3\n3\n4\n5\n1\n1\n1\n2\n3\n2\n2\n1\n2\n''') == '4'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '1'\nassert solution('5 5') == '2'\nassert solution('5 5') == '1'\nassert solution('5 5') == '2'\nassert solution('10 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n') == '2'\nassert solution('3\\n5\\n8\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '10'\n",
        "num_ids_2": 43,
        "num_ids_4": 109
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '1'\nassert solution('3 5') == '3'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2 1 3\") == \"1\"\nassert solution(\"3 1 2 3\") == \"2\"\nassert solution(\"2 3 2\") == \"0\"",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('2 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4') == '1'\nassert solution('3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '1'\nassert solution('3 2') == '2'\nassert solution('2 3') == '2'\nassert solution('2 3 4') == '3'\nassert solution('3 1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\nprint('Correct!')\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0.5000000000'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.5'\nassert solution('5') == '0.49999999999999999999999999999999999999'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"0.5\"\nassert solution(\"10\") == \"0.3333333333333333\"\n\"\"\"\n\nfrom math import exp",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.5'\nassert solution('3') == '0.5'\nassert solution('4') == '0.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\"\nassert solution(\"5\\n\") == \"0.500000000\"\nassert solution(\"6\\n\") == \"0.500000000\"\nassert solution(\"7\\n\") == \"0.4950819672\"\nassert solution(\"8\\n\") == \"0.4950819672\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '0.5000000000'\nassert solution('5\\n') == '0.5000000000'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    4\n    ''') == '0.5000000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0.5000000000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0.5000000000\"\nassert solution(\"4\") == \"0.5000000001\"\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"0.5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == '2'\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == '2'\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == '2'\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == '2'\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == '2'\n",
        "num_ids_2": 43,
        "num_ids_4": 109
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('4\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '3'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '4'\n",
        "num_ids_2": 66,
        "num_ids_4": 99
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('5\\n1 2 1 1 0\\n1\\n2\\n1\\n1\\n') == '3'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('10') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6\n1\n1 2 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1\n1\n1 1",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n2 1\n3 1\n1\n2 0\n\n\"\"\") == \"2\", \"Wrong answer!\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"3\"\nassert solution(\"5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"4\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"1\"\nassert solution(\"5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"2\"\n\n\"\"\"\nimport itertools\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''5\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '4'\nassert solution('''2\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '1'\nassert solution('''15\n1\n2 1\n1\n1 1\n1\n2 0\n3 3\n3 1\n1 1\n1\n1 1\n1\n2 0\n4 4\n4 3\n3 1\n4 2\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == 'nikoand'\nassert solution('5') == 'nikon'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'heey', f\"Expected 'heey' but got '{solution('5')}'\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '22'\nassert solution('3') == '33'\nassert solution('4') == '444'\nassert solution('5') == '55555'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"nikoand\"\n'''\n\n\n\n'''\n14. Write a program to compute the frequency of the words from the input. The output should output words and their frequencies separated by space.\n\n-----Constraints-----\n - The words in the input are in lower case letters only.\n - Words are separated by single space.\n - The length of the input is less than 20000 characters.\n\n-----Input-----\nInput contains one line.\n\n-----Output-----\nPrint the words and their frequencies in the following format:\n\nword1: freq1\nword2: freq2\nword3: freq3\n...\nwordN: freqN\n\nFor example, if the input is:\n\nthe sun rises in the east and sets in the west.\n\nThen, the output should be:\n\nthe: 2\nsun: 1\nand: 1\nsuns: 1\nin: 2\nis: 2\nin: 1\nit: 1\n\n-----Sample Input-----\nword in the sun rises in the east and sets in the west.\n\n-----Sample Output-----\nthe: 2\nsun: 1\nand: 1\nsuns: 1\nin: 2\nis: 2\nin: 1\nit: 1\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"nikoandsolstice\") == \"nikoand...\"\nassert solution(\"nikoandsolstice\" * 10) == \"nikoand...solo...tastic...tsest\"\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"abc\"\nassert solution(\"2\") == \"abc\"\nassert solution(\"1\") == \"abc\"\nassert solution(\"15\") == \"...abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabc",
        "num_ids_2": 20,
        "num_ids_4": 1803
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"nikoandsolstice\", \"Solution is wrong!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == 'nikoand'\nassert solution('13') == 'nikoandsol'\nassert solution('49') == 'nikoandsol'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('test') == 'test'\nprint(solution('test'))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice\"\nassert solution(\"5\\nnikoandsolstice\") == \"nikoand...nikoandsolstice\"\nassert solution(\"1\\nnikoandsolstice\") == \"nikoandsolstice\"\n",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\n\n----------------------------------------",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"apples\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('apple') == 'apples'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\"\n\n'''\n\n\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        return stdin[0] + \"es\" if stdin[-1] == \"s\" else stdin + \"s\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('banana') == 'bannanas'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apples') == 'apples'\n\"\"\"\n\ns = stdin",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\nassert solution('applees') == 'apples'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"beetroot\") == \"beetroots\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\n\n\"\"\"\n\nN, K = list(map(int, input().split(' ')))\nA = []\nfor _ in range(N):\n    A.append(list(map(int, input().split(' '))))\n\nfor _ in range(K):\n    a = A[1:]\n    a.sort(key=lambda x: x[0], reverse=True)\n    A = a + A",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n2\n1 3\n1''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 1') == '2'\nassert solution('3 3') == '1'\n\"\"\"\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '1', \"Wrong answer\"\nassert solution(sample_input_2) == '0', \"Wrong answer\"\nassert solution(input) == '1', \"Wrong answer\"\n\"\"\"\nfrom math import factorial",
        "num_ids_2": 38,
        "num_ids_4": 53
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2\n1 3\n1\n3\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n2\n1 3\n1''') == '1'\nassert solution('''3 2\n2\n1 3\n1\n3\n\n''') == '1'\nassert solution('''\n9 4\n2\n2\n2\n2\n2\n2\n2\n1\n3\n1\n3\n4\n''') == '2'\nassert solution('''\n2 5\n2\n1\n1\n1\n1\n2\n2\n1\n1\n1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 28
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(5) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"100\") == \"100\"\nassert solution(\"12\") == \"12\"\nassert solution(\"12a\") == \"12\"\nassert solution(\"abaa\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\naabbbbaaca\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == '5'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n'+'aabbbbaaca') == '5'\nassert solution('100\\n'*20) == '35'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\nassert solution('aabbbbaaca') == '5'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '36'\nassert solution('aaabaaabaaabaa') == '30'\n",
        "num_ids_2": 24,
        "num_ids_4": 63
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"6\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1000000000000000\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''6\n3 2 5 6 8''') == '3'\nassert solution('''2\n1 2\n''') == '1'\nassert solution('''4\n7 2 8 9\n''') == '2'\nassert solution('''5\n1 1 1 1 1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"1\\n2 3\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\nassert solution(\"10\") == \"9\"\n\n'''\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''5\n5 2 4\n''') == '3'\nassert solution('''10\n5 2 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1000000000\") == \"100000000\"\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('5 2 4') == '3'\nassert solution('6 2 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''3\n5 2 4''') == '3'\nassert solution('''4\n1 5 7''') == '4'\nassert solution('''4\n1 5 7''') == '4'\nassert solution('''8\n7 3 2 1''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('1 1 1 3') == '3'\nassert solution('1 1 1 3') == '1'\nassert solution('1 1 1 3') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3') == '2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 2 1 3') == '2'\nassert solution('2 3 1 3') == '2'\nassert solution('2 2 2 3') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"10 3 6 4\") == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('2 1 1 2') == '2'\nassert solution('2 2 2 3') == '2'\nassert solution('2 1 1 3') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('4 -1 0 -3') == '4'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('4 1 1 3') == '3'\nassert solution('5 1 1 -3') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 1 3\n''') == '2'\nassert solution('''\n1 2 1 3\n''') == '3'\nassert solution('''\n2 3 2 3\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 1 1\") == \"2\"\nassert solution(\"6 3 4 5\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3') == '2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"2 5\") == \"Yes\"\nassert solution(\"3 5\") == \"No\"\nassert solution(\"5 5\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == \"Yes\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8\") == \"Yes\"\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('2 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10') == 'Yes'\nassert solution('3 8') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('3 3') == 'Yes'\n\"\"\"\nfrom itertools import combinations_with_replacement",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"3 9\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 8''') == 'Yes'\nassert solution('''2 2''') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 6\") == \"No\"\nassert solution(\"4 6\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"3 10\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n3 5\n1 2\n2 4\n3 4\n1 3\n''') == '3'\nassert solution('''\n8 9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '4'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3,3],[\"1 2\", \"1 3\", \"2 3\"]) == \"2\"\nassert solution([7, 8], [\"3 5\", \"2 4\", \"5 6\", \"3 4\", \"4 6\", \"1 5\", \"5 7\", \"1 4\", \"5 3\", \"1 6\", \"6 7\", \"5 6\", \"6 4\", \"4 7\", \"7 8\", \"6 5\", \"5 1\", \"1 2\"]) == \"4\"\n\n\"\"\"\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == '2'\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\n'''\n\n'''\nclass Solution:\n    def solution(self, stdin):\n        return 0",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n2 3\n1 2\n1 3\n2 3\n''') == '1'\n\nassert solution('''\n10 3\n3 9\n3 4\n2 4\n8 5\n5 7\n6 5\n4 6\n6 7\n5 7\n4 5\n6 6\n''') == '3'\n\nassert solution('''\n10 5\n5 7\n4 6\n6 7\n2 2\n1 1\n1 2\n2 3\n3 3\n4 4\n4 5\n5 6\n6 6\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\n'''\n\n\nfrom collections import defaultdict",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 3\") == \"2\"\nassert solution(\"1 2\\n1 3\") == \"2\"\nassert solution(\"3 2\\n1 3\") == \"2\"\nassert solution(\"3 2\\n3 2\") == \"2\"\nassert solution(\"3 3\\n1 2\\n1 3\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 3], [\"1 2\", \"1 3\", \"2 3\"]) == \"2\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution(\"2 3\\n1 2\\n1 3\\n2 3\") == '2'\nassert solution(\"2 3\\n1 2\\n1 3\\n2 3\") == '2'\nassert solution(\"2 3\\n1 2\\n1 3\\n2 3\") == '1'",
        "num_ids_2": 31,
        "num_ids_4": 77
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\n\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '1'\n\nassert solution('''3 5\n1 2\n1 3\n2 3\n3 4\n4 5''') == '4'\n\nassert solution('''7 7\n1 2\n1 3\n1 4\n1 5\n2 3\n2 6\n3 4\n3 6\n4 5\n4 7\n5 6\n5 7''') == '12'\n\nassert solution('''3 3\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6''') == '3'\n''')\n\n----------------------------------------------\n\nWrite a function:",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '18'\nassert solution('20 1') == '19'\nassert solution('10 0') == '1'\nassert solution('1 2') == '3'\nassert solution('6 6') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '18'\nassert solution('4 4') == '9'\nassert solution('3 0') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"10 1\") == \"13\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"5 3\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '18'\nassert solution('6 2') == '18'\nassert solution('5 7') == '25'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\", \"Wrong\"\nassert solution(\"4 2\") == \"12\", \"Wrong\"\nassert solution(\"6 5\") == \"14\", \"Wrong\"\nassert solution(\"30 5\") == \"22\", \"Wrong\"\nassert solution(\"40 5\") == \"22\", \"Wrong\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '18'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"18\"\nassert solution(\"10 5\") == \"23\"\nassert solution(\"4 1\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1\") == \"17\"\nassert solution(\"5 2\") == \"19\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2''') == '18'\nassert solution('''1 2''') == '3'\nassert solution('''3 4''') == '4'\nassert solution('''3 5''') == '4'\nassert solution('''4 5''') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == '12', 'First test fail'\nassert solution('7 4') == '28', 'Second test fail'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\\n2\\n4\"\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n7\n8\n9''') == '30'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"15\") == \"60\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15') == '60'\n\"\"\"\nimport math\n\ninput = input()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n') == 'Buzz'\nassert solution('10\\n') == 'FizzBuzz'\nassert solution('15\\n') == '60'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('5\\n') == '1\\n2\\n4\\n'\nassert solution('10\\n') == '1\\n2\\n4\\n5\\n7\\n8\\n10\\n13\\n14\\n16\\n17\\n19\\n20\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('15') == '60'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"FizzBuzz\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15') == '60'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('15') == '60', f'Expected 15 to be 60, but got {solution(\"15\")} instead.'\nassert solution('30') == '1000', f'Expected 30 to be 1000, but got {solution(\"30\")} instead.'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 3') == '3'\nassert solution('5 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 5') == '1'\nassert solution('3 7') == '4'\n\nimport math\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 1\n6 7 10 6 5\n''') == '8'\n\nassert solution('''\n5 2\n4 7 10 6 5\n''') == '7'\n\nassert solution('''\n7 5\n6 7 10 6 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\\n1 4\\n5\") == \"1\"\nassert solution(\"1 6\\n1 3\\n2 2\\n5\") == \"1\"\nassert solution(\"1 0\\n1 3\\n1\") == \"1\"\nassert solution(\"10 2\\n9 9\\n2 2\\n2\") == \"2\"\nassert solution(\"5 2\\n1 3\\n9 3\\n5\") == \"1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\") == \"8\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"10 9\") == \"2\"\nassert solution(\"10 9 5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3\\n4 5\\n') == '5'\nassert solution('1 5\\n4 6\\n') == '5'\nassert solution('1 2\\n3 4\\n') == '2'\nassert solution('2 3\\n2 4\\n') == '2'\nassert solution('2 4\\n2 3\\n') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 5\n1 2 3 4 5''') == '5'\nassert solution('''1 1\n1''') == '1'\nassert solution('''1 1\n1''') == '1'\nassert solution('''1 1\n1''') == '1'\nassert solution('''1\n1''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6') == '8'\nassert solution('1 2 3 4 5') == '6'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"8\"\nassert solution(\"7 5\") == \"6\"\nassert solution(\"6 5\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('1\\n3\\n') == '2'\nassert solution('2\\n3\\n') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"6 3\") == \"4\"\nassert solution(\"11 3\") == \"5\"\nassert solution(\"9 3\") == \"5\"\n\n----------------",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2\\n4') == '1'\nassert solution('2\\n4\\n1\\n3') == '1'\nassert solution('2\\n4\\n1\\n3') == '2'\n\n'''",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"1\", \"Invalid test\"\nassert solution(\"2\\n1\") == \"1\", \"Invalid test\"\nassert solution(\"2\\n2\") == \"2\", \"Invalid test\"\nassert solution(\"3\\n1\") == \"2\", \"Invalid test\"\nassert solution(\"5\\n2\") == \"2\", \"Invalid test\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n2 1''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == '6'\nassert solution('7 2') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 5\n2 3 4 7 8''') == '6'\nassert solution('''4 5\n2 3 4 7 8''') == '-1'\nassert solution('''4 5\n2 3 4 7 8''') == '6'\nassert solution('''10\n0 1 2 3 4 5 6 7 8 9''') == '-1'\nassert solution('''10\n3 6 5 4 7 8 9 10''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 31
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution() == \"-1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4') == '6'\nassert solution('7 2') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 4\n3 7 5 1 10 3 20\n''') == '6'\nassert solution('''\n7 2\n3 7 5 1 10 3 20\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20\n''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == \"6\"\nassert solution('''7 2\n3 7 5 1 10 3 20''') == \"-1\"\nprint(solution('''7 6\n3 7 5 1 10 3 20'''))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"6\"\nassert solution(input) == \"6\"\n\n\"\"\"\nfrom itertools import combinations\n\nstdin = \"\"\"\n10 4\n3 7 5 1 10 3 20\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\n\nassert solution('5 5') == '-1'\n\nassert solution('5 5') == '-1'\n\nassert solution('4 4') == '1 1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n.**.\\n..**.\\n.*.*.\\n.***\\n.*****\\n.***..\\n**.***\") == \"4 4 1\"\n\nassert solution(\"5 5\\n.*.*\\n.*.*\\n*.*.\\n.*.*\\n.....\\n\") == \"3 4 1\"\n\n\"\"\"\n\nimport numpy as np\nfrom numpy.core.defchararray import islower, isupper",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 4 1'\n\nassert solution('5 5') == '3 4 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n*.*\\n.*.*\\n*.*\\n\") == \"2\"\nassert solution(\"5 5\\n.*.\\n.*.\\n.*.\\n.*.\\n\") == \"-1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\\\n5 5\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n''') == '-1', 'First'\nassert solution('''\\\n5 5\n.*.*\n.*.*\n*.*.\n.*.*\n.*.*\n''') == '3 4 1', 'Second'\nassert solution('''\\\n5 5\n.*.*\n.*.*\n*.*.\n.*.*\n.*.*\n''') == '-1', 'Third'\nassert solution('''\\\n5 5\n.*.*\n.*.*\n*.*.\n.*.*\n.*.*\n''') == '3 4 1', 'Fourth'\nassert solution('''\\\n5 5\n.*.*\n.*.*\n*.*.\n*.*.\n.*.*\n''') == '3 4 1', 'Fifth'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('3 3') == '-1'\nassert solution('5 5') == '3 4 1'\nassert solution('5 5') == '3 5 2'",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n.....\\n') == '2 2 1'\nassert solution('6 8\\n.***.\\n****.\\n*****\\n*.*.*\\n.***.\\n***..\\n') == '3 3 1'\nassert solution('3 5\\n.***.\\n***..\\n*.*.*\\n.***.\\n***..\\n') == '3 4 1'\nassert solution('5 5\\n.***.\\n***..\\n***..\\n***..\\n***..\\n') == '3 5 2'\nassert solution('5 5\\n.*...\\n**.**\\n.*...\\n*.*.*\\n.....\\n') == '3 4 1'\n",
        "num_ids_2": 75,
        "num_ids_4": 149
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\") == \"3\\n-1\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n\") == \"3\\n-1\"\nassert solution(\"3 3\\n*.*\\n*.*\\n*.*\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\n",
        "num_ids_2": 94,
        "num_ids_4": 161
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 8\n........\n.*.*.\n..*.*.\n.*.*.\n........\n........\n6 5\n.***.\n*.*.*\n''') == \"3\"\nassert solution('''5 5\n.**.\n..**\n.***\n**..\n*.*.''') == \"2\"\n\nassert solution('''3 3\n*.*\n.*.\n*.*''') == \"3\"\nassert solution('''3 3\n.*.*\n.*.\n*.*''') == \"3\"\nassert solution('''5 5\n.*.*\n.***\n..**\n.*.*\n.....''') == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n''') == ''\nassert solution('''\na\n''') == ''\nassert solution('''\naa\n''') == 'aa'\nassert solution('''\naaa\n''') == 'aaa'\nassert solution('''\naaa\nbbbb\n''') == 'aaa'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == 'abc'\nassert solution(input()) == 'abcd'\n\n'''\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\ngood\n''') == '0'\nassert solution('''\n3\naaa\n''') == '3'\nassert solution('''\n10\nbad\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('good') == 0\nassert solution('aabc') == 2\nassert solution('aaa') == 3",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\ngood\n''') == 'good', \"1st example\"\nassert solution('''\naaa\n''') == 'aaa', \"2nd example\"\nassert solution('''\nab\n''') == 'ab', \"3rd example\"\nassert solution('''\n''') == '', \"4th example\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaa') == 'ab'\nassert solution('aaa') == 'def'\nassert solution('aaa') == 'aaa'\nassert solution('aaa') == 'aaa'\nassert solution('aaa') == 'aaa'\n\n\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('good') == 'good'\nassert solution('bad') == 'bad'\nassert solution('bad') == 'bad'\nassert solution('aa') == 'aa'\nassert solution('aaa') == 'aaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    6 5\n    1 5\n    2 1\n    1 4\n    3 1\n    6 1\n''') == 'YES', 'Wrong'\nassert solution('''\n    3\n    2 1\n    1 4\n    3 1\n''') == 'NO', 'Wrong'\nassert solution('''\n    1\n    1 2\n    2 3\n    3 4\n''') == 'YES', 'Wrong'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == 'YES', 'Wrong result'\nassert solution('5 5') == 'NO', 'Wrong result'\n'''",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n0 0 1 1 0\\n0 1 1 0 0\\n1 0 1 1 0\\n0 0 0 0 1\\n0 1 0 0 0\\n0 0 1 0 0\") == \"NO\"\nassert solution(\"1 2 3 4 5\\n0 0 1 1 0\\n0 1 1 0 0\\n1 0 1 1 0\\n0 0 0 0 1\\n0 1 0 0 0\") == \"YES\"\n\n---",
        "num_ids_2": 87,
        "num_ids_4": 136
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == 'NO'\nassert solution('5 6') == 'YES'\nassert solution('5 5') == 'YES'\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"NO\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('3 5') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution('''\n3 5\n2 2\n1 2\n5 5\n''') == '3 4'\nprint(solution('''\n2 4\n2 5\n1 6\n6 7\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n3 4\\n\"\nassert solution(\"5 3\") == \"1 2\\n5 6\\n7 8\\n\"\nassert solution(\"5 4\") == \"1 2\\n3 4\\n\"\n\n\"\"\"\n\nfrom itertools import combinations",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 5\\n'\n    '2 2\\n'\n    '1 2\\n'\n    '5 5\\n'\n    '2 2\\n'\n    '3 4\\n'\n    '3 4\\n'\n) == '1\\n0'\n\nassert solution(\n    '1 7\\n'\n    '1 7\\n'\n) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4'\nassert solution('1 7\\n1 7') == '0'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''\n3 5\n2 2\n1 2\n5 5\n''') == '3 4'\nassert solution('''\n1 7\n1 7\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 5\") == \"3 4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5\\n2 2\\n1 2\\n5 5') == '2 4'\nassert solution('1 7\\n1 7') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2 3') == '1\\n2\\n3'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '2'\nassert solution(input) == '5 and 7 satisfy the condition.'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('4 5 6 7') == '5'\nprint(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 9 2 3\n''') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 5') == '2'\nassert solution('1 2 5') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('3 4 7 2') == '2'\nassert solution('10 4 7 2') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('1 2 3') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 10 2 3\") == \"0\"\n\n[Finished in 0.1s]\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n\nIn the sample case, the numbers 4, 8, and 9 can be evenly divided by 2, 3, and 5 respectively.\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"12345\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"9876543210\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('54321') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123456789\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123456789\") == \"Yes\"\n\"\"\"\n\nN = input()\n\nprint(\"Yes\" if int(N) % 9 == 0 else \"No\")\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''123456789''') == \"Yes\", \"Error\"\n\n'''",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234567890\") == \"Yes\"\nassert solution(\"1234567891\") == \"No\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"1234\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\", \"Wrong Answer\"\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456') == 'No'\nassert solution('12345') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"12\") == \"2\"\nassert solution(\"123\") == \"3\"\nassert solution(\"1234\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('127') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '4'\nassert solution('6') == '3'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1''') == '1'\nassert solution('''3\n3''') == '3'\nassert solution('''8\n3''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('127') == '4'\nassert solution('5') == '-1'\nassert solution('12') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"16\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '4'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"2\"\nassert solution(\"1212\") == \"2\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('127') == '4'\nassert solution('100') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\n\"\"\"\n\nstdin = input()\n\nS = stdin.split()\nT = stdin.split()\n\nS = S[1:] + S[:1]\nT = T[1:] + T[:1]",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\n\n\"\"\"\n\nimport unittest\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'tokyoch'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('kyoto') == 'tokyo'\nassert solution('tokyo') == 'kyoto'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"hi\") == \"No\"\nassert solution(\"hihihi\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('kyoto') == 'tokyo'\nassert solution('tokyo') == 'kyoto'\n\"\"\"\n\n\"\"\"\nS = input()\nT = input()",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"name\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0\nassert solution('abcd') == 1\nassert solution('abcde') == 2\nassert solution('abcdef') == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('a') == '0'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"abcde\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('a') == '0'\nassert solution('') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 12 2''') == '2'\nassert solution('''13 18 3''') == '4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"2 2 2 2 2 2 2 2\") == \"2\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"20 9 5\") == \"5\"\nassert solution(\"6 2 6\") == \"6\"\nassert solution(\"-6 -6 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '2'\nassert solution('12 22 32 4') == '4'\nassert solution('6 5 3') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"5\"\nassert solution(\"9 8 2 3 10 2 1\") == \"3\"\n",
        "num_ids_2": 218,
        "num_ids_4": 234
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('10 7 6 4 5 2 1') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 12 2\n''') == '2'\n\nassert solution('''5 6 4\n''') == '4'\n\nassert solution('''6 11 9\n''') == '9'\n\nassert solution('''11 0 3\n''') == '3'\n\nassert solution('''0 2 4\n''') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6 2\") == \"2\"\nassert solution(\"8 12 2\") == \"2\"\nassert solution(\"9 5 4\") == \"4\"\nassert solution(\"1 5 3\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 12 2') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    input,\n) == '2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1024') == '2020'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '2020'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1024') == '2020'\nassert solution('99999') == '19998'\nassert solution('1') == '1'\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 1773
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"100\"\nassert solution(\"100\") == \"100\"\nassert solution(\"10000\") == \"10000\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1024\n\"\"\") == \"2020\"\n\nassert solution(\"\"\"3\n\"\"\") == \"0\"\n\nprint(solution(\"\"\"10\n\"\"\"))\nprint(solution(\"\"\"1\n\"\"))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"2020\"\nassert solution(\"1000\") == \"2020\"\nassert solution(\"1000\") == \"1020\"\nassert solution(\"500\") == \"1000\"\nassert solution(\"1000\") == \"1020\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('500') == '2000'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n''') == '2020'\nassert solution('''\n1024\n''') == '2024'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3''') == '5'\nassert solution('''2\n3\n7''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"5\"\n\nprint(solution(\"2\"))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '5'\nassert solution('5') == '5'\nassert solution('3') == '3'\nassert solution('12345') == '5'\nassert solution('1 4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"1 2 4\") == \"5\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n4\") == \"2\"\nassert solution(\"3\\n4\") == \"1\"\nassert solution(\"4\\n6\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 2') == '2'\nassert solution('2 2') == '2'\nassert solution('2 2 2') == '2'\nassert solution('3 2') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 10\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 10') == '3'\nassert solution('3 5') == '2'\nassert solution('5 7') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 10') == '3'\nassert solution('2 8') == '4'\nassert solution('1 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == '0', 'TEST 1 Failed'\nassert solution(2) == '1', 'TEST 2 Failed'\nassert solution(3) == '2', 'TEST 3 Failed'\nassert solution(4) == '3', 'TEST 4 Failed'\nassert solution(5) == '4', 'TEST 5 Failed'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4 10'\n) == '3'\n\nassert solution(\n    '4 20'\n) == '4'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"7 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CRS\") == \"1\"\nassert solution(\"CSR\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('CSS') == \"2\"\nassert solution('CSR') == \"2\"\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"2\"\nassert solution(\"\") == \"\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSS\") == \"2\"\nassert solution(\"CSCS\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''CSS\nCSR''') == '2'\nassert solution('''SSS\nSSR\nSSS''') == '2'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"TTTT\") == \"0\"\nassert solution(\"SSSS\") == \"2\"\nassert solution(\"RRRR\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('SSR') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"2\") == \"1 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 3 4 2\") == \"2\"\nassert solution(\"2\\n5 3 4 2\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 5 4 2') == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('5\\n1 3 5 4 2') == '2'\nassert solution('5\\n1 3 5 4 2') == '2'\nassert solution('5\\n1 3 5 4 2') == '2'\nassert solution('5\\n1 3 5 4 2') == '2'\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '2'\nassert solution('5\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n\"\"\"\n\nn = int(stdin.readline())\n\np = sorted(map(int, stdin.readline().split()))",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5.480\"\nassert solution(\"\") == \"5.480\"\nassert solution(\"-1\") == \"5.480\"\nassert solution(\"-2\") == \"5.480\"\nassert solution(\"-3\") == \"5.480\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5.480\"\nprint(solution())\n\"\"\"\n\nimport math\nimport sys\n\nn = int(input())\n\nx_points = []\ny_points = []\n\nfor _ in range(n):\n    x, y = map(float, input().split())\n    x_points.append(x)\n    y_points.append(y)\n\nx_points.sort()\ny_points.sort()\n\nx_point_distance = math.pow(((x_points[-1] - x_points[0])**2 + (y_points[-1] - y_points[0])**2), 0.5)\ny_point_distance = math.pow(((y_points[-1] - y_points[0])**2 + (x_points[-1] - x_points[0])**2), 0.5)\n\ndistance = x_point_distance + y_point_distance\n\nprint(distance)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"2.079\"\nassert solution(\"5\\n\") == \"5.000\"\nassert solution(\"8\\n\") == \"5.000\"\nassert solution(\"5\\n\") == \"5.000\"\nassert solution(\"10\\n\") == \"6.000\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\nassert solution('8') == '5.480'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\n",
        "num_ids_2": 101,
        "num_ids_4": 234
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"6.720\"\nassert solution(\"8\") == \"6.040\"\nassert solution(\"5\") == \"6.040\"\nassert solution(\"8\") == \"6.540\"\nassert solution(\"5\") == \"6.540\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"6.620\"\nassert solution(\"8\") == \"5.480\"\nassert solution(\"7\") == \"6.720\"\nassert solution(\"5\") == \"6.720\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6.720\"\nprint(solution())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1.5707963267949\"\nassert solution(\"3\") == \"2.356194490192345\"\nassert solution(\"4\") == \"2.449489742783178\"\n",
        "num_ids_2": 19,
        "num_ids_4": 53
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"1\"\nassert solution(\"5 26\") == \"2\"\nassert solution(\"5 15\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '4', solution('5 8')\nassert solution('7 10') == '2', solution('7 10')\nassert solution('5 16') == '1', solution('5 16')\nassert solution('5 26') == '-1', solution('5 26')\nassert solution('5 30') == '-1', solution('5 30')\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8\") == \"4\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == \"4\"\nassert solution('''\n7 10\n1 3 4 2 1 4 2\n''') == \"2\"\nassert solution('''\n5 15\n5 5 5 5 5\n''') == \"1\"\nassert solution('''\n5 26\n5 5 5 5 5\n''') == \"2\"\nassert solution('''\n5 16\n5 5 5 5 5\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 15') == '2'\nassert solution('5 26') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''5 10\n5 5 5 5 5\n''') == '2'\nassert solution('''5 15\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\nprint(solution(input()))\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3 \nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\n''') == '1 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1 2 3 1 3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == \"1 2 3\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == \"7 3 1 3\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3') == '1 2 3'\nassert solution('10 4') == '1 3 1 3'\nassert solution('15 2') == '1 1'",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"1 2 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == '1 2 3'\nassert solution(s2) == '1 2 3'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"7 3\\n\"\n    \"1 2 3 2 4 3 1\\n\"\n) == \"1 2 3\"\n\nassert solution(\n    \"10 4\\n\"\n    \"1 3 1 3 10 3 7 7 12 3\\n\"\n) == \"7 3 1 3\"\n\nassert solution(\n    \"15 2\\n\"\n    \"1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\\n\"\n) == \"1 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1 2 3'\nassert solution('10 4') == '1 3 1 3'\nassert solution('15 2') == '1 1'",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '5'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '0'\nassert solution('''\n8 9\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4\\n1 2 3 4') == '5'\nassert solution('2 4\\n1 2 3 4') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'\nassert solution('3') == '0'\nassert solution('6 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '0'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '5'\nassert solution('''\n4 2\n1 2 3 4\n10 8\n5 3\n4 3\n''') == '0'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n5') == '1'\nassert solution('1\\n1') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nxxxxxxxx\n''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\nxxxxxx\n''') == '0'\nassert solution('''\n5\nxxoxx\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nxyxxiii\n''') == '1'\nassert solution('''10\nxxxxxxxxxx\n''') == '8'\nassert solution('''6\nxxxiii\n''') == '0'\nassert solution('''5\nxxoxx\n''') == '0'\nassert solution('''10\nxxxxxxxxx\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('10') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(5) == \"xxxxx\"\nassert solution(10) == \"xxxxxxxxx\"\nassert solution(6) == \"xxxxxiii\"\nassert solution(11) == \"xxxxxiii\"\nassert solution(15) == \"xxxxxxxxx\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('xiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xiii') == '1'\nassert solution('xxxxxxxxxx') == '8'\nassert solution('xxxx') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\nabc\\n\") == \"1\\nab\\n\"\nassert solution(\"2\\nxxoo\\n\") == \"2\\nxx\\n\"\nassert solution(\"3\\nxxxx\\n\") == \"3\\nxxxx\\n\"\nassert solution(\"4\\nxxxx\\n\") == \"4\\nxx\\n\"\nassert solution(\"5\\nxxxxx\\n\") == \"5\\nxxx\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3') == '48'\nassert solution('4') == '48'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '48'\nassert solution('4') == '48'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"48\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(0) == '0'\nassert solution(5) == '48'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '48'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '48'\nassert solution('10') == '80'\n\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '48'\nassert solution('10') == '340'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '48'\nassert solution('4') == '96'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n''') == '48'\n\nassert solution('''5\n''') == '84'\n\nassert solution('''10\n''') == '90'\n\nassert solution('''4\n''') == '48'\n\nassert solution('''6\n''') == '72'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '48'\nassert solution('5') == '5.4'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"unsafe\"\nassert solution(\"1 1\") == \"safe\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'unsafe'\nassert solution('1 2 3 4 5') =='safe'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 5\") == \"unsafe\"\nassert solution(\"4 5\") == \"unsafe\"\nassert solution(\"100 5\") == \"safe\"\nassert solution(\"50 50\") == \"safe\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'unsafe', 'Test 1 Failed'\nassert solution('4 5') =='safe', 'Test 2 Failed'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"1 2\") == \"safe\"\nassert solution(\"5 10\") == \"unsafe\"\nassert solution(\"2 1\") == \"safe\"\nassert solution(\"10 10\") == \"unsafe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'unsafe'\nassert solution('1 1') =='safe'\nassert solution('4 5') == 'unsafe'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == 'unsafe'\nassert solution('1 1') =='safe'\nassert solution('10 10') == 'unsafe'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == \"unsafe\"\n\n\"\"\"\n\nimport sys\nimport math\n\nS, W = list(map(int, input().strip().split(' ')))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"unsafe\"\nassert solution(\"1 2\") == \"safe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 5\") == \"unsafe\"\n\"\"\"\nS, W = map(int, input().split())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('3 4 5') == '6'\nassert solution('4 5 2') == '12'\nassert solution('4 5 1') == '5'\nassert solution('5 4 2') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '6'\nassert solution('2 2 2') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('3 4 5') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"5 3 7\") == \"12\"\nassert solution(\"2 2 3\") == \"6\"\nassert solution(\"3 5 5\") == \"10\"\nassert solution(\"4 5 3\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 1 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 5\n''') == '6'\nassert solution('''\n3 2 4\n''') == '7'\nassert solution('''\n3 2 5\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"4 5 3\") == \"6\"\nassert solution(\"5 3 4\") == \"6\"\nassert solution(\"2 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5 3\") == \"6\"\nassert solution(\"3 4 5\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('1 1 2') == '6'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 11 4''') == '4'\nassert solution('''1 5 2''') == '5'\nassert solution('''3 3 1''') == '3'\nassert solution('''4 1 1''') == '4'\nassert solution('''3 0 3''') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 1 1 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 10 4') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"5 10 4\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5 6\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 11 4') == '1'\n\n---\n\n---",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 10 2\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 11 4\n''') == '4'\nassert solution('''\n2 11 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 8 4\") == \"4\"\nassert solution(\"4 9 4\") == \"4\"\nassert solution(\"6 9 5\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 3') == '2 3'\nassert solution('3 4') == '6'\nassert solution('4 5') == '10'\nassert solution('5 6') == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 5') == '10'\nassert solution('3 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 5') == '10'\nprint(solution('2 5'))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('1') == '1'\n\"\"\"\n\na, b = map(int, input().split())\nprint(a * b)",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"2 5\"]) == \"10\"\nassert solution([\"1 2\"]) == \"2\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input(\"\")) == \"10\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"4 5\") == \"20\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"10\"\nassert solution(\"10 10\") == \"100\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\n\n\"\"\"\n\nA, B = list(map(int, input().split()))\nprint(A * B)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 7') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"10 10 10\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1 7''') == '10'\nassert solution('''3 5 7''') == '10'\nassert solution('''1 1 7''') == '3'\nassert solution('''2 1 7''') == '4'\nassert solution('''3 1 7''') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 1 2') == '4'\nassert solution('1 1 2 2') == '4'\nassert solution('4 4 4 4') == '8'\nassert solution('4 4 4 4 4') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '10'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('1 1 2') == '2'\nassert solution('1 1 3') == '3'\nassert solution('1 2 3') == '5'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 7') == '10'\nassert solution('1 2 3') == '5'\nassert solution('10 10 10') == '20'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"10\"\nassert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"100 200 300\") == \"155\"\nassert solution(\"1 1 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"5\"\nassert solution(\"5 5 5\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"7 567\") == \"OK\"\nassert solution(\"7 5678\") == \"NG\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 20 30 40\") == \"OK\"\nassert solution(\"4\\n20 30 40\") == \"NG\"\nassert solution(\"4\\n10 30 40\") == \"NG\"\nassert solution(\"4\\n10 50 80\") == \"NG\"\n\nimport sys\nn, k = list(map(int, input().split()))\na, b = list(map(int, input().split()))\n\nprint(\"OK\" if (a + b - k) % k == 0 else \"NG\")\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'OK'\nassert solution(input()) == 'NG'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n500 600\n''') == 'OK'\n\n'''\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('5\\n2 2') == 'NG'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'NG'\nassert solution('3') == 'NG'\nassert solution('2') == 'OK'\nassert solution('4') == 'OK'\nassert solution('5') == 'OK'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n10 20\n''') == 'OK', \"Should be: OK\"\nassert solution('''\n10\n100\n''') == 'NG', \"Should be: NG\"\nassert solution('''\n7\n10 20\n''') == 'NG', \"Should be: NG\"\nassert solution('''\n7\n10 50\n''') == 'NG', \"Should be: NG\"\nassert solution('''\n7\n10 10\n''') == 'NG', \"Should be: NG\"\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"7 5\") == \"NG\"\nassert solution(\"7 5 3\") == \"NG\"\nassert solution(\"7 5 1\") == \"NG\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'OK'\nassert solution('7 1') == 'NG'\nassert solution('7 1 0') == 'OK'\nassert solution('7 0') == 'NG'\nassert solution('7 3') == 'NG'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"6\\n1000 1000\") == \"NG\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('18 17') == '9.83333333333'\nassert solution('-8 -3') == '-3.33333333333'\nassert solution('6 0') == '3.0'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n') == '2.6666'\nassert solution('4 1\\n') == '2.66666666'\n\n- python3.8 solution.py < input.txt\n'''\n\nfrom math import log, ceil",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1.0\"\nassert solution(\"2 2\") == \"1.5\"\nassert solution(\"3 3\") == \"2.0\"\nassert solution(\"5 6\") == \"2.75\"\nassert solution(\"7 7\") == \"3.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('1 2') == '0.5'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '2.5'\nassert solution('3 3') == '1.3333333333333'\nassert solution('10 10') == '10.0'\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"2.6666\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"7 4\") == \"4.1666...16\"\nassert solution(\"1 1\") == \"0.1000000000\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3') == '2.6667'\nassert solution('10 0') == '1.0'\nassert solution('20 20') == '1.0'\nassert solution('20 0') == '0.0'",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2.5\"\nassert solution(\"4 3\") == \"2.3333333333\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('10 10') == '10'\n\"\"\"\nT, X = map(int, input().split())\nt = X / (t := X % 1)\nhours = X * t\nprint(t + hours)\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\\n\") == \"1\\n\"\nassert solution(\"5 5 5\\n\") == \"0\\n\"\nassert solution(\"3 10 5\\n\") == \"5\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"5 2 10\") == \"0\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"6 3 7\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"6 4 3\") == \"2\"\nassert solution(\"1000000000 20 2000 20\") == \"20\"\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"6 2 3\") == \"0\"\nassert solution(\"6 2 4\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6 4\n5 6 4''') == '1'\nassert solution('''5 6 5\n5 6 5''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 5\n''') == '1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 4 3\n''') == '1'\nassert solution('''2 2 10\n''') == '1'\nassert solution('''1 3 2\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"1 10 20\") == \"0\"\nassert solution(\"5 5 1\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"12 10 40\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 4 3') == '1'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1 3 2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2 3 1\n3 2 1\n3 1 2\n2 3 1\n2 1 3''') == '3'\nassert solution('''6\n1 3 2\n3 1 2\n3 2 1\n2 3 1\n2 1 3\n1 3 2''') == '5'\nprint('All tests passed.')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1 3 2\") == \"3\"\nassert solution(\"1 3 2 3 4 5\") == \"4\"\nassert solution(\"3 3 2\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\nassert solution('4\\n1 3 2 4\\n3 1 4 2') == '3'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5\n4 2 5 1 3''') == '3'\nassert solution('''4\n1 3 2 4\n2 1 4 3''') == '2'\nassert solution('''7\n3 1 2 4 5 6\n5 6 2 1 4 3''') == '4'\nassert solution('''20\n1 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n20 9 12 8 11 16 15 14 13 22 21 17 19 18''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == '3'\nassert solution(\"3\") == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATGC') == 'GC'\nassert solution('ACGT') == 'ACGT'\nassert solution('ATG') == 'G'\nassert solution('TC') == ''\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"AT\"\nassert solution(\"ACGTTT\") == \"AC\"\nassert solution(\"ATTCGACG\") == \"AC\"\nassert solution(\"ATGCGAT\") == \"GC\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution
        "num_ids_2": 1769,
        "num_ids_4": 1769
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"ABCABC\") == \"ABC\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ATCODER') == 'ATC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"ACGATGTAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATGATGAAATCGAATG",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ATCODER') == 'ATC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 'AT'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ATCODER') == 'ACGT'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"9\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"25\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"9\"\nassert solution(\"123\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1111\") == \"9\"\nassert solution(\"1234567890\") == \"9\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '4'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\n'''\n\n\nclass Solution:\n    def solution(self, stdin):\n        return stdin",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n'''",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''cupofcoffee\ncupofhottea''') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\n\n-- Python Solution --\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\nassert solution('cupofcoffee') == 'cupofcoffee'\nassert solution('cupofcoffee') == 'cupofcoffee'\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\nassert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\n\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution
        "num_ids_2": 1714,
        "num_ids_4": 1714
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 7') == '5 6 7 8 9'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 7\n''') == \"5 6 7 8 9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('5 1') == '1 2 3 4 5'\nassert solution('2 1') == '1 2'\n",
        "num_ids_2": 30,
        "num_ids_4": 42
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 7\\n\"\n) == \"5 6 7 8 9\"\nassert solution(\n    \"6 2\\n\"\n) == \"1 2 3 4 5 6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 7') == '5 6 7 8 9'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('2 2') == '1 2 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('4 3') == '1 2 3 4 5 6 7 8 9'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"15\") == \"Yes\"\nassert solution(\"-3\") == \"No\"\nassert solution(\"-6\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"Yes\", \"Tests Failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'No'\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes'\nassert solution('-5') == 'No'\nassert solution('0') == 'Yes'\nassert solution('45') == 'Yes'\nassert solution('-10') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n1\n1''') == 'Yes'\nassert solution('''1\n1\n0\n1''') == 'No'\nassert solution('''10\n20\n30\n50''') == 'Yes'\nassert solution('''30\n20\n10\n40''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"X\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"-40-\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'No'\nassert solution(input(\"30\\n\")) == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"-1\") == \"Yes\"\nassert solution(\"0\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"-2\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 20') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == \"1\"\nassert solution('''3 2\n1 2\n5 5\n2 5''') == \"1\"\nassert solution('''3 2\n1 2\n5 5\n-2 8''') == \"1\"\nassert solution('''3 2\n1 2\n5 5\n0 5''') == \"2\"\nassert solution('''3 2\n1 2\n5 5\n5 3''') == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 1') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 3') == '1'\nassert solution('4 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1\"\n\n'''\n\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 4') == '3'\nassert solution('5 5') == '1'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('4 4') == '0'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\n\nassert solution(\"1 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Good'\nassert solution('123') == 'Bad'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'Good'\nassert solution('3776') == 'Bad'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Bad\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3776') == 'Bad', \"Wrong\"\nassert solution('3765') == 'Good', \"Wrong\"\nassert solution('3957') == 'Bad', \"Wrong\"\nassert solution('1234') == 'Good', \"Wrong\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6,3,2,1') == 'Good'\nassert solution('7,5,3,2') == 'Bad'\n\n'''\n\n\nfrom itertools import combinations",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"0\") == \"Good\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1345') == 'Good'\nassert solution('1234') == 'Good'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'Good'\nassert solution('3776') == 'Bad'\nassert solution('9786') == 'Good'\nassert solution('8976') == 'Good'\nassert solution('1077') == 'Bad'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"Good\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"1118\") == \"Good\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"3\\n4\") == \"3.5\"\nassert solution(\"10\\n500\") == \"1400.0000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"10\") == \"9.5\"\nassert solution(\"50\") == \"10.0\"\nassert solution(\"7\") == \"3.0\"\nassert solution(\"5\") == \"3.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"1\\n3\") == \"3.0\"\nassert solution(\"2\\n1\") == \"2.0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3.5'\nassert solution('5') == '3.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n3 4') == '4'\n\ninput_values = sys.stdin.readlines()\n\nprint(solution(input_values))\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"3.5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"9.5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"9.5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"3.0\"\nassert solution(\"4\") == \"3.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '3.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3.50000'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3.5'\nassert solution('3') == '3.5'\nassert solution('4') == '3.5'\nassert solution('5') == '3.5'\nassert solution('6') == '3.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '14'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 1 2\n2 5 4\n3 6\n\"\"\") == \"14\"\nassert solution(\"\"\"\n10\n1 3 5 1 3 3 2 5 1 2\n\"\"\") == \"19\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"2 5 4\") == \"26\"\nassert solution(\"3 6\") == \"27\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"14\"\n\"\"\"\nfrom math import gcd",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"4\\n3 1 2 1\\n2 5 4 1\\n3 6\") == \"19\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 14\nassert solution('2') == 17\nassert solution('3') == 16\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''10\n10 5 5 5 6 5 6\n20 20 5 5 6 6''') == '62'\nassert solution('''5\n1 2 3 4 5\n5 2 3 4 1''') == '17'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == '14'\nassert solution(\"4\\n1 1 2 3\\n2 3 2 1\\n3 1 2 3\\n3 1 2 3\") == '5'\nassert solution(\"5\\n1 1 2 3 4\\n2 3 2 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\") == '12'\n",
        "num_ids_2": 58,
        "num_ids_4": 99
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ABCD\") == 1\nassert solution(\"ABCDBABCQ\") == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 28
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '0'\nassert solution('20') == '0'\nassert solution('10') == '0'\nassert solution('15') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\nZABCDBABCQ') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"11\") == \"0\"\nassert solution(\"12\") == \"1\"\nassert solution(\"13\") == \"0\"\nassert solution(\"14\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '0'\n\"\"\"\n\nN = int(stdin.readline())\nS = stdin.readline()\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\nZABCDBABCQ') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n\"\"\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '2'\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\n\nimport sys\nsys.stdin = open(\"input.txt\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Test 1 Failed\"\n\nassert solution() == 2, \"Test 2 Failed\"\n\n---Time Limit Exceeded---\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n\nimport unittest\nimport sys\nfrom io import StringIO\n\nimport solution\n\n\nclass TestSum(unittest.TestCase):\n    def test_one(self):\n        capturedOutput = StringIO()\n        sys.stdout = capturedOutput\n        solution.solution(\"1\")\n        sys.stdout = sys.__stdout__\n        self.assertEqual(capturedOutput.getvalue().strip(), \"1\")\n\n    def test_two(self):\n        capturedOutput = StringIO()\n        sys.stdout = capturedOutput\n        solution.solution(\"5\")\n        sys.stdout = sys.__stdout__\n        self.assertEqual(capturedOutput.getvalue().strip(), \"2\")\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\nimport itertools\nfrom collections import defaultdict\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n\"\"\") == \"2\"\n\"\"\")\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"Yes\"\nassert solution(\"2\\n5\\n3\\n\") == \"No\"\nassert solution(\"1\\n3\\n2\\n\") == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2\n1 3\n1 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5 4\n0 1\n3 3\n4 4\n5 5\n\"\"\") == \"No\"\nassert solution(\"\"\"\n10 10\n1 2\n1 5\n1 6\n1 8\n1 9\n2 4\n2 5\n2 6\n2 7\n2 9\n3 4\n3 5\n3 6\n3 7\n4 2\n4 5\n4 6\n4 7\n5 3\n5 5\n5 6\n5 7\n6 2\n6 5\n6 6\n6 7\n7 2\n7 5\n7 6\n7 7\n\"\"\") == \"No\"\n\"\"\"\nfrom typing import List, Any",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 1') == 'No'\nassert solution('6 3') == 'Yes'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\\n0\\n1\\n\") == \"No\"\nassert solution(\"4\\n3\\n0\\n1\\n\") == \"Yes\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 1\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('sippuu') == \"Yes\"\nassert solution('acbcd') == \"No\"\nassert solution('a') == \"Yes\"\nassert solution('aaa') == \"Yes\"\nassert solution('abcd') == \"No\"\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"bbuuuu\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"sippuu\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('a') == 'No'\nassert solution('ab') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes', \"Wrong answer\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'Yes'\nassert solution('sippuu') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('khi') == 'Yes'\nassert solution('akjh') == 'No'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Case 1\"\nassert solution(\"ababab\") == \"No\", \"Case 2\"\nassert solution(\"\") == \"No\", \"Case 3\"",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'TLE'\nassert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('4') == 'TLE'\nassert solution('5') == 'TLE'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"6 8\\n1 2\\n3 5\\n5 6\\n7 8\\n4 6\\n8 9\") == \"8\"\nassert solution(\"4 12\\n3 5\\n7 8\\n1 6\\n8 9\\n2 5\") == \"TLE\"\n",
        "num_ids_2": 58,
        "num_ids_4": 90
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"3 3\\n1 3\\n3 2\\n2 2\") == \"3\"\nassert solution(\"1 10\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\") == \"4\"\nassert solution(\"1 100\\n100 1\\n100 2\\n100 3\\n100 4\\n100 5\\n100 6\\n100 7\\n100 8\\n100 9\\n100 10\\n100 11\\n100 12\\n100 13\\n100 14\\n100 15\\n100 16\\n100 17\\n100 18\\n100 19\\n100 20\\n100 21\\n100 22\\n100 23\\n100 24\\n100 25\\n100 26\\n100 27\\n100 28\\n100 29\\n100 30\\n100 31\\n100 32\\n100 33\\n100 34\\n100 35\\n100 36\\n100 37\\n100 38\\n100 39\\n100 40\\n100 41\\n100 42\\n100 43\\n100 44\\n100 45\\n100 46\\n100 47\\n100 48\\n100 49\\n100 50\\n100 51\\n100 52\\n100 53\\n100 54\\n100 55\\n100 56\\n100 57\\n100 58\\n100 59\\n100 60\\n100 61\\n100 62\\n100 63\\n100 64\\n100 65\\n100 66\\n100 67\\n100 68\\n100 69\\n100 70\\n100 71\\n100 72\\n100 73\\n100 74\\n100 75\\n100 76\\n100 77\\n100 78\\n100 79\\n100 80\\n100 81\\n100 82\\n100 83\\n100 84\\n100 85\\n100 86\\n100 87\\n100 88\\n100 89\\n100 90\\n100 91\\n100 92\\n100 93\\n100 94\\n100 95\\n100 96\\n100 97\\n100 98\\n100 99\\n100 100\") == \"2\"\nassert solution(\"3 3\\n1 3\\n3 2\\n2 2\") == \"3\"\n",
        "num_ids_2": 46,
        "num_ids_4": 864
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 70\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input(\"\")) == \"TLE\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"4 1\") == \"TLE\"\nassert solution(\"1 1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 50\\n2 100\\n1 200\\n2 300\\n\") == \"150\"\nassert solution(\"3 100\\n4 200\\n3 100\\n1 200\\n2 300\\n\") == \"200\"\nassert solution(\"2 80\\n3 100\\n1 120\\n1 200\\n\") == \"200\"\nassert solution(\"1 500\\n2 500\\n1 300\\n\") == \"300\"\nassert solution(\"6 100\\n1 100\\n2 200\\n2 300\\n2 300\\n1 500\\n\") == \"500\"",
        "num_ids_2": 54,
        "num_ids_4": 100
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"4 50\\n1 80\\n3 70\\n4 50\") == \"TLE\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 7 60\\n1 20\\n1 100\\n\") == \"20\"\nassert solution(\"2 6 50\\n1 2\\n1 100\\n\") == \"100\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '2'\nassert solution('3 2 2') == '2'\nassert solution('4 2 1') == '1'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 6\") == \"11\"\nassert solution(\"2 2 9\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 9\") == \"8\"\nassert solution(\"3 2 3\") == \"10\"\nassert solution(\"3 3 3\") == \"15\"\nassert solution(\"4 4 7\") == \"14\"\nassert solution(\"4 4 7\") == \"14\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 2, 9]) == \"8\"\nprint(solution([4, 2, 9]))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('4 2 10') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"5\"\nassert solution(\"4 2 9\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\") == \"4\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"5 2 1\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('1 5 2') == '8'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '3'\n\nstdin = input()\n\nprint(solution(stdin))",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"6\"\nassert solution(\"2 3 4\") == \"8\"\nassert solution(\"2 4 6\") == \"10\"\nassert solution(\"1 10 100\") == \"200\"\nassert solution(\"1 20 100\") == \"300\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\"\nassert solution(\"4\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"2\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2132') == '2'\nassert solution('506') == '9'\nassert solution('999999999') == '8'\nassert solution('1000000000') == '8'\nassert solution('12345678912345678910') == '1'\n\n\n\n2132\n506\n999999999\n1000000000\n1000000000\n12345678912345678910\n\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\\n2\\n5\\n2\"\nassert solution(\"4\") == \"8\\n2\\n9\\n8\"\nassert solution(\"3\") == \"1\\n2\\n0\"\n\"\"\"\nimport sys\ninput = sys.stdin.readline",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(\"\")) == \"0\"\nassert solution(input(\"1\")) == \"2\"\n\n\"\"\"\n\nimport unittest\nimport random\n\nclass TestSum(unittest.TestCase):\n    def test_given_input(self):\n        self.assertEqual(solution(input()), \"1\")\n        self.assertEqual(solution(input(\"\")), \"0\")\n        self.",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1\n3\n20\n38\n56\n''') == '1'\nassert solution('''\n4\n2132\n506\n999999999\n1000000000\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('20') == '2'\nassert solution('38') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1000000000\") == \"8\"\nassert solution(\"100000000\") == \"9\"\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6 2\\n\"\n    \"1 4\\n\"\n    \"4 3\\n\"\n    \"3 5\\n\"\n    \"3 6\\n\"\n    \"5 2\\n\"\n) == \"2\"\n\nassert solution(\n    \"4 2\\n\"\n    \"3 1\\n\"\n    \"1 4\\n\"\n    \"1 2\\n\"\n) == \"1\"\n\nassert solution(\n    \"10 2\\n\"\n    \"10 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"2 5\\n\"\n    \"2 6\\n\"\n    \"2 7\\n\"\n    \"3 8\\n\"\n    \"3 9\\n\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('10 3') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('100 2') == '100 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 26,
        "num_ids_4": 66
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\n\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 2 3 2 3 1 3 1\nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 2 3 2 3 1 3 1\nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 2 3 2 3 1 3 1\nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n2\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n2\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n2\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n2\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n2\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n2\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n10 2\n10 3\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\n\nassert solution('''4 2\n3 1\n1 4\n1 2''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"1 2 3 1\"\nassert solution(\"6 2\") == \"1 2 1 1 2 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2', \"Wrong\"\nassert solution('''\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\n''') == '3', \"Wrong\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1 2 1\"\nassert solution(\"4 2\") == \"1 2 1 2 2\"\nassert solution(\"6 2\") == \"1 2 1 2 3 2\"\nassert solution(\"10 2\") == \"1 2 1 2 3 2 3 1 3 1\"\nassert solution(\"100 2\") == \"1 2 1 2 3 2 3 1 2 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2 2 1 2 1 2 3 2 1 2 1 2",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n3 1\n1 4\n1 2''') == '1 2 1 1 2'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9''') == '1 1 1 2 1 2 2 3 2 3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open('test.in')) == '2 4'\nassert solution(open('test.in')) == '3 8'\nassert solution(open('test.in')) == '3 6'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2 4\"\nassert solution(\"9\") == \"3 8\"\nassert solution(\"7\") == \"3 6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '2 4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6'\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 4\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 8 8 8 4 4 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"\n\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2 4'\nassert solution('9') == '3 8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == \"2 4\"\nassert solution('9') == \"3 8\"\nassert solution('7') == \"3 6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2 4 4\n\n''') == '2 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 2 4 4\n''') == '2 4'\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 6'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 1\n1 2\n2 1\n''') == '3 2 1'\n\nassert solution('''\n2\n3 1\n1 2\n''') == '3 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 2 1 4 5'\nassert solution('3') == '3 1 2 4 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2\n5 4\n''') == '3 2 1 4 5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n\"\"\") == \"3 2 4 1 5\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('4') == '4 2 1 3'\nassert solution('5') == '5 2 4 1 3'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n10\n4 7 3 2 5 6 8 1 9\n2 6 5 7 1 8 4 3 9\n3 8 9 1 2 4 5 7 6\n4 8 5 6 7 9 1 2 3\n2 9 8 7 6 5 4 3 1\n\"\"\") == \"6 1 9 3 2 5 8 4 7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == ''\nassert solution('2') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('5') == '3 2 4 1 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3 2 1 5'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''6\n1 1000 10000 10 100 1000000000\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'",
        "num_ids_2": 60,
        "num_ids_4": 81
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''6\n1 1000 10000 10 100 1000000000\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"10\") == \"1\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\"\"\") == \"\"\"4\n-1\"\"\"\nassert solution(\"\"\"6\n10 10 10 10 10 10\n10 10 10 10 10 10\n10 10 10 10 10 10\n10 10 10 10 10 10\n10 10 10 10 10 10\n10 10 10 10 10 10\"\"\") == \"\"\"1\n-1\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '4'\nassert solution('15 5 3 2') == '2'\nassert solution('15 5 4 3') == '-1'\nassert solution('15 5 2 1') == '5'\nassert solution('20 5 7 3') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1') == '4'\nassert solution('2\\n1 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1') == '-1'\nassert solution('2\\n1 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1') == '5'",
        "num_ids_2": 69,
        "num_ids_4": 103
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\"\nassert solution(\"1\\n0 0 0\") == \"1\"\nassert solution(\"1\\n0 0 0\\n1\") == \"-1\"\n",
        "num_ids_2": 61,
        "num_ids_4": 79
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\\n-1\\n5\\n2\\n0\"\nassert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"5\\n2\\n0\\n1\\n1\"\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\") == \"4\"\nassert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n20 5 7 3\\n\") == \"0\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"6\") == \"-1\"\nassert solution(\"6\") == \"5\"\nassert solution(\"6\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"15 5 3 2\") == \"5\"\nassert solution(\"15 5 4 3\") == \"2\"\nassert solution(\"15 5 2 1\") == \"0\"\nassert solution(\"15 5 5 1\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"15 5 3 2\") == \"4\"\nassert solution(\"15 5 4 3\") == \"2\"\nassert solution(\"15 5 2 1\") == \"-1\"\nassert solution(\"15 5 5 1\") == \"0\"\nassert solution(\"16 7 5 2\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"46\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"5\") == \"46\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"2835\"\nassert solution(\"5\") == \"46\"\nassert solution(\"6\") == \"24\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\\nab\\n\") == \"1\\nab\\n\"\nassert solution(\"2\\nac?b?c\\n\") == \"1\\nac\\n\"\nassert solution(\"3\\nbaac\\n\") == \"0\\n\"\nassert solution(\"4\\nacab\\n\") == \"2\\nac\\n\"\nassert solution(\"5\\naba?\\n\") == \"0\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 67
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_string) == answer\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_string) == '24'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nac?b?c''') == '24'\nassert solution('''7\n???????''') == '2835'\nassert solution('''5\na???c''') == '46'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example1) == '24'\nassert solution(example2) == '2835'\nassert solution(example3) == '0'\nassert solution(example4) == '46'\nassert solution(example5) == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\nassert solution('9') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 0\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '16'\n\nassert solution('''\n4 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\n'''\n\nfrom collections import deque",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 5\n\"\"\"\n\nn, m = (int(i) for i in stdin.split())\n\nedges = [[int(i) for i in input().split()] for _ in range(m)]",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    4 0\n    1 3 3 7\n    2 3 5\n    2 1 1\n    ''') == '16'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '5'\nassert solution('3 2') == '5'\nassert solution('4 0') == '16'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"1 3 3\\n\"\n    \"2 3 5\"\n) == \"5\"\nassert solution(\n    \"4 0\\n\"\n    \"1 3 3 7\\n\"\n) == \"16\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\nassert solution('''4 0\n1 3 3 7\n''') == '16'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 3\n0 1\n1 2\n''') == '-1'\nassert solution('''2 1 3\n0 1\n1 2\n''') == '3'\nassert solution('''5 1 1\n0 1\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == \"14\"\n\nassert solution('''\n10 1 1\n0 9\n0 5\n''') == \"-1\"\n\nassert solution('''\n10 1 1\n0 9\n1 5\n''') == \"45\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '10 2 4\\n'\n    '3 7\\n'\n    '8 10\\n'\n    '0 10\\n'\n    '3 4\\n'\n    '8 1\\n'\n) == '14'\n\nassert solution(\n    '10 1 1\\n'\n    '0 9\\n'\n    '1 5\\n'\n) == '45'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14', 'First'\nassert solution('''\n10 1 1\n0 9\n1 5\n''') == '45', 'Second'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''\n10 1 1\n0 9\n0 5\n''') == '45'\nassert solution('''\n10 1 1\n0 9\n1 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 1 1\n0 9\n1 5\n''') == '45'\nassert solution('''\n10 1 1\n0 9\n1 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 2 4') == '14'\nassert solution('10 1 1') == '45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == \"Yes\"\nassert solution('5 9 5') == \"No\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 5 5') == 'Yes'\nassert solution('3 2 2') == 'Yes'\nassert solution('1 1 1') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('4 4 4') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"2 2 5\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"6 6 6\") == \"No\"\n\"\"\"\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"Yes\", \"Wrong answer\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 7 5\n\"\"\") == \"Yes\"\nassert solution(\"\"\"1 1 1\n\"\"\") == \"No\"\nassert solution(\"\"\"5 5 3\n\"\"\") == \"Yes\"\nassert solution(\"\"\"1 1 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"1 1 1\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 7 5''') == 'Yes'\nassert solution('''3 2 3''') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5\n10 10 20 30 50\n''') == '1'\nassert solution('''\n2\n3\n10 20 40 60\n''') == '1'\nassert solution('''\n2\n3\n10 20 40 60\n''') == '1'\nassert solution('''\n2\n5\n10 20 30 50\n''') == '1'\nassert solution('''\n2\n5\n10 20 30 50\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n1\\n2\\n4\\n3\\n4\\n\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n10\n11 15\n''') == '1'\nassert solution('''3\n10\n12 12\n''') == '0'\nassert solution('''2\n1\n1\n''') == '1'\nassert solution('''2\n1\n1\n''') == '1'\nassert solution('''3\n12\n5\n10''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '2'\nassert solution('3') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3\\n12 5\\n4 8\\n') == '1'\nassert solution('1\\n3 3\\n12 5\\n4 8\\n') == '2'\nassert solution('1\\n2 3\\n12 5\\n4 8\\n') == '1'\nassert solution('1\\n2 3\\n12 5\\n4 8\\n') == '1'\nassert solution('2\\n5 3\\n1 5\\n4 8\\n') == '1'",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1000 2000\") == \"1\"\nassert solution(\"3 3\\n4 5\\n5 4\") == \"0\"\nassert solution(\"6 4\\n4 2\\n5 3\") == \"1\"\nassert solution(\"6 5\\n3 2\\n4 5\") == \"2\"\nassert solution(\"5 7\\n1 2\\n3 5\\n4 4\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n5\\n1000 2000') == '1'\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n5\\n1000 2000') == '1'\nassert solution('6\\n15 4 5 12\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '2'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,1]) == \"1\"\nassert solution([2,2]) == \"0\"\nassert solution([1,1]) == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n\"\"\"\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 5') == '1'\nassert solution('3 1') == '2'\nassert solution('3 5') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('10 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 4') == '3'\nassert solution('8 5') == '4'\nassert solution('10 7') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\", \"You failed on the first input test case!\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"2\\n0\\n3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == \"2\"\nassert solution('''8 2\nACACTACG\n3 7''') == \"0\"\nassert solution('''8 2\nACAC\n3 7''') == \"3\"\nassert solution('''8 1\nACAC\n2 3''') == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3') == '2'\nassert solution('ACACTACG') == '0'\nassert solution('ACACTACG') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3') == '2'\nassert solution('8 3\\nACACTACG\\n3 7\\n1 8') == '3'\nassert solution('8 3\\nACACTACG\\n3 7\\n1 8\\n') == '0'\nassert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n') == '0'\nassert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n5') == '3'\n",
        "num_ids_2": 50,
        "num_ids_4": 104
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"2\"\nassert solution(\"5 6\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"10 10\") == \"3\"\n\n##------------------------------------------------------------------------------------------------------------------------------------------------------\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"8 3\") == \"2\"\nassert solution(\"5 10\") == \"0\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"5 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"2\"\nassert solution(input) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 2 2') == '2'\nassert solution('2 3 4 5 6 5 6 6 6 6 7 1 2 2 3') == '3'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"2\"\nassert solution(\"\"\"\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"3\"\nassert solution(\"\"\"\nACACTACG\n3 7\n2 3\n1 8\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == \"210\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"210\"\n\n(Solution: 24 ms)\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\n\nn, k = map(int, input().split())\nprice = list(map(int, input().split()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"210\"\nassert solution(\"5 4\") == \"160\"\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '6', 'Test 1 failed'\nassert solution('5 3') == '210', 'Test 2 failed'\nassert solution('4 5') == '7', 'Test 3 failed'\nassert solution('4 6') == '7', 'Test 4 failed'\nassert solution('4 7') == '7', 'Test 5 failed'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"210\"\nprint(solution(input()))\n\n\n// test.assert_equals(solution('''5 3\n// 50 100 80 120 80\n'''), '210')\n// test.assert_equals(solution('''7 2\n// 10 5 15 20 30 40 50\n'''), '110')\n// test.assert_equals(solution('''6 2\n// 5 1 2 3 5 5\n'''), '115')\n// test.assert_equals(solution('''5 4\n// 3 1 2 3 3\n'''), '28')\n// test.",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '210'\nassert solution('8 5') == '550'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\nassert solution('''5 2\n100 100 80 120 80\n''') == '90'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('5 1 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 3 4''') == '4'\nassert solution('''1 4 3''') == '7'\nassert solution('''5 1 4''') == '5'\nassert solution('''5 6 1''') == '4'\nassert solution('''4 4 4''') == '4'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 2') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1,3,4]) == \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 3 = 4 hours\"\nassert solution([3,4,1]) == \"The sum of the flight times in the route A \\rightarrow C \\rightarrow C: 4 + 3 = 7 hours\"\nassert solution([2,1,3]) == \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 4 = 5 hours\"\nassert solution([3,1,2]) == \"The sum of the flight times in the route A \\rightarrow C \\rightarrow A: 3 + 1 = 4 hours\"\nassert solution([4,1,3]) == \"The sum of the flight times in the route A \\rightarrow B \\rightarrow A: 4 + 1 = 5 hours\"\n",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"1 3 4\"]) == \"4\"\nassert solution([\"1 2 3\"]) == \"3\"\nassert solution([\"1 1 1\"]) == \"1\"\nassert solution([\"2 2 2\"]) == \"2\"\nassert solution([\"2 1 1\"]) == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3 4\n''') == '4'\nassert solution('''\n1 2 3\n''') == '6'\nassert solution('''\n1 2\n''') == '2'\nassert solution('''\n2 3\n''') == '3'\nassert solution('''\n2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '3'\nassert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '10'\nassert solution('2 2') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 2\") == \"10\"\nassert solution(\"100 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '0'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '0'\n\n5 is not less than 3, so we should print 10.\nassert solution('5 5') == '10'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"3\") == \"10\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 2') == '10'\nassert solution('-1 -2') == '0'\nassert solution('-1 -3') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('3') == '10'\nassert solution('3 4') == '10'\nassert solution('1') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 10') == '10'\nassert solution('2 1') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"5 1\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '0'\nassert solution('3 5') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1', \"Should return the minimum possible value taken by N after Aoki does the operation zero or more times.\"\nassert solution('5 4') == '1', \"Should return the minimum possible value taken by N after Aoki does the operation zero or more times.\"\nassert solution('15 5') == '0', \"Should return the minimum possible value taken by N after Aoki does the operation zero or more times.\"\n",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4') == '1'\nassert solution('10 5') == '5'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('0 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 2 3''') == '1'\nassert solution('''1 3\n1 2 3''') == '2'\nassert solution('''6 5\n1 2 3 4 5 6''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 4\n''') == '1'\nassert solution('''0 0\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 4''') == '1'\nassert solution('''7 4''') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 5\n3\n''') == '1'\nassert solution('''4 8\n3\n''') == '1'\nassert solution('''100 80\n7\n''') == '1'\nassert solution('''0 1\n2\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"10 7\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 9\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 4\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0') == '1'\nassert solution('7 4\\n') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 9\") == \"win\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 7 9\n\"\"\") == \"win\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 8') == 'win'\nassert solution('4 7 2') == 'win'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 7 9''') == 'win'\nassert solution('''1 1 1''') == 'bust'\nassert solution('''0 0 0''') == 'bust'\nassert solution('''1 2 5''') == 'win'\nassert solution('''1 2 3''') == 'win'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"win\"\nassert solution(\"3 1\") == \"win\"\nassert solution(\"2 2\") == \"bust\"\nassert solution(\"4 2\") == \"win\"\nassert solution(\"3 1\") == \"win\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"3 6 7\") == \"bust\"\nassert solution(\"1 1 1\") == \"win\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"bust\"\nassert solution(\"5 7 9\") == \"win\"\nassert solution(\"4 4 6\") == \"win\"\nassert solution(\"9 5 5\") == \"win\"\nassert solution(\"10 10 10\") == \"win\"\n\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 9\\n') == 'win'\nassert solution('1 1 1\\n') == 'bust'\n\n\"\"\"\n\nA_1, A_2, A_3 = map(int, input().split())",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"10 1 2\") == \"bust\"\nassert solution(\"-5 1 2\") == \"win\"\nassert solution(\"10 -2 -4\") == \"win\"\nassert solution(\"5 3 3\") == \"bust\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"6\") == \"6\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('12') == '6'\nassert solution('2') == '2'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"8\") == \"3\"\nassert solution(\"9\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"8\"\nassert solution(\"10\") == \"12\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('10') == '10'\n\nfrom math import floor\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('21') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"15\") == \"1\"\nassert solution(\"25\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('7') == '8'\nassert solution('7') == '8'\nassert solution('99') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"2\"\nassert solution(\"5 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nassert solution('5 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6 2\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '2'\nassert solution('4 5') == '2'\nassert solution('3 8') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"4 4\") == \"2\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"10 6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2') == '2'\nassert solution('5 3') == '1'\nassert solution('5 4') == '2'\nassert solution('1 3') == '1'\nassert solution('3 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 2') == '2'\nassert solution('6 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('5 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'pon'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('16') == 'pon'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == 'pon'\nassert solution('12') == 'bon'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"pon\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('16') == 'pon'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"bon\"\nassert solution(\"10\") == \"bon\"\nassert solution(\"9\") == \"bon\"\nassert solution(\"1010\") == \"pon\"\nassert solution(\"55\") == \"bon\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == 'one'\nassert solution(2) == 'two'\nassert solution(3) == 'three'\nassert solution(4) == 'four'\nassert solution(5) == 'five'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == 'pon'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'hon'\nassert solution('5') == 'bon'\nassert solution('24') == 'bon'\nassert solution('50') == 'bon'\nassert solution('80') == 'bon'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('16') == 'pon'\nassert solution('10') == 'on'\nassert solution('12') == 'bon'\nassert solution('99') == 'hon'\n\n## Sample Test Case - Input\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"5\") == \"29\"\nassert solution(\"10\") == \"39\"\n\nsolution(input())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"14\"\nassert solution(\"5\") == \"25\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 2') == '11'\nassert solution('5\\n1 1 1 2 2') == '18'\nassert solution('5\\n2 2 3 3 1') == '12'\nassert solution('3\\n1 1 2 3') == '11'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"3\"\nassert solution('3') == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\", \"Empty input\"\nassert solution(\"1\") == \"\", \"Only 1 takoyaki\"\nassert solution(\"2\") == \"\", \"Only 2 takoyaki\"\nassert solution(\"3\") == \"\", \"Only 3 takoyaki\"\nassert solution(\"5\") == \"\", \"Only 5 takoyaki\"\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '11'\nassert solution('''\n5\n5 1 2 3 4\n''') == '55'\nassert solution('''\n5\n1 2 3 4 5\n''') == '101'\nassert solution('''\n10\n5 5 3 4 1 2 3 2 1\n''') == '97'\nassert solution('''\n10\n3 6 3 2 5 3 3 1\n''') == '46'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '11'\nassert solution('7') == '26'\nassert solution('6') == '21'\nassert solution('6') == '11'\n\"\"\"\n\nimport itertools\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"11\"\nassert solution(\"2\") == \"12\"\nassert solution(\"3\") == \"13\"\nassert solution(\"4\") == \"14\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"27\"\nassert solution(\"5\") == \"52\"\nassert solution(\"6\") == \"87\"\nassert solution(\"7\") == \"127\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4\\n3\\n4', 'Wrong answer'\nassert solution('2') == '4\\n3\\n4', 'Wrong answer'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3'\n    ) == '4\\n3\\n4\\n'\nassert solution(\n    '2'\n    ) == '4\\n4\\n'\nassert solution(\n    '1'\n    ) == '4\\n4\\n'\nassert solution(\n    '0'\n    ) == '\\n\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"1\") == \"3\"\nassert solution(\"5\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('2\\n1\\n2') == '1\\n2'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5\n''') == '5'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '2'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"3 3\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1, 2) == \"2\"\nassert solution(3, 5) == \"4\"\nassert solution(5, 3) == \"3\"\nassert solution(10, 3) == \"7\"\nassert solution(2, 1) == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 10\") == \"10\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"6 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '9'\n\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()\n\na, b = stdin.split()\n\na = int(a)\nb = int(b)\n\ncoins = a\n\nfor i in range(2, min(a, b) + 1):\n    coins += a * i\n\nprint(coins)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '5 3'\n) == '9'\nassert solution(\n    '7 3'\n) == '8'\nassert solution(\n    '11 4'\n) == '13'\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"7\"\nassert solution(\"5 5\") == \"13\"\nassert solution(\"4 5\") == \"6\"\nassert solution(\"8 3\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '4'\nassert solution('1 1') == '1'\nassert solution('4 4') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"5 5\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n-30 -10 10 20 50\\n\") == \"40\"\nassert solution(\"10 4\\n-40 -10 10 20 50\\n\") == \"60\"\nassert solution(\"100 4\\n-70 -10 10 20 50\\n\") == \"95\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '40'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '40'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '40'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"3 7\") == \"15\"\nassert solution(\"5 4\") == \"29\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '40'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '40'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '40'\n\"\"\"\n\nN, K = map(int, stdin.strip().split())\nx = list(map(int, stdin.strip().split()))\n\nfor i in range(len(x)):\n    if x[i] == 0:\n        x[i] = x[i - 1]\n\nleft = x[0]\nright = x[-1]\ntime = 0\n\nwhile K > 0:\n    if K == 1:\n        time = max(time, right - left)\n    if K > 1:\n        time = max(time, max(right - left, x[i - 1] - left) for i in range(1, N))\n\n    if left == right:\n        x = x[:-1]\n        left = x[0]\n        right = x[-1]\n    else:\n        right = max(right, x[-1])\n\n    left = x[0]\n    K -= 1\n\nprint(time)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n-30 -10 10 20 50\n\"\"\") == \"40\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n-30 -10 10 20 50''') == '40'\nassert solution('''5 3\n-30 -10 10 20 50\n-30 -10 10 20 50''') == '40'\nassert solution('''5 3\n-30 -10 10 20 50\n10 20 50\n-30 -10 10 20 50''') == '40'\nassert solution('''5 3\n-30 -10 10 20 50\n10 20 50\n-30 -10 10 20 50''') == '40'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == '2'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4 4\n''') == '2'\nassert solution('''\n    9 8\n''') == '1'\nassert solution('''\n    4 9\n''') == '2'\nassert solution('''\n    6 9\n''') == '1'\nassert solution('''\n    3 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 13') == '2'\nassert solution('4 8') == '4'\nassert solution('100 4') == '4'\nassert solution('1 10') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 10\\n\") == \"2\"\nassert solution(\"8 13\\n\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '8 13'\n) == '2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 13') == '2'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"10 10\") == \"6\"\nassert solution(\"100 100\") == \"200\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"4\"\n\"\"\"\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"10 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 9\") == \"1\"\nassert solution(\"20 50\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"100 10\") == \"2\"\nassert solution(\"10 9\") == \"1\"\nassert solution(\"1 9\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"3\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"20 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '3'\nassert solution('3 1') == '3'\nassert solution('4 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"10 5\") == \"3\"\nassert solution(\"5 6\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 100\") == \"10\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 4') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n') == '3'\nassert solution('10 4\\n') == '3'\nassert solution('10 2\\n') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('3 1 5 8') == '1'\nassert solution('5 0 4 0') == '1'\nassert solution('2 1 5 8') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 75 25 100') == '50'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 1 0') == '1'\nassert solution('100 250 0 0') == '0'\nprint(solution.__doc__)\n\n'''",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 75 25 100') == \"50\"\nassert solution('0 100 50') == \"50\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == '50'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n''') == '1'\nassert solution('''\n3\n''') == '0'\nassert solution('''\n4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('105') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"105\") == \"1\"\nassert solution(\"1000\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('105') == 1, \"Wrong answer!\"\nassert solution('12') == 0, \"Wrong answer!\"\nassert solution('105') == 1, \"Wrong answer!\"\n\"\"\"\n\nN = int(input())\ndivs = []\nfor i in range(2, int(((N * (N + 1)) / 2) + 1)):\n    if N % i == 0:\n        divs.append(i)\n    if len(divs) == 8:\n        break\n\nprint(len(divs))\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('105') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == ''\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"10 2\") == \"3\"\nassert solution(\"10 3\") == \"2\"\nassert solution(\"10 4\") == \"0\"\nassert solution(\"10 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 2]) == 1",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"7 3\"\"\") == \"1\"\nassert solution(\"\"\"1 2\"\"\") == \"3\"\nassert solution(\"\"\"1 2 3\"\"\") == \"0\"\nassert solution(\"\"\"1 2 3 4 5\"\"\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 9') == '1'\nassert solution('10 20') == '3'\nassert solution('10 10') == '0'\nassert solution('1 1') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"5 9\") == \"1\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"7 9\") == \"5\"\nassert solution(\"7 7\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 3\\n\") == \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '1'\nassert solution('100 5') == '0'\n\n__author__ ='shen'\n__version__ = '1.0.1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3') == '1'\nassert solution('7 5') == '3'\nassert solution('8 8') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n\") == \"1\"\nassert solution(\"3 5\\n\") == \"1\"\nassert solution(\"3 5\\n\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 4\\n') == '1'\nassert solution('8 5\\n') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('111') == '111'\nassert solution('123') == '123'\nassert solution('789') == '789'\nassert solution('9') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('111') == '111'\nassert solution('0') == '0'\nassert solution('10') == '10'\nassert solution('111') == '111'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('111') == '111'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('111') == '111'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"111\"]) == \"111\"\nassert solution([\"1\"]) == \"1\"\nassert solution([\"11\"]) == \"11\"\nassert solution([\"111\"]) == \"111\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"22\") == \"22\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('111') == '111'\nassert solution('1000') == '1000'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('111') == '111'\n\nassert solution('1111') == '111'\nassert solution('123456789') == '123456789'\n",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('111') == '111'\n\n'''\n\nstdin = int(input())\n\nfor i in range(1, 10):\n    if stdin % i == 0:\n        print(stdin)\n        break\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('111') == '111'\nassert solution('234') == '234'\nassert solution('1234') == '1234'\nassert solution('1000') == '1000'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 6 3\n        ''') == '5'\nassert solution('''1 1 2\n        ''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('4 2 2') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('3 5 2') == '5'\nassert solution('2 1 4') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 6, 3]) == \"5\"\nassert solution([3, 1, 2]) == \"0\"\nassert solution([3, 1, 5]) == \"7\"\nassert solution([3, 1, 4]) == \"6\"\nassert solution([3, 2, 4]) == \"7\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([0, 6, 3]) == '5'\nassert solution([1, 6, 3]) == '5'\nassert solution([2, 6, 3]) == '5'\nassert solution([2, 2, 3]) == '5'\nassert solution([2, 2, 2]) == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '3'\nassert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"\") == \"0\"\nassert solution(\"-3\") == \"0\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1234567890\") == \"3\"\n\nprint(f\"{'*'*10} Bonus {'*'*10}\")\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\n\"\"\"\n\ns = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"5\"\nassert solution(\"6\\n\") == \"4\"\nassert solution(\"7\\n\") == \"5\"\nassert solution(\"8\\n\") == \"5\"\nassert solution(\"10\\n\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '1'\nassert solution('1') == '1'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 4 1\") == \"No\"\nassert solution(\"5 7 5 8\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('1 2 3 4') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('10 9 10 10') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15 20 10 15') == 'Yes'\nassert solution('15 9 10 10') == 'No'\nassert solution('1 10 1 20') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 9 10 10') == 'Yes'\nassert solution('1 1 1 1') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 5 8\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 2 1') == 'Yes'\nassert solution('1 1 1 1') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('1 2 3 4') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('10 9 10 10') == 'Yes'\nassert solution('1 2 3 4') == 'Yes'\nassert solution('9 2 4 1') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10 2 5\n6 3 4\n''') == '5'\nassert solution('''\n4\n5 2 3 5\n8 6 7 3\n''') == '9'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\", \"Should return 2\"\nassert solution(\"3\") == \"5\", \"Should return 5\"\nassert solution(\"10\") == \"10\", \"Should return 10\"\nassert solution(\"12\") == \"12\", \"Should return 12\"\nassert solution(\"3 2\") == \"5\", \"Should return 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"10 2 5\") == \"15\"\nassert solution(\"6 3 4\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '5'\nassert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('10 2 5') == '5'\nassert solution('6 3 4') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 2 1\") == \"1\"\nassert solution(\"3\\n2 2 3\") == \"3\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"5\\n5 4 2\") == \"4\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4\\n') == '5'\nassert solution('1\\n0 0 0\\n') == '0'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\nassert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5'\nassert solution('12') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n.##\\n#.#\\n###\") == \"###\"\nassert solution(\"3 4\\n##.#\\n###.\\n#.##\") == \"###.\\n###.\\n###.\\n\"\nassert solution(\"5 5\\n.##.\\n###.\\n###.\\n###.\\n###.\\n###.\") == \"###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\"\n",
        "num_ids_2": 57,
        "num_ids_4": 116
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"10 10\\n#.#.##\\n##..#.\\n...#.#\\n#.##.##\\n##...##\\n##..#.#\\n#.#...#\\n###.##.\\n###.##.\\n\"\n                \"##.##.##\\n#.##.##.\\n.##..##.\\n.##...##\\n##...#.##\\n.##..#.#\") == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"2 4\") == \"#.#\\n###\\n.##\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '###\\n###\\n###\\n'\nassert solution('4') == '###\\n###\\n###\\n###\\n'\nassert solution('5') == '###\\n###\\n###\\n###\\n###\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 63
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\n    \"3 3\\n#.#\\n#.#\\n#.#\\n\") == \"###\\n###\\n###\\n\"\nassert solution(\n    \"4 4\\n###\\n###\\n###\\n###\\n\") == \"###\\n###\\n###\\n###\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"1 1\\n.###\\n.###\\n.###\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\n##.#\n....\n##.#\n.#.#''') == '###\\n###\\n.##\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6.28318530717958623200'\n'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1''') == '6.28318530717958623200'\nassert solution('''4''') == '7.14285714285714285714'\n\"\"\"\n\nradius = int(input())\nprint(3.14 * radius * radius)\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '6.28318530717958623200'\nassert solution('3') == '6.28318530717958623200'\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '6.2831853071795862'\nassert solution('1.1') == '6.2831853071795862'\nassert solution('3.9') == '7.07106781186547524'\nassert solution('1e3') == '3.3003950617571336'\nassert solution('5.1E2') == '5.1000009'\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"10\") == \"1.570796326794896619\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6.28318530717958623200'\nprint(solution('1'))\nassert solution('1') == '6.28318530717958623200'\nprint(solution('1'))\nassert solution('1') == '6.28318530717958623200'\nprint(solution('1'))\nassert solution('1') == '6.28318530717958623200'\nprint(solution('1'))\nassert solution('1') == '6.28318530717958623200'\nprint(solution('1'))\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('0') == '0'\nassert solution('2') == '2.23618139179585812300'\n\nimport math\nR = int(stdin.readline())\nprint(round(math.pi*R*2, 2))\n",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('1.1') == '6.28'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"7.07106781186547524400\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"-2\") == \"0\"\n",
        "num_ids_2": 37,
        "num_ids_4": 58
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('10') == '12.162162162162162163'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ASSA') == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('SSA') == 'No'\nassert solution('ASSAAA') == 'Yes'\nassert solution('ABCD') == 'No'\nassert solution('ASSS') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AAAS') == 'Yes'\nassert solution('AASA') == 'No'\nassert solution('ABA') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"BCA\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ABCD') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"CACA\") == \"No\"\n\"\"\"\n\nimport re\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ASDA\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ABCDEFGH\") == \"No\"\nassert solution(\"BB\") == \"Yes\"\nassert solution(\"AAABB\") == \"Yes\"\nassert solution(\"\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('QMDS') == 'No'\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-2 4\") == \"3\"\nassert solution(\"-1 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('13 3') == '-10'\nassert solution('-7 1') == '-8'\nassert solution('1 1') == '0'\nassert solution('-1 -1') == '-2'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-5 3\") == \"-10\"\nassert solution(\"2 4\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n-13 3\n''') == '-10'\nassert solution('''\n0 0\n''') == '0'\nassert solution('''\n-1000 1000\n''') == '-2000'\nassert solution('''\n-2\n''') == '-2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-18 3') == '-12'\nassert solution('-10 0') == '-10'\nassert solution('-5 0') == '-10'\nassert solution('-5 0') == '-10'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 2\") == \"2 2\"\nassert solution(\"2 1\") == \"1 1\"\nassert solution(\"-1 -2\") == \"-1 -2\"\nassert solution(\"0 0\") == \"0 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"-1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"-1 -1\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('14 -7') == '-9'\nassert solution('13 -7') == '-8'\nassert solution('13 14') == '-8'",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '\\n'\nassert solution('1 2\\n') == '1 2\\n'\nassert solution('1 2\\n-5 -10\\n') == '1 2\\n10\\n'\nassert solution('1 2\\n-5 -10\\n-3 2\\n') == '1 2\\n10\\n\\n'\nassert solution('1 2\\n-5 -10\\n-3 2\\n-8 -10\\n') == '1 2\\n-5 -10\\n\\n'",
        "num_ids_2": 27,
        "num_ids_4": 84
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 3 6\n''') == '1'\nassert solution('''\n2\n1 1\n''') == '2'\nassert solution('''\n4\n2 3 6 5\n''') == '3'\nassert solution('''\n5\n2 3 6 5 8\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n\nprint(solution())\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\nassert solution('6') == '3'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('7') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '3'\nassert solution('8') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n3 5 6\n\"\"\") == \"3\"\nassert solution(\"\"\"6\n4 5 6 8\n\"\"\") == \"3\"\nassert solution(\"\"\"8\n1 2 3 4 5 6 7 8\n\"\"\") == \"7\"\nassert solution(\"\"\"16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n\"\"\") == \"16\"\nassert solution(\"\"\"12\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n\"\"\") == \"20\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('6') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '3'\nassert solution('4 5 6') == '4'\nassert solution('4 5 6 8') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"10\\n6 5 6 8 5 8 10\\n7 8 9 10\") == \"5\"\nassert solution(\"20\\n13 11 13 12 14 15 13 13 13 13 13 14 15 13 13 13 13 14 15 14 15 13 13 13 13 13 13 13 13 13 14 15 14 15 15 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13",
        "num_ids_2": 41,
        "num_ids_4": 1722
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('10') == '8'\nassert solution('5') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n3 4\"\n\nassert solution(\"1 2 3 1 2 3 4\") == \"2\\n3 4\"\n\nassert solution(\"4 1 1 1\") == \"4\\n1 1 1 1\"\n\nassert solution(\"5 1 1 1 1\") == \"1\\n2 1 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"6\") == \"3\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1\\n1 2 3\\n1 2\\n3\\n') == '2\\n3\\n'\nassert solution(\n    '1\\n1 2\\n2\\n3\\n') == '2\\n2\\n'\nassert solution(\n    '1\\n2\\n2\\n2\\n') == '3\\n'\nassert solution(\n    '4\\n1 1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '4\\n'\nassert solution(\n    '4\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n') == '4\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3 1 2 3 4\n''') == '2 4'\nassert solution('''\n1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 2 1 2 1\n''') == '3'\nassert solution('''\n5\n1 1 1 1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"7\\n1 2 3 1 2 3 4\\n\"\n) == \"2\\n3 4\"\nassert solution(\n    \"4\\n1 1 1 1\\n\"\n) == \"4\\n1 1 1 1\"\nassert solution(\n    \"5\\n1 2 1 2 1\\n\"\n) == \"1\\n5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n3 2 1 1 2 3\n''') == '2'\n\nassert solution('''\n5\n3 2 1 2 3\n''') == '2'\n\nassert solution('''\n7\n1 2 3 1 2 3 4\n''') == '2'\n\nassert solution('''\n4\n1 1 1 1\n''') == '1'\n\nassert solution('''\n5\n1 2 1 2 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2 3 1 2 3 4''') == '2 4'\nassert solution('''5\n1 2 1 2 1''') == '1 2'\nassert solution('''7\n1 2 3 1 2 3 4''') == '2 4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '3'\nassert solution('''7\n1 2 3 1 2 3 4''') == '2'\nassert solution('''4\n1 1 1 1''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''5\n1 2 1 2 1''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3 1 2 3 4\n''') == '2'\nassert solution('''\n4 1 1 1\n''') == '1'\n\nstdin = '''\n5\n1 2 1 2 1\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n6\\n7\\n21') == '1'\nassert solution('2\\n3\\n6\\n7\\n21') == '2'\nassert solution('3\\n3\\n6\\n7\\n21') == '1'\nassert solution('4\\n3\\n6\\n7\\n21') == '7'\nassert solution('5\\n3\\n6\\n7\\n21') == '4'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n3\n6\n7\n21\n28\n999999999\n999999984\n\n''') == \"1\"\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n\n''') == \"2\"\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"7\"\nassert solution() == \"4\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n6\n7\n21\n28\n999999999\n999999984''') == \"1\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\nassert solution('''2\n3\n7\n21\n28''') == '2'\nassert solution('''1\n2\n1\n7\n4\n333333333\n333333328''') == '1'\nassert solution('''1\n2\n1\n7\n4\n333333333\n333333328''') == '7'\nassert solution('''1\n2\n1\n7\n4\n333333333\n333333328''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n6\n7\n''') == '1'\nassert solution('''\n1\n2\n1\n''') == '2'\nassert solution('''\n1\n2\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n6\n7\n21\n28\n999999999\n999999984''') == \"1 2 1 7 4 3333 3333 333333\"\nassert solution('''1\n2\n1\n7\n4\n333333333\n333333328''') == \"1 2 1 7 4 3333 33333 333333\"\nassert solution('''1\n2\n1\n3\n4\n333333333\n333333328''') == \"1 2 1 7 4 3333 33333 333333\"\nassert solution('''1\n2\n1\n3\n4\n333333333\n333333328''') == \"1 2 1 7 4 3333 33333 333333\"\nassert solution('''1\n2\n1\n3\n4\n999999999\n999999984''') == \"1 2 1 7 4 3333 33333 333333\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n3') == '1'\nassert solution('7\\n6') == '2'\nassert solution('7\\n7') == '1'\nassert solution('7\\n999999999') == '7'\nassert solution('7\\n999999984') == '1'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == \"1\"\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == \"1\"\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == \"2\"\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == \"1\"\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5\n''') == '1'\nassert solution('''\n4\n4\n''') == '1'\nassert solution('''\n3\n3\n''') == '1'\nassert solution('''\n2\n2\n''') == '1'\nassert solution('''\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000000 9') == '1'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"10000000 80\") == \"1\"\nassert solution(\"999999999 1000000000\") == \"10\"\nassert solution(\"999999999 1000000000 9\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data=\"512 4\") == \"50\"\nassert solution(input_data=\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"50\"\n\n------------------------------------",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"10000000000009\") == \"1\"\nassert solution(\"123456789123456789\") == \"123456789\"\nassert solution(\"123456789123456789\") == \"123456789\"",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '5'\nassert solution('5') == '4'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5'\n\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\n\nassert solution('''\n3\n5 1 4\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('7') == '5'\nassert solution('5') == '4'\nassert solution('4') == '3'\n\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\nheights = list(map(int, sys.stdin.readline().strip().split()))\n\nm = 1\n\nwhile m <= n and all(abs(h - heights[i]) <= 1 for i in range(n)):\n    m += 1",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '7\\n4 3 5 1 2 2 1\\n') == '5\\n2 1 1 2 3\\n'\nassert solution(\n    '5\\n3 7 5 1 5\\n') == '2\\n5 5 \\n'\nassert solution(\n    '3\\n5 1 4\\n') == '2\\n4 5 \\n'\nassert solution(\n    '7\\n2 2 3 2 1 2 2\\n') == '7\\n1 2 2 2 2 3 2\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n3\n5 1 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n7\n3 7 5 1 5\n''') == '7'\nassert solution('''\n3\n2 2 2 2 2\n''') == '4'\nassert solution('''\n2\n4 5 \n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n3 5 1 2 2 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n3 7 5 1 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n5 1 4\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"7\n4 3 5 1 2 2 1\n\"\"\") == \"5\"\nassert solution(\"\"\"7\n3 7 5 1 5\n\"\"\") == \"2\"\nassert solution(\"\"\"7\n2 2 3 2 1 2 2\n\"\"\") == \"7\"\nassert solution(\"\"\"7\n5 1 4\n\"\"\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '5'\nassert solution('5') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"7\"\nassert solution(\"2\") == \"1 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 21\\n\"\n    \"10 8\\n\"\n    \"7 4\\n\"\n    \"3 1\\n\"\n    \"5 4\\n\"\n    ) == \"2\"\nassert solution(\n    \"4 16\\n\"\n    \"10 8\\n\"\n    \"7 4\\n\"\n    \"3 1\\n\"\n    \"5 4\\n\"\n    ) == \"-1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 20\n10 8\n7 4\n3 1\n5 4\n''') == '2'\n\nassert solution('''\n4 21\n10 8\n7 4\n3 1\n5 4\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '4 21\\n'\n    '10 8\\n'\n    '7 4\\n'\n    '3 1\\n'\n    '5 4\\n'\n    ) == '2'\nassert solution(\n    '4 16\\n'\n    '10 8\\n'\n    '7 4\\n'\n    '3 1\\n'\n    '5 4\\n'\n    ) == '-1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 16\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\nassert solution('''4 10\n10 8\n7 4\n3 1\n5 4''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'tleelte'\nassert solution(input()) == 'qwerty'\nassert solution(input()) == 'vvvvvv'\nassert solution(input()) == 'abcde'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'tleelte'\nassert solution(input()) == 'qwerty'\nassert solution(input()) == 'vvvvvv'\nassert solution(input()) == 'abcde'",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"lol\"\nassert solution(\"4\") == \"tleelte\"\nassert solution(\"6\") == \"qwerty\"\nassert solution(\"8\") == \"vvvvvv\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 3 1\") == \"tleelte\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 1\\n6 1 1\\n5 2 2\\n') == 'tleelte'\nassert solution('4 3 2\\n5 2 2\\n') == 'vvvvvv'\nassert solution('4 3 2\\n5 2 2\\n') == 'eelte'\n",
        "num_ids_2": 47,
        "num_ids_4": 68
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\nassert solution('''4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte'\nassert solution('''\n5\n1 2 2\n''') == 'abcde'\nassert solution('''\n5\n1 3 2\n''') == 'vvvvv'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5 3') == \"tleel\"\nassert solution('6 1 1') == \"qwer\"\nassert solution('6 6 1') == \"vvvv\"\nassert solution('5 2 2') == \"abcde\"\nassert solution('3 2 3') == \"\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"5 1 5\\n8 9 3\\n5 2 2\\n\") == \"vvvvvv\"\nassert solution(\"5 1 5\\n7 9 5\\n5 2 2\\n\") == \"abcde\"",
        "num_ids_2": 57,
        "num_ids_4": 82
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 5 3') == \"tleelte\"\nassert solution('6 1 1') == \"qwerty\"\nassert solution('6 6 1') == \"vvvvvv\"\nassert solution('5 2 2') == \"abcde\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n20 12 6\n\"\"\") == \"12\"\nassert solution(\n\"\"\"\n10 20 15\n\"\"\") == \"15\"\nassert solution(\n\"\"\"\n10 15\n\"\"\") == \"15\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 50 100') == '76'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"20 12 6\"]) == \"12\"\nassert solution([\"20 12 6\"]) == \"12\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 1 10\") == \"10\"\nassert solution(\"5 9 4\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 12 6\") == \"12\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 2') == '3'\nassert solution('3 1 10') == '10'\nassert solution('100 100 5') == '120'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 12 6\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 3 8\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 12 6\n''') == '12'\nassert solution('''\n1 20 6\n''') == '16'\nassert solution('''\n2 1 6\n''') == '6'\nassert solution('''\n20 0 6\n''') == '6'\nassert solution('''\n20 12 6\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"20 12 6\"\n) == \"12\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('10') == '3'\n\"\"\"\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '4'\nassert solution('16') == '5'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"0\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"9\") == \"3\"\nassert solution(\"15\") == \"4\"\n\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '2'\n\n\"\"\"\n\n\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    2\n    3\n    4\n    1\n    5\n    1\n    2\n    ''') == \"2\"\nassert solution('''\n    6\n    2\n    3\n    4\n    5\n    6\n    5\n    4\n    3\n    ''') == \"4\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"12\") == \"2\"\nassert solution(\"24\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"8\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '3'\nassert solution('3 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"100 100\") == \"500\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"3\"\nassert solution(\"1 5\") == \"3\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 0 0\") == \"1\"\nassert solution(\"0 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n\") == \"3\"\nassert solution(\"6 6\\n\") == \"8\"\nassert solution(\"5 3\\n\") == \"3\"\nassert solution(\"11 10\\n\") == \"10\"\nassert solution(\"1 1\\n\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 8') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"16\"\nprint('Congratulations, have a nice day!')\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"4\", \"12\"]) == \"16\"\nassert solution([\"4\", \"13\"]) == \"12\"\nassert solution([\"5\", \"11\"]) == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"2 0\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"5 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 12') == '16', \"Wrong\"\nassert solution('10 10') == '20', \"Wrong\"\nassert solution('1 2') == '3', \"Wrong\"\nassert solution('1 1') == '2', \"Wrong\"\nassert solution('10 10 10 10') == '22', \"Wrong\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 12') == '16'\nassert solution('5 6') == '10'\nassert solution('7 12') == '7'\nassert solution('13 11') == '15'\n\n## 2 - \u0412\u0432\u043e\u0434 \u0438\u0437 \u043f\u043e\u043b\u044f\n\n\u0414\u0430\u043d \u043e\u0434\u043d\u043e\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c n. \u041f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u043c\u0435\u0441\u0442\u0430\u043c\u0438 \u043f\u0435\u0440\u0432\u0443\u044e \u0438 \u0432\u0442\u043e\u0440\u0443\u044e \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u043d\u0435 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435, \u0442\u043e \u0432\u043c\u0435\u0441\u0442\u043e \u043d\u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0435 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e.\n\n\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u0421\u0430\u043c \u0432\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u0430\u0439\u043b \u0438\u043c\u0435\u0435\u0442 \u0432\u043e\u0442 \u0442\u0430\u043a\u0438\u0439 \u0432\u0438\u0434:\n\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0438\u0436\u0435:\n\n5\n4\n3\n2\n1\n2\n2\n2\n\n\u0412\u0441\u0435 \u0447\u0438\u0441\u043b\u0430 \u043d\u0435 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435, \u0430 \u043b\u044e\u0431\u043e\u0435 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435.\n\n\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n\n\u0420\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e: 5\n\n\u0412\u0432\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0438\u0436\u0435:\n\n3\n4\n1\n2\n2\n1\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0441\u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u0442\u0430\u043a\u0436\u0435 \u0442\u0435\u0441\u0442\u044b \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u044b \u043a\u043e\u0434\u0430, \u0435\u0441\u043b\u0438 \u0432\u044b \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0438\u0436\u0435:\n\n1\n2\n1\n2\n1\n2\n1\n\n\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0446\u0438\u043a\u043b\u0430\u043c\u0438 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e range(), \u0432\u044b\u0448\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0438\u0436\u0435:\n\n1\n2\n1\n2\n1\n2\n1\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u043a\u0430\u0436\u0438\u0442\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u043c\u0438.\n\n\u041f\u043e\u0441\u043b\u0435 \u0432\u0441\u0435\u0445 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f.\n\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0451\u0442\u0441\u044f \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n2\n1\n1\n1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n2\n2\n1\n1\n2\n1\n2\n2\n\n\"\"\"\n\nimport sys\nimport random\n\nx = int(sys.stdin.readline())\n\nprint(x)\n\nfor i in range(x - 1):\n    x = random.randint(-1, 100)\n    print(x)\n\nprint(x)\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 5') == '9'\nassert solution('6 4') == '3'\nassert solution('6 7') == '0'\nassert solution('5 6') == '-3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"3 4\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 2') == '2'\nassert solution('2 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '5'\nassert solution('5 6') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('5 6') == '5 6'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"a\") == \"Yes\"\nassert solution(\"z\") == \"No\"\nassert solution(\"chokudai\") == \"Yes\"\n\n'''\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"6789\") == \"Yes\"\nassert solution(\"abcdefghijklmnop\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"chokudak\") == \"No\"\nassert solution(\"chokudaiq\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'No', \"Wrong Answer\"\nassert solution('chokudai') == 'Yes', \"Wrong Answer\"\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\nprint(solution(\"chokudai\"))\nprint(solution(\"chokudaiz\"))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n') == 'IMPOSSIBLE'\nassert solution('3 4\\n') == 'IMPOSSIBLE'\nassert solution('2 4\\n') == '9'\n",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 5\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 5\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 16') == '9'\nassert solution('5 20') == 'impossible'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('2 2') == 'IMPOSSIBLE'\nassert solution('2 9') == '9'\nassert solution('3 3') == '9'\nassert solution('3 1') == 'IMPOSSIBLE'\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 16\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_line()) == \"9\"\nassert solution(input_line()) == \"IMPOSSIBLE\"\n'''",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 0\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n') == 'IMPOSSIBLE'\nassert solution('1 2\\n') == 'IMPOSSIBLE'\nassert solution('1 2\\n') == 'IMPOSSIBLE'\nassert solution('1 2\\n') == 'IMPOSSIBLE'\nassert solution('1 2\\n') == 'IMPOSSIBLE'\n\"\"\"\nfrom math import sqrt",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"2 5\") == \"IMPOSSIBLE\"\nassert solution(\"3 5\") == \"9\"\nassert solution(\"4 5\") == \"10\"\nassert solution(\"5 8\") == \"9\"",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('117') == 'Yes'\nassert solution('11') == 'No'\nassert solution('2') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('117') == 'Yes'\n\ninput: string\noutput: string\n\nexamples:\n    >>> solution(\"13\")\n    'No'\n    >>> solution(\"111\")\n    'Yes'\n    >>> solution(\"1333\")\n    'No'\n    >>> solution(\"7\")\n    'Yes'\n    >>> solution(\"1\")\n    'Yes'\n    >>> solution(\"12345\")\n    'No'\n    >>> solution(\"123\")\n    'Yes'\n    >>> solution(\"0000\")\n    'Yes'\n    >>> solution(\"1222\")\n    'No'\n    >>> solution(\"11111\")\n    'No'\n    >>> solution(\"1\")\n    'Yes'\n    >>> solution(\"100\")\n    'Yes'\n    >>> solution(\"321\")\n    'No'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('117') == 'Yes'\nassert solution('171') == 'No'\nassert solution('7') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('8') == 'Yes'\nassert solution('5') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1) == \"No\"\nassert solution(123) == \"Yes\"\nassert solution(7) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"1111\") == \"Yes\"\nassert solution(\"1000000\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(123) == 'No'\nassert solution(7) == 'Yes'\nassert solution(1234) == 'No'\nassert solution(7) == 'Yes'\n\nprint(solution(input()))\n\nhttps://github.com/iamtrask/codewars/blob/master/Labs/lab10_solution/test_lab10.py\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"120\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('117') == 'Yes'\nassert solution('118') == 'No'\nassert solution('119') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123') == 'Yes'\nassert solution('121') == 'No'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''12\n''') == 'Yes'\nassert solution('''4\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\n\nassert solution(\"10\") == \"No\"\n\nassert solution(\"1\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '12'\n) == 'Yes'\n\nassert solution(\n    '101'\n) == 'No'\n\nassert solution(\n    '10000'\n) == 'Yes'\n\nassert solution(\n    '100000000'\n) == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('12345678') == 'No'\nassert solution('123456789') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('1') == 'Yes'\nassert solution('10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('123') == \"No\"\nassert solution('1234') == \"Yes\"\nassert solution('12345') == \"No\"\nassert solution('123456') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == 'Yes'\nassert solution('12') == 'No'\nassert solution('12') == 'Yes'\nassert solution('12') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 1 -1 0\") == \"-1 1 -1 0\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\nassert solution(\"0 0 1 1\") == \"0 1 -1 -1\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\", \"Wrong Answer\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0 0 0 1\n0 0 1 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 1\n0 1 1 1''') == '-1 -1 1 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 1 1''') == '-1 1 -1 0'\nassert solution('''0 0 0 0''') == '-1 -1 -1 -1'\nassert solution('''0 0 0 0 1''') == '-1 -1 -1 -1'\nassert solution('''0 0 0 1''') == '-1 -1 -1 0'\n",
        "num_ids_2": 42,
        "num_ids_4": 89
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 1 -1 -1') == '1 1 -1 0'\nassert solution('1 2 3 4') == '1 1 3 4'\nassert solution('-1 -1 4 -2') == '-1 -1 4 -2'\nassert solution('4 -2 0 1') == '-1 -1 4 -2'\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 0 0 1\n''') == '-1 1 -1 0'\nprint('Test passed')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red red') == '2 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"red blue\") == \"2 4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('red blue') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2 4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"3 4\") == \"2 4\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('red blue') == '2 4'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"red blue\") == \"2 4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"2 4\") == \"2 4\"\nassert solution(\"1 1\") == \"1 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('a b c') == '2 3'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\naaaa\n\n''') == \"Yes\", solution('''\n10\naaaa\n\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"abc\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == \"Yes\"\nassert solution('abc') == \"Yes\"\nassert solution('abcabc') == \"Yes\"\nassert solution('abcabcabc') == \"Yes\"\nassert solution('abcabcabcabcabc') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('6\\nab') == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'Yes'\nassert solution('5') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nabcdabcdabcd') == 'Yes'\nassert solution('7\\nabcdabcdabcdabcdabcd') == 'No'\nassert solution('6\\nabcdabcdabcd') == 'Yes'\n\nprint(solution(input()))\n",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'Yes'\nassert solution('4') == 'No'\nassert solution('2') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abcabc\") == \"Yes\"\nassert solution(\"aabcabc\") == \"Yes\"\nassert solution(\"abcabcabcabc\") == \"Yes\"\nassert solution(\"abcabcabcabcabcabc\") == \"Yes\"\n",
        "num_ids_2": 18,
        "num_ids_4": 43
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Yes'\nassert solution('2') == 'No'\n\"\"\"\nimport sys\n\nn = int(input())\ns = sys.stdin.readline().strip()",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 1 2\n''') == '3.000000 0'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('1 1 0 0') == '0.000000 0'\nassert solution('2 2 0 0') == '1.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '3.000000 0'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n\"\"\"\nimport math\nimport re\n\nW, H, x, y = map(int, re.split(' |, ', input()))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('5 5 5 0') == '0.000000 0'\nassert solution('5 5 6 0') == '0.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"10 2 3 1\") == \"1.000000 1\"\nassert solution(\"4 5 1 5\") == \"1.000000 0\"\nassert solution(\"3 3 1 2\") == \"3.000000 0\"\nassert solution(\"10 2 2 2\") == \"3.000000 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == '3.000000 0'\nassert solution('2 3 1 2') == '1.000000 0'\nassert solution('3 4 2 2') == '2.000000 0'\nassert solution('5 5 4 3') == '3.000000 0'\nassert solution('3 3 3 3') == '3.000000 0'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"2\", \"3\", \"1\", \"2\"]) == \"3.000000 0\"\nassert solution([\"2\", \"3\", \"1\", \"3\"]) == \"3.000000 1\"\nassert solution([\"2\", \"4\", \"1\", \"3\"]) == \"3.000000 2\"\nassert solution([\"2\", \"3\", \"4\", \"1\"]) == \"3.000000 3\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '3.000000 0'\nassert solution('2 2 2 3') == '2.000000 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5, 4, 5, 3]) == \"2.000000 0\"\nassert solution([5, 6, 5, 4]) == \"4.000000 0\"\nassert solution([9, 3, 7, 2]) == \"1.000000 0\"\n\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\nP Y\n4\nP G Y''') == 'Four'\nassert solution('''4\nP Y G\n4\nP G Y''') == 'Three'\nassert solution('''6\nP Y G\n4\nP G Y\n4\nP G Y''') == 'Four'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'Four'\nassert solution('6\\nP Y P') == 'Three'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"Three\"\nassert solution(\"4\") == \"Four\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"Four\"\nassert solution(\"3\") == \"Three\"\nassert solution(\"1\") == \"One\"\nassert solution(\"13\") == \"Three\"\nassert solution(\"26\") == \"Four\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nP Y Y G\n''') == 'Four'\nassert solution('''2\nP Y\n''') == 'Three'\nassert solution('''12\nP Y Y Y Y G\nW W W W\nG\n''') == 'Four'\nassert solution('''5\nP Y Y G\nY''') == 'Three'\nassert solution('''5\nP Y Y G\nY''') == 'Four'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"Four\"\nassert solution(\"4\") == \"Three\"\nassert solution(\"1\") == \"Three\"\nassert solution(\"5\") == \"Four\"\nassert solution(\"2\") == \"Three\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'Four'\nassert solution('7') == 'Three'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"Three\"\nassert solution(\"5\") == \"Four\"\nassert solution(\"2\") == \"Three\"\nassert solution(\"6\") == \"Four\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\nP Y P Y W\") == \"Four\"\nassert solution(\"6\\nG W Y P Y W\") == \"Three\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Three'\nassert solution('5') == 'Four'\nassert solution('6') == 'Four'\nassert solution('12') == 'Three'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 2\n3 3 1 3 4 2\n''') == \"6\"\nassert solution('''5 5 6\n1 2 6 10 3\n''') == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 3') == 2\nassert solution('6 3 2') == 6\nassert solution('5 5 6') == 2\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == '6'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution() == '1'\nassert solution() == '6'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(samples) == correct",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5 3\") == \"4\"\nassert solution(\"2 2 3\") == \"1\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"5 5 3\") == \"3\"\nassert solution(\"1 2 3\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6 3 2\n2 3 1 3 4 2\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5 3 3\n1 2 4 2 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 5 6\n1 2 6 10 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10 10 10\n
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 3\n1 2 3 4 5\n''') == '2'\nassert solution('''6 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''5 5 6\n1 2 6 10 3\n''') == '2'\nassert solution('''5 5 5\n1 2 6 10 3\n''') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 2 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\") == \"6\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"\nassert solution(\"6 3 3\") == \"0\"\nassert solution(\"5 5 5\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''5\n1 3 2 4\n1 3 2 4\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '7'\nassert solution('5\\n4 8 2 6 2\\n4 5 4 1 3') == '7'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nprint(solution('''5\n4 8 2 6 2\n4 5 4 1 3\n'''))\nassert solution('''5\n7 8 6 4 3\n6 8 2 5 4\n''') == '6'\nprint(solution('''5\n7 8 6 4 3\n6 8 2 5 4\n'''))\nassert solution('''5\n1 1 1 1 1\n1 1 1 1 1\n''') == '2'\nprint(solution('''5\n1 1 1 1 1\n1 1 1 1 1\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 2\n1 3 2\n''') == '7'\nassert solution('''2\n3 5 4\n1 3 2\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\nassert solution('6') == '1'\nprint('Congratulations! Your solutions beats 99% of submissions!')\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"7\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7\"\nassert solution(\"\") == \"0\"\nassert solution(\"5\") == \"7\"\nassert solution(\"4\") == \"7\"",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"4\n4 8 2 6 2\n4 5 4 1 3\n\"\"\") == \"7\"\nassert solution(\"\"\"5\n4 8 2 6 2\n4 5 4 1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"2\n0 0\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 2 4 5 10\\n\"\n) == \"1 1 3 5 9\"\n\nassert solution(\n    \"10\\n\"\n    \"10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\"\n) == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1 1 3 5 9'\nassert solution('10') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution
        "num_ids_2": 43,
        "num_ids_4": 1072
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 1 3 5 9'\nassert solution() == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 4 5\") == \"1 1 3 5\"\nassert solution(\"10\\n1 2 4 5 10\") == \"1 1 3 5 9 9\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 1 3 5 9\"\nassert solution(\"5\\n\") == \"1 1 3 5 9\"\nassert solution(\"10\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nnew_list = []\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 4 5 10\") == \"1 1 3 5 9\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test) == \"1 1 3 5 9\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '1 1 3 5 9'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 1 3 5 9\"\n\nassert solution(\"5\") == \"1 1 3 5 9\"\n\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 1 3 5 9'\nassert solution() == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n\nassert solution('''\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"17 15\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nprint(solution())\n\nassert solution() == \"2\"\nprint(solution())\n\nassert solution() == \"2\"\nprint(solution())\n\nassert solution() == \"2\"\nprint(solution())\n\nassert solution() == \"2\"\nprint(solution())",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution('5\\n2 0 0 1 2\\n1 2') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2') == '0'\nassert solution('3\\n1 1 2\\n2 3') == '0'\nassert solution('3\\n1 1 2\\n2 3') == '4'\n",
        "num_ids_2": 29,
        "num_ids_4": 69
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\"\nassert solution(\"3\\n1 1 2\") == \"0\"",
        "num_ids_2": 66,
        "num_ids_4": 81
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '0'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5\\n'\n    '2 0 0 1 2\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '2 4\\n'\n    '2 5\\n'\n) == '1'\nassert solution(\n    '3\\n'\n    '1 1 2\\n'\n    '2 3\\n'\n    '1 3\\n'\n) == '0'\nassert solution(\n    '4\\n'\n    '1 0 0 0 2\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '2 4\\n'\n    '2 5\\n'\n) == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"bc\"\nassert solution(\"5\") == \"alvuw\"\nassert solution(\"6\") == \"qoztvz\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\naz\\nbf\\n\") == \"bc\", \"First\"\nassert solution(\"5\\nafogk\\nasdji\\n\") == \"alvuw\", \"Second\"\nassert solution(\"6\\nnijfvj\\ntvqhwp\\n\") == \"qoztvz\", \"Third\"",
        "num_ids_2": 47,
        "num_ids_4": 77
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\naz\\nbf\") == \"bc\", \"First example\"\nassert solution(\"5\\nafogk\\nasdji\") == \"alvuw\", \"Second example\"\nassert solution(\"6\\nnijfvj\\ntvqhwp\") == \"qoztvz\", \"Third example\"\n",
        "num_ids_2": 45,
        "num_ids_4": 74
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'def'\nassert solution('6') == 'qoztvz'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'qoztvz'\nassert solution('6') == 'def'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\naz\\nbf\") == \"bc\"\nassert solution(\"5\\nafogk\\nasdji\") == \"alvuw\"\nassert solution(\"6\\nnijfvj\\ntvqhwp\") == \"qoztvz\"\nprint(solution(input()))\n",
        "num_ids_2": 37,
        "num_ids_4": 62
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'bc'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\naz\nbf\n\n''') == 'bc'\n\nassert solution('''\n5\nafogk\nasdji\n\n''') == 'alvuw'\n\nassert solution('''\n6\nnijfvj\ntvqhwp\n\n''') == 'qoztvz'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"qoztvz\"\nassert solution(\"2\") == \"bc\"\nassert solution(\"3\") == \"alvuw\"\nassert solution(\"4\") == \"defg\"\nassert solution(\"5\") == \"alvuw\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n2\naz\nbf\n\"\"\") == \"bc\"\nassert solution(\"\"\"\\\n5\nafogk\nasdji\n\"\"\") == \"alvuw\"\nassert solution(\"\"\"\\\n6\nnijfvj\ntvqhwp\n\"\"\") == \"qoztvz\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n5 10 20\") == \"YES 1 2 3\"\nassert solution(\"2 3 4\\n7 10 20\") == \"NO\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'YES\\n1 2 5'\nassert solution('4 4') == 'NO'\nassert solution('5 4') == 'YES\\n1 2 3 4'\n",
        "num_ids_2": 27,
        "num_ids_4": 44
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"YES\" * 10\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n15 13 15 15 12''') == 'YES'\nassert solution('''5 4\n20 10 40 30''') == 'NO'\nassert solution('''6 2\n7 3 7 10 12 9''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n15 13 15 15 12') == 'YES\\n1 2 5'\n\nassert solution('5 4\\n20 10 40 30') == 'YES\\n1 2 3 4'\n\nassert solution('2 4\\n10 20 40 30') == 'NO'\n\nassert solution('4 4\\n10 20 30 40') == 'NO'",
        "num_ids_2": 46,
        "num_ids_4": 80
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\"\nassert solution(\"5 4\\n20 10 40 30\") == \"YES\"\nassert solution(\"4 4\\n20 10 40 30\") == \"NO\"\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n20 10 40 30\n''') == 'NO'\nassert solution('''\n10 1\n1 2 3 4 5 6 7 8 9 10\n''') == 'YES'\nassert solution('''\n10 1\n1 2 3 4 5 6 7 8 9 10\n''') == 'NO'\n'''\n10 1\n1 2 3 4 5 6 7 8 9 10\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\n\nassert solution('4 4') == 'YES'\nassert solution('10 10 10 10') == 'YES'\nassert solution('30 30 30 30') == 'NO'\n\n\n\nimport collections\n\nclass Solution:\n    def solution(self, stdin):\n        n, k = map(int, stdin.split())\n        scores = list(map(int, stdin.split()))\n        scores = collections.Counter(scores)\n        \n        for i in range(1, n + 1):\n            for j in range(i + 1, n + 1):\n                if (scores[i]!= scores[j] and (i < j or i > j)):\n                    return 'NO'\n        return 'YES'\n\nprint(Solution().solution(stdin))",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == \"YES\"\nassert solution('5 4') == \"NO\"\nassert solution('4 4') == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\", \"Empty\"\nassert solution(\"3 3 3\") == \"YES\", \"Expected\"\nassert solution(\"0 0 0 0 0 0 0 1 1 1 1 0 1 1 1\") == \"YES\", \"Expected\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"1 2 3 4 5 6\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\n1 1 1 2 2 3 3\\n1 2 4 0 2') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"5\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 2 4 0 2\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES\\n1 0 0 0 0 1 0 1 0'\nassert solution('1 2 3 4 5') == 'YES\\n0 1 1 1 1 1 1 1 1'\nassert solution('3\\n4 1 5 2') == 'NO'\n",
        "num_ids_2": 44,
        "num_ids_4": 60
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n''') == 'YES'\nassert solution('''5\n1 3 2\n''') == 'NO'\nassert solution('''7\n4 5 5 3 8 1 9\n''') == 'YES'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n') == 'NO'\nassert solution('5\\n1 2 4 0 2') == 'YES'\nassert solution('1\\n') == 'YES'\nassert solution('1\\n1 2') == 'NO'",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3\\n0\\n1134\\n0\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n1 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n1 1 2 3\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n1 1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n1 1000000000 1 1 1000000000\n''') == '1134'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3'\nassert solution('3\\n1 2 3\\n1000000000 1 1 1000000000') == '0'\nassert solution('5\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n1000000000 1 1 1000000000') == '1134'\n",
        "num_ids_2": 62,
        "num_ids_4": 110
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3'\nassert solution('5\\n10 2 3 7\\n100 5 1 3\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '0'\nassert solution('6\\n10 2 3 7\\n100 5 1 3\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '1134'\nassert solution('7\\n10 2 3 7\\n100 5 1 3\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '0'\n",
        "num_ids_2": 80,
        "num_ids_4": 161
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '3\\n0\\n1134\\n0'\nprint(solution(input_))",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"3\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"1134\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000000 1 1 1000000000\\n\") == \"0\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n100000000000000 1 1 1000000000\\n\") == \"0\"\nassert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n100000000000001 1 1 1000000000\\n\") == \"0\"\n",
        "num_ids_2": 81,
        "num_ids_4": 161
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example) == '3'\nassert solution(input) == '1134'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == \"3\"\nassert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == \"0\"\nassert solution('''\n3\n5 1 2 3\n1 2 5 4\n3 2 5 4\n''') == \"1134\"\nassert solution('''\n1\n3\n1 2 3\n1 3 2\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n''') == '1'\nassert solution('''4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"12164510040883200\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '2'\n) == '1'\nassert solution(\n    '4'\n) == '3'\nassert solution(\n    '8'\n) == '1260'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15 3') == 'ccbbabaccbc'\nassert solution('15 9') == 'cccccc'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"\", \"solution not defined\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == ''\nassert solution('2 2') == ''\nassert solution('3 5') == ''\nassert solution('10 10') == ''\nassert solution('100000000 100') == ''\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == ''\nassert solution('2 2') == 'a'\nassert solution('5 5') == 'abcde'\nassert solution('4 8') == 'abcdef'\nassert solution('3 4') == 'fgh'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"def\"\nassert solution(input(\"12\")) == \"\"\nassert solution(input(\"3\")) == \"def\"\nassert solution(input(\"3\")) == \"\"\nassert solution(input(\"4\")) == \"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"15 3\") == \"cccbbabaccbc\"\nassert solution(\"1 1\") == \"def\"\n\nimport itertools",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '', 'Should return an empty string'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"\"\nassert solution(\"abc\") == \"\"\nassert solution(\"abcdef\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"15 3\") == \"cccbbabaccbc\"\nassert solution(\"15 9\") == \"cccccc\"\nassert solution(\"1 1\") == \"\"\n\nsolution()\n",
        "num_ids_2": 29,
        "num_ids_4": 38
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"20\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6\\n2 4\\n3 3') == '8'\nassert solution('5 3\\n4 2\\n2 5') == '20'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 5\n4 2\n2 5\n''') == '20'\nassert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_01) == \"13\"\nassert solution(example_input_02) == \"2\"\nassert solution(input) == \"35\"\n",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"8\"\nassert solution(\"5 3\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n2 4\") == \"8\"\nassert solution(\"5 3\\n4 2\") == \"20\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n5 6\n3 3\n2 4\n2 2\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"17\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\n''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"20\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\n''') == '3'\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '3'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '2 2 1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 10\n*...*\n*...*\n*...*\n*...*\n*...*\n\n10 10\n*.*.\n*.*.\n*.*.\n*.*.\n*.*.\n\n10 10\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n\n10 10\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n\n10 10\n*...*\n*.*.\n*.*.\n*.*.\n*.*.\n*.*.\n''') == \"3 4 1\"\nassert solution('''\n5 5\n.***\n*.*.\n***.\n*.*.\n***.\n\n5 5\n.*.\n***\n.*.\n.*.\n***\n''') == \"3 3 1\"\nassert solution('''\n5 5\n.*.\n***\n.***\n.*.\n***\n''') == \"-1\"\nassert solution('''\n3 3\n*.*\n***\n*.*\n''') == \"3 4 1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '3'\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '-1'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 8\\n.***..\\n..****.\\n...**...\\n....*...\\n....*...\\n........\") == \"3 4 1\"\nassert solution(\"5 5\\n.*...\\n**.**\\n.***.\\n...**\\n....\\n\") == \"3 4 1\"\nassert solution(\"3 3\\n*.*\\n**.\\n*.*\\n***\") == \"3 4 1\"\nassert solution(\"4 3\\n**.*\\n**.*\\n**.*\\n**.*\") == \"2 2 1\"\nassert solution(\"5 5\\n*...\\n*..*\\n*.*.\\n*.*.\\n*.*.\\n\") == \"3 4 1\"",
        "num_ids_2": 77,
        "num_ids_4": 134
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"5 5\") == -1",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 8') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\nassert solution('5 5') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n'\nassert solution('5 5') == '-1\\n'\nassert solution('6 6') == '-1\\n'",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\\n3 4 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    6 8\n    ....*...\n    ...**...\n    ..*****.\n    ...**...\n    ....*...\n    ........\n''') == '3'\n\nassert solution('''\n    5 5\n    .*...\n    ***..\n    .*...\n    .*...\n    .....\n''') == '3'\n\nassert solution('''\n    5 5\n    .*...\n    ***..\n    .*...\n    .*...\n    .....\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('575') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('575') == \"Yes\"\nassert solution('5752') == \"Yes\"\nassert solution('6755') == \"No\"\nassert solution('5753') == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"456\") == \"No\"\nassert solution(\"001\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == 'Yes', 'No'\nassert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('9') == 'Yes'\n\n\"\"\"\nimport sys",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('575') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('345') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"42\") == \"No\"\nassert solution(\"-8\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Alice'\nassert solution('8') == 'Alice'\nassert solution('8') == 'Bob'\nassert solution('6') == 'Alice'\nassert solution('6') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('2 1') == 'Bob'\nassert solution('1 1') == 'Draw'\nassert solution('9 5') == 'Alice'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('4 8') == 'Bob'\nassert solution('8 3') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('10 6') == 'Bob'\nassert solution('12 2') == 'Draw'\nassert solution('13 13') == 'Draw'\nassert solution('1 2') == 'Bob'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"Alice\"\nassert solution(\"6 4\") == \"Bob\"\nassert solution(\"10 3\") == \"Draw\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8') == 'Alice'\nassert solution('5 6') == 'Bob'\nassert solution('8 6') == 'Draw'\nassert solution('8 5') == 'Alice'\nassert solution('5 5') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"5 5\") == \"Alice\"\nassert solution(\"1 1\") == \"Draw\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 7') == 'Bob'\nassert solution('7 8') == 'Draw'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"Alice\"\nassert solution(\"5 3\") == \"Bob\"\nassert solution(\"1 1\") == \"Draw\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Alice\"\nassert solution(\"8 6\") == \"Bob\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nprint(solution(input()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('welcome,to,codewars') == 'welcome to codewars'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy', f'Solution is wrong: \\n \\\n    Expected: {\\\"happy newyear enjoy\\\", \\\"happy newyear enjoy\\\"},\\n \\\n       Your answer: {\\\"happy newyear enjoy\\\"},\\n \\\n       Test case: {\\\"happy,newyear,enjoy\\\",\"\\\"happy,newyear,enjoy\\\"}'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"sunny,nice,cool\") == \"sunny nice cool\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"happy newyear enjoy\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'happy,newyear,enjoy') == 'happy newyear enjoy'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('jane,smith,doe') == 'jane smith doe'\nassert solution('alice,bob,claire') == 'alice bob claire'\nassert solution('a,b,c') == 'a b c'\nassert solution('apple, banana, cherry') == 'apple banana cherry'\nprint('All test cases passed.')",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n\ninput = 'happy,newyear,enjoy'\nprint(input.replace(',',''))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1\\n2'\nassert solution('2 0') == '1\\n1'\nassert solution('0 0') == '1\\n1'\nassert solution('-1 0') == '2\\n2'\nassert solution('1 0') == '2\\n1'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n2 0\n0 0\n-1 0\n1 0\n''') == '2\\n1\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"2 2\") == \"2 1\"\nassert solution(\"10 10\") == \"2 1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n2 0\n0 0\n-1 0\n1 0''') == '2 1'\nassert solution('''2 4\n1 0\n0 0\n-1 0\n1 0''') == '2 1'\nassert solution('''2 3\n1 0\n0 0\n-1 0\n1 0''') == '2 1'\nassert solution('''2 5\n1 0\n0 0\n-1 0\n1 0\n''') == '1 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"3 5\") == \"1 2 3 4\"\nassert solution(\"3 3\") == \"1 2\"\nassert solution(\"3 5\") == \"1 2\"\nassert solution(\"8 8\") == \"1 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"5 7\") == \"1 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\\n1\"\nassert solution(\"3 3\") == \"2\\n1\"\nassert solution(\"4 4\") == \"1\\n2\"\nassert solution(\"5 5\") == \"1\\n2\"\nassert solution(\"8 8\") == \"1\\n2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1'\nassert solution('5 3\\n2 4\\n4 4\\n4 4\\n5 5\\n5 5') == '2 4\\n1 3\\n4 4\\n3 4\\n3 4'\nassert solution('5 3\\n2 4\\n4 4\\n4 4\\n5 5\\n5 5') == '2 4\\n1 3\\n4 4\\n3 4\\n3 4'\n",
        "num_ids_2": 79,
        "num_ids_4": 127
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n') == '2 1\\n1 2'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '10'\nassert solution('5') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '14'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '14'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\nassert solution('10') == '100'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"14\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"10\") == \"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"14\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '14'\nassert solution('10') == '33'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n#.\\n#.#\\n#.\\n#.\\n') == 'Yes'\nassert solution('1 1\\n#.\\n#.\\n') == 'No'\n\"\"\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('1 1') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n') == 'Yes'\nassert solution('3 3\\n#.#.\\n.#.\\n#..\\n#.\\n#.\\n') == 'No'\nassert solution('1\\n#\\n') == 'Yes'\nassert solution('1\\n.\\n') == 'No'\nassert solution('3\\n#.\\n.\\n.\\n.\\n') == 'Yes'\n",
        "num_ids_2": 63,
        "num_ids_4": 93
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n####\\n##.\\n#.#\\n####\\n#.#\\n#.#\\n\") == \"Yes\"\nprint(solution(input()))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n#.\\n#.\\n#.\\n#.\\n#.\\n') == 'Yes'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"Yes\"\n\"\"\"\n\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\") == \"Yes\"\nassert solution(\"4 3\\n###\\n#..\\n#.#\\n#..\\n#.#\") == \"No\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n#.\\n#.\") == \"Yes\"\nassert solution(\"1 2\\n#.\\n#.\") == \"No\"\nassert solution(\"1 2\\n#.\\n#.\\n#.\\n#.\\n\") == \"Yes\"\nassert solution(\"1 2\\n#.\\n#.\\n#.\\n#.\\n#.\\n\") == \"Yes\"\nassert solution(\"1 2\\n#.\\n#.\\n#.\\n#.\\n#.\\n\") == \"Yes\"\n",
        "num_ids_2": 36,
        "num_ids_4": 98
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n##') == 'No'\nassert solution('2 2\\n#.\\n.#') == 'Yes'\nassert solution('2 1\\n##') == 'No'\nassert solution('3 3\\n.#.\\n.###\\n.#.#\\n###.#\\n#.###\\n###.##\\n##.##') == 'Yes'\nassert solution('5 5\\n##.#\\n#.##\\n#.##\\n#.#.\\n##.##\\n###.##\\n#.##\\n#.#.\\n#.#.\\n#.#.\\n#.##') == 'No'",
        "num_ids_2": 32,
        "num_ids_4": 88
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 5 2\n    3 7 9''') == '53'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('-1 2 3') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('1 -2 -3') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"1 2 3 4 5\") == \"10\"\nassert solution(\"1 1 3 4 5\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 2 3\") == \"9\"\nassert solution(\"2 3 4\") == \"8\"\nassert solution(\"3 2 4\") == \"7\"\nassert solution(\"4 2 3\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == \"53\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 5 2\") == \"53\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('0 0 0') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 5\") == \"13\"\nassert solution(\"5 3 2\") == \"53\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n1000000000000\\n2000000000000\\n3000000000000\\n4000000000000\\n5000000000000'\n) == '15950'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"4\") == \"15950\"\nassert solution(\"5\") == \"15950\"\nassert solution(\"20\") == \"15950\"\nassert solution(\"100\") == \"15950\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"1\") == \"15950\"\nassert solution(\"2\") == \"15950\"\nassert solution(\"4\") == \"15950\"\nassert solution(\"5\") == \"15950\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '15950.0'\nassert solution('100') == '2.5'\nassert solution('20') == '50.0'\nassert solution('10') == '75.0'\nassert solution('100') == '1.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '15950'\n\"\"\"\n\nimport math\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '15950'\nassert solution('12') == '1240'\nassert solution('10') == '1240'\nassert solution('10') == '1240'\nassert solution('4') == '1240'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '15950', 'Should be 15950'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n4980\n7980\n6980\n''') == '15950'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5080\\n7980\\n\") == \"15950\\n\", \"Second Test Case Failed\"\nassert solution(\"10\\n4000\\n4000\\n\") == \"4000\\n\", \"Third Test Case Failed\"\nassert solution(\"6\\n20\\n100\\n\") == \"220\\n\", \"Fourth Test Case Failed\"",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '180'\nassert solution('7') == '60'\nassert solution('35') == '120'\nassert solution('120') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120\\n') == '215'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '180'\nassert solution('35') == '57'\nassert solution('120') == '29'\n\n\"\"\",\"\"\"# Given an array of strings arr, write a function that returns true if the number of occurences of each string in the array equals to one.\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '29'\nassert solution('3') == '36'\nassert solution('4') == '45'\nassert solution('5') == '49'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"10\"\nassert solution(\"2\") == \"20\"\nassert solution(\"3\") == \"30\"\nassert solution(\"4\") == \"40\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"215\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"60\"\nassert solution(\"35\") == \"57\"\nassert solution(\"120\") == \"180\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '215'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '29'\nassert solution('20') == '50'\nassert solution('7') == '60'\nassert solution('35') == '120'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"20\") == \"0\"\nassert solution(\"7\") == \"10\"\nassert solution(\"35\") == \"30\"\nassert solution(\"120\") == \"180\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"2\\n10 30\") == \"7.5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '7.5'\nprint(solution(input))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n10 30\\n') == '7.5'\nassert solution('2\\n10 30\\n') == '7.5'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n10 30') == '7.5'\nassert solution('4\\n10 30') == '7.5'\nassert solution('8\\n10 30') == '7.5'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n10 30\\n') == '7.5', solution('2\\n10 30\\n')\nassert solution('3\\n1 2 3\\n') == '0.33333333333333333333333333333', solution('3\\n1 2 3\\n')\nassert solution('5\\n1 2 3 4 5\\n') == '0.2', solution('5\\n1 2 3 4 5\\n')\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '0.625', solution('10\\n1 2 3 4 5 6 7 8 9 10\\n')\n",
        "num_ids_2": 65,
        "num_ids_4": 143
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('1000') == '7.5'\nassert solution('1') == '1'\nassert solution('100') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"2\") == \"7.49999\"\nassert solution(\"2\") == \"7.50001\"\nassert solution(\"2\") == \"7.501001\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '7.5'\nassert solution('20') == '7.5'\nassert solution('30') == '7.5'\nassert solution('1000') == '7.5'\nassert solution('10000') == '7.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100') == '7.50001'\n\"\"\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"10 30\") == \"7.5\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 2') == '0'\nassert solution('100 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '2'\nassert solution('') == '2'\nassert solution('5 3') == '2'\nassert solution('5 1') == '2'\nassert solution('5 10') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2'\nassert solution('6 3') == '1'\nassert solution('7 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('6 2') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('7 2\\n7\\n12\\n17\\n5\\n8\\n11\\n8\\n') == '4'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3\\n10\\n15\\n11\\n14\\n12\\n') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'a'\nassert solution('A') == 'A'\n\n\"\"\"\n\nalph = stdin.split()\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(2) == \"a\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'A'\nassert solution('A') == 'A'\nassert solution('B') == 'B'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A') == 'A'\nassert solution('b') == 'b'\nassert solution('B') == 'A'\nassert solution('a') == 'a'\nassert solution('A') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\n\n-------------------\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('aB') == 'a'\nassert solution('ab') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'a'\nassert solution('A') == 'a'\nassert solution('b') == 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"a\") == \"A\"\nassert solution(\"B\") == \"B\"\n\nstdin = input()",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"20 20\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 2\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('3 5') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1905\n''') == 'YYMM'\nassert solution('''19\n''') == 'AMBIGUOUS'\nassert solution('''1905\n''') == 'AMBIGUOUS'\n",
        "num_ids_2": 15,
        "num_ids_4": 23
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1906') == 'AMBIGUOUS'\nassert solution('1902') == 'AMBIGUOUS'\nassert solution('1903') == 'AMBIGUOUS'\nassert solution('1904') == 'AMBIGUOUS'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1905'\n) == 'YYMM', f'Expected \"YYMM\", but got: {solution(\"1905\")}'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('01') == 'YYMM'\nassert solution('01') == 'AMBIGUOUS'\nassert solution('19') == 'YYYY'\nassert solution('19') == 'AMBIGUOUS'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"NA\"\nassert solution(\"0\") == \"NA\"\nassert solution(\"12\") == \"AMBIGUOUS\"\nassert solution(\"1001\") == \"AMBIGUOUS\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('YYMM') == 'YYMM'\nassert solution('MMYY') == 'MMYY'\nassert solution('AMBIGUOUS') == 'AMBIGUOUS'\nassert solution('NA') == 'NA'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"NA\"\nassert solution(\"1905\") == \"YYMM\"\nassert solution(\"1905\") == \"MMYY\"\nassert solution(\"1905\") == \"AMBIGUOUS\"\nassert solution(\"1906\") == \"NA\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'NA', 'Example test case'\nassert solution('1905') == 'YYMM', 'Another example test case'\n\n'''\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('01') == 'YYMM'\nassert solution('05') == 'YYMM'\nassert solution('1') == 'MMYY'\nassert solution('1') == 'MMYY'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 2, \"Wrong answer\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\nprint(solution(sys.stdin.read()))\n\"\"\"\n\nimport sys",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n\n\"\"\"\n\nstdin = input()\nk = int(stdin)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == '21'\nassert solution('5 7') == '20'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n''') == '21'\nassert solution('''\n10 2\n''') == '10'\nassert solution('''\n21 21\n''') == '21'\nassert solution('''\n3 3\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 12') == '21'\nassert solution('7 1') == '9'\nassert solution('1 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    20\n    15\n\"\"\") == \"22\"\nassert solution(\"\"\"\n    10\n    15\n\"\"\") == \"22\"\nassert solution(\"\"\"\n    21\n    11\n\"\"\") == \"21\"\nassert solution(\"\"\"\n    22\n    15\n\"\"\") == \"22\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''9 12\n''') == '21'\nassert solution('''9 12\n''') == '21'\nassert solution('''0 1\n''') == '00'\nassert solution('''1 2\n''') == '02'\nassert solution('''10 11\n''') == '22'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9 12') == '21'\n\n\"\"\"\n\nimport re\nfrom datetime import datetime\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"21\"\nassert solution(\"2 4\") == \"17\"\nassert solution(\"8 7\") == \"21\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9 12') == '21'\nassert solution('15 10') == '19'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 7\") == \"21\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == \"3719\"\nassert solution('12 13') == \"37\"\nassert solution('12 13') == \"12\"\nassert solution('12 12') == \"12\"\nassert solution('12 12') == \"12\"\n",
        "num_ids_2": 27,
        "num_ids_4": 49
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nprint(solution(input()))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 100\\n\") == \"1\"\nassert solution(\"2 2919\\n\") == \"3719\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3719\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"3 5050\") == \"2749\"\nassert solution(\"4 5555\") == \"3949\"\nassert solution(\"5 6666\") == \"4343\"\nassert solution(\"10 100000\") == \"129997\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('4 2') == '1'\nassert solution('12 9') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(Takahashi) == str(3719)\nprint(solution(Takahashi))\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"2 2919\") == \"3719\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2919') == '3719'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2919\n''') == '3719'\nassert solution('''\n3 10 -3\n''') == '3719'\nassert solution('''\n5 100 -100\n''') == '5100'\nassert solution('''\n3 10 -3\n''') == '3719'\nassert solution('''\n10 3 -100\n''') == '3003'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11 2') == '4'\nassert solution('12 4') == '0'\nassert solution('9999999 1001') == '999'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"10 100\") == \"4\"\nassert solution(\"2 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 2') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '4'\nassert solution('11 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 2') == '4'\nassert solution('10 2') == '2'\nassert solution('9 8') == '3'\nassert solution('1 0') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 2') == '4'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('11') == '1'\nassert solution('11 11') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '6'\n\"\"\"\n\nN = int(input())\n\nhalf = N // 2\n\nprint(half, half + 1, half + 2, sep='\\n')\n\n\n\"\"\"\nTakahashi wants to print a document with N pages double-sided, where two pages of data can be printed on one sheet of paper.\nAt least how many sheets of paper does he need?\n\n-----Constraints-----\n - N is an integer.\n - 1 \\leq N \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the answer.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n3\n\nBy printing the 1-st, 2-nd pages on the 1-st sheet, 3-rd and 4-th pages on the 2-nd sheet, and 5-th page on the 3-rd sheet, we can print all the data on 3 sheets of paper.\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n\"\"\") == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"4\"\nassert solution(\"100\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\n\"\"\"\n\nN = int(input())\n\nprint(int(N//2) + (N%2!= 0))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '3'\nassert solution('100') == '10'\n\"\"\"\n\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '3'\n\"\"\"\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n') == 'Yay!'\nassert solution('5 5\\n') == 'Yay!'\nassert solution('12 7\\n') == 'Yay!'\nassert solution('15 6\\n') == 'Yay!'\nassert solution('16 6\\n') == 'Yay!'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Yay!\"\nassert solution(\"3 3\") == \":(\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('5 6') == 'E869120'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\nassert solution(\"6 9\") == \"Yay!\"\nassert solution(\"12 4\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n''') == 'Yay!'\nassert solution('''\n5 4\n''') == 'Yay!'\nassert solution('''\n2 2\n''') == 'Yay!'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('5 3') == ':( '\nassert solution('5 1') == 'Yay!'\nassert solution('6 5') == 'Yay!'\nassert solution('6 2') == 'Yay!'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"10 10\") == \"Yay!\"\nassert solution(\"1 10\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\n\"\"\"\nfrom collections import Counter",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yay!\"\nassert solution(input(\"\")) == \"Yay!\"\n'''",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == 'Yay!'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'Yay!'\n\nprint(solution(input()))\n\"\"\"\n\nfrom collections import deque\n\na, b = map(int, input().split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1234567876\") == \"34\"\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the input]\n\n[Try the",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456789\") == \"42\"\nassert solution(\"11111111\") == \"42\"\nassert solution(\"77777778\") == \"42\"\nassert solution(\"77777779\") == \"41\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234') == '34'\nassert solution('1234567') == '34'\nassert solution('123456') == '34'\nassert solution('123456789') == '34'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('11223344556677889900') == '17'\nassert solution('1216182099999') == '11'",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1212347564') == '34'\nassert solution('1234567876') == '34'\nassert solution('1234567876') == '34'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456789\") == \"34\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1234\") == \"2\"\nassert solution(\"123456\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1234567876') == '34'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 12 6\n\n2\n2 9\n\n7\n2 1000000000 4 6 8 4 2\n\n6\n13 52 0 13 26 52\n\n''') == '5 3\\n1 7'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == '12 13'\nassert solution(input_2) == '2999999987 2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5 3'\nassert solution('2') == '1 7'\nassert solution('7') == '12 13'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '10 11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 12, 6]) == \"5 3\"\nassert solution([2, 9]) == \"1 7\"\nassert solution([7]) == \"12 13\"",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2 9\n''') == '1 7'\nassert solution('''3\n3 12 6\n''') == '5 3'\nassert solution('''7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52\n''') == '12 13'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"1 7\"\nassert solution(input_2) == \"2999999987 2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == '12 13'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 12, 6]) == \"5 3\"\nassert solution([2, 9]) == \"1 7\"\nassert solution([7, 0]) == \"1 7\"\nassert solution([6]) == \"1 7\"\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5 3'\nassert solution('2') == '1 7'\nassert solution('7') == '12 13'\nassert solution('6') == '12 13'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n3\n3 1 4 1\n\n3\n1 1 1\n\n5\n1 1 1 2 2\n\n\"\"\") == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '3'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1\n''') == '2'\nassert solution('''\n5\n1 1 1 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1 4 1\n''') == '3'\n\nassert solution('''\n3\n1 1 4 1\n''') == '2'\n\nassert solution('''\n5\n1 1 1 2 2\n''') == '2'\n\nassert solution('''\n10\n1 1 1 1 1 2 2 2 3 1 1\n''') == '9'\n\nassert solution('''\n10\n1 1 1 2 2 3 3 4 1 1\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 1 1 2 2\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution('3 2') == '4 2'\nassert solution('5 2') == '2'\nassert solution('7 0') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 2\n2 3\n''') == '2 2'\nassert solution('''3 2\n1 3\n2 3\n''') == '2'\nassert solution('''4 2\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''3 2\n1 3\n2 3\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2\n1 2\n2 3\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0') == '1'\nassert solution('4 2') == '2'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"5 1\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 71
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"2\"\nassert solution(\"3 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 2\\n1 2\\n2 2\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"0 0\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\nOutput\n11''') == '11', 'Wrong output'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\nassert solution(\"7 0\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n') == '11'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == '4'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('6 4') == '4'\nassert solution('1 2 3 4 5') == '11'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''10 3\n1 4 2 1 2 4 4 2 1\n1 4 2\n2 4\n2 5\n4 4\n4 2\n3 1\n5 4\n6 4\n7 4\n7 5\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"2 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n4 5 1\n1 2\n''') == '1 5 1 2 1 2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 5\\n2 1\\n2 9999999994\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 5\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1 100 100\\n2 100 100\\n20 100 100\\n20 100 100\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3 6 5 4\n'''\n) == '2 1 3'\nassert solution(\n'''\n40 40 40 60\n'''\n) == '20 20 20'\nassert solution(\n'''\n201 101 101 200\n'''\n) == '1 100 100'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2 1 3'\nassert solution() == '1 100 100'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == 'BGRBGBGBGBGRG'\nassert solution('9') == 'RBGRGBRGR'\nassert solution('8') == 'BBBGBRRR'\n",
        "num_ids_2": 31,
        "num_ids_4": 45
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('R') == ''\nassert solution('RR') == 'B'\nassert solution('RRRR') == 'B'\nassert solution('RGGGGGRR') == 'R'\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n\"\"\"\nimport math\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '2\\nBGRGBRGBGBGRG'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"8\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\nBBBGBRRR\n''') == '2'\nassert solution('''\n3\nBBBGBRRR\n''') == '2'\nassert solution('''\n4\nBBBGBRRR\n''') == '3'\nassert solution('''\n5\nBBBGBRRR\n''') == '3'\nassert solution('''\n6\nBBBGBRRR\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\nRRBGRRBRGG\n''') == '2'\nassert solution('''\n8\nBBBGBRRR\n''') == '2'\nassert solution('''\n13\nBBRRRRGGGGGRR\n''') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 3 5 2 4 6\n''') == '4'\n\nassert solution('''7\n3 3 4 7 5 6 8\n''') == '4'\n\nassert solution('''4\n10 9 8 7\n''') == '1'\n\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '1 2 3 7 8 9'\n\nassert solution('''10\n2 7 5 1 3 4 6 8 9 10\n''') == '6 1 3 7 8 9'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"6 7 8 9 10 11\") == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n3\n4\n7\n5\n6\n8\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6\n1\n3\n5\n2\n4\n6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n9\n6 7 8 3 4 5 9 10 11\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4\n10 9 8 7\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n9 8 7 6 5 4 3 2 1\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '6'\nassert solution('6') == '2'\nassert solution('7') == '4'\nassert solution('8') == '1'\nassert solution('9') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n\nassert solution() == \"1\"\n\nassert solution() == \"1\"\n\nassert solution() == \"1\"\n\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n10 9 8 7\\n') == '6\\n1 2 3 7 8 9'\nassert solution('6\\n7 8 9 10 11 12\\n') == '2\\n1 3 4 5 6 7'\nassert solution('9\\n8 7 6 5 4 3 2 1\\n') == '6\\n1 2 3 7 8 9'\nassert solution('8\\n10 9 8 7\\n') == '2\\n1 2 3'\n",
        "num_ids_2": 54,
        "num_ids_4": 107
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8') == '4'\nassert solution('6\\n1 3 5 2 4 6') == '2'\nassert solution('4\\n10 9 8 7') == '1'\nassert solution('9\\n6 7 8 3 4 5 9 10 11') == '6'\nprint('\u2705')",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"6\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"9\") == \"6\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('9') == '6'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n''') == 'Yes'\nassert solution('''\n1 1\n''') == 'Yes'\nassert solution('''\n2 1\n''') == 'No'\nassert solution('''\n5 2\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('4 1') == 'No'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 6\") == \"No\"\nassert solution(\"6 4\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 2') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"4 2\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('3 3') == 'Yes'\nassert solution('3 2') == 'No'\n\n\"\"\"\nimport sys\nimport io\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('3 1 2') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('4 1') == 'No'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"0 0\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"X Y\") == \"X Y\"\nassert solution(\"81 58\") == \"110\"\nassert solution(\"X Y\") == \"X Y\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11 10') == '110'\nassert solution('1 2') == '1'\nassert solution('33 55') == '110'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"81 58\") == \"110\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"10 3\") == \"10\"\nassert solution(\"30 20\") == \"30\"\nassert solution(\"48 54\") == \"110\"\nassert solution(\"95 70\") == \"100\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"16\"\nassert solution(\"13 13\") == \"32\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\"\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"110\"\nassert solution(\"3 1\") == \"50\"\nassert solution(\"10 2\") == \"20\"\nassert solution(\"10 2\") == \"20\"\nassert solution(\"10 2\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 5\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('81 58') == '110'\nassert solution('78 13') == '179'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '8'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n\n''') == '8'\n\nassert solution('''\n4\n\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '8'\nassert solution('1') == '1'\nassert solution('10') == '81'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(3) == \"8\"\nassert solution(2) == \"10\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['2']) == '8'\n\n\"\"\"\n\nimport math\nimport itertools",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n\n''') == '8'\n\nassert solution('''4\n\n''') == '32'\n\nassert solution('''6\n\n''') == '49'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n''') == '8'\nassert solution('''3\n''') == '9'\nassert solution('''4\n''') == '12'\n'''\n\nn = int(input())",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\n\"\"\"\n\nX = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"0\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\nassert solution('9') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('8') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1') == 'AB'\nassert solution('2') == 'BC'\nassert solution('3') == 'BD'\nassert solution('4') == 'BE'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ABC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('999') == 'ABC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'ABD'\nassert solution('2') == 'ACD'\nassert solution('3') == 'AD'\nassert solution('4') == 'BC'\nassert solution('5') == 'BD'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1000') == 'ABC'\nassert solution('1001') == 'ABC'\nassert solution('1002') == 'ABC'\nassert solution('1049') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC'\nassert solution('9999') == 'ABC'\nassert solution('999999') == 'ABC'\nassert solution('9999999') == 'ABC'\nassert solution('100000000') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('999') == 'ABC'\n\"\"\"\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor i in range(1, n+1):\n    print(\"ABC\" + str(i) + \"ABC\" + str(i+1) + \"ABC\" + str(i+2))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('999') == 'ABC'\nassert solution('0') == '0'\nassert solution('123') == '123'\nassert solution('999') == 'ABC'\nassert solution('999999999999999999999') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('4\\n8\\n9\\n15\\n1') == 'Yay!'\nassert solution('9\\n8\\n15\\n1\\n4') == 'Yay!'\nassert solution('9\\n8\\n15\\n1\\n4\\n2') == 'Yay!'\nassert solution('8\\n9\\n15\\n1\\n4\\n2') == 'Yay!'\n",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"5\\n2\\n3\\n6\\n7\") == \"Yay!\"\nassert solution(\"5\\n2\\n3\\n6\\n7\\n8\") == \"Yay!\"\nassert solution(\"5\\n2\\n3\\n6\\n7\\n9\") == \"Yay!\"\nassert solution(\"5\\n2\\n3\\n6\\n7\\n12\") == \"Yay!\"\n",
        "num_ids_2": 49,
        "num_ids_4": 101
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\n\n'''\n\na, b, c, d, e, k = map(int, stdin.readline().split())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''2\n4\n7\n8\n15''') == 'Nay!'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n3\n4\n5\n6''') == 'Nay!'\nassert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\npink\\n') == 'pink'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3200\") == \"pink\"\n\"\"\"\na = int(input())\ns = input()\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Five'\nassert solution('-3') == 'Red'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3200') == 'pink'\nassert solution('123') =='red'\nassert solution('1000') =='red'\nassert solution('4') =='red'\nassert solution('-1') =='red'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'pink'\n\"\"\"\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    4\n    Alice\n    Bob\n    Charlie\n    \"\"\") == \"\"\"\n    Alice\n    Bob\n    Charlie\n    \"\"\", 'I failed!'\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'pink'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3200') == 'pink'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"3200\") == \"pink\"\nassert solution(\"3200\") == \"pink\"\nassert solution(\"3200\") == \"pink\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3200\") == \"pink\"\n\na = -3200\n\nassert solution(a) == \"red\"\n\na = 50\n\nassert solution(a) == \"red\"\n\na = 3200\n\nassert solution(a) == \"pink\"\n\na = -3200\n\nassert solution(a) == \"red\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == 'ARC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1199\") == \"ARC\"\nassert solution(\"1199\") == \"AGC\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"2\") == \"ARC\"\nassert solution(\"3\") == \"AGC\"\nassert solution(\"4\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n') == 'ABC'\nassert solution('121\\n') == 'ARC'\nassert solution('10\\n') == 'ABC'\nassert solution('1199\\n') == 'AGC'\nassert solution('2\\n') == 'ABC'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''R\n1\n2\n2\n''') == 'ARC'\nassert solution('''R\n2\n1\n2\n''') == 'AGC'\nassert solution('''R\n2\n2\n2\n''') == 'ARC'\nassert solution('''R\n2\n1\n1\n''') == 'ARC'\nassert solution('''R\n1\n2\n2\n''') == 'ARC'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"ARC\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\"\nprint(solution(\"1199\"))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == 'AGC'\nassert solution('9999') == 'ARC'\nassert solution('1') == 'ARC'\nassert solution('5') == 'ARC'\nassert solution('9') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1) == \"ABC\"\nassert solution(2) == \"ARC\"\nassert solution(3) == \"AGC\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"991\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123') == '321'\nassert solution('999') == '999'\nassert solution('1000') == '9000'\nassert solution('1111') == '9111'\nassert solution('1122') == '1221'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('119') == '991'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('9') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('119') == '991'\nassert solution('1123') == '3141'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('111') == '999'\nassert solution('991') == '991'\nassert solution('111') == '111'\nassert solution('119') == '991'\nassert solution('123') == '999'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('119') == '991'\nassert solution('09') == '91'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('119') == '991'\nassert solution('123') == '123'\nassert solution('321') == '321'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('111') == '919'\nassert solution('999') == '1119'\nassert solution('101') == '91'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"11\") == \"91\"\nassert solution(\"9\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'abbaac'\nassert solution('2') == 'abac'\nassert solution('3') == 'bcdaf'\nassert solution('4') == 'zzzzzzzzzz'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'ab'\nassert solution('3') == 'ac'\nassert solution('5') == 'ac'\nassert solution('4') == 'abac'\nassert solution('6') == 'bcdaf'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nabbaac\") == \"abac\"\nassert solution(\"4\\nac\") == \"ac\"\nassert solution(\"4\\nbcdaf\") == \"bcdaf\"\nassert solution(\"10\\n\" + \"abacacacabcabbcabcbcabac\") == \"abacacacabcabbcabcbcabac\"\n",
        "num_ids_2": 28,
        "num_ids_4": 80
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"abac\"\nassert solution(\"3\") == \"ac\"\nassert solution(\"4\") == \"bcdaf\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"abbaac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"\nassert solution(input()) == \"zzzzzzzzzz\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n\"\"\") == \"abac\"\nassert solution(\n\"\"\"\n2\nabbaac\nac\n\"\"\") == \"ac\"\nassert solution(\n\"\"\"\n3\naba\nbaa\naaaa\n\"\"\") == \"baa\"\nassert solution(\n\"\"\"\n4\naaaaa\naaabaa\nbab\n\"\"\") == \"aaabaa\"\nassert solution(\n\"\"\"\n3\naabbc\nabbcb\nb\n\"\"\") == \"abbcb\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nabac\") == \"abac\"\nassert solution(\"2\\nabac\") == \"ac\"\nassert solution(\"3\\nabac\") == \"bcdaf\"\nassert solution(\"4\\nabac\") == \"zzzzzz\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\naba\nab\nb\n''') == 'aba'\nassert solution('''\n2\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n3\nac\nab\nb\n''') == 'ab'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n4\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nabaacd\nabc\nbccddaaf\nzzzzzzzzzz\n\n''') == 'abac'\nassert solution('''\n5\nabaacd\nabc\nbccddaaf\nzzzzzzzzzz\n\n''') == 'ac'\nassert solution('''\n5\nabaacd\nabc\nbccddaaf\nzzzzzzzzzz\n\n''') == 'bcdaf'\nassert solution('''\n5\nabaacd\nabc\nbccddaaf\nzzzzzzzzzz\n\n''') == 'zzzzzz'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'aba'\nassert solution('3') == 'aa'\nassert solution('4') == 'ac'\nassert solution('5') == 'bcdaf'\nassert solution('6') == 'aaabcd'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10 4\\n\") == \"2\"\nassert solution(\"2\\n9 4\\n\") == \"5\"\nassert solution(\"3\\n9 4\\n\") == \"0\"\nassert solution(\"4\\n9 4\\n\") == \"1\"\nassert solution(\"5\\n9 4\\n\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '333'\nassert solution('''\n5 4\n10 4\n100 13\n123 456\n92 46\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 4\\n\") == \"2\"\nassert solution(\"6\\n14 6\\n\") == \"3\"\nassert solution(\"9\\n7 8\\n\") == \"1\"\nassert solution(\"4\\n6 4\\n\") == \"0\"\n\n\n\"\"\"\n\nfrom collections import defaultdict\n\nt = int(input())\nwhile t:\n    a,b = map(int, input().split())\n    div_by = defaultdict(int)\n    div_by[a] = 1\n    count = 1\n    while div_by[a]!= 0:\n        a += 1\n        count += 1\n        if a % b == 0:\n            div_by[a] = 1\n        else:\n            div_by[a] += 1\n    print(count)\n    t -= 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n2\n10 4\n13 9\n100 13\n123 456\n92 46\n\n1\n6\n14 6\n100 13\n123 456\n92 46\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution([123, 456]) == '0'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10 4\n''') == '0'\n\nassert solution('''\n2\n9\n''') == '1'\n\nassert solution('''\n3\n7 3\n''') == '0'\n\nassert solution('''\n4\n8 4\n''') == '2'\n\nassert solution('''\n5\n8 3\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"333\"\nassert solution(\"6\") == \"0\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n10 4\n13 9\n''') == '2'\nassert solution('''\n3\n10 4\n123 456\n''') == '0'\nassert solution('''\n4\n10 4\n12 2\n100 9\n''') == '5'\nassert solution('''\n2\n10 4\n12 2\n''') == '4'\nassert solution('''\n1\n10 4\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n1\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '5'\nassert solution('''\n3\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '3'\nassert solution('''\n4\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '333'\nassert solution('''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 4\\n13 9\\n100 13\\n123 456\") == \"2\"\nassert solution(\"2\\n2 1\\n1 1\\n1 1\\n1 1\") == \"4\"\nassert solution(\"5\\n5 5\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0\"\nassert solution(\"5\\n9 9\\n1 1\\n1 1\\n1 1\\n1 1\") == \"5\"\n",
        "num_ids_2": 53,
        "num_ids_4": 113
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"2.666666666666667\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n3 4 1 2\\n') == '2.666666666666667'\nassert solution('5 1\\n10 20 30 40\\n') == '5.0'\nassert solution('5 2\\n1 1\\n') == '1.0'\nassert solution('5 4\\n1 1 1 2 2\\n') == '1.0'\nassert solution('5 5\\n10 20 30 40\\n') == '5.0'\n",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2.0'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 4 1 2\n''') == '2.666666666666667', solution.__doc__\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667'\nassert solution('20 2\\n1 5 6 3 7 8 10 9 12 13 4') == '14.0'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"2.5\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2.5\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2.5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 51
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2\n1\n2''') == '1.5'\nassert solution('''1 5\n1\n2\n3\n4\n5''') == '5.0'\nassert solution('''4 5\n1\n3\n2\n4''') == '3.0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2.666666666666667\"\nassert solution(\"4 3\") == \"2.666666666666667\"\nassert solution(\"4 4\") == \"3.0\"\nassert solution(\"5 5\") == \"1.0\"\nassert solution(\"6 6\") == \"2.0\"",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == \"2.666666666666667\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n5 3\n2 3 1 2 4\n''') == '3.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == \"YES\"\n\nassert solution('''\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 2\\n4 2\\n3 2 1') == 'YES'\nassert solution('1\\n3 2\\n1 2 3\\n3 2\\n2 1 4\\n4 2\\n4 3 2 1') == 'YES'\nassert solution('1\\n3 2\\n5 2\\n4 1 2 3\\n3 2\\n2 1 4\\n4 2\\n4 3 2 1') == 'YES'\nassert solution('1\\n4 2\\n4 2\\n3 2 1\\n2 1 4\\n4 2\\n4 3 2 1') == 'YES'\nassert solution('1\\n4 2\\n4 2\\n2 1 4\\n2 1 4\\n1 2 3\\n3 2\\n3 2 1') == 'NO'\n",
        "num_ids_2": 61,
        "num_ids_4": 142
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n''') == 'YES', solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n''')\nassert solution('''\n1 2\n2 1\n''') == 'NO', solution('''\n1 2\n2 1\n''')\nassert solution('''\n5 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n4 2\n4 3 2 1\n1 3\n''') == 'YES', solution('''\n5 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n4 2\n4 3 2 1\n1 3\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3''') == 'YES'\nassert solution('''1\n3\n4\n4 3 2 1\n3 2\n1 2''') == 'NO'\nassert solution('''5 2\n4 2\n3 2 1\n1 2\n1 3\n4 2''') == 'YES'\n",
        "num_ids_2": 15,
        "num_ids_4": 23
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 3\n2 3 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5 2\n5 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\nzaaz\") == \"zaaz\"\nassert solution(\"5\\nbebebe\") == \"bebebe\"\nassert solution(\"5\\nbebe\") == \"bebe\"\nassert solution(\"5\\nbee\") == \"bee\"\nassert solution(\"5\\nbee\") == \"bee\"\n",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('z') == 'z'\nassert solution('t') == 't'\nassert solution('x') == 'x'\nassert solution('ab') == 'ba'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\nbaabbb') == 'bab'\nassert solution('10\\noopppssss') == 'oops'\nassert solution('1\\nz') == 'z'",
        "num_ids_2": 33,
        "num_ids_4": 45
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"2\") == \"o\"\nassert solution(\"3\") == \"o\"\nassert solution(\"4\") == \"p\"\nassert solution(\"5\") == \"p\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == 'bab'\nassert solution('10') == 'oops'\nassert solution('1') == 'z'\nassert solution('0') == 'z'\n\n\n-----Links----\nhttps://codeforces.com/problemset/problem/1157/A\n\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"bab\"\nprint(solution(input()))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"10\") == \"oops\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nhello\") == \"hello\"\nassert solution(\"10\\n\") == \"\"\nassert solution(\"5\\nworld\") == \"world\"\nassert solution(\"10\\n\") == \"\"\nassert solution(\"15\\n\") == \"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n123\n3\nx\n\n''') == 'x'\nassert solution('''\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"5 6\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"8 10\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"8 10\") == \"0\"\nassert solution(\"4 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0') == '0'\nassert solution('4 3') == '1'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"8 10\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == \"1\"\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == \"0\"\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3''') == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 1\\n1 4 2') == '1'\nassert solution('5 6\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4') == '0'\nassert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4') == '1'",
        "num_ids_2": 97,
        "num_ids_4": 158
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"1\"\nassert solution(\"8 3\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1\\n'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '1\\n'\n",
        "num_ids_2": 95,
        "num_ids_4": 125
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\nassert solution('RRRRRRRRRRRRRRRRRRRRRRRR') == '1'\n\nimport sys\nfrom io import BytesIO\nfrom unittest import TestCase\n\n\nclass TestSolution(TestCase):\n    def test_solution(self):\n        from solution import solution\n        stdin = BytesIO(bytes(sys.stdin.buffer))\n        stdout = BytesIO()\n        sys.stdout = stdout\n        solution(stdin)\n        sys.stdout = sys.__stdout__\n        res = stdout.getvalue().strip()\n        print(res)\n        self.assertEqual(res, '1')\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\nassert solution(\"12\") == \"0\"\nassert solution(\"10\") == \"3\"\nassert solution(\"11\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s=str(__import__('sys').stdin.read())) == '1\\nRGBR'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n    RGB\n    ''') == 'RGBRGBR'\n\nassert solution('''6\n    RGBG\n    ''') == 'RGBGRBB'\n\nassert solution('''10\n    RRRRRRRRRRRR\n    ''') == 'RRRRRRRRRRRR'\n\nassert solution('''15\n    RRBBBBBBBBB\n    ''') == 'RRBBBBBBBBBB'\n\nassert solution('''20\n    RBBBBBBBBB\n    ''') == 'RBBBBBBBBBB'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nBRB\\n\") == \"1\\nGRB\\n\"\n\nassert solution(\"7\\nRGBGRBB\\n\") == \"3\\nRGBRGBR\\n\"\n\nassert solution(\"5\\nRRRRRRR\\n\") == \"2\\nRRRRRRR\\n\"\n\nassert solution(\"6\\nBGBGBGBGB\\n\") == \"2\\nBGBGBGBGB\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n3\nBRB\"\"\") == \"GRB\"\nassert solution(\"\"\"\\\n7\nRGBGRBB\"\"\") == \"RGBRGBR\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n100000000 J\\n50000000 B\") == \"100000000 J\"\nassert solution(\"2\\n100000000 J\\n50000000 B\") == \"100000000 J\"\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"10\\n100000000000000000 JPY\\n100000000000000000 BTC\\n\") == \"480000.0\"\nassert solution(\"10\\n100000000000000000 JPY\\n100000000000000000 BTC\\n\") == \"480000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"10\\n100000000000000000 JPY\\n100000000000000000 BTC\\n\") == \"480000.0\"\n",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\n    \"5\\n1000\\n2000\\n3000\\n1000\\n3000\\n\") == \"49000.0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nprint(solution('''\n3\n10000 JPY\n0.10000000 BTC\n0.20000000 BTC\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"3\\n20000 JPY\\n10.00000 BTC\\n-10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '48000.0'\nprint('AC')\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\n\"\"\"\n\nfrom decimal import Decimal",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n10000 JPY\n0.10000000 BTC\n\"\"\"\n) == \"48000.0\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n\n---Output---\n<output omitted>",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\") == \"1\"\nassert solution(\"2\\n4\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 5\") == \"4\"\nassert solution(\"10 5\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 3\") == \"7\"\nassert solution(\"15 7\") == \"13\"\nassert solution(\"6 5\") == \"7\"\nassert solution(\"1 10\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('4') == '3'\nassert solution('3') == '2'\n\n--Explaination--\n\nTest case 1:\n1. i = 1, j = 2\n\n2. i = 2, j = 1\n\n3. i = 3, j = 2\n\n4. i = 4, j = 3\n\nTest case 2:\n1. i = 4, j = 3\n\n2. i = 3, j = 4\n\n3. i = 2, j = 3\n\n4. i = 1, j = 4\n\nThe correct answer is 3.\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"99\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"2\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"9 3\") == \"7\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"10 2\") == \"8\"\nassert solution(\"100 3\") == \"99\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'icpc', solution('2')\nassert solution('1') == 'i', solution('1')\nassert solution('10') == 'ipc', solution('10')\nassert solution('2') == 'icpc', solution('2')\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nip cc\\n\") == \"icpc\"\nassert solution(\"3\\naa\\tbb\\tc\\n\") == \"abbc\"\nassert solution(\"4\\nip\\tcc\\tc\\td\\t\") == \"ipcabc\"\nassert solution(\"5\\nab\\tac\\tad\\te\\t\") == \"abace\"\n",
        "num_ids_2": 38,
        "num_ids_4": 86
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\nip cc\\n\") == \"icpc\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\nc x a\n\n3\nc\na\nb\n\"\"\") == \"cbab\"\nassert solution(\"\"\"\n9\na a a a a a a\n\n3\nb b b\n\"\"\") == \"aabbbbbbbbbbb\"\nassert solution(\"\"\"\n5\nx x x\n\n1\ny y y\n\"\"\") == \"xyyyyyyyyyyy\"\nassert solution(\"\"\"\n2\nx y\n\n1\ny y\n\"\"\") == \"xxyyyyyyyyyy\"\nassert solution(\"\"\"\n6\na a a a a a a\n\n3\nb b b b\n\"\"\") == \"aaababababababababab\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == \"a\"\nassert solution('abc') == \"abc\"\nassert solution('ab') == \"ab\"\nassert solution('abb') == \"bb\"\nassert solution('abca') == \"abca\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ip\") == \"ip\"\nassert solution(\"ip cc\") == \"ipcc\"\n",
        "num_ids_2": 17,
        "num_ids_4": 29
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nabcd\\n123\") == \"abcd123\"\nassert solution(\"2\\nabcd\\nabc\") == \"ababc\"\nassert solution(\"3\\nabcd\\nab\") == \"abab\"\n",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ip\") == \"ip\"\nassert solution(\"ip cc\") == \"icpc\"\n\nprint(solution(input()))",
        "num_ids_2": 17,
        "num_ids_4": 29
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '21'\nassert solution('3') == '31'\nassert solution('4') == '41'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\ns a\n''') == 'a'\n\nassert solution('''\n2\ns d\nt e\n''') == 'de'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''ABA''') == 'Yes'\nassert solution('''ABC''') == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('BAA') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABA') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABB\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''ABA'''\n) == 'Yes'\nassert solution(\n'''ABA'''\n) == 'No'\n'''\n\uc785\ub825\nABA\n\n\ucd9c\ub825\nYes\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'No'\nassert solution('AAB') == 'No'\nassert solution('BAB') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AB\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABA') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"A\") == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"BCD\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRRR') == '2'\nassert solution('R') == '1'\nassert solution('RR') == '2'\nassert solution('RRR') == '3'\nassert solution('RRRRRRRRRRRRR') == '5'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RRR\") == \"2\"\nassert solution(\"RRRRRRRRRRRRRRRRRRRR\") == \"7\"\nassert solution(\"RRRRRRRRRRRRRRRRRRRR\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"R\") == \"1\"\nassert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"R\") == \"0\"\n\n---IDEAS----\n1. count the number of R/R\n2. count the number of R/R/R\n3. count the number of R/R/R/R\n\n- if R, count it, if not, count 0\n- check if the last character is R, if so, add 1, else, add 0\n- if the last two characters are R, add 1, else, add 0\n- if the last three characters are R, add 1, else, add 0\n\n- iterate through the string, if the last character is R, add 1 else, add 0\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RR\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RR\") == \"1\"\nassert solution(\"RRR\") == \"2\"\nassert solution(\"RRR\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('RRS') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RRS\") == \"2\"\n\nassert solution(\"RSRS\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3 1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3 4 5 6') == '6 5 4 3 2 1'\nassert solution('1 2 3 4 5 6 7') == '7 5 4 3 2 1'\n",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n\"\"\"\nx,y,z = input().split()\na = int(x)\nb = int(y)\nc = int(z)\n\na,b,c = a,b,c\na,b,c = c,a,b\n\nprint(a,b,c)\n\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3 4') == '3 1 2 4'\nassert solution('1 2 3 4 5') == '3 1 2 4 5'",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('2 1 3') == '3 1 2'\nassert solution('3 1 2') == '2 1 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 5 4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"4 3 1 2\"\nassert solution(\"5 6 7 8 9\") == \"9 8 7 6 5\"\nassert solution(\"10 20 30 40 50\") == \"50 40 30 20 10\"",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3 1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([30, 100]) == '100'\nassert solution([40, 120]) == '100'\nassert solution([30, 200]) == '50'\nassert solution([40, 300]) == '100'\nassert solution([25, 150]) == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10') == '50'\nassert solution('10 5') == '50'\nassert solution('2 7') == '50'\nassert solution('10 7') == '100'\nassert solution('10 7') == '50'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n''') == '100'\nassert solution('''\n13 5\n''') == '25'\nassert solution('''\n6 12\n''') == '25'\nassert solution('''\n3 9\n''') == '25'\nassert solution('''\n2 5\n''') == '50'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"25\"\nassert solution(\"2 10\") == \"25\"\nassert solution(\"3 12\") == \"25\"\nassert solution(\"5 14\") == \"25\"\nassert solution(\"5 18\") == \"25\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10') == '50'\nassert solution('0 0') == '0'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"30 100\") == \"100\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"6 4\"\n    ) == \"15\\n\"\n\nassert solution(\n    \"11 5\\n\"\n    \"10 6\"\n    ) == \"11\\n\"\n\nassert solution(\n    \"8 10\\n\"\n    \"10 8\"\n    ) == \"18\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '3'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([15, 7]) == \"100\"\nassert solution([25, 9]) == \"300\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-+++-++\") == \"2\"\nassert solution(\"+-+++-+++\") == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-++') == '2'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-++') == '2'\nassert solution('++--') == '2'\nassert solution('++-++') == '3'\nassert solution('-++-') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\nassert solution('+--+') == '1'\nassert solution('+--+') == '0'\nassert solution('-++-') == '0'\n\ninput()\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(\"+-++\") == \"2\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-+-++\") == \"1\"\nassert solution(\"+-+-+\") == \"1\"\nassert solution(\"+-+-+-\") == \"0\"\nassert solution(\"+-+-+-+\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+-++') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"++-++\"\n    ) == \"2\"\nassert solution(\n    \"+\"\n    ) == \"1\"\nassert solution(\n    \"+-\"\n    ) == \"0\"\nassert solution(\n    \"-+\"\n    ) == \"1\"\nassert solution(\n    \"-+\"\n    ) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/03/30') == 'TBD'\nassert solution('2019/02/30') == 'TBD'\nassert solution('2019/01/30') == 'TBD'\nassert solution('2019/00/30') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/03/31') == 'TBD'\nassert solution('2019/06/30') == 'TBD'\nassert solution('2019/04/20') == 'TBD'\nassert solution('2019/02/29') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/04/30\") == \"TBD\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/28') == 'TBD'\nassert solution('2019/04/27') == 'TBD'\nassert solution('2019/04/26') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Heisei\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2019/04/30') == \"Heisei\"\nassert solution('2019/04/31') == \"TBD\"\nassert solution('2020/04/30') == \"TBD\"\nassert solution('2020/04/29') == \"TBD\"\nassert solution('2019/04/29') == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/28') == 'TBD'\nassert solution('2019/04/25') == 'Heisei'\n",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/03/29') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"14\"\nassert solution() == \"9\"\nassert solution() == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n
        "num_ids_2": 1486,
        "num_ids_4": 1486
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10''') == '14'\nassert solution('''10\n6 6 6 3 6 1000000000 3 3 6 6\n\n''') == '9'\nassert solution('''3\n1337 1337 1337\n\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_lines) == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"\n\"\"\"",
        "num_ids_2": 62,
        "num_ids_4": 80
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10",
        "num_ids_2": 1486,
        "num_ids_4": 1486
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '18\\n'\n    '2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'",
        "num_ids_2": 62,
        "num_ids_4": 80
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 \nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2 \nassert solution('''\n15 10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31''') == '8 1 2 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '7 2'\n    ) == '2'\n\nassert solution(\n    '10 4'\n    ) == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"2 3 3 1 2 1 3 2\"\n    ) == \"2\"\nassert solution(\n    \"10 4\\n\"\n    \"2 3 3 1 1 2 1 2 3 3\"\n    ) == \"3\"\nassert solution(\n    \"13 4\\n\"\n    \"1 2 2 2 1 1 2 2 1 1 2 2 1 2 2 1 2 2 1 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 2 1 2 2 1 2 2 1 1 2 2 2 1 1 2 1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 1 2 2 1 1 2 2 2 1 1 2 1 1 2 2 1 1 2 2 2 1 1 2 2 1 1 2 1 2 1 2 2 1 1 2 2 1 1 2 1 2 1 2 2 1 1 2 2 2 1 1 2 2 1 1 2 1 2 1 2 2 1 1 2 1 2 1 2 1 2 2 1 1 2 1 2 1 2 2 1 1 2 1 1 2 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"1 2 3 2 1 3 2\"\n) == \"2\\n\"\n\nassert solution(\n    \"10 4\\n\"\n    \"2 3 3 1 1 2 1 2 3 3\"\n) == \"3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2 1 3 2 1 3 2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3 1 2 3 1 3 2'\nprint('All tests passed!')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '1'\nassert solution('5 4') == '3'\nassert solution('8') == '2'\nassert solution('10') == '2'\nassert solution('8 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10''') == '3 2'\nassert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n\n1\n-1\n3\n2\n\n2\n1\n\n3\n2\n\n3\n2\n\n2\n1\n\n3\n2\n\n2\n1''') == '1 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3 2'\n\nassert solution('''\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '2 2'\n\nassert solution('''\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3 -1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3'\nassert solution('''\n2\n2 4 8 2 4\n8\n5\n14\n10\n''') == '-1'\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n10\\n5\\n4\\n4\\n\") == \"1 2 3\"\nassert solution(\"4\\n8\\n10\\n7\\n1\\n7\\n\") == \"3 1\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"3\"\nassert solution(\"3\\n\") == \"2\"\nassert solution(\"4\\n\") == \"3\"\nassert solution(\"5\\n\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n1\\n3\\n2\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3 2'\n\nassert solution('''\n8 2\n2 4 8 2 4\n8\n5\n14\n10\n''') == '2 3'\n\nassert solution('''\n8 5\n3 2 7 3 4\n4\n3\n2\n3\n1\n8\n''') == '1 1'\n\nassert solution('''\n3 3\n10 2 6\n1\n''') == '1 -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1 3 -1 2 1 1 1 1 3 2 1 -1 1 2 1 2 3 2 3 2 3 3 3 -1 -1 3 3 3 4 3 -1 -1 3 3 3 3 3 3 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1 -1 4 4 4 4 -1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '21'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n''') == '0'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '21'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '21'\nassert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '0'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3\n2 4 5\n3 4 5\n4 4 5\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '21'\nassert solution('3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '21'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"21\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 3\") == \"0\"\n\"\"\"\n\nn, k = map(int, input().split())\nnumbers = list(map(int, input().split()))\nfav_nums = list(map(int, input().split()))\nmax_joy = 0\n\nfor nums in numbers:\n    for num in range(1, nums + 1):\n        if num in fav_nums:\n            max_joy += 1\n\nprint(max_joy)",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '21'\nassert solution('''3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 6 6 6\n''') == '2'\nassert solution('''\n3 8 10\n''') == '2'\nassert solution('''\n5\n2 4 6 6 6\n''') == '2'\nassert solution('''\n6\n1 1 1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 4 6 6 6\n''') == '2'\n\nassert solution('''\n3\n2 8 10\n''') == '2'\n\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n\nassert solution('''\n2\n4 8\n''') == '2'\n\nassert solution('''\n4\n1 1 1 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == \"0\"\nassert stdin == \"3 2 8 10\"\n\nstdin = input()\nn = int(stdin)\na = [int(i) for i in stdin.split(' ')]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 6 6 6''') == '2'\nassert solution('''3\n2 8 10''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '2 2 2 2 2'\nassert solution('4') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1\\n4\\n2 2 2\\n1 2 3\") == \"2\\n2 2 1\\n2 3 2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"5 2 4 6 6 6\") == \"2\"\nassert solution(\"8 10 10 10 10 10 10 10 10 10\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n100010\") == \"1\"\nassert solution(\"6 1\\n10100100\") == \"2\"\nassert solution(\"6 1\\n00000000\") == \"1\"\nassert solution(\"6 1\\n00100000\") == \"1\"\nassert solution(\"6 1\\n11011111\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '0'\nassert solution('5 1') == '1'\nassert solution('10101') == '2'\nassert solution('3 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n100010''') == '1'\nassert solution('''6 2\n000000''') == '1'\nassert solution('''5 1\n10101''') == '2'\nassert solution('''3 1\n001''') == '1'\nassert solution('''2 2\n00''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''6\n3 3\n100010\n1 1\n11\n1 1\n0''') == '1'\nassert solution('''6\n2 3\n100000\n1 1\n0 0\n0 0\n1 1\n1 0\n0''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '2'\nassert solution('5 1') == '1'\nassert solution('10101') == '1'\nassert solution('3 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 2\n3 3\n2 3\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n1 2\n3 3\n2 3\n2 2\n2 3\n2 3\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n7\n3 10\n6 10\n10 10\n10 9\n9 10\n6 9\n10 10\n10 9\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n7\n1 1\n2 3\n3 5\n6 7\n8 10\n9 11\n10 12\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n10\n2 6\n4 8\n8 11\n10 13\n12 14\n14 15\n16 18\n18 19\n19 20\n20 22\n22 25\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '4'\nassert solution('5 2') == '1 2 3 4'\nassert solution('6 1') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution('5 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '1 4 5 6'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == '3'\nassert solution('6 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n1 2\n1 1\n'''\n) == '1'\n\nassert solution(\n    '''\n3 2\n3 3\n3 1\n'''\n) == '3'\n\nassert solution(\n    '''\n5 1\n2 2\n2 3\n1 3\n3 3\n1 1\n'''\n) == '4'\n\nassert solution(\n    '''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\n'''\n) == '3'\n\nassert solution(\n    '''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n'''\n) == '1 4 5'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n11 11\\n9 11') == '3'\nassert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '4'\nassert solution('7 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '1 4 5'\n",
        "num_ids_2": 60,
        "num_ids_4": 99
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution(\n    \"\"\"\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\"\"\") == \"4\"\nassert solution(\n    \"\"\"\n4 1\n1 1\n1 2\n2 1\n1 2\n\"\"\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 16
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6''') == '30'\nassert solution('''3\n3 4 6\n4\n10 6 30 15\n3\n3 4 6''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '30'\nassert solution('3') == '10'\nassert solution('5') == '30'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4\n3 1 2 3\n4\n10 9 6 15\n3\n3 4 6\n''') == '31'\nassert solution('''\n5\n3\n6 5 1 3 2\n5\n10 9 6 15\n3\n3 4 6\n''') == '31'\nassert solution('''\n4\n4\n3 1 2 3\n4\n10 9 6 15\n3\n3 4 6\n''') == '31'\nassert solution('''\n3\n4\n3 2 6 5\n4\n10 9 6 15\n3\n3 4 6\n''') == '30'\nassert solution('''\n2\n4\n3 2 6 5\n4\n10 9 6 15\n3\n3 4 6\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\nprint(solution('''5\n4\n10 6 30 15\n3\n5 3 4\n'''))\nprint(solution('''5\n3\n10 6 30 15\n4\n5 3 4\n'''))\nprint(solution('''3\n2\n10 6\n3\n5 4\n'''))\nprint(solution('''1\n1\n1\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"30\"\nassert solution(\"\"\"\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"30\"\nassert solution(\"\"\"\n1\n4\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n3\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10\n2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4\n4\n5 6 15 30\n4\n10 6 30 15\"\"\") == \"31\"\nassert solution(\"\"\"4\n4\n5 6 15 30\n4\n10 6 30 15\"\"\") == \"30\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"30\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n5 6 15 30\\n4\\n10 6 30 15') == \"31\"\nassert solution('2\\n3\\n1 2 3\\n3 2 1\\n') == \"3\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 10 1 20\n5\n2 3 4 99 100\n1\n2\n''') == '1'\nassert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\nassert solution('''\n4\n3\n2 3\n2\n2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\n\n'''\n\n\n'''\nclass Solution:\n    def solve(self, *args):\n        pass\n        \n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"2\"\n\nassert solution('''\n8\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"3\"\n\nassert solution('''\n10\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"4\"\n\nassert solution('''\n1\n''') == \"0\"\n\nassert solution('''\n10\n1\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"21\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n\n'''\n\nimport unittest\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\") == \"1\\n1\\n2\\n1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n\") == \"2\\n1\\n1\\n2\\n\"\n",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1\\n2'\nassert solution('4\\n3\\n2 3\\n2\\n1') == '1\\n2'\nassert solution('4\\n2\\n3\\n1') == '0'\n\n\"\"\"\n\nimport sys\nfrom itertools import combinations, combinations_with_replacement",
        "num_ids_2": 58,
        "num_ids_4": 77
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 6\\n1\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"1\\n0\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"4\\n1 2 3\\n1\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\") == \"2\\n1\\n2\\n1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == \"YES\"\nassert solution('1 2 3 6') == \"NO\"\nassert solution('5 2 6 27') == \"YES\"\nassert solution('3 3 5 18') == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == 'YES', \"First\"\nassert solution('1 2 3 6') == 'NO', \"Second\"\nassert solution('5 2 6 27') == 'YES', \"Third\"\nassert solution('3 3 5 18') == 'YES', \"Fourth\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n2 2 1 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO'\nassert solution('''\n3 2 5 3\n2 3 3 5\n1 2 6 5\n3 2 5 3\n''') == 'YES'\nassert solution('''\n4 2 3 1\n3 3 3 3\n1 3 1 3\n3 2 3 3\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 3 6\n3 3 5 18''') == 'YES'\nassert solution('''5 2 3 6\n1 2 3 6''') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 3\n1 2 3\n5 2 6\n3 3 5\n''') == 'YES\\n'\nassert solution('''\n1 2 3\n1 2 3\n5 2 6\n3 3 5\n''') == 'NO\\n'\nassert solution('''\n1 2 3\n1 2 3\n3 2 6\n3 3 5\n''') == 'YES\\n'\nassert solution('''\n1 2 3\n1 2 3\n3 2 6\n3 3 5\n''') == 'NO\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5 18\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"3 2 4 1\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\nassert solution(\"5 6 27\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 2 2 3\n1 1 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5 2 6 27\n3 3 5 18\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5 2 6 27\n3 3 5 18\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''\n5 4 3 2 1 0\n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''\n5\n4 3 2 1 0\n''') == 'NO'\n\nassert solution('''\n3\n1 2 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''\n5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n''') == 'NO'\nassert solution('''\n5\n0 0 0 0 0\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"YES\"\nassert solution(input) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''\n5 3 1 5 3\n''') == 'YES'\nassert solution('''\n0 1 2 3 4\n''') == 'NO'\nassert solution('''\n5\n4 3 2 1 0\n''') == 'YES'\nassert solution('''\n5\n7 6 3 2 1 0\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 1 2 1 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n0 1 2 3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n0 0 0 0 0\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2 7 3 3 1 4\n\n''') == 'YES'\nassert solution('''\n5 4 3 2 1 0\n\n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n\n''') == 'NO'\nassert solution('''\n5\n4 3 2 1 0\n\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 87,
        "num_ids_4": 125
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '18'\nassert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18', 'First example'\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '8', 'Second example'\nassert solution('''\n7 3\n3 1 1\n2 0 1\n4 1 1\n6 1 1\n5 1 0\n3 0 0\n''') == '-1', 'Third example'\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\n''') == '8', 'Fourth example'\nassert solution('''\n5 5\n8 4\n8 8\n8 8\n6 7\n5 7\n''') == '6', 'Fifth example'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == \"18\"\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == \"8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 4') == '18', \"80\"\nassert solution('5 2') == '8', \"90\"\nassert solution('5 3') == '-1', \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\n",
        "num_ids_2": 89,
        "num_ids_4": 128
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '18'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 4') == '18', solution('8 4')\nassert solution('5 2') == '8', solution('5 2')\nassert solution('5 3') == '-1', solution('5 3')\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\nassert solution('''\n1 1\n1 0\n1 1\n1 1\n''') == '-1'\nassert solution('''\n1 1\n1 0\n1 1\n1 0\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"7\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '7'\nassert solution(\n    '10 1\\n1 1 1 1 1 1 1 1 1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n') == '10'\nassert solution(\n    '10 1\\n1 1 1 1 1 1 1 1 1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n') == '10'\nassert solution(\n    '10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n') == '-1'\nassert solution(\n    '1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\nassert solution('''4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1') == '2'\nassert solution('4 2') == '6'\nassert solution('4 3') == '-1'\nassert solution('5 1') == '6'\nassert solution('5 2') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2'\n\nassert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '6'\n\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 1''') == '-1'\n\nassert solution('''4 7\n2 1 1\n3 2 1\n1 3 1\n2 4 1''') == '4'\n\nprint(solution('''10 0\n3 1\n4 4\n3 4\n2 2\n3 5\n5 4\n1 4\n2 2\n5 6\n4 2\n2 2\n1 1\n5 7\n5 4\n1 5\n1 3\n2 5\n2 4\n2 6\n2 5\n5 2\n1 4\n1 1\n3 1\n1 3\n4 1\n4 2\n2 4\n2 5\n1 5\n2 6\n4 1\n3 1\n2 1\n5 3\n1 3\n3 2\n1 1\n1 4\n4 1\n1 1\n4 2\n3 1\n4 1\n2 3\n1 4\n4 1\n2 3\n3 4\n3 3\n2 2\n1 3\n2 4\n2 4\n1 3\n3 4\n2 3\n2 2\n3 2\n1 3\n4 4\n1 4\n2 4\n1 4\n4 2\n1 2\n3 2\n1 4\n4 2\n4 4\n1 2\n1 4\n4 2\n3 2\n1 3\n3 2\n3 2\n4 4\n3 3\n4 2\n2 3\n4 1\n2 4\n2 3\n2 2\n4 1\n1 3\n4 3\n2 1\n3 4\n2 1\n4 3\n2 4\n1 4\n2 2\n2 1\n3 2\n4 4\n3 4\n1 3\n1 2\n2 4\n3 4\n4 2\n3 4\n1 2\n2 4\n3 4\n2 1\n3 4\n1 4\n4 3\n1 4\n2 2\n1 4\n4 4\n1 3\n2 2\n3 2\n1 4\n1 4\n3 4\n1 4\n1 4\n4 3\n2 4\n3 2\n2 4\n2 2\n2 2\n1 3\n2 4\n1 4\n2 3\n1 2\n3 4\n1 3\n4 4\n1 4\n2 4\n4 4\n2 1\n3 4\n3 4\n1 4\n2 1\n3 4\n3 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n2 2\n1 4\n4 2\n1 4\n1 4\n1 4\n1 4\n4 4\n1 2\n3 4\n3 4\n4 4\n2 4\n2 4\n3 4\n1 3\n1 4\n1 4\n1 4\n3 2\n3 2\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution() == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 2\\n2 2') == '2'\nassert solution('2\\n1 1 2 3 1\\n4 2') == '6'\nassert solution('3\\n6 4 8 5\\n2 2\\n1 6') == '7'\nassert solution('4\\n5 2 5\\n6 4 8 5\\n2 2') == '7'",
        "num_ids_2": 39,
        "num_ids_4": 88
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '7'\nassert solution('''4\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '-1'\nassert solution('''5\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution() == '6'\nassert solution() == '-1'\nassert solution() == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('12') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 8 15 16 23\") == \"1\"\nassert solution(\"10\\n4 8 15 16 23 4 8 15 16 23\") == \"5\"\nassert solution(\"3\\n4 8 15 16 23\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\nassert solution('12') == '0'\nassert solution('15') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 8 15 16 23\") == \"5\"\nassert solution(\"4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4 8 15 16 23''') == '5'\nassert solution('''12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3\n2\n5\n5\n3\n5\n''') == '1'\nassert solution('''\n10\n13 1 14 15 19 2 3 5 6 8 10 8 8 8 9 13 15 14 1 19 1 21 5 1 1 21 1 13 19 2\n''') == '0'\nassert solution('''\n1\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n8\n15\n16\n23\n''') == '5'\nassert solution('''\n5\n4\n8\n15\n16\n23\n''') == '0'\nassert solution('''\n12\n4\n8\n15\n16\n23\n15\n16\n23\n42\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '1'\nassert solution('10') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3'\nassert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '2'\nassert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '92'\nassert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '87654322'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5 5\n13 42\n18 4\n''') == '0'\nassert solution('''\n2\n3 3\n2 2\n''') == '1'\nassert solution('''\n1\n5 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"0\"\nassert solution('''\n2\n5\n2\n1\n''') == \"3\"\nassert solution('''\n1\n7\n1\n''') == \"8\"\nassert solution('''\n4\n9\n1\n''') == \"6\"\nassert solution('''\n9\n1\n1\n1\n''') == \"5\"\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6\n1342 5\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n\"\"\") == \"92\"\nassert solution(\"\"\"\n6\n1342 5\n18 4\n12337 420\n123456789 1000000000\n100500 9000\n\"\"\") == \"87654322\"\nassert solution(\"\"\"\n6\n1342 5\n18 4\n12337 420\n123456789 1000000000\n100500 9000\n\"\"\") == \"9150\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0\n\nassert solution('''\n2\n2\n5\n10\n''') == '1'\n\nassert solution('''\n2\n5\n12\n100\n''') == '1'\n\nassert solution('''\n2\n7\n9\n3\n''') == '0'\n\nassert solution('''\n2\n3\n3\n4\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''1\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''1\n5 5\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"0\"\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == \"3\"\nassert solution('''\n7\n5 5\n10 15\n10 10\n5 10\n12 4\n10 3\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '0'\nassert solution(input(\"\")) == '9150'\nassert solution(input(\"123456789 1000000000\\n\")) == '87654322'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''4\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '2'\nassert solution('''5\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '2'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"185\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n4\n10 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n5\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n1\n1 1\n2\n''') == '1'\nassert solution('''\n1\n0\n2\n''') == '0'\nassert solution('''\n1\n1\n4\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\n''') == \"12339\"\nassert solution('''\n1\n10 5 157\n''') == \"0\"\nassert solution('''\n3\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\n''') == \"54306\"\nassert solution('''\n2\n10 5 187\n2 0 999999999\n\n''') == \"999999998\"\nassert solution('''\n3\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\n''') == \"15\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '54306'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '999999998'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n\nassert solution('''6\n9 9 9\n0 1 1\n1 1 1\n0 1 1\n1 1 1\n1 1 1\n''') == '0'\n\nassert solution('''5\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '0'\n\nassert solution('''3\n2 3 3\n0 0 0\n0 0 0\n''') == '0'\n\nassert solution('''9\n1 1 1\n1 1 1\n1 1 1\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"12339\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 2\n1 2 2 3 2 4 10''') == '6'\n\nassert solution('''7 3\n1 2 2 3 2 4 6''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 2 2 3''') == '6'\nassert solution('''7 2\n1 2 2 3 2 4 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '6'\nassert solution('6 4') == '8'\nassert solution('7 3') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7 2\n1 2 2 3 2 4 10\n\"\"\") == \"6\"\nassert solution(\"\"\"\n8 2\n1 2 2 3 2 4 6 10\n\"\"\") == \"8\"\nassert solution(\"\"\"\n7 3\n1 2 2 3 2 4 5\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"1 2 2 3 2 4 10\\n\"\n) == \"6\\n\"\n\nassert solution(\n    \"8 2\\n\"\n    \"1 2 2 3 2 4 6 10\\n\"\n) == \"8\\n\"\n\nassert solution(\n    \"7 3\\n\"\n    \"1 2 2 3 2 4 5\\n\"\n) == \"4\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'\nassert solution() == '8'\nassert solution() == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == \"a\"\nassert solution('3 3') == \"cbc\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"aBC\"\nassert solution(\"6 3\") == \"BC\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"aBC\"\nassert solution(\"4 3\") == \"bbc\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '1234'\nassert solution('1 2 3 4 5') == '1235'\nassert solution('1 2 3 4 5 6 7 8 9') == '12367789'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1236778910'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == '123677891011'",
        "num_ids_2": 29,
        "num_ids_4": 73
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"aBC\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '', 'Empty input'\nassert solution('A') == 'a', 'Should return a'\nassert solution('ABC') == 'abc', 'Should return abc'\nassert solution('ABCD') == 'abcde', 'Should return abcde'\nassert solution('ABCDEF') == 'abcdef', 'Should return abcdef'\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == 'aBC'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1\\nABC') == 'aBC'\nassert solution('1 1\\naBc') == 'A'\nassert solution('4 5\\nabcd') == 'Abcd'\nassert solution('2 3\\nAaA') == 'aaa'",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"aBC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 1\") == \"aBC\"\nassert solution(\"2 4 2\") == \"bcd\"\nassert solution(\"2 4 3\") == \"BCD\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3,4,6,1,5,2'\nassert solution('1') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3 4 6 5 1 2'\n\nassert solution('''\n7\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nyandex 60\nyandex 50\nyandex 35\n''') == '1 2 3 4 5 6 7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n\"\"\"\nimport sys\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '3\\n4\\n6\\n1\\n5\\n2\\n'\nassert solution('7') == '1\\n2\\n3\\n4\\n5\\n6\\n'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '3 4 6 1 5 2'\nassert solution('10') == '2 1 3 4 5 6 7 8 9 10'\nassert solution('1') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 44
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\nassert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nmoscow 60\\nkhabarovsk 40') == '3 4 6 1 5 2'\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nmoscow 10\nkhabarovsk 20\nmoscow 50\nkazan 35\nmoscow 60\nkazan 40\n''') == '1 2 3 4 5'\n\nassert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '4 5 3 6 1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1000\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 10') == 'No'\nassert solution('4 1000') == 'Yes'\nassert solution('5 100') == 'No'\nassert solution('1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\", \"1 3\"\nassert solution(\"1 3\") == \"No\", \"1 3\"\nassert solution(\"3 4\") == \"Yes\", \"3 4\"\nassert solution(\"3 4\") == \"No\", \"3 4\"\nassert solution(\"2 2\") == \"Yes\", \"2 2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 500') == 'No'\nassert solution('5 100') == 'Yes'\nassert solution('7 10') == 'No'\nassert solution('2 810') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"100\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"4 10\") == \"No\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 900') == 'No'\nassert solution('4 900') == 'Yes'\nassert solution('4 1000') == 'No'\nassert solution('5 1000') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'Yes', 'Check your first solution!'\nassert solution('1 800') == 'No', 'Check your first solution!'\nassert solution('1 500') == 'No', 'Check your first solution!'\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\"\n\"\"\"\nfrom math import floor",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == '0.145833333333'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"0.1458333333\"\nassert solution(\"4 10\") == \"0.1458333333\"\nassert solution(\"5 10\") == \"0.1458333333\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('5 10') == '0.14483871527'\nassert solution('10 10') == '0.1440943419'\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 10''') == '0.1458333333'\nassert solution('''20 10''') == '0.0016666666666667'\nassert solution('''2 100''') == '0.019733333333'",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 10''') == '0.145833333333'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '0.1458333333', f\"actual: {solution('1 2')}\"\nassert solution('3 5') == '0.1458333333', f\"actual: {solution('3 5')}\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 20\") == \"0.15\"\nassert solution(\"10 10\") == \"0.4938271604938\"\nassert solution(\"5 4\") == \"0.145833333333\"\nassert solution(\"20 20\") == \"0.333333333333\"\n\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"0.1458333333\"\nassert solution(\"3 3\") == \"0.1458333333\"\nassert solution(\"4 3\") == \"0.1458333333\"\nassert solution(\"5 3\") == \"0.1458333333\"\nassert solution(\"6 3\") == \"0.1458333333\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '0.145833333333'\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('SAT') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('SAT') == '1'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('SAT') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '3'\nassert solution('THU') == '4'\nassert solution('FRI') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '3'\nassert solution('THU') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"MON\") == \"4\"\nassert solution(\"WED\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '2'\nassert solution('SUN') == '2'\nassert solution('MON') == '1'\nassert solution('TUE') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '0'\nassert solution('WED') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('SAT') == '1'\n\n---Input Example---\n'''\nSAT\n\n'''\n\n---Output Example---\n\n1\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 10 20\n''') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n', 'wrong answer'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n', 'wrong answer'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\nassert solution('5 2 100') == '50 50 50 50 50'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250', \"Wrong answer\"\nassert solution('3 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250', \"Wrong answer\"\nassert solution('3 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250', \"Wrong answer\"\n\"\"\"\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('3\\n4 1 2\\n') == '4'\nassert solution('3\\n4 1 2\\n') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == \"5\"\n\nassert solution('''5\n1 3 2 1 4\n''') == \"4\"\n\nassert solution('''3\n4 1 2\n''') == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 1 1 4') == '5'\nassert solution('5\\n1 3 2 1 4') == '4'\nassert solution('3\\n4 1 2') == '0'\nprint('all tests passed')\n",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 1 1 4\n''') == '5'\nassert solution('''3\n1 3 2 1 4\n''') == '4'\nassert solution('''3\n4 1 2\n''') == '0'\nassert solution('''3\n4 1 2\n''') == '0'\nassert solution('''3\n1 1 1 1 4\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 1 1 4\n''') == '5'\nassert solution('''3\n1 3 2 1 4\n''') == '4'\nassert solution('''3\n1 3 2\n''') == '0'\nassert solution('''5\n1 3 1 1 4\n''') == '5'\nassert solution('''5\n1 3 2 1 4\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n4\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO'\nassert solution('''\n1\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n2\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\\n3 2 1\\nNO\\nNO\\nYES\\n1 1 1000000000\\n\", \"First example\"\nassert solution('''\n2\n1 2\n5 6\n''') == \"YES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\nNO\\nNO\\nYES\\n2 1 1\\",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5 3\n1 1 5\n''') == 'YES'\nassert solution('''\n1 4 1\n1 2 3\n''') == 'YES'\nassert solution('''\n1 1000000000 1\n1 1000000000 1\n''') == 'NO'\nassert solution('''\n1 1000000000 1\n1 1000000000 1\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\n\n\n\"\"\"\n\n\nimport sys\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO\\nYES\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nYES\\n1 1 1000000000\\n'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n1 1 1000000000\\n'\nassert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n100 100 100\\n'\n\n'''\n\n----SOLUTION----",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n5 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n1\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5\n1 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n\"\"\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n\nassert solution('10 12 3') == '10'\nassert solution('9 1 4') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == '4'\n\nassert solution('''5 1 4\n4 2 3 4 1\n''') == '5'\n\nassert solution('''5 3 3\n1 2 3 1 1\n''') == '5'\n\nassert solution('''5 2 4\n1 2 3 4 1\n''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2''') == \"4\"\nassert solution('''5 1 4\n4 2 3 4 1''') == \"1\"\nassert solution('''5 3 3\n1 2 3 1 1''') == \"5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1\n''') == '5'\nassert solution('''5 3 3\n1 2 3 1 1\n''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '7 2'\n    ) == '12'\nassert solution(\n    '10 3'\n    ) == '21'\nassert solution(\n    '7 1'\n    ) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"4 4\", \"c a\"]) == \"2\"\nassert solution([\"5 2\", \"a b\"]) == \"1\"\nassert solution([\"7 1\", \"c a\"]) == \"0\"\nassert solution([\"6 5\", \"a b\"]) == \"0\"\nassert solution([\"5 5\", \"a b\"]) == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '12'\nassert solution('10 3') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '12'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"10 3\") == \"12\"\nassert solution(\"7 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\nabacaba\\nf a d\\n') == '12'\nassert solution('3 2\\nabacaba\\na b\\n') == '21'\nassert solution('10 1\\naaaaaaa\\nb\\n') == '0'",
        "num_ids_2": 44,
        "num_ids_4": 63
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\nassert solution('''10 2\nxbcxbc\nxacxac\nxbcxbc\nxabxab\n''') == '9'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '12'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\n\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"-2999999997\"\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\") == \"2\"\nassert solution(\"4\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\") == \"-2999999997\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"\"\"2\"\"\"\nassert solution(\n\"\"\"\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"\"\"6\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2''') == '2'\nassert solution('''10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '-2999999997'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000') == '2\\n-1\\n6\\n-2999999997'\nassert solution('1\\n2\\n-1\\n1\\n-1') == '1\\n2\\n-1'\nassert solution('1\\n2\\n-1\\n1\\n-1') == '1\\n2\\n-1'\nassert solution('4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000') == '2\\n-1\\n6\\n-2999999997'\nassert solution('1\\n2\\n-1\\n1\\n-1') == '1\\n2\\n-1'\n",
        "num_ids_2": 120,
        "num_ids_4": 240
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\\n\"\n) == \"2\\n-1\\n6\\n-2999999997\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 2 3 -1 -2'\n\nstdin = \"\"\"\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '3 2'",
        "num_ids_2": 76,
        "num_ids_4": 112
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2'\nassert solution('4 6') == '4 1\\n1 2\\n1 3'\nassert solution('8 9') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2'\n",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n",
        "num_ids_2": 48,
        "num_ids_4": 84
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4\\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == '3 5\\n2 1\\n3 2'\nassert solution(INPUT_SYNTAX_ERROR) == '3 5\\n2 1\\n3 2'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '40'\nassert solution() == '40'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n5\\n499993') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"5\") == '40'\nassert solution(\"499993\") == '41664916690999888'\nassert solution(\"3334333\") == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 46
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1\n5\n499993\n''') == '0'\nassert solution('''\n1\n5\n499993\n''') == '40'\nassert solution('''\n2\n10\n99\n''') == '2169129409818750'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '40'\nassert solution('2') == '41664916690999888'\nassert solution('3') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n5\n39999\n''') == '0'\nassert solution('''\n2\n5\n499993\n''') == '40'\nassert solution('''\n3\n5\n499993\n''') == '41664916690999888'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '40'\nassert solution('5') == '40'\nassert solution('499993') == '41664916690999888'\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n4\n''') == \"0\"\nassert solution('''\n1\n3\n2\n''') == \"40\"\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10\n4 5 7 6 7 5 4 4 6 4\n\"\"\"\n) == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nprint(solution(*tuple(map(int, input().split()))))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\"\n) == \"1 1 1\"\nassert solution(\n    \"10\"\n) == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\n    \"13\"\n) == \"1 1 1 2 1 2 3 2 1 3\"\nassert solution(\n    \"23\"\n) == \"1 1 1 2 1 2 3 2 3\"\nassert solution(\n    \"10\"\n) == \"1 1 1 2 -1 1 1 3 1 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 1 1 2 -1 1 1 3 1 1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10\n4 5 7 6 7 5 4 4 6 4''') == \"1 1 1 2 -1 1 1 3 1 1\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n4 5 7 6 7 5 4 4 6 4\n\"\"\") == \"\"\"\n1 1 1 2 -1 1 1 3 1 1\n\"\"\".strip()\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n'''\n\nimport math\n\nn = int(input())\na = list(map(int, input().split()))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n32\n97\n2\n12345\n''') == \"YES\"\nassert solution('''\n4\n64\n32\n97\n2\n12345\n''') == \"NO\"\nassert solution('''\n5\n64\n32\n97\n2\n''') == \"YES\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('64') == 'YES'\nassert solution('32') == 'YES'\nassert solution('97') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n32\") == \"YES 2 4 8\"\nassert solution(\"3\\n2\") == \"NO\"\nassert solution(\"4\\n1\") == \"YES 3 5 823\"\nassert solution(\"5\\n15\") == \"YES 1 2 4 8\"\n\nTESTS:\ntests = {\n    \"1\\n32\": \"YES 2 4 8\",\n    \"3\\n2\": \"NO\",\n    \"4\\n1\": \"YES 3 5 823\",\n    \"5\\n15\": \"YES 1 2 4 8\",\n}\n\nTESTS:\nTESTS = {\n    \"1\\n32\": \"YES 2 4 8\",\n    \"3\\n2\": \"NO\",\n    \"4\\n1\": \"YES 3 5 823\",\n    \"5\\n15\": \"YES 1 2 4 8\",\n}\n\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"YES\\n2 4 8\"\nassert solution(\"2\") == \"YES\\n2 4 8\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'NO'\nassert solution() == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n64\n32\n97\n2\n12345\n''') == \"YES\"\nassert solution('''\n1\n2\n2\n''') == \"NO\"\nassert solution('''\n1\n2\n2\n''') == \"NO\"\nassert solution('''\n1\n2\n2\n''') == \"NO\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == \"NO\"\nassert solution('2') == \"NO\"\nassert solution('3') == \"NO\"\nassert solution('4') == \"NO\"\nassert solution('5') == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n64\n32\n97\n2\n12345\n''') == \"YES\"\nassert solution('''\n5\n32\n97\n2\n12345\n''') == \"NO\"\nassert solution('''\n5\n32\n97\n2\n12345\n''') == \"NO\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7\\n0\\n3\\n\") == \"YES\\n2 3\\nNO\\nNO\\nYES\\n\"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8\\nNO\\nNO\\nYES\\n3 5 823\\n\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'NO'\nassert solution('12345') == 'YES'\nassert solution('64') == '2 4 8'\nassert solution('32') == 'NO'\nassert solution('97') == '3 5 823'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\nababab''') == 'abba'\nassert solution('''4\nbbbb''') == 'abba'\nassert solution('''6\nababab''') == 'abba'\nassert solution('''2\naa''') == 'ba'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"abba\"\nassert solution(\"4\") == \"abba\"\nassert solution(\"6\") == \"ababab\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"abba\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nbbbb\\n\") == \"2\\nabba\"\nassert solution(\"6\\nababab\\n\") == \"0\\nababab\"\nassert solution(\"2\\naa\\n\") == \"1\\nba\"\n",
        "num_ids_2": 41,
        "num_ids_4": 59
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nbbbb\n''') == '2'\nassert solution('''6\nababab\n''') == '0'\nassert solution('''2\naa\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"abba\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nbbbb\n''') == '2'\nassert solution('''6\nababab\n''') == '0'\nassert solution('''2\naa\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"abba\"\nassert solution(\"3\") == \"ba\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\nbbbb\n\n''') == \"2\"\nassert solution('''\n6\nababab\n\n''') == \"0\"\nassert solution('''\n2\naa\n\n''') == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '15'\nassert solution('5') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"15\"\nassert solution(\"5 2\") == \"9\"\nassert solution(\"8 5\") == \"10\"\nassert solution(\"5 2\") == \"9\"\nassert solution(\"8 5\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"15\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('8') == '15'\nassert solution('5') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '15'\nassert solution([\n    '2',\n    '1 2',\n    '2 3',\n    '3 1',\n    '3 4',\n    '1 1',\n    '4 3',\n    '1 2'\n]) == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('10\\n5 2\\n5 3\\n5 4\\n6 5\\n6 6\\n6 7\\n7 8\\n7 9\\n7 10\\n') == '29'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"9\"\nassert solution(\"\"\"\n2\n1 2\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nassert solution(\"10\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"14\"\n",
        "num_ids_2": 60,
        "num_ids_4": 140
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == '15'\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == '9'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n\") == \"2\"\nassert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"2\"\nassert solution(\"2\\n1\\n\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"2\"\nassert solution(\"B\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('4') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"2\") == \"0.99999999999999\"\nassert solution(\"1\") == \"1.000000000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.96'\nassert solution('0.8') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.99999'\nassert solution('3') == '1.000000000000'\n\"\"\"\n\nL = int(input())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1.000000000000\"\nassert solution(\"4\") == \"1.000000000000\"\nassert solution(\"5\") == \"2.000000000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.000000000000'\nassert solution('3') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"4\") == \"1.000000000000\"\nassert solution(\"5\") == \"1.000000000000\"\nassert solution(\"0\") == \"0.000000000000\"\nassert solution(\"-1\") == \"0.000000000000\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5.000000000000'\nassert solution('10') == '10.000000000000'\nassert solution('12') == '12.000000000000'\nassert solution('13') == '13.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.960829277321'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"5\"\nprint(solution(input()))",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"2\"\n\nstdin = \"1\"\n\nprint(solution(stdin))\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\n\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+1\"\n\nprint(solution())\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Hello World\"\nassert solution(input(\"\")) == \"Hello World\"\nassert solution(input(chr(12))) == \"Hello World\"\nassert solution(input(chr(96))) == \"Hello World\"\nassert solution(input(chr(97))) == \"Hello World\"\n",
        "num_ids_2": 23,
        "num_ids_4": 55
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\n2 4\\n\") == \"6\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+1\"\n\"\"\"\n\nn = int(input())\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'Hello World'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '10'\nassert solution('2') == '20'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"4 3\") == \"3333\"\nassert solution(\"5 5\") == \"5555\"\nassert solution(\"5 5\") == \"5555\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"44333\") == \"3333\"\nassert solution(\"44333\") == \"3333\"\nassert solution(\"44333\") == \"3333\"\nassert solution(\"44333\") == \"3333\"\nassert solution(\"44333\") == \"3333\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"3333\"\nassert solution(\"0 0\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('44') == '3333'\nassert solution('33') == '3333'\nassert solution('43') == '3333'\nassert solution('12') == '12'\nassert solution('22') == '22'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 5\") == \"55555\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3333\", \"Wrong answer\"\nprint(\"Everything correct\")\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4]) == \"2234\"\nprint(solution([1, 2, 3, 4]))",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 2]) == '222', '5, 2'\nassert solution([6, 3]) == '333', '6, 3'\nassert solution([3, 2]) == '333', '3, 2'\nassert solution([5, 5]) == '55', '5, 5'\nassert solution([4, 1]) == '441', '4, 1'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"b\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"b\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"c\"\nassert solution(\"c\") == \"d\"\nassert solution(\"d\") == \"e\"\nassert solution(\"e\") == \"f\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'b'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"B\") == \"A\"\nassert solution(\"Z\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('acdba') == 'cdbca'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'atcoder'\nprint(solution(input()))\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'atcoder'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"abc\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"abcd\") == \"abcd\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"oder odr\") == \"odoor\"\nassert solution(\"oder ada\") == \"adoa\"\nassert solution(\"oder\") == \"\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 48
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"oder\") == \"atcoder\"\nassert solution(\"atc\") == \"atcoder\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"atcoder\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('oder atc') == 'atcoder'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '2'\n\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1\n''') == '1'\n\nassert solution('''\n10\n1 1 1 1 1 1 1 1\n''') == '1'\n\nassert solution('''\n10\n1 1 1 1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n1\n''') == '0'\nassert solution('''2\n1\n''') == '1'\nassert solution('''4\n1\n2\n3\n''') == '0'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n5 1 2 4 6 3\n''') == '0'\nassert solution('''\n10\n1000000000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 100",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '1000000'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '1000000'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5\n1\n5\n7\n8\n2\n\"\"\") == \"0\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('10') == '0'\nassert solution('100') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution() == '1000000'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('1 1 100 99') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nprint(\"all tests passed\")",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 100 99\") == '5'\nassert solution(\"7 4 2 1\") == '6'\nassert solution(\"1 1 100 99\") == '1'\nassert solution(\"1 1 100 99\") == '1'\nassert solution(\"1 1 100 99\") == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6 2 3 3\\n7 10 50 12 1 8\\n\"\n    ) == \"5\"\nassert solution(\n    \"1 1 100 99\\n100\\n\"\n    ) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution(\"5 2 3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''1 1 100 99\n100''') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\nassert solution(\"6 5 4 2 7 6\") == \"8\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '3'\nassert solution('4 2') == '0 1 2 3'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 7\n2 4 0 6 3 8 1\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"3 2 0 6 10 12\") == \"3 2 0 7 10 14\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4\n0 1 2 3\n''') == '0 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n3 2 0 6 10 12\n''') == \"3\"\nassert solution('''\n4 2\n0 1 2 3\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 2 0 6 10 12\") == \"3 2 0 7 10 14\"\nassert solution(\"4 2\\n0 1 2 3\") == \"0 1 2 3\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12') == '3'\nassert solution('4 2\\n0 1 2 3') == '0 1 2 3'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(inp) == \"1 2\"\nassert solution(inp1) == \"0 1 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0'\nassert solution('''\n10 1\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '20'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''\n5 3\n4 2\n3 5\n4 2\n2 5\n\nOutput\n20\n''') == '20'\n\nassert solution('''\n4 7\n3 5\n4 2\n2 5\n\nOutput\n3\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3') == '8'\nassert solution('5 3\\n4 2\\n3 5') == '20'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n3\n3\n5\n''') == '8'\n\nassert solution('''\n2\n2\n4\n2\n3\n4\n''') == '10'\n\nassert solution('''\n1\n2\n4\n4\n''') == '12'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"8\"\nassert solution(\"1 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\nassert solution('5 10') == '25'\nassert solution('100 100') == '190'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5 6'\n    '\\n'\n    '1 2 0 2 0\\n'\n    '2 4\\n'\n    '3 3\\n'\n    '1 5\\n'\n    '1 2\\n'\n    '1 5\\n'\n    '2 3'\n    ) == '8'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '8'\nassert solution('10 5') == '1'\nassert solution('15 5') == '2'\nassert solution('10 10') == '2'\nassert solution('15 3') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"8\"\nassert solution(\"5 3\") == \"20\"\nassert solution(\"10 3\") == \"17\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1\\n1 1 10 10') == 'YES'\nassert solution('5\\n2\\n10 5 2 10 1 1 2 5') == 'NO'\nassert solution('5\\n3\\n1 1 1 1 1 1 1 1') == 'NO'\n",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n4\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''\n4\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n4\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100000 100000 100000 100000\n''') == 'NO'\nassert solution('''\n4\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1\\n1\\n1 1\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1'\n) == 'YES\\nYES\\nNO\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n1\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('2\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5') == 'YES'\nassert solution('3\\n100 10 1 2 5\\n10\\n10\\n50\\n20\\n10\\n100') == 'YES'",
        "num_ids_2": 42,
        "num_ids_4": 77
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\", \"Empty\"\nassert solution(\"1\") == \"YES\", \"One\"\nassert solution(\"1 2\") == \"NO\", \"Not enough sticks\"\nassert solution(\"2\") == \"YES\", \"Two\"\nassert solution(\"2 3\") == \"YES\", \"Two\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n\"\"\"\n) == \"9\"\n\nassert solution(\n\"\"\"\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"\n5 5 2\n5 3 5\n5 4 5\n4 5 6\n4 4 5\n4 5 6\n4 4 5\n4 4 6\n4 5 5\n4 4 5\n4 4 5\n4 5 6\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n4 4 5\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"\nassert solution(\"7 16 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"10\"\n",
        "num_ids_2": 111,
        "num_ids_4": 200
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\nassert solution('6 1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5 6') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1''') == '9'\nassert solution('''6 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'\n",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"6 10 5\\n\"\n    \"2 5 1\\n\"\n    \"5 3 9\\n\"\n    \"6 2 2\\n\"\n    \"1 3 1\\n\"\n    \"5 1 8\\n\"\n    \"6 5 10\\n\"\n    \"1 6 5\\n\"\n    \"6 4 6\\n\"\n    \"3 6 2\\n\"\n    \"3 4 5\\n\"\n    ) == \"3\"\nassert solution(\n    \"7 15 18\\n\"\n    \"2 6 3\\n\"\n    \"5 7 4\\n\"\n    \"6 5 4\\n\"\n    \"3 6 9\\n\"\n    \"6 7 7\\n\"\n    \"1 6 4\\n\"\n    \"7 1 6\\n\"\n    \"7 2 1\\n\"\n    \"4 3 2\\n\"\n    \"3 2 8\\n\"\n    \"5 3 6\\n\"\n    \"2 5 5\\n\"\n    \"3 7 9\\n\"\n    \"4 1 8\\n\"\n    \"2 1 1\\n\"\n    ) == \"9\"\n\n\"\"\"\n\nimport math\n\nfor line in range(int(input())):\n    n, m, k = list(map(int, input().split()))\n    distances = [0] * n\n    for i in range(m):\n        x, y, w = list(map(int, input().split()))\n        distances[x - 1] = max(distances[x - 1], w)\n        distances[y - 1] = max(distances[y - 1], w)\n\n    print(f'{int(math.ceil(distances[k - 1]))}')\n\n\n\"\"\"\nimport math",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 3\") == \"3\"\nassert solution(\"4 2 3\") == \"1\"\nassert solution(\"5 1 8\") == \"8\"\nassert solution(\"4 5 6\") == \"5\"\nassert solution(\"8 2 9\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n\n''') == '3 1'\n\nassert solution('''\n6\n1 5 12 13 2 15\n\n''') == '7 2'\n\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\n''') == '7486 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '3 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"3 1\"\n\nassert solution(input_) == \"7486 3\"\n\nprint(solution(input_))\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 3 4 2\") == \"3 1\"\nassert solution(\"6\\n1 5 12 13 2 15\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\"\n",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3 1'\nassert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"3 1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''\n6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n100\n1000\n100000\n''') == '2\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '2\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('3\\n') == '2\\n'\nassert solution('1\\n') == '1\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '1'\nassert solution('5') == '10'\nassert solution('2') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '5'\n\nassert solution(\"5009\") == '5000 9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n9\") == \"1\\n9\\n9\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('5') == '3'\nassert solution('6') == '3'\nassert solution('7') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"2\"\nassert solution('2') == \"2\"\nassert solution('1') == \"1\"\nassert solution('7') == \"1\"\nassert solution('10000') == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3 3 3 2 1 3\"\nassert solution(stdin=\"5\") == \"1 1 1 1 1\"\nassert solution(stdin=\"3\") == \"3 3 3 2 1 3\"\nassert solution(stdin=\"6\") == \"1 1 1 1 1 1\"\nassert solution(stdin=\"4\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1 1\"\nassert solution(\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1 1 1\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 2 2 2 2 2 2\"\nassert solution(\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 2 2 2 2 2 2\"\nassert solution(\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 2 2 2 2 2 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 1 1 1 1 3 3 3 2 2 2 2 3 3 3 2 1 4 4 4 1 4\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 2 2 2\"\nassert solution(\"\"\"\n6\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"3 3 3 2 2 2 2\"\nassert solution(\"\"\"\n6\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 2 2 2\"\nassert solution(\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 2 2 2\"\nassert solution(\"\"\"\n6\n4\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 2 2 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1 1 1 1 1\"\nassert solution(\"5\") == \"1 1 1 1 1\"\nassert solution(\"6\") == \"1 1 1 1 1 1\"\nassert solution(\"4\") == \"1 1 1 1 1\"\nassert solution(\"5\") == \"1 1 1 1 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3 3 3 2 1 3'\nassert solution('5') == '3 3 3 2 1'\nassert solution('4') == '3 2 3 2 1'\nassert solution('3') == '2 2 2 2 1'\nassert solution('2') == '1 1 1 1 1'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n6\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n\") == \"1 1 1 1 1 1 1 1 1 1\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == input\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\nassert solution('''\n1\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\n'''\n\nn, *a = list(map(int, stdin.read().split()))\n\nprice = sum(a)\n\nmin_price = price\n\nfor i in range(n):\n    min_price = min(min_price, price - a[i])\n\nprint(min_price)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\nassert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"3\\n4\\n2 3 1\") == \"2\"\nassert solution(\"5\\n1 2 2 3\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0 0 1 2'\nassert solution('10 4') == '0 0 1 2 3 4 5 6 7 8 9 10'\nassert solution('10 4') == '0 0 1 2 3 4 5 6 7 8 9 10'\nassert solution('10 4') == '0 0 1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2\n10 4 10 15\n1 2\n4 3\n\"\"\") == \"0 0 1 2 \n\nassert solution(\"\"\"\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\"\"\") == \"5 4 0 5 3 3 9 0 2 5 \n\nassert solution(\"\"\"\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\"\"\") == \"5 4 0 5 3 3 9 0 2 5 \n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"0 0 1 2\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"0 0 1 2\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\"\n\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6') == '5 4 0 5 3 3 9 0 2 5'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '0 0 1 2'\nassert solution('4 2') == '0 0 1 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4') == '5 4 0 5 3 3 9 0 2 5'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n10 4 10 15\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == 'NO'\nassert solution('2 5') == 'NO'\nassert solution('5 10') == 'YES'\nassert solution('6 9') == 'YES'\nassert solution('5 4') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"./input.txt\") == \"YES\"\nassert solution(\"./input2.txt\") == \"NO\"\n\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"abb\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2\\n2 1\\n1 2'\n) == 'YES'\nassert solution(\n    '2\\n2 1\\n1 1'\n) == 'NO'\nassert solution(\n    '2\\n2 1\\n1 1'\n) == 'YES'\nassert solution(\n    '4\\n3 4 5 2 1\\n5 1 2 3 4'\n) == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == \"YES\"\nassert solution('5 2') == \"NO\"\nassert solution('5 2') == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 2\\n1 2 3\\n1 3 2\"\n) == \"YES\\nabcd\"\nassert solution(\n    \"3 2\\n1 3 2\\n1 2 3\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 2\n1 3\n''') == 'NO'\nassert solution('''\n2 2\n1 3\n2 1\n''') == 'NO'\nassert solution('''\n2 2\n1 3\n2 1\n''') == 'YES'\nassert solution('''\n4 3\n1 2 3\n2 3\n2 1\n''') == 'YES'\nassert solution('''\n4 3\n1 2 3\n1 3\n1 2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 3 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 2\n1 2 3\n1 3 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 2\n1 2 3\n1 3 2\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '43'\nassert solution('3') == '2 1 3 5 2 4'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"43\"\nassert solution(\"4\") == \"69\"\nassert solution(\"6\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1 4\") == \"1 2 3 4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"43\\n2 1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n20 10 20\n\nOutput\n43\n1 3 2 \n\nInput\n4\n10 10 10 10\n\nOutput\n69\n6 1 3 5 2 4 \n\nInput\n6\n5 4 5 4 4 5\n\nOutput\n69\n6 1 3 5 2 4 \n''') == \"64\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"43\"\nassert solution(\"4\") == \"64\"\nassert solution(\"6\") == \"69\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"0\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"4\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('2\\n1 2') == '2'\nassert solution('5\\n1 2 3 4') == '4'",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'\n",
        "num_ids_2": 34,
        "num_ids_4": 56
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('6\\n3 2 5 1 7') == '3'\nassert solution('5\\n5 2 1 3 7') == '2'\nassert solution('7\\n7 5 1 2 3 4 6') == '5'\nassert solution('10\\n7 5 1 2 3 4 6 7 8 9') == '8'\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('6\\n3 2 5 1 4 7') == '5'\nassert solution('4\\n4 5 2 1 3') == '1'\nassert solution('9\\n8 5 7 2 4 3') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\nassert solution(\"6\\n2 4 5 1 3 1\\n\") == \"3\"\n\n'''\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '0'\nassert solution('10') == '3'\nassert solution('15') == '2'\nassert solution('5') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4 2 5 1 3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"Please enter a non-empty sequence\"\nassert solution(\"1\") == \"Please enter a non-empty sequence\"\nassert solution(\"1 2\") == \"Please enter a non-empty sequence\"\nassert solution(\"1 2 3\") == \"Please enter a non-empty sequence\"\nassert solution(\"1 2 3 4\") == \"Please enter a non-empty sequence\"\n",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 1 5 3 2 6 4 1 3 2 7 5\") == \"1\"\nassert solution(\"3 3 3 2 2 2 5 2 2 2 2 2 2 2 3 2 2\") == \"1\"\nassert solution(\"2 4 3 1 5 3 3 2 2 2 2 2 1 1 1 3 3 2\") == \"0\"\nassert solution(\"2 3 3 3 4 3 3 2 2 2 2 2 1 1 1 3 3 2\") == \"1\"\nassert solution
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('5\\n1 2 3 4 5') == '5'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == ''\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('8') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 4 3') == '1'\nassert solution('4\\n2 3 4 3') == '2'\nassert solution('5\\n1 2 3 4 5') == '4'\nassert solution('5\\n1 2 3 4 5') == '3'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n3 3 3 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n2 4 8 10 8 10 6 5 3 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2\n1 2 2\n''') == '2'\nassert solution('''1\n2\n''') == '1'\nassert solution('''3\n1\n2\n''') == '1'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n7\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('12') == '2'\nassert solution('11') == '0'\nassert solution('123') == '0'\n\n\"\"\"\n\na = list(map(int, input().split()))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"-1 2 3 4 5\") == \"4\"\nassert solution(\"0 1 3 4 5\") == \"1\"\nassert solution(\"-1 1 3 4 5\") == \"4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 2 3 4 5') == '1'\n\"\"\"\nx_1, x_2, x_3, x_4, x_5 = list(map(int, stdin.split()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\n\nIf the variable Snuke assigned 0 was x_i, print the integer i.\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('4 5 1 2 3') == '3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 2 3 4 5') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('5 1 2 3 4') == '0'\nassert solution('6 1 2 3 4') == '4'\nassert solution('5 1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 2 3 4 5''') == '1'\nassert solution('''0 1 2 3 4 5''') == '0'\nassert solution('''0 1 2 0 3 4 5''') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"5 6\") == \"0\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"3 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"7 9\") == \"0\"\nassert solution(\"2 2\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '0'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n    2\n    1 2''') == '0'\nassert solution('''3 4\n    2\n    2 3''') == '1'\nassert solution('''5 5\n    2 2 2\n    3 1 2\n    1 1 2\n    2 3 2\n    3 1 3''') == '3'\nassert solution('''10 10\n    2 1 2\n    2 3 3\n    4 5 5\n    6 7 7\n    8 9 9\n    10 10 10''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n5''') == '0'\n\nassert solution('''1 2\n3''') == '3'\n\nassert solution('''1 3\n2''') == '4'\n\nassert solution('''1 1\n3''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 3') == '0'\nassert solution('1 4') == '0'\nassert solution('1 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\n\"\"\"\nfrom itertools import product",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n\"\"\"\n\nN = int(input())\narray = list(map(int, input().split()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'Yes'\nassert solution('3 10 100') == 'Yes'\nassert solution('100 10 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"2 3 2\") == \"No\"\nassert solution(\"4 2 4 4\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"2\\n2 2\") == \"No\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"No\"\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"5\\n1 2 3 5 10\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\n    \"3\",\n    \"1 10 100\",\n    \"\",\n    \"1 1 1\",\n    \"1 2 2\"\n]) == \"Yes\"\n\nassert solution([\n    \"3\",\n    \"1 10 100\",\n    \"\",\n    \"1 1 2\",\n    \"1 2 2\"\n]) == \"Yes\"\n\nassert solution([\n    \"3\",\n    \"1 10 100\",\n    \"\",\n    \"1 1 1\",\n    \"1 2 2\"\n]) == \"No\"\n\nassert solution([\n    \"3\",\n    \"1 10 100\",\n    \"\",\n    \"1 1 1\",\n    \"1 2 2\"\n]) == \"No\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5''') == \"Yes\"\nassert solution('''5\n1 2 3 4 5''') == \"No\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2\n1\n''') == 'Yes'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\"\n\nfrom itertools import permutations\n\ns = input()\nt = input()\nfor permutation in permutations(s):\n    if \"\".join(permutation) < t:\n        break\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''yx''') == 'Yes'\nassert solution('''axy''') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nyx\naxy\n''') == 'Yes'\nassert solution('''\nyxy\naxy\n''') == 'No'\nassert solution('''\na\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abcde') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"12 3 5\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 2\") == \"NO\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 5 4\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 2') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 10 10') == 'YES'\nassert solution('5 2 3') == 'NO'\nassert solution('1 2 4') == 'NO'\nassert solution('9 9 9') == 'NO'\n\n\"\"\"\n\nfrom math import gcd\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 5 1\\n\") == \"YES\"\nassert solution(\"7 5 1\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"NO\"\nassert solution(\"7\\n5 1\\n\") == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"6 5 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('4 5 1') == 'NO'\nassert solution('3 3 5 1') == 'YES'\nassert solution('7 7 5 1') == 'NO'\nassert solution('7 3 5 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('14 3 1') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8 3') == 'YES'\nassert solution('10 10 4') == 'NO'\nassert solution('7 7 3') == 'YES'\nassert solution('8 6 9') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\n\nassert solution('10 10') == '1010'\n\nassert solution('1 1') == '1'\n\nassert solution('2 2') == '1'\n\nassert solution('10 10') == '100'",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n1 2\n''') == '1'\n\nassert solution('''2 2\n1 2\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2 2\n''') == \"1\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('10 10') == '100'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''2 2\n''') == '1'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\") == \"3\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"6 4 10\") == \"1\"\nassert solution(\"10 8 10\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13 3 1\\n') == '3'\n\n---\n\nThis is essentially the same problem as the one below.\nBut since we need to find the solution, we can solve this in a way that is more efficient.",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(X Y Z) == 3\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13 3 1') == '3', \"Wrong!\"\nassert solution('4 2 1') == '1', \"Wrong!\"\nassert solution('20 20 5') == '5', \"Wrong!\"\nassert solution('10 10 10') == '10', \"Wrong!\"\nassert solution('10 10 10') == '1', \"Wrong!\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '13 3 1'\n) == '3'\nassert solution(\n    '10 20 30'\n) == '0'\nassert solution(\n    '1 1 1'\n) == '2'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '3'\nassert solution('3 5 1') == '2'\nassert solution('7 10 1') == '4'\nassert solution('13 12 1') == '2'\nassert solution('13 13 1') == '1'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('18 16 2') == '1'\n\nIn the above example, there are two ways to occupy seats:\n - to occupy the space by filling the seat.\n - to leave the space by leaving the seat.\n\nWe would like to seat as many people as possible, but they are all very shy, and there must be a gap of length at least Z centimeters between two people, and between the end of the seat and a person.\n\nThe largest gap will be:\n - between the end of the seat and the person sitting there\n - and between the seat and the leftmost person sitting there\n\nThe largest gap will also be:\n - between the start of the seat and the person sitting there\n - and between the seat and the rightmost person sitting there\n\nTherefore, we can seat one person, because that gap is between the seat and the person sitting there. We could then seat more people, because we can still fill more spaces between the leftmost person and the rightmost person.\n\nThe maximum number of people that can fit in the space is:\n - if there is no gap between the end of the seat and the person sitting there,\n   then we could seat one person and fill more spaces between the end of the seat and the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y\n - if there is a gap between the start of the seat and the person sitting there,\n   then we could seat one person, and leave one person on the left and the right of the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y - 1\n - if there is a gap between the start of the seat and the leftmost person sitting there,\n   then we could seat one person, and leave one person on the left and one person on the right of the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y - 2\n - if there is a gap between the start of the seat and the rightmost person sitting there,\n   then we could seat one person, and leave one person on the left and one person on the right of the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y - 3\n\nThe maximum number of people that can fit in the space is:\n - if there is no gap between the end of the seat and the person sitting there,\n   then we could seat one person and fill more spaces between the end of the seat and the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y\n - if there is a gap between the start of the seat and the person sitting there,\n   then we could seat one person, and leave one person on the left and the right of the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y - 1\n - if there is a gap between the start of the seat and the leftmost person sitting there,\n   then we could seat one person, and leave one person on the left and one person on the right of the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y - 2\n - if there is a gap between the start of the seat and the rightmost person sitting there,\n   then we could seat one person, and leave one person on the left and one person on the right of the person sitting there.\n   Thus, the maximum number of seats would be:\n   1 + (X+Y-1)//Y - 3\n\nTherefore, the maximum number of seats that can fit in the space is:\n - 1 + (X+Y-1)//Y - 4\n\nThe maximum number of people that can fit in the space is:\n - 1 + (X+Y-1)//Y - 4\n\nExample\n\nInput:\n15 15 2\n\nOutput:\n4\n\nExplanation:\nThere are a maximum of four people, as shown below:\nFigure\n'''\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, m, z = list(map(int, stdin.split()))\n        return str(min(n, m, z) - 1)\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestThis(unittest.TestCase):\n    def test_main(self):\n        io = StringIO(\"15 15 2\\n\")\n        sys.stdin = io\n        s = Solution()\n        print(s.solution())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3'\n\"\"\"\n\nX, Y, Z = list(map(int, input().split()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"10 11 2\") == \"2\"\nassert solution(\"10 3 1\") == \"1\"\nassert solution(\"3 10 1\") == \"2\"\nassert solution(\"100 15 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"X Y Z\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('10') == '8'\nassert solution('15') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\\n0\\n0\\n1\\n1\\n1\\n0\\n0\") == \"3\"\n",
        "num_ids_2": 44,
        "num_ids_4": 75
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\n\n\"\"\"\n\nimport sys\nimport os\nimport inspect\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(os.path.dirname(currentdir))\nsys.path.insert(0, parentdir)\n\nfrom leetcode.common.util import TreeNode",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 2, 1, 3, 4, 2, 5, 5]) == 2\nassert solution([2, 0, 1, 3, 4, 2, 5, 5]) == 1\nassert solution([4, 2, 0, 5, 2, 4, 5, 5]) == 1",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('1') == '0'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2, 4]) == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 4\\n0 3\\n\"\n) == \"7\"\nassert solution(\n    \"2 3\\n0 1\\n\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '7'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n0 1 2\\n\") == \"7\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"7\"\nassert solution(\"2 1\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,2,3,4]) == \"7\"\nprint(solution([5,1,5,2,2,4,3]))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n1 3\\n') == '7'\nassert solution('4 5\\n1 2\\n3 4\\n5 2\\n') == '7'\nassert solution('1 2\\n1 2\\n') == '2'\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == '7'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n0 3\\n\") == \"7\"\nassert solution(\"3 3\\n1 2\\n\") == \"5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '2'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '1'\nassert solution('10') == '0'\nassert solution('?') == '2'\nassert solution('?1') == '1'\nassert solution('?100') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\"\nassert solution(\"10\\nL 101\\nR 100\\nR 123\\nL 10\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"2\"",
        "num_ids_2": 97,
        "num_ids_4": 149
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(samples[0]) == '1'\nassert solution(samples[1]) == '2'\nassert solution(samples[2]) == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\nassert solution('''6\nL 5\nR 3\n? 2\nL 3\nR 2\n? 1\nL 2\nR 2\n? 1\n''') == '2'\nassert solution('''6\nL 5\nR 3\n? 2\nL 3\nR 2\n? 1\nL 2\nR 2\n? 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution() == \"6\"\nassert solution() == \"72\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1\") == \"0\"\nassert solution(\"3\\n10\") == \"6\"\nassert solution(\"4\\n20\") == \"6\"\nassert solution(\"5\\n30\") == \"6\"\nassert solution(\"6\\n14\") == \"72\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n2\n5''') == '0'\nassert solution('''3\n1\n2\n4''') == '-1'\nassert solution('''5\n1\n2\n5\n4\n7''') == '4'\nassert solution('''5\n1\n2\n5\n4\n7\n''') == '72'\nassert solution('''7\n1\n2\n5\n4\n7\n5\n6\n8''') == '6'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\n    \"5\"\n    \"2\"\n    \"5\"\n    \"1\"\n    \"6\"\n    \"4\"\n    \"1\"\n    \"5\"\n    \"3\"\n    \"3\"\n    \"1\"\n    \"6\"\n    \"6\"\n    \"2\"\n    \"1\"\n    \"4\"\n    \"2\"\n    \"5\"\n    \"3\"\n    \"5\"\n    \"6\"\n    \"2\"\n    \"3\"\n    \"2\"\n    \"3\"\n    \"2\"\n    \"4\"\n    \"2\"\n    \"5\"\n    \"6\"\n    \"4\"\n    \"2\"\n    \"5\"\n    \"6\"\n    \"3\"\n    \"3\"\n    \"2\"\n    \"2\"\n    \"4\"\n    \"4\"\n    \"3\"\n    \"2\"\n    \"2\"\n    \"2\"\n    \"4\"\n    \"1\"\n    \"3\"\n    \"1\"\n    \"4\"\n    \"6\"\n    \"6\"\n    \"5\"\n    \"2\"\n    \"1\"\n    \"6\"\n    \"1\"\n    \"3\"\n    \"2\"\n    \"2\"\n    \"1\"\n    \"3\"\n    \"2\"\n    \"3\"\n    \"1\"\n    \"1\"\n    \"2\"\n    \"2\"\n    \"2\"\n    \"2\"\n    \"3\"\n    \"2\"\n    \"3\"\n    \"1\"\n    \"3\"\n    \"1\"\n    \"2\"\n    \"2\"\n    \"2\"\n    \"3\"\n    \"3\"\n    \"2\"\n    \"1\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"2\"\n    \"2\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"2\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    \"1\"\n    ",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '0'\nassert solution('1') == '-1'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"10\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == \"0\"\nassert solution('1\\n2\\n1') == \"-1\"\nassert solution('2\\n1\\n3') == \"0\"\nassert solution('2\\n2\\n3') == \"6\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(tetris_field_1) == 'YES'\nassert solution(tetris_field_2) == 'YES'\nassert solution(tetris_field_3) == 'NO'\nassert solution(tetris_field_4) == 'YES'\nassert solution(tetris_field_5) == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\", \"Do not cheat!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\n\nassert solution('''5\n2\n0 0 2 0\n2\n0 0 1 2\n2\n0 0 1 2\n2\n\n''') == 'NO'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\n\nassert solution('''5\n2\n0 0 2 0\n2\n0 0 1 2\n2\n0 0 1 2\n2\n\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'NO'\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''\n3\n1 1 1\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n3\n1 1 1\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'NO'\nassert solution('3\\n100\\n1 1 3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('4\\n4\\n1 1 2 1') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(t) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\dbacz\") == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\nabacaba\nbacabaa\n''') == '4'\nassert solution('''\n5\nzcabd\ndbacz\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('5\\nzcabd\\dbacz\\n') == '0'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n\n'''\n\n\n\nfrom collections import deque",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_str_1) == 4\nassert solution(input_str_2) == 0\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT_SINGLE) == OUTPUT_SINGLE\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nzcabd\ndbacz\n''') == \"0\"\nassert solution('''3\nacabc\nbcabd\n''') == \"3\"\nassert solution('''6\nzcabd\ndbacz\n''') == \"4\"\nassert solution('''10\nzcabd\ndbacz\n''') == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nabacaba\\nbacabaa\") == \"0\"\nassert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == \"2999999997\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == \"-17\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == \"2999999997\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8'\nassert solution('2\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '198'\nassert solution('3\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '-17'\nassert solution('4\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '2999999997'\nassert solution('5\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '0'\n",
        "num_ids_2": 90,
        "num_ids_4": 184
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 1000000000 1 6') == '2999999997'\nassert solution('1 1 999999999') == '0'\nassert solution('1 1 999999999') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\nassert solution('''\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"8\"\nassert solution(\n\"\"\"\n3\n5 2 3\n100 1 4\n1 1000000000\n1 1 999999999\n1 1 999999999\n\"\"\") == \"198\"\nassert solution(\n\"\"\"\n4\n5 2 3\n100 1 4\n1 1000000000\n1 1 999999999\n1 1 999999999\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5\n5 2 3\n100 1 4\n1 1000000000\n1 1 999999999\n1 1 999999999\n\"\"\") == \"2999999997\"\nassert solution(\n\"\"\"\n6\n5 2 3\n100 1 4\n1 1000000000\n1 1 999999999\n1 1 999999999\n1 1000000000\n1 1 999999999\n\"\"\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999''') == '198'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''6\n1 2 3\n1 100 1\n1 1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999''') == '-17'\nassert solution('''6\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000''') == '2999999997'\nassert solution('''6\n0\n0\n0\n0\n0\n0''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"8\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"2999999997\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"0\"\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 999999999') == '0'\nassert solution('1 1 999999999') == '1'\n\nprint(solution(*tuple(int(i) for i in stdin.split())))\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 10 5') == '2999999997'\nassert solution('1000000000 1 6') == '0'\nassert solution('1 1 1000000000') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n3\n5\n2\n4\n7\n10\n''') == '1'\n\nassert solution('''\n1\n1\n3\n5\n2\n4\n7\n10\n''') == '1'\n\nassert solution('''\n1\n1\n3\n5\n2\n4\n7\n10\n''') == '1'\n\nassert solution('''\n1\n1\n3\n5\n2\n4\n7\n10\n''') == '1'\n\nassert solution('''\n1\n1\n3\n5\n2\n4\n7\n10\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4\") == \"6\\n\"\nassert solution(\"4\\n4\") == \"6\\n\"\nassert solution(\"1\\n5\") == \"5\\n\"\nassert solution(\"1\\n10\") == \"5\\n\"\nassert solution(\"10000000000\\n1000000\") == \"10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000\\n10000000000",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1') == '3'\nassert solution('10\\n23') == '27'\nassert solution('100\\n10') == '99'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\n\nassert solution('''\n8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1\n2\n3\n4\n5\n'''\n) == \"3\"\nassert solution(\n'''\n1\n2\n5\n10\n20\n'''\n) == \"9\"\nassert solution(\n'''\n1\n2\n3\n4\n5\n'''\n) == \"4\"\nassert solution(\n'''\n1\n2\n3\n4\n5\n'''\n) == \"4\"\nassert solution(\n'''\n1\n2\n3\n4\n5\n6\n'''\n) == \"9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n10\n13\n16\n19\n20\n22\n23\n24\n26\n27\n28\n29\n30\n32\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('13') == '27'\nassert solution('29') == '15'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\nassert solution('''\n3\n4\n9\n6\n12\n19\n12\n''') == '14'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\nassert solution(\"14\") == \"13\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '707712343'\nassert solution('''1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '551101010101010101'\nassert solution('''10 11 2 1 5''') == '551101010101010101'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"15\"\nassert solution(\"10\") == \"77\"\nassert solution(\"1000000000\") == \"999999999000000000\"\nassert solution(\"1000000000\") == \"999999999000000000\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"77\"\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"999999999000000000\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '55'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"70\"\nassert solution(input_lines=\"\"\"\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n\"\"\") == \"77\"\nassert solution(input_lines=\"\"\"\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n\"\"\") == \"999999999000000000\"\nassert solution(input_lines=\"\"\"\n10 11 2 1 5\n10 11 9 1 10\n\"\"\") == \"55\"\nassert solution(input_lines=\"\"\"\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n\"\"\") == \"77\"\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '70'\nassert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\nassert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '177177'\nassert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\nassert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5') == '70\\n77\\n177177\\n999999999000000000\\n999999999'\nassert solution('5\\n10 11 2 1 5\\n10 11 9 1 10') == '55\\n10'\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n5 7\n10 10\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n2 3\n10 10\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n3 4\n10 10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n10 5\n10 10\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1 1\n10 10\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n10 10\n2 4\n7 4\n9 3''') == \"0\"\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3''') == \"1\"\nassert solution('''5\n2 4\n10 10\n2 4\n7 4\n9 3''') == \"1\"\nassert solution('''5\n2 4\n10 10\n2 4\n7 4\n9 3''') == \"2\"\nassert solution('''5\n2 4\n10 10\n2 4\n7 4\n9 3''') == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n5\n2 5\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n5\n2 4\n10 10\n2 5\n7 4\n9 3\n''') == '2'\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10 2\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"9 3\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 4') == '0'\nassert solution('7 4') == '1'\nassert solution('9 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2\n2 1\n3 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('111') == '3'\nassert solution('1111') == '4'\nassert solution('2222') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\\n\") == \"13\"\nassert solution(\"2\\n11\\n111\\n1\\n222\\n\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"4\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n22\n9999\n1\n777\n''') == \"13\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n22\\n9999\\n1\\n777') == '13'\nassert solution('5\\n22\\n9999\\n1\\n777') == '13'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n11\\n22') == '13'\nassert solution('2\\n22\\n22') == '90'\nassert solution('3\\n1111') == '1'\nassert solution('4\\n9999') == '66'\n\n\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\\n\") == \"13\"\nassert solution(\"1\\n11\\n22\\n22\\n22\\n22\\n\") == \"9\"\nassert solution(\"1\\n11\\n111\\n1111\\n2222\\n2222\\n2222\\n\") == \"1\"\nassert solution(\"1\\n1\\n11\\n111\\n1111\\n1111\\n1111\\n1111\\n\") == \"0\"",
        "num_ids_2": 51,
        "num_ids_4": 117
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '1'\nassert solution('22') == '2'\nassert solution('22') == '2'\nassert solution('1111') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n22\n9999\n1\n777\n''') == \"13\"\nassert solution('''\n6\n9\n99999999\n1\n7\n''') == \"17\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n12\n22\n777\n''') == '13'\nassert solution('''\n3\n1\n11\n''') == '4'\nassert solution('''\n4\n777\n''') == '3'\nassert solution('''\n5\n777\n''') == '2'\nassert solution('''\n5\n1\n11\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n22\n9999\n1\n777''') == '13'\nassert solution('''3\n2\n2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n3\n1 3 1 3 2\n6\n1 1 2 2 2 1\"\"\") == \"YES\"\nassert solution(\"\"\"3\n1\n5\n5\n1 1 1 1 1\"\"\") == \"NO\"\nassert solution(\"\"\"4\n6\n2 2 2 2 2 2\"\"\") == \"YES\"\nassert solution(\"\"\"5\n2\n2 2 2 2 2\"\"\") == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n1 3 2 2\\n5\\n2 3 2 2 2\\n1 2 2\\n2') == 'YES'\nassert solution('4\\n6\\n2 3 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2 2\\n5\\n2 2 2 2 2\\n') == 'NO'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"YES\\n2 2\\n4 1\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"YES\"\nassert solution('3') == \"NO\"\n\nassert solution('4') == \"YES\"\nassert solution('5') == \"YES\"\nassert solution('6') == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4\n6\n2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n5\n5\n1 1 1 1 1\n2\n2 2 2\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n2 3 1 3 2''') == \"YES\"\n\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == \"NO\"\n\nassert solution('''4\n6\n2 2 2 2 2 2''') == \"YES\"\n\nassert solution('''5\n2\n2 2 2 2 2''') == \"NO\"\n\nassert solution('''6\n5\n5\n5\n5\n5\n5''') == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[4,2,3]\n1\n''') == 5\n\nassert solution('''\n[3,-1,0,2]\n3\n''') == 6\n\nassert solution('''\n[2,-3,-1,5,-4]\n2\n''') == 13",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('[4,2,3]') == \"5\"\nassert solution('[3,-1,0,2]') == \"6\"\nassert solution('[2,-3,-1,5,-4]') == \"13\"\nassert solution('[1]') == \"0\"\nassert solution('[-1]') == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4,2,3\") == 5\nassert solution(\"3,-1,0,2\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13\nassert solution(\"2,-3,-1,5,-4\") == 13\nassert solution(\"2,-3,-1,5,-4\") == 13\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2\\n3\") == \"5\"\nassert solution(\"3\\n-1\\n0\\n2\") == \"6\"\nassert solution(\"2\\n-3\\n-1\\n5\\n4\") == \"13\"\n",
        "num_ids_2": 36,
        "num_ids_4": 60
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([-3,-1,0,2]) == 1\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"[4,2,3]\\n1\") == \"5\"\nassert solution(\"[3,-1,0,2]\\n3\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4]\\n2\") == \"13\"",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2,5,1,3,4\") == 7\nassert solution(\"3,-1,0,2,3\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13\nassert solution(\"4,-2,3\") == 5\n\nstdin = \"\"\"2,5,1,3,4\n\"\"\"\nassert solution(stdin) == 7\n\nstdin = \"\"\"3,-1,0,2,3\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([0,-1,-2,-3]) == -1\n\n\n\n\n\n\n\n\n'''\n\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        \n        \n        for i in range(K):\n            flag = True\n            for j in range(1, len(A)):\n                if A[j] > A[j - 1]:\n                    flag = False\n                    A[j - 1], A[j] = A[j], A[j - 1]\n                    break\n            if not flag:\n                K -= 1\n                \n        \n        return sum(A)\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2\n3\n''') == 5\nassert solution('''\n3\n-1\n0\n2\n''') == 6\nassert solution('''\n2\n-3\n-1\n5\n-4\n''') == 13",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'\n\nfrom typing import List\nfrom bisect import bisect_left\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'\n\n\n'''\n",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    0 2 1 -6 6 -7 9 1 2 0 1\n    ''') == \"true\"\nassert solution('''\n    0 2 1 -6 6 -7 9 1 2 0 1\n    ''') == \"false\"\nassert solution('''\n    0 2 1 -6 6 -7 9 1 2 0 1\n    ''') == \"true\"\n\nassert solution('''\n    0 2 1 -6 6 -7 9 1 2 0 1\n    ''') == \"false\"\n\nassert solution('''\n    0 2 1 -6 6 -7 9 1 2 0 1\n    ''') == \"false\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'true'\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'",
        "num_ids_2": 38,
        "num_ids_4": 96
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == 'true', 'Wrong Answer'\nassert solution([0, 2, 1, -6, 6, 7, 9, 1, 2, 0, 1]) == 'false', 'Wrong Answer'\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == 'true', 'Wrong Answer'",
        "num_ids_2": 73,
        "num_ids_4": 108
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\\n\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,1,2,0,1]\\n\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\\n\") == \"true\"\n",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0\\n2\\n1,-6\\n6,-7\\n9,-1\\n2,0,1') == 'true'\nassert solution('0\\n2\\n1,-6\\n6,-7\\n9,-1\\n2,0,1') == 'false'\nassert solution('3\\n3\\n6\\n5,-2\\n2,0,1') == 'true'\n\n\"\"\"",
        "num_ids_2": 70,
        "num_ids_4": 98
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == 'true'\n\n=========================================\nLet's say n = 4 and k = 1. Then we can make a partition of the array so that the sum of the k'th subarray is equal to 0. \nNow, let's say sum(arr) = 0. Thus, we can partition the array so that we can pick any k numbers from 1 to n\u22121, and then sum(arr[k]) = k*k\u2212k+1.\n\nThen, we can apply the following strategy. We can pick any k numbers from 1 to n\u22121, and then sum(arr[k]) = k*k\u2212k+1. Now, we can partition the array. The sum of the k'th subarray is equal to k*k\u2212k+1, so we can do this with O(n)O(n)O(n)O(n)O(1).\n\nThe same strategy for the partition can be applied for any other k. If sum(arr[k]) = k*k\u2212k+1, then we can partition the array so that we can pick any k numbers from 1 to n\u22121. For this we can do it with O(n)O(n)O(n)O(1).\n\nSo the total time complexity for the approach is O(n)O(n)O(n)O(1).\n\nThe other approach is to try both approaches at once. We can try to partition the array so that we can pick any k numbers from 1 to n\u22121, and then sum(arr[k]) = k*k\u2212k+1. Now, we can partition the array so that we can pick any k numbers from 1 to n\u22121, and then sum(arr[k]) = k*k\u2212k+1. But, before we can do so, we need to prove that sum(arr[k]) = k*k\u2212k+1 is equal to k*k\u2212k+1. Hence, we can apply the same strategy for the partition.\n\nSo the time complexity is still O(n)O(n)O(n)O(1).\n\nIf we test the approach with the above code, we get an output of false as the sum is equal to k*k\u2212k+1. So, we should be able to use the approach only if the sum is equal to k*k\u2212k+1.\n\nSo, this approach should work for any k.\n\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'true'\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'true'\nassert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'true'\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == 'false'",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\nassert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beat vet beet\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n' +\n                'beat\\n' +\n                'vet\\n' +\n                'beet\\n' +\n                'bed\\n' +\n                'vet\\n' +\n                'bet\\n' +\n                'beet\\n') == 'beet and vet'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beat and vet'\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beet and vet'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beet and vet'\nassert solution('10\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbeet\\nbet\\nbeet\\nbet') == 'bet and beet and vet and beet and bet'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"3\\nab\\nac\\nba\") == \"ab\"\nassert solution(\"8\\nabcde\\nfghij\\nklmno\\npqrst\\nuvwxyz\") == \"zxcvbnm\"",
        "num_ids_2": 55,
        "num_ids_4": 94
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('4\\nccc\\ncc\\ncc\\nbb\\n') == 'ccc,cc,cc,bb'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '8'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == ''\nassert solution('2') == '8'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n') == '8'\nassert solution('2\\n10\\n') == '8'\nassert solution('3\\n50\\n') == '50'\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"2\") == \"5\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == ''\nassert solution('2') == '6'\nassert solution('3') == '6'\nassert solution('4') == '6'\nassert solution('5') == '6'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"10\"\n\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '8'\nassert solution('4 8') == '16'\n\n----------------\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == ''\nassert solution('2') == '8'\nassert solution('3') == '6'\nassert solution('4') == '6'\nassert solution('5') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1234\n150\n100''') == '84'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1234\\n150\\n100') == '84'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"1234\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 22,
        "num_ids_4": 39
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"84\"\nassert solution(\"1234\") == \"84\"\nassert solution(\"1\") == \"84\"\nassert solution(\"1\") == \"84\"\nassert solution(\"1\") == \"84\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '5'\nassert solution('3') == '4'\nassert solution('11') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n''') == '8'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '8'\nassert solution('5 1') == '7'\nassert solution('4 5') == '3'\nassert solution('100 1') == '99999'\nassert solution('100 5') == '99999'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '60'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n''') == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8'\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solve(self, N, M):\n        count = 0\n\n        if N == 1 and M == 1:\n            return 1\n\n        if N > 1 and M == 1:\n            return N * (N - 1)\n\n        if N == 1 and M > 1:\n            return M * (M - 1)\n\n        for i in range(1, M + 1):\n            count += (N - i) * (N - i - 1) * (M - i) * (M - i - 1)\n\n        return count % (10 ** 9 + 7)\n\ns = Solution()\nprint(s.solve(2, 2))\n\"\"\"\n\n\n\n\"\"\"\nclass Solution:\n    def solve(self, N, M):\n        count = 0\n\n        if N == 1 and M == 1:\n            return 1\n\n        if N > 1 and M == 1:\n            return N * (N - 1)\n\n        if N == 1 and M > 1:\n            return M * (M - 1)\n\n        for i in range(1, M + 1):\n            count += (N - i) * (N - i - 1) * (M - i) * (M - i - 1)\n\n        return count % (10 ** 9 + 7)\n\ns = Solution()\nprint(s.solve(2, 2))\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '8'\n\"\"\"\nimport sys\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 1') == '8'\nassert solution('5 3') == '12'\nassert solution('6 5') == '24'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''3 3\n1 2\n2 3\n''') == 'POSSIBLE'\nassert solution('''3 4\n1 3\n2 4\n3 4''') == 'IMPOSSIBLE'\nassert solution('''4 4\n1 3\n2 4\n3 4\n4 4''') == 'IMPOSSIBLE'\nassert solution('''5 5\n1 4\n2 5\n3 4\n4 5''') == 'POSSIBLE'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3 2\\n'\n    '1 2\\n'\n    '2 3\\n'\n) == 'POSSIBLE'\n\n\"\"\"\n\nfrom itertools import combinations\n\nn, m = map(int, input().split())\n\nfor a, b in combinations(range(1, n + 1), 2):\n    if a!= b:\n        for c, d in combinations(range(1, n + 1), 2):\n            if c!= d:\n                if (a, b) == (1, n) or (c, d) == (1, n):\n                    if a!= c and b!= d:\n                        print('POSSIBLE')\n                        exit()\n\nprint('IMPOSSIBLE')\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"7 8\") == \"IMPOSSIBLE\"\nassert solution(\"7 8\") == \"IMPOSSIBLE\"\nassert solution(\"4 5\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == 'POSSIBLE'\nassert solution('10 5') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'IMPOSSIBLE'\nassert solution('5 5') == 'IMPOSSIBLE'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\nassert solution('5 2') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr', solution('atcoder')\nprint(solution(input()))\n'''",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abab') == 'abab'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"rock\") == \"c\"\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''atcoder''') == 'acdr'\nassert solution('''a''') == 'a'\nassert solution('''aa''') == 'aa'\nassert solution('''aaa''') == 'aaa'\nassert solution('''aaaa''') == 'aaaa'\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"acdr\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'cdefghijklmnopqrstuvwxyz'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\nfrom collections import deque\n\nfrom typing import List, Tuple\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'acdr'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''rng gorilla apple''') == 'YES'\nassert solution('''xrng''') == 'NO'\nassert solution('''rng gorilla abc''') == 'NO'\nassert solution('''rng gorilla a''') == 'YES'\nassert solution('''rnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorirnggorir",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng goro banana apple') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('abc def ghi') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(rng) == 'YES'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('a apple') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('abcde fghij klmno pqrst') == 'YES'\nassert solution('abcde ghij klmno pqrst') == 'NO'\n",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"apple apple pear pear\") == \"YES\"\nassert solution(\"apple apple pear pear\") == \"NO\"\nassert solution(\"apple pear pear pear apple\") == \"YES\"\nassert solution(\"apple pear pear pear apple\") == \"NO\"\nassert solution(\"rng gorilla apple\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'LESS'\nassert solution('1') == 'GREATER'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n7\n\n''') == 'GREATER'\nassert solution('''\n3\n16\n\n''') == 'LESS'\nassert solution('''\n3\n-7\n\n''') == 'EQUAL'\nassert solution('''\n4\n11\n\n''') == 'GREATER'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"LESS\"\nassert solution(\"7\") == \"GREATER\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == 'GREATER'\nassert solution('1\\n2\\n') == 'LESS'\n\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3') == 'LESS'\nassert solution('21\\n15') == 'LESS'\nassert solution('1\\n2') == 'GREATER'",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'LESS'\nassert solution('6') == 'EQUAL'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"LESS\"\nassert solution(\"7\") == \"GREATER\"\nassert solution(\"1\") == \"EQUAL\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"LESS\"\nassert solution(\"15\") == \"GREATER\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'EQUAL'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"LESS\"\n\"\"\"\nimport re",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '6\\n'\n    'apple\\n'\n    'orange\\n'\n    ':\\n'\n    'apple\\n'\n    'orange\\n'\n    ':\\n'\n    'tomato\\n'\n) == '2'\n\nassert solution(\n    '6\\n'\n    'apple\\n'\n    'orange\\n'\n    ':\\n'\n    'apple\\n'\n    'orange\\n'\n    ':\\n'\n    'tomato\\n'\n) == '4'\n\nassert solution(\n    '5\\n'\n    'apple\\n'\n    'orange\\n'\n    ':\\n'\n    'orange\\n'\n    'apple\\n'\n    ':\\n'\n    'banana\\n'\n) == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\napple\norange\napple\n1\ngrape\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\n\"\"\"\n\nn, *s, t = list(map(str, input().split()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('12') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution('3\\napple\\norange\\napple\\n2\\ngrape\\n') == '1'\nassert solution('3\\napple\\norange\\napple\\n3\\ngrape\\n') == '0'\n",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('6') == '1'\nassert solution('7') == '0'\nassert solution('8') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('1') == '2'\nassert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A') == 'T', \"X\"\nassert solution('C') == 'G', \"Y\"\nassert solution('G') == 'A', \"Z\"\nassert solution('T') == 'A', \"a\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A') == 'T', 'Should be T'\nassert solution('C') == 'G', 'Should be G'\nassert solution('G') == 'C', 'Should be C'\nassert solution('T') == 'A', 'Should be A'\nassert solution('AA') == 'TT', 'Should be T'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == 'T', 'Should be T'\nassert solution('C') == 'G', 'Should be G'\nassert solution('G') == 'A', 'Should be A'\nassert solution('T') == 'C', 'Should be C'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'A'\nassert solution('A') == 'T'\nassert solution('T') == 'A'\nassert solution('A') == 'T'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n\n## Read input as specified in the question.\n## Print output as specified in the question.\nb = stdin",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('C') == 'A'\nassert solution('G') == 'T'\nassert solution('T') == 'G'\nassert solution('A') == 'C'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1\\n') == 14\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"6\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '14'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"14\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"5\") == \"14\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3 1 2 4 1\") == \"14\"\nassert solution(\"1 2 3 4 5\") == \"15\"\n",
        "num_ids_2": 15,
        "num_ids_4": 43
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"6\\n3 4 5 2 1\\n5 3 2 4 1\") == \"18\"\nassert solution(\"6\\n2 1 1 4 1\\n1 2 1 4 1\") == \"10\"\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\nprint(solution('''5\n3 2 2 4 1\n1 2 2 2 1\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 2 2 4 1\") == \"14\"\nassert solution(\"2\\n1 2 3\") == \"3\"\nassert solution(\"10\\n2 3 1 2 6 4 7 8 5\") == \"11\"\nassert solution(\"3\\n4 6 7\") == \"3\"\nassert solution(\"10\\n1 2 3\") == \"3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n') == '4'\nassert solution('3\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n2 2 2\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5\\n2 2 2') == '1'\nassert solution('3 4\\n2 3 1') == '2'\nassert solution('3 2\\n1 2 1') == '0'\nassert solution('10 20\\n1 2 1 3 4 5 2 4 2 5 1') == '5'\nassert solution('1000000000 10\\n1000000000 1000000000') == '2'",
        "num_ids_2": 32,
        "num_ids_4": 72
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n2 2 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"5\\n3\\n4\") == \"4\"\nassert solution(\"10\\n9\\n9\") == \"0\"\nassert solution(\"100\\n90\\n89\") == \"2\"\nassert solution(\"1000\\n0\\n0\") == \"1000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('10 20 30 40 50') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n1 1 0\\n2 1 2\") == \"No\"\nassert solution(\"1 0 1\\n2 0 2\\n1 0 1\") == \"Yes\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"Yes\"\nassert solution(input) == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"0 0\\n1 1\\n0 0\\n\") == \"No\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'Yes', 'Input not correctly formed'\nassert solution('1 0 1') == 'Yes', 'Input not correctly formed'\nassert solution('1 1 1') == 'No', 'Input not correctly formed'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 0 1\n2 1 2\n1 0 1''') == 'Yes'\n\nassert solution('''\n1 0 1\n2 1 2\n1 0 1\n''') == 'No'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 1 1\\n1 1 2\\n1 0 1\") == \"No\"\nassert solution(\"1 1 1\\n1 1 2\\n1 0 1\") == \"Yes\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'ABC'\nassert solution('ABC') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'ARC', solution('ABC')\n\nassert solution('ARC') == 'ABC', solution('ARC')\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 8 2\") == \"3\"\nassert solution(\"1 2 4 8\") == \"4\"\nassert solution(\"10 10 8 2\") == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 8 2') == '3'\nassert solution('4 8 2') == '3'\nassert solution('8 10 2') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4, 8, 2]) == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '3', 'Should be 3'\nassert solution('5 8 2') == '4', 'Should be 4'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('10 8 2') == '4'\nassert solution('10 20 2') == '3'\nassert solution('10 10 2') == '0'\nassert solution('10 10 20 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 2\") == \"3\"\nassert solution(\"5 9 5\") == \"0\"\nassert solution(\"0 0 5\") == \"0\"\nassert solution(\"4 4 3\") == \"3\"\nassert solution(\"4 4 6\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"5 5 2\") == \"4\"\nassert solution(\"10 10 2\") == \"9\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('5 12 2') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4 8 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2\") == \"3\", \"Wrong answer\"\nassert solution(\"4 4 2\") == \"1\", \"Wrong answer\"\nassert solution(\"5 7 4\") == \"1\", \"Wrong answer\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '25'\n) == 'Christmas'\n\nassert solution(\n    '24'\n) == 'Christmas Eve'\n\nassert solution(\n    '23'\n) == 'Christmas Eve Eve'\n\nassert solution(\n    '22'\n) == 'Christmas Eve Eve Eve'\n\nassert solution(\n    '21'\n) == 'Christmas Eve Eve Eve Eve'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('25') == 'Christmas'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(5) == 'Christmas'\nassert solution(22) == 'Christmas Eve Eve Eve Eve'\nassert solution(23) == 'Christmas Eve Eve Eve'\nassert solution(24) == 'Christmas Eve'\nassert solution(25) == 'Christmas'\n\nstdin = input()\n\nprint(solution(int(stdin)))",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('25') == \"Christmas\"\n\nassert solution('24') == \"Christmas Eve\"\n\nassert solution('23') == \"Christmas Eve Eve\"\n\nassert solution('22') == \"Christmas Eve Eve Eve\"",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'Christmas'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('25') == 'Christmas', \"Wrong answer\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"Christmas\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Easter'\nassert solution('5') == 'Easter Eve'\nassert solution('12') == 'Christmas Eve'\nassert solution('25') == 'Christmas Eve Eve'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve Eve'\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '4'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n7\n''') == '4'\nassert solution('''10\n8\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '2'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '4'\nassert solution('16') == '6'\nassert solution('27') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"15\") == \"6\"\n\n----------------------------------------",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '4'\nassert solution('8') == '2'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"8\") == \"3\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '3'\nassert solution('8') == '4'\nassert solution('12') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 5 5 5\") == \"Yes\"\nassert solution(\"5 5 5 5\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 7 9 3') == 'Yes', 'Wrong answer'\nassert solution('5 2 4 1') == 'No', 'Wrong answer'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"1 5 2 2\") == \"Yes\"\nassert solution(\"2 2 2 1\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 3 3') == 'Yes'\nassert solution('1 4 5 1') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 7 9 3') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 7 9 3\"\n    ) == \"Yes\"\n\nassert solution(\n    \"1 1 1 1\"\n    ) == \"No\"\n\nassert solution(\n    \"1 1 2 3\"\n    ) == \"No\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\", \"Should be Yes\"\nassert solution(\"3 5 8 7\") == \"No\", \"Should be No\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 9 8 1') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('12 3 4 4') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2 4\") == \"Yes\"\nassert solution(\"3 3 4 1\") == \"No\"\nassert solution(\"3 3 6 1\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"python is easy\") == \"PYTHON\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''atcoder beginner contest''') == 'ABC'\n\ninput()\ns = input()\n\ns_set = set(s.split())\n\nfor i in range(len(s_set)):\n    print(s[0] + s[1] + s[2], end=' ')\n\n\"\"\"\ns = input()\n\nfor i in range(len(s)):\n    print(s[0] + s[1] + s[2], end=' ')\n\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('A') == 'A'\n\"\"\"\n\ns1, s2, s3 = input().split()\nprint(s1[0].upper()+s1[1:])\nprint(s2[0].upper()+s2[1:])\nprint(s3[0].upper()+s3[1:])\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n\"\"\"\n\n\ns1, s2, s3 = input().split()\n\nprint(s1[0].upper() + s1[1:])\nprint(s2[0].upper() + s2[1:])\nprint(s3[0].upper() + s3[1:])\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'ABC', 'Should be 'ABC''\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER BEGINNER CONTEST\") == \"ABC\", \"Test Failed\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 10 120\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 6') == 'Yes'\nassert solution('100 100 1') == 'No'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"100 50 120\") == \"No\"\nassert solution(\"50 120 100\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 50 120\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"1000 1\") == \"Yes\"\nassert solution(\"1000 100\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '50 100 120'\n    ) == 'Yes'\nassert solution(\n    '200 200 200'\n    ) == 'No'\nassert solution(\n    '50 120 120'\n    ) == 'No'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n50 100 120\n''') == \"Yes\"\n\nassert solution('''\n1 2 3\n''') == \"No\"\n\n\"\"\"\n\"\"\"\n\u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d Yes, \u0435\u0441\u043b\u0438 \u0412\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043a\u0443\u043f\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0443\u043b\u044f, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u0441 \u043a\u043e\u0444\u0435\u0439\u043d\u0438.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0434\u0432\u0430 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 A \u0438 B. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u043b\u0438 \u043a\u0443\u043f\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u0441 \u043a\u043e\u0444\u0435\u0439\u043d\u0438, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u0441 \u044d\u0442\u0438\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u043a\u043e\u0444\u0435\u0439\u043d\u0438.\n\n\u0412\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0438\u0437 \u0434\u0432\u0443\u0445 \u0441\u043b\u043e\u0432:\nYes, \u0435\u0441\u043b\u0438 \u0412\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043a\u0443\u043f\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0443\u043b\u044f, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u0441 \u044d\u0442\u0438\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u043a\u043e\u0444\u0435\u0439\u043d\u0438.\nNo, \u0435\u0441\u043b\u0438 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0443\u043b\u044f, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u0441 \u044d\u0442\u0438\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u043a\u043e\u0444\u0435\u0439\u043d\u0438.\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('1 0 0') == 'No'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"5\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n\"\"\"\nimport numpy as np\nfrom collections import defaultdict\nfrom collections import Counter",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 8\n7 9 8 9\n''') == '5'\nassert solution('''5 8\n7 9 8 9\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 8') == '5'\nassert solution('16 8') == '6'\nassert solution('16 4') == '1'\nassert solution('7 8') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"4 5\") == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"3 5\n6\n7\n8\n9\n9\"\"\") == \"5\"\nassert solution(r\"\"\"3 5\n4\n2\n3\n5\n3\"\"\") == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8') == '5'\nassert solution('12 5') == '12'\nassert solution('1 2 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n4 7 8 9''') == '4'\nassert solution('''8 2\n7 9 8 9''') == '3'\nassert solution('''5 3\n4 7 8 9''') == '4'\nassert solution('''5 5\n4 7 8 9''') == '0'\nassert solution('''5 3\n4 7 8 9''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8') == '5'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 8\n7 9 8 9\n''') == '5'\nassert solution('''4 8\n7 9 8 9\n''') == '5'\nassert solution('''4 3\n4 7 3 8 9\n''') == '5'\nassert solution('''5 8\n7 9 8 9\n''') == '5'\nassert solution('''4 3\n4 7 3 8 9\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4 2 1 3\"\nprint(\"ALL TEST CASES PASSED\")\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == \"4 2 1 3\"\nassert solution('3 3 3 3') == \"3 3 3 3\"\nassert solution('4 4 4 4') == \"4 4 4 4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 3 4\n\"\"\") == \"4 2 1 3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2 2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4 2 1 3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n') == '1 2 3'\nassert solution('3\\n4 5 6\\n') == '4 5 6'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2 3 4\n''') == '4 2 1 3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"3\\n1 2 3\") == \"3 2 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 1 2 3 4\"\nassert solution(\"1\\n5\\n1 2 3 4\") == \"5 1 2 3 4\"\nassert solution(\"5\\n1 2 3 4\") == \"5 1 2 3 4\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4 2 1 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4 2 1 3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 1\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 3\") == \"Yes\"\nassert solution(\"10 10 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3 5') == 'Yes', 'Sample Test Failed'\nassert solution('2 2\\n1 1') == 'No', 'Sample Test Failed'\nassert solution('5 4\\n1 1\\n1 1\\n3 1\\n5 1\\n5 1\\n3 1\\n') == 'Yes', 'Sample Test Failed'\nassert solution('10 10\\n2 2\\n1 1\\n8 3\\n8 3\\n5 1\\n4 1\\n3 1\\n') == 'Yes', 'Sample Test Failed'\nassert solution('10 10\\n3 3\\n1 1\\n4 1\\n1 1\\n8 3\\n8 3\\n5 1\\n4 1\\n3 1\\n') == 'No', 'Sample Test Failed'\n",
        "num_ids_2": 40,
        "num_ids_4": 128
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"30 3\\n2 1 2 1\") == \"No\"\nassert solution(\"20 3\\n2 1 2 1\") == \"Yes\"\n\n'''\nimport math",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('5 3\\n2 3 3 2') == 'No'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n3 5 6\n''') == 'Yes'\nassert solution('''1 1\n1 1\n''') == 'No'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n4 5 6') == 'Yes'\nassert solution('4 5 6\\n3 5 6') == 'No'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"100 10\") == \"No\"\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n4 5 6\\n\") == \"Yes\"\nassert solution(\"7 3\\n1 1 1\\n\") == \"No\"\nassert solution(\"5 3\\n2 2 2\\n\") == \"Yes\"\nassert solution(\"2 3\\n3 2 2\\n\") == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == 6\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 5\nassert solution('abaababa') == 5\nassert solution('abaabab') == 4\nassert solution('abaaba') == 3\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"1\"\nassert solution(\"abaababa\") == \"2\"\nassert solution(\"abaabab\") == \"1\"\nassert solution(\"abaaba\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == 'ababa'\nassert solution('abaabab') == 'abaab'\nassert solution('abaaba') == 'aba'\nassert solution('aba') == 'a'\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"5\"\nassert solution(\"abaabab\") == \"4\"\nassert solution(\"abaaba\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"2\"\nassert solution(\"abaabab\") == \"1\"\nassert solution(\"abaaba\") == \"2\"\nassert solution(\"aba\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"2\"\nassert solution(\"abaabab\") == \"1\"\nassert solution(\"abaaba\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abaababaab') == 6",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == 6, 'TEST ERROR'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''bac''') == 'Yes'\nassert solution('''abc''') == 'No'\nassert solution('''cba''') == 'Yes'\nassert solution('''acb''') == 'No'",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abcd') == 'Yes', solution('abcd')\nassert solution('abc') == 'No'\nassert solution('aabc') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('ac') == 'Yes'\nassert solution('ba') == 'Yes'\nassert solution('bac') == 'Yes'\nassert solution('ab') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n\nimport itertools\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bac') == 'Yes'\n\nTest cases\nS = 'bac'\nexpected = 'Yes'\nactual = solution(S)\nprint(f'Expected output: {expected}')\nprint(f'Actual output: {actual}')\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"dcc\") == \"No\"\nassert solution(\"abcc\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"acb\") == \"No\"\nassert solution(\"abc\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('acb') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bac') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('5') == 1\nassert solution('3') == 1\nassert solution('7') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n8 7 2 4\\n9 7 2 9 3') == '646'\nassert solution('3\\n1000000\\n1000000\\n') == '757402647'\nassert solution('1\\n1000000\\n1000000\\n') == '757402647'\n",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2\n4\n3\n''') == '20'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '646'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '20'\nassert solution('1000000') == '757402647'\nassert solution('1000000') == '20'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 2\n2 1''') == '2'\nassert solution('''2\n10 1\n2 1''') == '2'\nassert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n\nOutput\n646''') == '646'\nassert solution('''5\n1000000\n1000000\n\nOutput''') == '757402647'\nassert solution('''4\n1000000\n1000000\n\nOutput''') == '20'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 3\n1 2\n1 3\n''') == '2'\n\nassert solution('''\n5\n2 3\n1 2\n1 3\n4 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '646'\nassert solution('1') == '757402647'\nassert solution('2') == '20'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '646'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4 5\") == \"7\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\n''') == '17'\nprint(solution('''\n5 1 4\n2 5 7 4 6\n5 4\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2\n3\n''') == '7'\nassert solution('''\n5\n1\n4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\") == \"17\"\nassert solution(\n\"\"\"9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\"\"\") == \"17\"\nassert solution(\n\"\"\"5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 4 5\") == \"7\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 4\\n2 5 7 4 6\\n5 4') == '17'\nassert solution('7 4 8\\n6 8 5 1 8 1 1 2 1\\n5 4') == '17'\nassert solution('9 4 8\\n8 4\\n5 3') == '17'\n",
        "num_ids_2": 50,
        "num_ids_4": 70
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 4\") == \"17\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"7 1 4\") == \"17\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '0'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '1'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"1\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 7\") == \"0\"",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"1\"\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\n",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '15', 'First'\nassert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999', 'Second'\nassert solution('''\n3 7\n4 12\n2 1\n''') == '1000000001', 'Third'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n1000000001\n2 1\n''') == '1999999999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1000000001'\nassert solution('''1000000001\n2\n''') == '9999999999'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"6 2\") == \"1999999999\"\nassert solution(\"8 7\") == \"113\"\nassert solution(\"7 7\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10'\nassert solution('''1000000001\n1000000001\n1000000001\n1000000001\n1000000001\n1000000001''') == '1999999999'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n4 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1000000001'\nassert solution('''1\n3\n3\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '15'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"10\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '15'\nassert solution('2 1000000000') == '1999999999'\nassert solution('7 97') == '113'\nassert solution('1000000000 1000000000') == '1000000001'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n1 2 3 2 1 3\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 2 3 2 1 3 2''') == '2 1 2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3 1 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 2 1 3 2') == '2 1 3 2'\nassert solution('7 2') == '2 1 3 2'\nassert solution('10 4') == '3 2 1 3 2'\n",
        "num_ids_2": 33,
        "num_ids_4": 48
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 2 1 3 2\") == \"2 1 3 2 1 3 2\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"2 3 3 1 1 2 1 2 3\") == \"3 1 2 3 1 2\"",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 2\n2 3 2 1 3 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == \"2\\n2 1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '263'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"263\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '263'\nassert solution_cheat() == '263'\n\n\n\"\"\"\nfrom collections import deque\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"263\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '263'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 3\n1 4\n2\n1 10\n1 5\n3\n1 15\n2 3\n3''') == '263'\nassert solution('''3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1''') == '200'\nassert solution('''1\n2\n1 3\n1 4\n2\n1 10\n1 5\n3\n1 15\n2 3\n3\n1 10\n1''') == '100'\nassert solution('''3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1''') == '100'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2 1\n1 2\n1 3\n2 1\n2 2\n''') == '18'\nassert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\nassert solution('''\n10\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '200'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\nassert solution('''\n4\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 100\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nbacaba\n5\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n''') == '2'\nassert solution('''\ndfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"\nassert solution(\"2\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"\nassert solution(\"3\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"\n",
        "num_ids_2": 124,
        "num_ids_4": 186
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"\nassert solution(\"2\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247789563\"\nassert solution(\"3\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247789563\"\nassert solution(\"4\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247789563\"\nassert solution(\"5\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247789563\"\n",
        "num_ids_2": 124,
        "num_ids_4": 248
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n386592714\n154873296\n429968357\n863725149\n975314628\n412968357\n631457982\n998236471\n247789563\n''') == '336592714'\nassert solution('''\n863725149\n729641835\n386592714\n412968357\n975314628\n631457982\n247189563\n598236471\n899445756\n''') == '863725145'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n3 4 2\n2 4 1\n4 5 9\n9 8 6\n''') == '1 3 4 2 2 4 1 4 5 9 9 8 6'\nassert solution('''\n3\n6 2 8\n4 5 1\n7 9 3\n''') == '3 6 2 8 4 5 1 7 9 3'\nassert solution('''\n2\n1 4 5\n3 2 7\n''') == '2 1 4 5 3 2 7'\nassert solution('''\n8\n8 6 7\n4 5 9\n2 1 3\n6 3 9\n5 1 7\n9 2 4\n1 4 3\n3 9 7\n6 8 5\n''') == '8 6 7 4 5 9 2 1 3 3 9 7 6 8 5'\nassert solution('''\n3\n5 4 1\n7 2 6\n2 9 8\n''') == '3 5 4 1 7 2 6 2 9 8'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n71\n72\n73\n74\n75\n76\n77\n78\n79\n\n81\n82\n83\n84\n85\n86\n87\n88\n89\n\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"154873396\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '336592714'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '863725145'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '193725147'\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '829463514'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5') == '3 5'\nassert solution('9 6') == '-1'\nassert solution('1 1 1 3 5 3 5 7') == '6 8 9'\n\n\n'''\nfrom collections import deque\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 43
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 1 1 3 5 3 5 7\") == \"3\"\nassert solution(\"5 6\\n1 1 1 3 5 3 5 7\") == \"6\"\nassert solution(\"5 6\\n1 1 1 3 5 3 5 7\") == \"8\"\nassert solution(\"5 6\\n1 1 1 3 5 3 5 7\") == \"9\"\nassert solution(\"5 6\\n1 1 1 3 5 3 5 7\") == \"4\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 4\\n1 2 3 4 5 6') == '6'\nassert solution('2 2\\n1 3') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3 4 5 6\n1 2 3\n4 1\n6 4\n6 5\n''') == '2'\n\nassert solution('''\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '3'\n\nassert solution('''\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '9'\n\nassert solution('''\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '-1'\n\nassert solution('''\n2 2 1 3 4 3 5 5\n1 1\n1 1\n2 2\n3 2\n5 2\n5 2\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 3 5 3 5 7\") == \"6\"\nassert solution(\"1 1 1 3 5 3 5 7\") == \"8\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 3\n2 1 2 3 4 5 3 4 6\n1 1\n3 2\n3 6\n3 4\n2 4\n4 6\n5 5\n6 5\n''') == '6'\nassert solution('''\n10 3\n2 1 2 3 4 5 3 4 6\n1 1\n3 2\n3 6\n3 4\n2 4\n4 6\n5 5\n6 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '6'\nassert solution('''\n5 5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '8'\nassert solution('''\n6 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '4'\nassert solution('''\n7 7\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '9'\nassert solution('''\n9 9\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution([5, 3, 2, 8]) == \"YES\"\nassert solution([100, 101, 102, 105]) == \"YES\"\nassert solution([10, 20, 15, 14]) == \"NO\"\nassert solution([101, 101, 101, 3]) == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n\nassert solution('''\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'YES'\n\nassert solution('''\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'YES'\n\nassert solution('''\n3 3 3\n100 101 102\n103 103 104\n5 5 5\n1 1 1 1\n3 2 1 3\n1 1 1 1\n''') == 'YES'\n\nassert solution('''\n3 3 3\n1 1 1 1\n3 2 1 3\n1 1 1 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('3 2 1 100000000') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 2 8') == \"YES\"\nassert solution('100 101 102 105') == \"YES\"\nassert solution('3 2 1 100000000') == \"NO\"\nassert solution('10 20 15 14') == \"YES\"\nassert solution('101 101 101 3') == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2 2 2 4\n1 1 1 2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES', \"First\"\nassert solution('''\n10 5 5 5\n10 10 10 10\n10 20 10 20\n10 20 20 20\n10 20 10 10\n''') == 'NO', \"Second\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''\n10 3 2 9\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"100 101 101 3\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5 \n\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 ",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nprint(solution(input()))\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == \"3 4 6 5 \n\nassert solution(\"\"\"\n5 5\n2 1 5 3 5\n\"\"\") == \"9 8 12 6 8 \n\nassert solution(\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"3 3 \n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5 '\n\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 '\n\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 '",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5 \n\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \n\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5 '\n\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 '\n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 '\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == \"3 4 6 5\"\nassert solution(input_data_2) == \"9 8 12 6 8\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"3 4\"\nassert solution(\"5 5\") == \"9 8 12 6 8\"\nassert solution(\"2 10\") == \"3 3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3 ",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"NO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"NO\"\n",
        "num_ids_2": 166,
        "num_ids_4": 332
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\n\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n\nassert solution('''2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n\nassert solution('''1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\n\nassert solution('''4 5\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([10, 6], [\"1 2\", \"1 3\", \"1 4\", \"2 5\", \"2 6\", \"3 7\", \"7 8\", \"7 9\", \"9 10\", \"4 3 8 9 10\", \"3 2 4 6\", \"3 2 1 5\", \"3 4 8 2\", \"2 6 10\", \"3 5 4 7\"]) == [\"YES\", \"YES\", \"YES\", \"YES\", \"NO\", \"NO\"]\nassert solution([10, 6], [\"1 2\", \"1 3\", \"1 4\", \"2 5\", \"2 6\", \"3 7\", \"7 8\", \"7 9\", \"9 10\", \"4 3 8 9 10\", \"3 2 4 6\", \"3 2 1 5\", \"3 4 8 2\", \"2 6 10\", \"3 5 4 7\"]) == [\"YES\", \"YES\", \"YES\", \"YES\", \"NO\", \"NO\"]\nassert solution([2, 1, 5], [\"1 2\", \"1 3\", \"1 4\", \"2 5\", \"2 6\", \"3 7\", \"7 8\", \"7 9\", \"9 10\", \"4 3 8 9 10\", \"3 2 4 6\", \"3 2 1 5\", \"3 4 8 2\", \"2 6 10\", \"3 5 4 7\"]) == [\"YES\", \"YES\", \"YES\", \"YES\", \"NO\", \"NO\"]\nassert solution([4, 8, 2], [\"1 2\", \"1 3\", \"1 4\", \"2 5\", \"2 6\", \"3 7\", \"7 8\", \"7 9\", \"9 10\", \"4 3 8 9 10\", \"3 2 4 6\", \"3 2 1 5\", \"3 4 8 2\", \"2 6 10\", \"3 5 4 7\"]) == [\"YES\", \"YES\", \"YES\", \"YES\", \"NO\", \"NO\"]",
        "num_ids_2": 200,
        "num_ids_4": 404
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 6') == 'YES'\nassert solution('10 5') == 'YES'\nassert solution('10 2') == 'YES'\nassert solution('10 1') == 'YES'\nassert solution('10 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"NO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"NO\"\n",
        "num_ids_2": 165,
        "num_ids_4": 331
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'NO'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'NO'\nassert solution('''\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"NO\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 5\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"10 7\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"10 8\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"10 9\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\"\n",
        "num_ids_2": 52,
        "num_ids_4": 113
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\"\nassert solution(\"\"\"\n5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\"\nassert solution(\"\"\"\n5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\"\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('4\\n5\\n1 1000 101 1000\\n4\\n1 2 3 4') == 'YES\\n1 2\\n2 3\\n3 4\\n1 3'\nassert solution('4\\n5\\n1 2 3 4\\n4\\n1 2 3') == 'YES\\n1 2\\n2 3\\n3 4\\n1 3'",
        "num_ids_2": 88,
        "num_ids_4": 131
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution() == 'NO\\n'\nassert solution() == 'YES\\n1 2\\n2 3\\n3 4\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 58
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nprint(solution('''\n6\n10\n1 2 5 1 6 5 5 1\n3\n1 1 1\n2 3\n4 5\n6\n4\n1 1 1\n2 2\n''')) == 'YES\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 2 1 3\n3\n1 1 1''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('''4\n1 2 2 1 3\n3\n1 1 1\n4\n1 2 3''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('''5\n1 2 2 1 3\n3\n1 1 1\n4\n1 2 3\n5\n1 3''') == 'NO\\n1 2\\n2 3\\n3 4\\n4 5\\n5 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution('4') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n1 4\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n1 2 2 1 3\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\n\"\nassert solution(\"3\\n10\\n1 2 3 1 2 5 1 1 4\\n2 3 5\\n3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\n\"\nassert solution(\"4\\n500\\n1 2 2 1 3\") == \"NO\\n\"\n",
        "num_ids_2": 89,
        "num_ids_4": 111
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"01011110\"\nassert solution(input()) == \"0101111\"\nassert solution(input()) == \"0011111\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n7 11''') == '01110110'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"01011110\"\nassert solution(input()) == \"0101111\"\nassert solution(input()) == \"0011111\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 5') == '01011110'\nassert solution('7 9') == '0101111'\nassert solution('11011010') == '0111111'\n\n'''",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 5') == '01011110'\nassert solution('7 9') == '0101111'\nassert solution('1111100') == '0011111'",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"01011110\"\nassert solution(stdin='''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == \"0101111\"\nassert solution(stdin='''3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == \"0011111\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nprint('Congratulations, have a nice day!')\n\n\n------Task------\n\nPythagorean Triplets\n\n\nA Pythagorean triplet is a set of three natural numbers, a < b < c, for which, a^2 + b^2 = c^2.\nFor example, 3^2 + 4^2 = 9 + 16 = 25 = 5^2.\n\nThere exists exactly one Pythagorean triplet for which a + b + c = 1000.\nFind the product abc.\n\n''')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '01011110'\nassert solution('4') == '0111'\nassert solution('5') == '11'",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"01011110\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 5') == '01011110'\nassert solution('7 9') == '0101111'\nassert solution('1111100') == '0011111'\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n5 6\n''') == '3'\nassert solution('''6 1\n2 3\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 3 4'\nassert solution('4') == '1 3 5 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8') == '3\\n1 4 7'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\nassert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\n''') == '3'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n''') == '4'\nprint(solution(stdin))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30''') == '3'\nassert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '1 4 7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2') == '3'\nassert solution('7 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '4'\nassert solution('6 1') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 2\") == \"1 2\"\nassert solution(\"5 1\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 36
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\n''') == '4', \"First\"\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\n''') == '3', \"Second\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"19\"\nassert solution(\"10\") == \"30\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\n-3 0') == '3'\nassert solution('5 2 1\\n2 2 2 3 4') == '19'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '19'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('5') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 2') == '3'\nassert solution('5 2 1 4 3 5') == '19'\nassert solution('10 4 3 1 2') == '8'\nassert solution('10 8 3 1') == '9'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '8'\nassert solution('2') == '2'\nassert solution('2') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1\\n1\\n', solution.__doc__\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5\\n'+\n'1 2 1\\n'+\n'3 2 3\\n'+\n'2 4 1\\n'+\n'4 5 2\\n'+\n'5 7 4\\n'+\n'3 6 2\\n'+\n'5 2 3 4 1\\n') == '21 7 15 21 3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''\n5 1\n3 2 3\n2 4 1\n1 3 2\n4 5 2\n3 6 2\n5 2 3 4 1\n''') == '0 0'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    7 5\n    1 2 1\n    3 2 3\n    2 4 1\n    4 5 2\n    5 7 4\n    3 6 2\n    5 2 3 4 1\n    ''') == '21 7 15 21 3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n1 2\n''') == '0 0'\n\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(0).read()) == '21 7 15 21 3'\nprint(solution(open(0).read()))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '21 7 15 21 3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 3 3'\n\n\n\"\"\"\n\n\nimport sys\nfrom heapq import heappush, heappop, heapify\nsys.setrecursionlimit(10000)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''\n2 2\n1 2\n''') == '0 0'\nassert solution('''\n2 2\n1 2\n3 3\n2 2\n1 2\n''') == '1 3 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n\n\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"6\\n3\\n1 2 2\\n4\\n5 5 5 5\\n6\\n5 6 6 6\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"6\\n2\\n1 2 2\\n4\\n5 5 5 5\\n6\\n5 6 6 6\") == \"YES\\nYES\\nNO\\nNO\\nNO\\nYES\"\nassert solution(\"6\\n2\\n1 2 2\\n4\\n5 5 5 5\\n6\\n5 6 6 6\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"6\\n2\\n1 2 2\\n4\\n5 5 5 5\\n6\\n5 6 6 6\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 90,
        "num_ids_4": 192
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 4 2\n3\n5 5 5 5\n3\n1 2 4''') == \"NO\"\nassert solution('''2\n1 2 2\n4\n5 5 5 5\n3\n1 2 4''') == \"YES\"\nassert solution('''1\n1 2 2\n4\n5 5 5 5\n3\n1 2 4''') == \"YES\"\nassert solution('''3\n1 2 4\n3\n5 5 5 5\n3\n1 2 4''') == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 4\\n1 2 2\\n4\\n1 3 4 4\") == \"YES\"\nassert solution(\"4\\n1 5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\") == \"NO\"\nassert solution(\"1\\n5\\n1 3 4 4\") == \"YES\"\nassert solution(\"1\\n4\\n1 3 4 4\") == \"YES\"\nassert solution(\"5\\n5\\n1 3 4 4\") == \"NO\"\n",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n\n''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n\n''') == 'YES'\nassert solution('''2\n1\n10\n\n''') == 'NO'\nassert solution('''2\n1\n10\n\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n''') == 'NO'\nassert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1001\\n') == '11'\nassert solution('4 5\\n1001\\n') == '11'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == '12'\nprint(solution(open(0).read()))\n\n\"\"\"\nfrom bitarray import bitarray",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string, (solution(input_string), output_string)\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '12'\nassert solution('10 5') == '11'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1010\n1101\n\n''') == '12'\nassert solution('''4 5\n1001\n10101\n\n''') == '11'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '12'\nassert solution('4 5') == '11'\n\"\"\"\n\nn,m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '12'\nassert solution('4 5') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1010\\n1101') == '12'\nassert solution('4 5\\n1001\\n10101') == '11'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2\\n4\\n6\\n8\\n\") == \"NO\"\nassert solution(\"2\\n10\\n\") == \"YES\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2\\n4\\n6\\n8\\n\") == \"2 4 1 5\\nYES\\n2 4 6 8 1 3 5 11\\nYES\\n2 4 7 8 1 3 5 11\\nNO\"\nassert solution(\"5\\n3\\n5\\n8\\n\") == \"YES\\n2 3 1 5\\nNO\\nYES\\n2 3 5 8\\nYES\\nNO\\nYES\\n2 4 3 5\\nNO\\nYES\\n2 4 5 8\\nYES\\nNO\\nYES\\n2 5 3 8\\nNO\\nYES\\n2 5 7 8\\nYES\\nNO\\nYES\\n2 6 3 8\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n",
        "num_ids_2": 1524,
        "num_ids_4": 1524
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n4\n''') == \"NO\"\nassert solution('''\n2\n6\n''') == \"YES\"\nassert solution('''\n1\n100\n''') == \"NO\"\nassert solution('''\n1\n5\n''') == \"YES\"\nassert solution('''\n5\n10\n''') == \"NO\"\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'NO'\nassert solution('''\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'NO'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"10\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == '2 4 1 5'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == 'NO', '5-4-6-8-10'\nassert solution('''3\n2\n3\n4\n5''') == 'YES', '2,3,4,5'\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7''') == 'YES', '1,2,3,4,5,6,7'\n''') == 'NO', '1,2,3,4,5,6,7'\n''') == 'NO', '1,2,3,4,5,6,7'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2\\n4\") == \"NO\"\nassert solution(\"5\\n6\") == \"YES\"\nassert solution(\"8\\n10\") == \"YES\"\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n\n\"\"\") == \"\"\"\n0\n0\n1\n0\n0\n\n\"\"\"\nassert solution(\"\"\"\n\n\"\"\") == \"\"\"\n0\n0\n0\n0\n0\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\nassert solution('''2\n4\n2 7 8 2\n6\n2 1 4 3 5 8\n2\n6 2\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == \"5\"\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '4'\n",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6\n10\n1 2 3 4 5 6\n2\n1 1 2\n3\n1 1 1 1 1\n2\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n6\n10\n1 2 3 4 5 6\n3\n1 1 2\n4\n1 1 1 1 1\n2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n5\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n2\n5\n1 2\n2\n4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n3\n4\n5\n6\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"0\"\nassert solution() == \"4\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 1 1 1 1') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '4'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 1 1 1 1 1') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2') == '0'\n",
        "num_ids_2": 67,
        "num_ids_4": 135
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 5\n    2 4\n    2 3\n    3 4\n    5\n    1 5\n    2 3\n    2 5\n    3 4\n    2 2\n    3\n    1 3\n    2 4\n    2 3\n    7\n    \"\"\"\n) == \"4\"\nassert solution(\n    \"\"\"\n    3\n    1 5\n    2 4\n    2 3\n    3 4\n    5\n    1 5\n    2 3\n    2 5\n    3 4\n    2 2\n    3\n    1 3\n    2 4\n    2 3\n    7\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    4\n    1 5\n    2 4\n    2 3\n    3 4\n    5\n    1 5\n    2 3\n    2 5\n    3 4\n    2 2\n    3\n    1 3\n    2 4\n    2 3\n    7\n    \"\"\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3') == '4'\nassert solution('4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3') == '3'",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n\nassert solution('''\n4\n3 4\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\nassert solution('''\n2\n1 2\n2 5\n2 5\n''') == '0'\nassert solution('''\n2\n1 2\n2 5\n2 5\n''') == '0'\nassert solution('''\n2\n1 2\n2 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"3\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n10\n10\n1 1\n2 2\n2 3\n3 4\n3 5\n4 6\n4 7\n5 8\n5 9\n6 10\n6 11\n6 12\n6 13\n6 14\n7 15\n7 16\n7 17\n7 18\n8 19\n8 20\n8 21\n8 22\n9 23\n9 24\n9 25\n9 26\n10 27\n10 28\n10 29\n10 30\n11 31\n11 32\n11 33\n11 34\n11 35\n12 36\n12 37\n12 38\n12 39\n13 40\n13 41\n13 42\n13 43\n14 44\n14 45\n14 46\n15 47\n15 48\n15 49\n15 50\n16 51\n16 52\n16 53\n16 54\n17 55\n17 56\n17 57\n17 58\n18 59\n18 60\n18 61\n18 62\n19 63\n19 64\n19 65\n19 66\n20 67\n20 68\n20 69\n20 70\n21 71\n21 72\n21 73\n21 74\n22 75\n22 76\n22 77\n22 78\n23 79\n23 80\n23 81\n23 82\n24 83\n24 84\n24 85\n25 86\n25 87\n25 88\n26 89\n26 90\n26 91\n26 92\n27 93\n27 94\n27 95\n27 96\n28 97\n28 98\n28 99\n29 100\n29 101\n29 102\n29 103\n30 104\n30 105\n30 106\n30 107\n31 108\n31 109\n31 110\n31 111\n32 112\n32 113\n32 114\n32 115\n33 116\n33 117\n33 118\n34 119\n34 120\n34 121\n34 122\n35 123\n35 124\n35 125\n35 126\n36 127\n36 128\n36 129\n36 130\n37 131\n37 132\n37 133\n37 134\n38 135\n38 136\n38 137\n38 138\n39 139\n39 140\n39 141\n39 142\n40 143\n40 144\n40 145\n40 146\n41 147\n41 148\n41 149\n41 150\n42 151\n42 152\n42 153\n42 154\n43 155\n43 156\n43 157\n43 158\n44 159\n44 160\n44 161\n44 162\n45 163\n45 164\n45 165\n45 166\n46 167\n46 168\n46 169\n46 170\n47 171\n47 172\n47 173\n47 174\n48 175\n48 176\n48 177\n49 178\n49 179\n49 180\n50 181\n50 182\n50 183\n50 184\n51 185\n51 186\n51 187\n51 188\n52 189\n52 190\n52 191\n52 192\n53 193\n53 194\n53 195\n53 196\n54 197\n54 198\n54 199\n55 200\n55 201\n55 202\n55 203\n56 204\n56 205\n56 206\n57 207\n57 208\n57 209\n57 210\n58 211\n58 212\n58 213\n58 214\n59 215\n59 216\n59 217\n59 218\n60 219\n60 220\n60 221\n60 222\n61 223\n61 224\n61 225\n62 226\n62 227\n62 228\n63 229\n63 230\n63 231\n64 232\n64 233\n64 234\n65 235\n65 236\n65 237\n65 238\n66 239\n66 240\n66 241\n66 242\n67 243\n67 244\n67 245\n67 246\n68 247\n68 248\n68 249\n69 250\n69 251\n69 252\n70 253\n70 254\n70 255\n71 256\n71 257\n71 258\n72 259\n72 260\n72 261\n72 262\n73 263\n73 264\n73 265\n74 266\n74 267\n74 268\n75 269\n75 270\n75 271\n76 272\n76 273\n76 274\n77 275\n77 276\n77 277\n78 278\n78 279\n78 280\n79 281\n79 282\n79 283\n80 284\n80 285\n80 286\n81 287\n81 288\n81 289\n82 290\n82 291\n82 292\n83 293\n83 294\n83 295\n84 296\n84 297\n84 298\n85 297\n85 298\n85 299\n86 300\n86 301\n86 302\n87 303\n87 304\n87 305\n88 306\n88 307\n88 308\n89 309\n89 310\n89 311\n90 312\n90 313\n90 314\n91 315\n91 316\n91 317\n92 318\n92 319\n92 320\n93 321\n93 322\n93 323\n94 324\n94 325\n94 326\n95 327\n95 328\n95 329\n96 330\n96 331\n96 332\n97 333\n97 334\n97 335\n98 336\n98 337\n98 338\n99 339\n99 340\n99 341\n100 342\n100 343\n100 344\n101 345\n101 346\n101 347\n102 348\n102 349\n102 350\n103 351\n103 352\n103 353\n104 354\n104 355\n104 356\n105 357\n105 358\n105 359\n106 360\n106 361\n106 362\n107 363\n107 364\n107 365\n108 366\n108 367\n108 368\n109 369\n109 370\n109 371\n110 372\n110 373\n110 374\n111 375\n111 376\n111 377\n112 378\n112 379\n112 380\n113 383\n113 384\n113 385\n114 386\n114 387\n114 388\n115 389\n115 390\n115 391\n116 392\n116 393\n116 394\n117 395\n117 396\n117 397\n118 398\n118 399\n118 400\n119 401\n119 402\n119 403\n120 402",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '60'\nassert solution('5\\n55\\n55\\n55\\n55') == '1439'\nassert solution('4 20\\n4 20\\n4 20\\n4 20') == '1180'\nassert solution('23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n') == '60'\n\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 86
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n3 3\n''') == '1'\nassert solution('''\n2\n3 3\n''') == '1'\nassert solution('''\n3\n23 59\n''') == '1439'\nassert solution('''\n4\n4 20\n''') == '1180'\nassert solution('''\n5\n23 55\n''') == '60'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 2\n''') == '4'\nassert solution('''\n1\n2 3\n''') == '0'\nassert solution('''\n5\n3 3\n''') == '1439'\nassert solution('''\n10\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23 59\n23",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1\n5\n11 10\n15 20\n13 15\n10 20\n14 20\n10\n\"\"\"\n) == \"1439\"\n\nassert solution(\n\"\"\"\n1\n5\n0 10\n0 20\n0\n10\n10\n\"\"\"\n) == \"111111\"\n\nassert solution(\n\"\"\"\n2\n1\n0 0\n1\n1\n\"\"\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n3 5\n''') == '2'\nassert solution('''\n2\n4 5\n''') == '3'\nassert solution('''\n3\n4 5\n''') == '4'\nassert solution('''\n4\n4 5\n''') == '3'\nassert solution('''\n5\n4 5\n''') == '2'\n\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n23 55\n23 0\n0 1\n''') == '60'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n23 55\n23 0\n0 1\n4 20\n23 59\n\n6\n0 0\n0 1\n4 20\n23 59\n''') == '1439'\nassert solution('''\n3\n2 4\n2 0\n1 1\n2 20\n\n3\n1 3\n0 3\n0 2\n1 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1439\"\nassert solution(input) == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\n17 32\n4 1\n2 1\n2 1\n4 1\n4 1\n\n\"\"\") == \"1439\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == \"60\"\nassert solution('''\n3\n12 14\n12 0\n12\n''') == \"12\"\nassert solution('''\n3\n13 23\n13 0\n13\n''') == \"13\"\nassert solution('''\n1\n24 5\n24 0\n24\n''') == \"24\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\"\"\") == \"1 4\"\nassert solution(\n\"\"\"\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\"\"\") == \"1 4\"\nassert solution(\n\"\"\"\n3\nLRU\n3\nRDD\n\"\"\") == \"1 3\"\nassert solution(\n\"\"\"\n3\nLRU\n3\nRDD\n\"\"\") == \"1 3\"\nassert solution(\n\"\"\"\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\"\"\") == \"1 4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nLRUD\\n4\\nLURD\\n') == '1 2'\nassert solution('5\\nRRUDU\\n5\\nLLDDR\\n') == '3 4'\nassert solution('6\\nLURDD\\n6\\nLRUDD\\n') == '1 4'\nassert solution('6\\nLRUDD\\n6\\nLURDD\\n') == '-1'\nassert solution('7\\nLLDDU\\n7\\nLLDDR\\n') == '4 4'\n",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 2'\nassert solution() == '1 4'\nassert solution() == '3 4'\nassert solution() == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR') == '1 2'\nassert solution('4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR') == '3 4'\nassert solution('4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR') == '-1'\nassert solution('4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR') == '2 4'\n",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n\") == \"1 2\"\nassert solution(\"5\\n5\\nLLDDR\\n\") == \"3 4\"\nassert solution(\"5\\n5\\nRRUDU\\n\") == \"1 4\"\n\nstdin = \"\"\"\n1\n3\nRRUD\n\"\"\"\n\nstdin = \"\"\"\n3\n6\nUUUUUUUUUU\n\"\"\"",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nUDD') == '1 2'\nassert solution('3\\nDDD') == '1 2'\nassert solution('1\\nR') == '0'\nassert solution('3\\nLURD') == '1 4'\nassert solution('3\\nLRUD') == '1 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\nLURD\\n4\\nLURD\") == \"1 2\"\nassert solution(\"5\\n4\\nRRUDU\\n4\\nLLDDR\") == \"3 4\"\nassert solution(\"8\\n1\\nLURD\\n4\\nLLDDR\") == \"-1\"",
        "num_ids_2": 54,
        "num_ids_4": 80
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2'\nassert solution('''\n10\nLRURDDDDURDDDDDRDDUUDUUDUDDDUUDUUDDDDUUDUUUDDDDDRDDUUDUUUUDDUUUUDUUDDDRUUDDUUDUUUDDDDDUUUUDUDUUDUUUDUUDUUDDDUUDUUUDUUUUDUUUUDUUDUUUUDDDDUUUUDUUUUDUUDUUUDUUDUUDDUUUUUDUUUUDUUDUUUUDUUDDUUUUDUUUUDDUUUUDUUDDDRDUUUUUDUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDUUDDUUUUDDDRDUUUUUDUUDUUDUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUDUUDDUUUUDDUUUUDDDRDUUUUUD",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 2'\nassert solution('4') == '1 4'\nassert solution('5') == '2 3'\nassert solution('6') == '1 4'\nassert solution('7') == '3 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"LURD\") == \"LRUD\"\nassert solution(\"LRDU\") == \"LRUD\"\nassert solution(\"RRDUD\") == \"RRUDU\"\nassert solution(\"RURUD\") == \"RURUD\"\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5\\n2 2 2 2 1\\n1\") == \"3\"\nassert solution(\"2\\n5\\n2 2 2 2 1\\n1\") == \"2\"\nassert solution(\"1\\n10\\n2 3 4 5 1\\n2 3 2 2 4\\n2 3 3 1 2\") == \"5\"",
        "num_ids_2": 46,
        "num_ids_4": 80
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"3\"\nassert solution('''10\n9\n2 5 5 5 1 2 3 2 2 1 1 1 1\n''') == \"4\"\nassert solution('''6\n1\n1 2\n1 3\n2 3\n2 4\n3 4\n''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution() == '0'\nassert solution() == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3') == '3'\nassert solution('3\\n2 1 5 4 3\\n1') == '0'\nassert solution('4\\n6\\n1 1 1 3\\n1\\n1\\n') == '2'\n",
        "num_ids_2": 52,
        "num_ids_4": 79
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n5\\n2 4 4 1 4 3 4\\n1\\n2\\n3') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n7 2 3 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''\n4\n7 3 2 3 1 5 1 1\n3\n1\n1\n''') == '1'\nassert solution('''\n3\n7 2 3 1 5 1 1\n3\n1\n1\n''') == '0'\nassert solution('''\n2\n7 3 2 3 1 5 1 1\n3\n1\n1\n''') == '0'\nassert solution('''\n4\n7 3 2 3 1 5 1 1\n3\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''\n3\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '0'\nassert solution('''\n2\n1\n3\n5\n''') == '0'\nassert solution('''\n5\n1\n2\n3\n4\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '21'\nassert solution('4') == '121'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == \"121\"\n\nassert solution('''\n1\n1337\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''1\n1337\n''') == '0'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1337') == '0'\nassert solution('1\\n10') == '0'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''1\n1337\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == \"121\"\nassert solution('''\n1\n1337\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('8') == '121'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '18'\nassert solution(input()) == '0'\nassert solution(input()) == '227'\nassert solution(input()) == '8'\n\n\n\n\n'''\n\nfrom math import floor",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 3\n5 6\n3\n1 2 3 4 5 6 7 8 9\n''') == '16'\nassert solution('''3\n1 3\n2 5\n3\n1 2 3 4 5 6 7 8 9\n''') == '22'\nassert solution('''5\n10 11 12\n''') == '100'\nassert solution('''5\n10 20 20 10 20 20 20 20 20 20\n''') == '201'\nassert solution('''6\n1 2 3 4 5 6\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 3') == '6'\nassert solution('10 6') == '0'\nassert solution('8 7 1 8 3 7 5 10 8 9') == '227'\nassert solution('5 10') == '0'\nassert solution('20 100 50 20 100500') == '8'\n",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '18'\nassert solution('''5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''4 5\n1 2\n2 1\n2 2\n1 2\n2 1''') == '0'\nassert solution('''5 10\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n''') == '0'\nassert solution('''4 5\n1 2\n2 1\n1 2\n1 2\n2 1''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\") == \"6\"\nassert solution(\"5\\n10 6\\n8 7 1 8 3 7 5 10 8 9\") == \"227\"\nassert solution(\"5\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\") == \"8\"\nassert solution(\"5\\n1 2 3 4 5 6 7 8\\n10 25\\n24 24 24 24 24 24 24 24 24\") == \"0\"",
        "num_ids_2": 46,
        "num_ids_4": 115
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''2 2\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '0'\nassert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\n\nassert solution('''\n5 4\n3 4\n2 4 1 2\n3 4 2 5\n1 3 5\n2 4 4\n4 3\n4 3\n5 4\n4 3\n3 4\n4 3\n3 2\n''') == '18'\n\nassert solution('''\n5 4\n3 4\n2 4 1 2\n3 4 2 5\n1 3 5\n2 4 4\n4 3\n4 3\n5 4\n4 3\n3 4\n4 3\n3 2\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"18\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"227\"\nassert solution(input()) == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\n\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\n\nassert solution('''\n5 10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\n\nassert solution('''\n2 5\n1 2\n2 2\n''') == '1'\n\nassert solution('''\n1\n10\n10\n''') == '0'\n\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '18'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '0'\nassert solution('''\n5\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '227'\nassert solution('''\n4\n3 1 1 2\n2 3 2 4\n2 1 1 2\n2 2 3 1\n4 4\n1 1 1 1\n2 2 2 1\n1 3 2 2\n1 1 1 1\n\n''') == '6'\nassert solution('''\n2\n3 5\n0 3 4 5 0 2 0 3 1 0 2 5\n6 6\n0 0 0 0 0 0 0 0 1 1\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1,2,3\") == \"1\"\nassert solution(\"1,1\") == \"1\"\nassert solution(\"1,2,3,4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"2\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3\n1 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4\n2 3 1 4\n2 1 2 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\n1 2 1\n1 2\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\n1 2 1\n1 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n3\n1 1\n1 1\n\"\"\") == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1,2,3]) == \"1\"\nassert solution([1,2]) == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n2\n''') == '1'\nassert solution('''\n1\n2\n2\n3\n3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1,2,3], [1,1]) == \"1\"\nassert solution([1,2], [1,2,3]) == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1,2,3], [1,1]) == '1'\nassert solution([1,2], [1,2,3]) == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n3\\n1\") == \"1\"\nassert solution(\"2\\n1\\n3\\n1\\n2\\n3\\n3\\n1\") == \"2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n''') == '1', 'First'\n\nassert solution('''\n1\n3\n3\n1\n''') == '3', 'Second'\n\nassert solution('''\n0\n''') == '1', 'Third'\n\nassert solution('''\n3\n''') == '3', 'Fourth'\n\nassert solution('''\n5\n''') == '5', 'Fifth'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5 1 3 1 1\"\nassert solution(\"4\") == \"1 2 6 4 1\"\nassert solution(\"3\") == \"1 1 3 1\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == \"1 1\"\nassert solution('5') == \"1 1 1 1 1\"\nassert solution('3') == \"1 1 1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0\n1\n1''') == ['1', '1', '1']\nassert solution('''10\n100\n200\n300\n500''') == ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1']\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n1\n3''') == '1 3 6'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == [1,3,3,1]\n\n\n>>> print(solution('3'))\n[1,3,3,1]\n\n>>> print(solution('4'))\n[1,4,6,4,1]\n\n>>> print(solution('5'))\n[1,5,10,10,5,1]\n\n>>> print(solution('6'))\n[1,6,15,20,15,6,1]\n\n\n[finish: 18:37] - ETA: 0:00:00\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '\\n'.join([str(x) for x in range(1,1+10)])\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0\") == [\"1\"]\nassert solution(\"1\") == [\"1\", \"1\"]\nassert solution(\"2\") == [\"1\", \"1\", \"1\"]\nassert solution(\"3\") == [\"1\", \"1\", \"1\", \"1\"]\nassert solution(\"4\") == [\"1\", \"2\", \"3\", \"3\", \"1\"]\n",
        "num_ids_2": 23,
        "num_ids_4": 58
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == [\"1\"], \"Should be ['1']\"\nassert solution(\"2\") == [\"1\",\"1\"], \"Should be ['1','1']\"\nassert solution(\"3\") == [\"1\",\"3\",\"3\",\"1\"], \"Should be ['1','3','3','1']\"\nassert solution(\"4\") == [\"1\",\"4\",\"6\",\"4\",\"1\"], \"Should be ['1','4','6','4','1']\"\n\n\n\n'''",
        "num_ids_2": 38,
        "num_ids_4": 100
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('1,2') == '0,1,2,1'\nassert solution('0,1,2,3') == '1,0,2,4,3,2,1'\nassert solution('1,3,3,1') == '1,3,3,1'\n",
        "num_ids_2": 20,
        "num_ids_4": 66
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '31'\n\"\"\"\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        count = 0\n        while n!= 0:\n            count += n & 1\n            n = n >> 1\n        return count",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0000000000001011\") == \"3\"\nassert solution(\"0000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\"\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\nassert solution
        "num_ids_2": 27,
        "num_ids_4": 1715
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\"\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1\\n2\\n4'\nassert solution('4\\n3\\n2\\n1') == '4\\n3\\n2\\n2'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n') == '5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5",
        "num_ids_2": 50,
        "num_ids_4": 1864
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"13\"\nassert solution(\"123\") == \"124\"\nassert solution(\"1234\") == \"1235\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1\n2\n3\n4\n''') == '5\\n1\\n2\\n3\\n4\\n', \"Wrong Answer\"\n\nassert solution('''\n1\n1\n1\n''') == '2\\n2\\n2\\n', \"Wrong Answer\"\n\nassert solution('''\n2\n3\n1\n''') == '3\\n2\\n3\\n', \"Wrong Answer\"\n\nassert solution('''\n1\n1\n1\n1\n''') == '2\\n2\\n2\\n2\\n', \"Wrong Answer\"\n\nassert solution('''\n5\n1\n1\n2\n3\n''') == '6\\n5\\n6\\n5\\n6\\n', \"Wrong Answer\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(['1', '2', '3']) == ['1', '2', '4']\nassert solution(['4', '3', '2', '1']) == ['4', '3', '2', '2']\nassert solution(['3', '2', '1']) == ['3', '2', '2']\nassert solution(['0']) == ['1']\nassert solution(['0']) == ['1']\n",
        "num_ids_2": 54,
        "num_ids_4": 90
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\nassert solution('[3]') == '[4]'\nassert solution('[1,2,3,4,5]') == '[1,2,4,6,8]'\n",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1,2,3') == '1,2,4'\nassert solution('4,3,2,1') == '4,3,2,2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\nassert solution('[1,2,3,0]') == '[1,2,4,0]'\n\nIf the number is invalid (i.e. leading digits), return an empty array.\n\nExample 1:\n\nInput: [1,2,3,4]\nOutput: []\n\nExample 2:\n\nInput: [4,3,2,1]\nOutput: []\n\nExample 3:\n\nInput: [0]\nOutput: []\n'''\n",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"4 5\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'\nassert solution('1 4') == '5'\nassert solution('2 1') == '3'\nassert solution('6 5') == '4'\nassert solution('9 9') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"4\"\nprint(solution(input))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 1') == '4'\nassert solution(\n    '0 0') == '0'\nassert solution(\n    '2 1') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"-10 -10\") == \"0\"\nassert solution(\"-10 0\") == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '4'\nassert solution('7 7') == '14'\nassert solution('5 -2') == '2'\nassert solution('-7 -9') == '-14'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '4'\nassert solution('2 4') == '6'\nassert solution('9 9') == '18'\nassert solution('5 5') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '4', 'TEST CASE ERROR'\nassert solution('1 1') == '1', 'TEST CASE ERROR'\nassert solution('-1000 -1000') == '1000', 'TEST CASE ERROR'\nassert solution('-1 -1') == '0', 'TEST CASE ERROR'\nassert solution('-1000 1000') == '2000', 'TEST CASE ERROR'\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\", \"Wrong answer\"\nassert solution(\"5 2\") == \"5\", \"Wrong answer\"\nassert solution(\"2 5\") == \"7\", \"Wrong answer\"\nassert solution(\"4 7\") == \"12\", \"Wrong answer\"\nassert solution(\"3 1\") == \"4\", \"Wrong answer\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 5\") == \"9\"\nassert solution(\"5 5\") == \"15\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '2'\nassert solution('3 5') == '3'\nassert solution('4 5') == '3'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '3'\nassert solution('1 5') == '2'\nassert solution('4 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"1 2\") == \"2\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"3\", \"Wrong answer\"\nassert solution(\"10 10\") == \"10\", \"Wrong answer\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"10 5\") == \"9\"\n\"\"\"\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('4 4') == '3'\nassert solution('5 5') == '3'\nassert solution('1000000 10000') == '35897'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"10 20\") == \"8\"\nassert solution(\"10000 100000\") == \"10\"\nassert solution(\"7 7 7\") == \"7\"\nassert solution(\"0 0\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"5 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '3'\nassert solution('4 5') == '3'\nassert solution('6 6') == '2'\nassert solution('2 4') == '0'\nassert solution('4 3') == '1'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n\n-------------------------------\n\nGiven an integer X, find the sum of the digits in its binary representation (Binary representation of an integer X is a binary representation of X in the form of a string such as 00000101 for 6, which is the binary representation of 18).\n\n-----Constraints-----\n - 1?X?10^8\n - X is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nX\n\n-----Output-----\nPrint the sum of the digits in the binary representation of X.\n\n-----Sample Input-----\n6\n\n-----Sample Output-----\n3\n\n-------------------------------\n\nGiven an integer X, find the sum of the digits in its decimal representation (Decimal representation of an integer X is the representation of X in the form of a string such as 01010101 for 6, which is the decimal representation of 18).\n\n-----Constraints-----\n - 1?X?10^8\n - X is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nX\n\n-----Output-----\nPrint the sum of the digits in the decimal representation of X.\n\n-----Sample Input-----\n8\n\n-----Sample Output-----\n8\n\n-------------------------------\n\nGiven an integer N, find whether it is a palindrome or not.\n\n-----Constraints-----\n - 1?N?10^9\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint Yes if N is palindrome; print No otherwise.\n\n-----Sample Input-----\n3\n\n-----Sample Output-----\nYes\n\n-------------------------------\n\nGiven a positive integer N, find if it is a perfect number or not.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint Yes if N is a perfect number; print No otherwise.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\nYes\n\n-------------------------------\n\nGiven an integer X, find the maximum integer N such that N <= X, and N has the binary representation of the decimal representation of X.\n\n-----Constraints-----\n - 1?X?10^8\n - X is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nX\n\n-----Output-----\nPrint the maximum integer N such that N <= X, and N has the binary representation of the decimal representation of X.\n\n-----Sample Input-----\n4\n\n-----Sample Output-----\n4\n\n-------------------------------\n\nGiven an integer N, find if it is a prime or not.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint Yes if N is a prime; print No otherwise.\n\n-----Sample Input-----\n6\n\n-----Sample Output-----\nNo\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n10\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n20\n\n-----Sample Output-----\nThe sum of the first 20 prime numbers is:\n142913828922\n\n-------------------------------\n\nGiven an integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\nThe sum of the first 5 prime numbers is:\n11\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n100\n\n-----Sample Output-----\nThe sum of the first 100 prime numbers is:\n11270201\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\nThe sum of the first 5 prime numbers is:\n11\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n100\n\n-----Sample Output-----\nThe sum of the first 100 prime numbers is:\n11270201\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\nThe sum of the first 5 prime numbers is:\n11\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n100\n\n-----Sample Output-----\nThe sum of the first 100 prime numbers is:\n11270201\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\nThe sum of the first 5 prime numbers is:\n11\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.\n\n-----Sample Input-----\n100\n\n-----Sample Output-----\nThe sum of the first 100 prime numbers is:\n11270201\n\n-------------------------------\n\nGiven a positive integer N, find the sum of the first N prime numbers.\n\n-----Constraints-----\n - 1?N?10^8\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the sum of the first N prime numbers.",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('123456') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'No'\nassert solution('12') == 'Yes'\nassert solution('123') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('98765') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"25\") == \"Yes\"\nassert solution(\"36\") == \"No\"\nassert solution(\"127\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n''') == 'No'\nassert solution('''\n13\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == 'Yes'\nassert solution('11') == 'No'\nassert solution('9') == 'No'\nassert solution('1') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('13') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == \"Yes\"\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 -1\\n\") == \"12\\n8\\n10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '12\\n8\\n10\\n'\nassert solution('5') == '10\\n9\\n6\\n7\\n8\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == '12'\nassert solution(\"3\") == '8'\nassert solution(\"4\") == '10'\nassert solution(\"5\") == '9'\nassert solution(\"6\") == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 5 -1\n''') == '12\\n8\\n10'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '12'\nassert solution('3 1 2') == '9'\nassert solution('1') == '5'\n\nimport os\nimport sys\n\nPYTHON_FILE_NAME = __file__.split('/')[-1]\nTEST_DIRECTORY = \"tests/\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '12\\n8\\n10'\nassert solution('4') == '10\\n9\\n9'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n5 -1') == '12\\n8\\n10'\nprint(solution('3\\n5 -1'))\nprint(solution('4\\n1 -1'))\nprint(solution('5\\n1 -1'))\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 5 -1''') == '12'\nassert solution('''4\n1 1 -1''') == '11'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 5, -1]) == \"12\"\nassert solution([5, 3, 2]) == \"8\"\nassert solution([2, 5, -1]) == \"10\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"vowel\"\nassert solution(input()) == \"consonant\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'vowel'\nassert solution(input()) == 'consonant'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\nBBBWW\n\"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\nBBW\n\"\"\") == \"0\"\n\nassert solution(\n    \"\"\"\nWWWW\n\"\"\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBBWW') == '1'\nassert solution('BBBWW') == '1'\nassert solution('BBBWW') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution
        "num_ids_2": 1586,
        "num_ids_4": 1586
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BWWBWBW') == '2'\nassert solution('WWWWW') == '1'\nassert solution('WWWWBBB') == '2'\nassert solution('WWWWBBBWWWW') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BBBWW') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('WWWBB') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BBBWW') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBBBWW\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BWWWW\") == \"1\"\nassert solution(\"BWWWWB\") == \"1\"\nassert solution(\"BBWWWW\") == \"1\"\nassert solution(\"BBWWWWW\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 21') == 'No'\nassert solution('3 21') == 'Yes'\nassert solution('4 21') == 'No'\nassert solution('5 21') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 21') == \"Yes\"\n\n'''\n\na, b = map(int, stdin.split())\nimport math\n\nprint(math.sqrt(a * b))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n\"\"\"\n\na, b = (int(x) for x in stdin.split())\nc = (int(x) for x in str(a*b))\nsq = int(sum(c))\n\nprint(\"Yes\" if sq == int(sq**0.5)**2 else \"No\")\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 21') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 3') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 21') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 2\\n') == '4'\nassert solution('6\\n1 1 1 1 1 1\\n') == '6'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n3 1 4 1 5 9 2\n''') == '4'\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '6'\nassert solution('''\n10\n4 1 5 1 2 3 8 2 4\n''') == '4'\nassert solution('''\n3\n7 3 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1\") == \"4\"\nassert solution(\"0\") == \"4\"\nassert solution(\"1 2\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 4 1 5 9 2') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"7 2 3 1 4 5 9 2\") == \"4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '5'\nassert solution('6') == '4'\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '8'\nassert solution('5') == '12'\nassert solution('10') == '37'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '4'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n4\n''') == '5'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '5'\n\"\"\"\n\nimport os\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"3 2 6\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 4 2') == 'NO'\nassert solution('2 4 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 1 2\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('4 2 5') == 'NO'\nassert solution('2 2 3') == 'NO'\nassert solution('1 3 5') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES', solution('2 4 6')\nassert solution('3 5 2') == 'NO', solution('3 5 2')\nassert solution('4 4 5') == 'YES', solution('4 4 5')\nassert solution('5 7 6') == 'YES', solution('5 7 6')\nassert solution('6 1 2') == 'NO', solution('6 1 2')\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"10 5 20\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('2 4 6') == 'NO'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 5 3\") == \"NO\"\nassert solution(\"-1 -1 -1\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 1 1') == 'NO'\nassert solution('1 1 2') == 'NO'\nassert solution('4 5 6') == 'NO'\nassert solution('4 5 4') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"12\") == \"No\"\nassert solution(\"76\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20') == 'Yes'\nassert solution('32') == 'No'\nassert solution('29') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\">9\") == \"Yes\"\nassert solution(\"8\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('9') == 'Yes'\nassert solution('912') == 'No'\nassert solution('9128') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('29') == 'Yes'\nassert solution('29') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == 'No'\nassert solution('25') == 'Yes'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'No'\nassert solution('21') == 'Yes'\nassert solution('22') == 'No'\nassert solution('10') == 'Yes'\nassert solution('1') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15') == 'No'\nassert solution('28') == 'No'\nassert solution('48') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"6 3 5\") == \"2\"\nassert solution(\"12 5 10\") == \"5\"\nassert solution(\"12 5 0\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 1\") == \"1\"\nassert solution(\"5 3 4\") == \"3\"\nassert solution(\"5 3 0\") == \"2\"\nassert solution(\"5 3 1\") == \"1\"\nassert solution(\"5 3 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 3') == \"1\"\nassert solution('5 5 4') == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 3') == \"1\"\nassert solution('7 2 4') == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '2'\nassert solution('1 2 3 4 5 6 7') == '1'\nassert solution('5 4 2 3 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5 3 3\\n'\n    '1 2 4'\n) == '1'\n\"\"\"\n\nfrom collections import deque\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_from_stream_or_file()) == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 3') == '1'\nassert solution('5 3 3') == '1'\nassert solution('5 5 5') == '1'\nassert solution('10 2 4') == '2'\nassert solution('10 2 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('15 5 5') == '4'\nassert solution('100 100 5') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"10 3\") == \"No\"\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3\n###\n##.\n..#\n\n\"\"\") == \"Yes\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n.#.\n###\n.#.\n\n''') == 'Yes', 'Check the sample'\nassert solution('''\n3 3\n.#.\n###\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('2 3') == 'No'\nassert solution('4 4') == 'Yes'\nassert solution('3 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\", \"Your solution didn't work!\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('10 3') == 'No'\nassert solution('9 1') == 'Yes'\nassert solution('6 6') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\n'''\n\n\nclass Solution:\n    def canMakeSquare(self, h: int, w: int) -> str:\n        if h < 2 or w < 2:\n            return \"No\"\n        if h == w:\n            return \"Yes\"\n        white = set()\n        count = 0\n        for i in range(h):\n            for j in range(w):\n                if (i, j) not in white:\n                    white.add((i, j))\n                    count += 1\n        for i in range(h):\n            for j in range(w):\n                if (i, j) not in white:\n                    white.add((i, j))\n                    count += 1\n                if h - i <= count and w - j <= count:\n                    return \"Yes\"\n        return \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"20 30 10\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 30 20') == 'No'\nassert solution('10 10 10') == 'Yes'\nassert solution('10 10 20') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 2 3') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"5 5 5\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 10 10\") == \"No\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 20 30') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 20 30') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('3 3 3') == 'Yes'\nassert solution('1 5 5') == 'No'\n\n\"\"\"\n\na, b, c = stdin.split(' ')\n\na, b, c = int(a), int(b), int(c)",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nprint(solution(\"3 5 10\"))\nprint(solution(\"3 10 2\"))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 30 20') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 1 1 2\") == \"Right\"\nassert solution(\"6 6 6 6\") == \"Left\"\nassert solution(\"12 12 12\") == \"Right\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"5 5 5 5\") == \"Left\"\nassert solution(\"7 3 3 3\") == \"Right\"\nassert solution(\"6 3 3 3\") == \"Right\"\nassert solution(\"8 3 3 3\") == \"Balanced\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 1 1') == 'Left'\nassert solution('3 8 7 1') == 'Right'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('4 3 6 1') == 'Left'\nassert solution('2 5 3 2') == 'Right'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('0 0 0 0') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 5 1') == 'Right'\nassert solution('3 8 7 1') == 'Left'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 2 1') == 'Left'\nassert solution('9 8 7 1') == 'Right'\nassert solution('4 8 7 1') == 'Left'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4 5') == 'Left'\nassert solution('4 8 6 5 2') == 'Left'\nassert solution('1 5 2 3 4') == 'Right'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 5 7') == 'Left'\nassert solution('1 3 5 6') == 'Right'\nassert solution('4 1 5 6') == 'Left'\nassert solution('4 2 6 7') == 'Right'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 0 1 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '8'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5 6 7 8 9\") == \"8\"\nassert solution(\"-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\") == \"0\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"10\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"10\"",
        "num_ids_2": 49,
        "num_ids_4": 91
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '0'\nassert solution('3\\n4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n1 0 0 1 1 1 0 0 0 0\n2 4 6 4 6 8 4 4 6 8\n-2 -3 2 -3 4 -1 2 -1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5\n1 1 0 1 1 0 0 0 0\n2 4 5 6 7 8 9 -2 -3 4 -2\n0 1 1 1 1 1 1 1 1 1\n-1 -1 -1 -1 1 1 1 1 1\n-1 -1 -1 -1 -1 -1 -1 -1\n\"\"\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"2\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"14\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '8'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == \"Yes\"\nassert solution('6') == \"No\"\nassert solution('7') == \"Yes\"\nassert solution('8') == \"No\"\nassert solution('9') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 4\n\"\"\") == \"Yes\"\nassert solution(\"\"\"3 5\n\"\"\") == \"No\"\nassert solution(\"\"\"2 5\n\"\"\") == \"No\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3 4\n    269-6650\n    ''') == 'Yes'\nassert solution('''\n    3 4\n    267-6650\n    ''') == 'No'\nassert solution('''\n    3 4\n    267-6649\n    ''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('7 5') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1 2') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n') == 'Yes'\nassert solution('1\\n') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5\\n29-56') == 'Yes'\nassert solution('4 5\\n71-23') == 'No'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1234') == 'Yes'\nassert solution('11234567') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n\") == \"Yes\"\nassert solution(\"2 2\\n\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2 6\n''') == '1'\nassert solution('''3 2 2\n''') == '0'\nassert solution('''5 2 3\n''') == '2'\nassert solution('''2 2 3\n''') == '1'\nassert solution('''9 10 10\n''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 6') == '1'\nassert solution('3 2 6') == '1'\nassert solution('2 5 4') == '3'\nassert solution('3 5 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"4 2 7\") == \"3\"\nassert solution(\"4 5 3\") == \"1\"\nassert solution(\"5 3 5\") == \"1\"\nassert solution(\"10 5 10\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 2 6\"\"\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 6') == '1'\nassert solution('2 3 4') == '3'\nassert solution('5 5 5') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\\n\") == \"1\"\nassert solution(\"5 3 7\\n\") == \"3\"\nassert solution(\"7 4 3\\n\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 1 6') == '2'\nassert solution('5 10 5') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 6') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8 2') == '3 4 7 8'\nassert solution('1 1') == '1 1'\nassert solution('1 1') == '1 1'",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3 8 2'\n    ) == '3,4,7,8'\n\n\"\"\"\n\n\nfrom heapq import heapify, heappop, heappush\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('4 4 4') == '4'\nassert solution('4 4 6') == '4'\nassert solution('4 6 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1\\n2\\n3\\n\"\nassert solution(\"1 2 3 4\") == \"1\\n2\\n3\\n4\\n\"\nassert solution(\"1 2 3 4 5\") == \"1\\n2\\n3\\n4\\n5\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 72
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('6 8 2') == '6'\nassert solution('5 8 3') == '5'\nassert solution('5 8 4') == '8'\nassert solution('6 8 1') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7') == '1 2 3 4 5 6 7'\nassert solution('1 2 3 4 5 6 7') == '1 2 3 4 5 6 7'\nassert solution('1 2 3 4 5 6 7') == '1 2 3 4 5 6 7'",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('4 9 2') == '4'\nassert solution('5 9 2') == '5'\nassert solution('10 9 2') == '9'\nassert solution('100 9 2') == '99'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 8 2''') == \"7 8\"\nassert solution('''10 10 10''') == \"1 2\"\nassert solution('''10 10 10''') == \"1 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('5 10 2') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('10 2 5 4') == '5 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder') == 'ATC'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ABC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC', \"WA\"\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == 'ABC'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AtCoder s Contest') == 'ABC', \"Wrong Answer\"\nassert solution('AtCoder Beginner Contest') == 'ABC', \"Wrong Answer\"\nassert solution('AtCoder Beginner Contest') == 'ABC', \"Wrong Answer\"\nassert solution('AtCoder Beginner Contest') == 'ABC', \"Wrong Answer\"\nassert solution('AtCoder Beginner Contest') == 'ABC', \"Wrong Answer\"\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AtCoder s Contest') == 'AxC', 'Wrong'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AtCoder s Contest') == 'ABC'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nprint(solution(\"AtCoder Beginner Contest\"))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nprint(solution(\"AtCoder Beginner Contest\"))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('100 3 100') == 'NO'\n\nSample Tests\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"2 5 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2\") == \"YES\"\nassert solution(\"2 1 1\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 4''') == 'YES'\nassert solution('''5 4 10''') == 'NO'\nassert solution('''5 10 3''') == 'NO'\nassert solution('''100 5 100''') == 'NO'\nassert solution('''100 50 100''') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5 4''') == 'YES'\nassert solution('''1 5 1''') == 'NO'\nassert solution('''1 2 3''') == 'YES'\nassert solution('''2 2 3''') == 'NO'\nassert solution('''4 1 2''') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 1 0\"\n) == \"YES\"\nassert solution(\n    \"3 5 4\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4') == 'YES'\nassert solution('4 5 1') == 'NO'\nassert solution('1 5 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"3 5 3\") == \"NO\"\nassert solution(\"10 10 3\") == \"YES\"\nassert solution(\"10 10 3\") == \"NO\"\nassert solution(\"3 5\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100 17') == '83'\nprint(solution(input()))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 3\") == \"3\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 5') == '5'\nassert solution('1 0') == '0'\nassert solution('1 4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100 17') == '83'\nassert solution('1000 1') == '999'\nassert solution('10 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"30 23\") == \"33\"\nassert solution(\"10 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"83\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(X, t) == \"83\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n\") == \"3\"\nassert solution(\"1 100\\n\") == \"103\"\nassert solution(\"2 7\\n\") == \"13\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1000000000000000000'\nassert solution('100000000') == '-1'\nassert solution('10000000000000000') == '-1'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1\\n100\") == \"1\"\nassert solution(\"2\\n1\\n1000\") == \"1\"\nassert solution(\"2\\n1\\n10000\") == \"1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1000000000000\n5000000000000\n6000000000000\n7000000000000\n\n''') == '1000000000000000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n12345678901234567890') == '12345678901234567890'\nassert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('3\\n1000000000 1000000000') == '12345678901234567890'\n",
        "num_ids_2": 48,
        "num_ids_4": 73
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('2\\n1000000000000 1000000000') == '-1'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000000000 1000000000\") == \"1000000000000\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == '1000000000000000000'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == \"1000000000000000000\"\nassert solution('2\\n1000000000 1000000000') == \"1000000000000000000\"\nassert solution('3\\n5') == -1\nassert solution('4\\n8') == -1\n",
        "num_ids_2": 34,
        "num_ids_4": 58
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == '1000000000000000000'\nassert solution(\"5\") == '1000000000000000000'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2018') == 'Yes', 'Should return Yes.'\nassert solution('2018') == 'No', 'Should return No.'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2000') == 'No'\nassert solution('5000') == 'Yes'\nassert solution('10000') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2018\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"18\") == \"Yes\"\nassert solution(\"5\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == 'No'\nassert solution('1') == 'Yes'\nassert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('218') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('20\\n2') == 'No'\nassert solution('5\\n5') == 'Yes'\n'''",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2018\") == \"Yes\"\nassert solution(\"2019\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('218') == 'Yes'\nassert solution('1304') == 'Yes'\nassert solution('0') == 'No'\nassert solution('1') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n218\n''') == 'Yes'\nassert solution('''\n1\n2000\n''') == 'No'\nassert solution('''\n2\n1500\n''') == 'Yes'\nassert solution('''\n1\n300\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '2 3 6'\n    ) == 'dangerous'\nassert solution(\n    '1 2 3'\n    ) =='safe'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 1') == 'dangerous'\nassert solution('5 3 2') == 'dangerous'\nassert solution('5 3 3') == 'dangerous'\nassert solution('5 3 4') == 'dangerous'\nassert solution('5 3 5') == 'dangerous'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('0 0 0') == 'dangerous'\nassert solution('0 4 3') =='safe'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2\") == \"dangerous\"\nassert solution(\"1 2 4\") == \"safe\"\nassert solution(\"1 3 2\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 6\n''') =='safe'\nassert solution('''\n1 1 1\n''') == 'dangerous'\nassert solution('''\n2 2 3\n''') == 'dangerous'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') =='safe'\nassert solution('3 3 2') == 'dangerous'\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 2\n''') =='safe'\nassert solution('''5 3 3\n''') == 'dangerous'\nassert solution('''6 0 2\n''') == 'dangerous'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 6') =='safe'\nassert solution('3 2 4') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 4') == 'dangerous'\nassert solution('4 3 6') =='safe'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"safe\"\nassert solution(\"1 1 2\") == \"dangerous\"\nassert solution(\"1 2 1\") == \"dangerous\"\nassert solution(\"2 1 1\") == \"dangerous\"\nassert solution(\"2 1 2\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('8') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == str(9)\nprint(solution(input()))\n\n\n\"\"\"\n\nimport math\n\nN = int(input())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"9\") == \"9\"\nassert solution(\"20\") == \"19\"\nassert solution(\"20\") == \"19\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('10') == '9'\nassert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"9\") == \"9\"\nassert solution(\"12\") == \"9\"\nassert solution(\"100\") == \"9\"\nassert solution(\"101\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n') == '9'\nassert solution('10\\n') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10\n''') == '9'\nassert solution('''10\n''') == '9'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3\\n1 1\") == \"10\"\nassert solution(\"10\\n8 7\\n8 9\\n\") == \"10\"\nassert solution(\"5\\n9 8\\n2 1\\n2 3\\n3 4\\n1 2\\n5 6\\n4 3\") == \"14\"\nassert solution(\"1\\n5 5\\n5 5\\n\") == \"10\"\nassert solution(\"10\\n5 5\\n5 5\\n\") == \"10\"\n",
        "num_ids_2": 38,
        "num_ids_4": 96
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 3\n1 1\n3 2\n2 3\n4 5\n''') == '10'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3') == '10'\nassert solution('3\\n1 1') == '10'\nassert solution('3\\n3 2') == '10'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 3\n1 1\n3 2\n''') == '10'\nassert solution('''\n4\n1 5\n2 2\n3 2\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '10'\nassert solution('10') == '20'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3\\n3 4') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n3\n3\n1\n5\"\"\") == \"10\"\nassert solution(\"\"\"2\n6\n7\n2\n6\"\"\") == \"8\"\nassert solution(\"\"\"3\n4\n5\n3\n8\"\"\") == \"4\"\nassert solution(\"\"\"4\n6\n7\n4\n5\"\"\") == \"5\"\nassert solution(\"\"\"5\n8\n7\n4\n5\"\"\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 3\n1 1\n3 2\n''') == '10'\nassert solution('''\n5\n0 2\n1 2\n3 3\n1 4\n3 4\n''') == '21'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'no'\nassert solution('A') == 'yes'\nassert solution('aaA') == 'no'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"q\") == \"no\"\nassert solution(\"a\") == \"yes\"\nassert solution(\"\") == \"yes\"\nassert solution(\"abcdef\") == \"yes\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"no\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"no\"\nassert solution(\"AaAAAAAAA\") == \"yes\"\nassert solution(\"AABBCCCC\") == \"no\"\nassert solution(\"\") == \"yes\"\n\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 56
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'yes'\nassert solution(input()) == 'no'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('aab') == 'no'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\"\"\n) == \"yes\", \"You are not allowed to import any module!\"\nassert solution(\n\"\"\"aBcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\"\"\n) == \"no\", \"There is a duplicate character\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"A\") == \"no\"\nassert solution(\"\") == \"yes\"\nassert solution(\"dummy\") == \"yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('interview') == 'no'\nassert solution('angry') == 'yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"yes\", \"should return yes\"\nassert solution(\"mynameis\") == \"no\", \"should return no\"\nassert solution(\"1\") == \"no\", \"should return no\"\nassert solution(\"!@#$%^&*()_+=-`~,./;:<>?[\\\\]{}|\\\"\") == \"yes\", \"should return yes\"\nassert solution(\"tolstoy\") == \"yes\", \"should return yes\"\n",
        "num_ids_2": 45,
        "num_ids_4": 101
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"Uncopyrightable\") == \"no\"\nassert solution(\"Un_copyrightable\") == \"no\"\n\"\"\"\nfrom collections import Counter\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"11\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\n\nassert solution(\"5\\nWEEW\") == \"0\"\n\nassert solution(\"5\\nEWEW\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('10\\nWEEWWWWEEWWWWWWEEWWWW') == '4'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('3\\nWEEW') == '1'\nassert solution('6\\nWEEWWEEW') == '2'\nassert solution('6\\nWEEWWWEEW') == '2'\nassert solution('3\\nWEEW') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '2'\nassert solution('10 2') == '9'\n\n----------------------------------------------------------------------\n\n5. Write a program that returns an array of first n Fibonacci numbers.\n\n-----Constraints-----\n - 0\u2264n\u226440\n - n is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:  \nn\n\n-----Output-----\nPrint the array of first n Fibonacci numbers.\nPrint a single line containing each Fibonacci number on a separate line.\n\n-----Sample Input-----\n4\n\n-----Sample Output-----\n0 1 1 2\n\n----------------------------------------------------------------------\n\n6. A son is a huge person, which is large and tall, and has tons of hair.\nA father is also a huge person, which is large and tall, and has tons of hair.\nA sister is also a huge person, which is large and tall, and has tons of hair.\nEach father has one son.\nEach father has one sister.\nEach son has one father.\nEach son has one sister.\n\nIn a boy's family, each father has four sons.\nEach father has four sisters.\nEach son has four fathers.\nEach son has four sisters.\n\nIn a girl's family, each father has two sons.\nEach father has two sisters.\nEach son has two fathers.\nEach son has two sisters.\n\nIn the family of a boy, each son has six fathers.\nEach son has six sisters.\nEach son has six fathers.\nEach son has six sisters.\n\nIn the family of a girl, each son has four fathers.\nEach son has four sisters.\nEach son has four fathers.\nEach son has four sisters.\n\nWrite a program that returns the family tree structure of a son, father, sister, or boy, and the number of sons,\nsons, sisters, and fathers in the family tree structure of a boy or girl.\n\n-1\n-1\n-1\n-1\n-1\n0\n-1\n-1\n-1\n-1\n0\n2\n1\n1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '2'\nassert solution('1 4') == '1'\nassert solution('4 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2'\nassert solution('''6 8\n1 4\n3 6\n2 3\n4 5\n2 1\n3 7\n4 5''') == '4'\nassert solution('''5 5\n1 3\n3 2\n3 4\n4 2\n3 5''') == '3'\nassert solution('''6 6\n1 3\n3 5\n2 4\n4 5\n2 3\n4 6''') == '4'\nassert solution('''7 7\n1 2\n3 6\n3 5\n3 7\n2 6\n4 5\n4 7''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1'\nassert solution('3 4') == '1\\n1\\n1\\n1'\nassert solution('100 100') == '100\\n100\\n100\\n100'\nassert solution('0 100') == '0\\n0\\n0\\n0'\n\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n2\\n1\\n1\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2'\nassert solution('4 5') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2\\n2\\n1\\n1\\n'\n\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"2\\n5\\n10\\n15\") == \"30\"\nassert solution(\"2\\n5\\n5\\n10\") == \"20\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"2\") == \"30\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '25'\nassert solution('3') == '25'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\") == \"30\"\nassert solution(\"5\\n5\\n10\\n15\") == \"25\"\nassert solution(\"5\\n5\\n10\\n15\") == \"30\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"30\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5\n10\n15\n''') == '25'\nassert solution('''\n3\n5\n10\n15\n''') == '30'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\") == \"30\"\nassert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"3\\n1\\n1\\n1\") == \"0\"\nassert solution(\"3\\n1\\n1\\n1\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5\n10\n15\n''') == '25', 'First'\nassert solution('''3\n5\n10\n15\n''') == '30', 'Second'\nassert solution('''4\n3\n2\n7\n''') == '29', 'Third'\nassert solution('''5\n3\n4\n4\n''') == '12', 'Fourth'\nassert solution('''6\n3\n5\n3\n7\n''') == '30', 'Fifth'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"2\\n5\\n10\\n15\") == \"30\"\nassert solution(\"1\\n5\\n10\\n15\") == \"25\"\nassert solution(\"1\\n5\\n10\\n0\") == \"25\"\nassert solution(\"0\\n5\\n10\\n15\") == \"30\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"4\\nabcd\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nabaaaa') == '2'\nassert solution('6\\naabbca') == '2'\nassert solution('6\\nabaaaa') == '2'\nassert solution('6\\nabaaaa') == '2'\nassert solution('6\\nabaaaa') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('1') == '1'\nassert solution('abc') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nacb\\n\") == \"1\"\nassert solution(\"4\\nacb\\n\") == \"1\"\nassert solution(\"4\\nacb\\n\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nababbca') == '2'\nassert solution('6\\nqwertzuiop') == '4'\nassert solution('6\\nqwertzuiopasdfghjkl') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n') == '2'\nassert solution('12\\n') == '3'\nassert solution('10\\n') == '4'\nassert solution('17\\n') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nprint(solution(\"Sunny\"))\nprint(solution(\"Cloudy\"))\nprint(solution(\"Rainy\"))\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\n\nassert solution(\"Cloudy\") == \"Rainy\"\n\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Cloudy\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5 15\n2\n''') == '2'\nassert solution('''10\n5 15\n2\n''') == '2'\nassert solution('''5\n5 15\n3\n''') == '7'\nassert solution('''10\n5 15\n3\n''') == '7'\nassert solution('''12\n5 15\n2\n''') == '11'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('5 7 120') == '119'\nassert solution('2 4 10') == '10'\nassert solution('2 6 10') == '10'\nassert solution('7 5 120') == '120'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"0 0 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"3 100 120\") == \"120\"\nassert solution(\"3 100\") == \"100\"\nassert solution(\"20 20 20\") == \"200\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 120\") == \"119\"\nassert solution(\"5 17 120\") == \"119\"\nassert solution(\"5 1 100\") == \"100\"\nassert solution(\"5 17 100\") == \"100\"\nassert solution(\"5 1 120\") == \"119\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 120\") == \"119\"\nassert solution(\"2 1 120\") == \"120\"\nassert solution(\"1 2 120\") == \"120\"\nassert solution(\"3 2 120\") == \"120\"\nassert solution(\"1 3 120\") == \"120\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 2') == '2'\nassert solution('1 1 1') == '1'\nassert solution('3 1 4') == '4'\nassert solution('2 7 3') == '11'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 17 120') == '119', 'Failed'\nassert solution('7 17 0') == '0', 'Failed'\nassert solution('7 17 1') == '1', 'Failed'\nassert solution('7 17 2') == '2', 'Failed'\nassert solution('7 17 3') == '3', 'Failed'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"1 10 2\") == \"2\"\nassert solution(\"10 10 2\") == \"10\"\nassert solution(\"2 10 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3800'\nassert solution('3 3') == '6111'\nassert solution('5 6') == '2044'\n\"\"\"\n\nT = int(input())\nM = int(input())\n\nN = 5\n\nprob = 0.125",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 5') == '2400'\nassert solution('3 7') == '1440'\nassert solution('4 11') == '6040'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n''') == '3800'\n\"\"\"\n---Explanation---\nWe write the function that solves the problem as follows:",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '3800'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == str(3800)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1\n''') == '3800'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"3800\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3800'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '3800'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\n",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'b'\nprint('solution() is ok')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('letcode') == 'z'\nassert solution('abc') == 'a'\nassert solution('jzjn') == 'z'\n\n'''\n\n'''\n\ub098\uc758 \ud480\uc774 - \ubcc0\uc218\ub85c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ubc30\uc5f4 \uc0ac\uc6a9",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"z\"\nassert solution(\"\") == \"None\"\nassert solution(\"xyz\") == \"None\"\nassert solution(\"aab\") == \"None\"\n",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'None'\nassert solution('a') == 'b'\nassert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"mamashinyakuten\") == None\nassert solution(\"Sukanya\") == None\n\"\"\"\n\nimport collections\nimport string\n",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''atcoderregularcontest''') == 'b'\nassert solution('''hi''') == 'i'\nassert solution('''aabcd''') == None\n",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == None\nassert solution(\"b\") == \"b\"\nassert solution(\"a\") == \"a\"\n",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 4 3\") == \"4\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10 10\") == \"10 10 10 10 10 10 10 10 10 10\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '4'\nassert solution('4 4 4 3') == '4'\n\n'''\nimport heapq",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 4 4 3\\n') == '4\\n3\\n3\\n4\\n'\nassert solution('1\\n3\\n') == '3\\n3\\n3\\n3\\n'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"4\\n3\\n3\\n4\"\nassert solution(\"2\") == \"2\\n1\\n1\\n2\"\n\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 3\") == \"4 3 4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3 3 3 4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"0\"\n\nimport sys\n\nfor line in sys.stdin:\n    print(solution(line))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"6\") == \"0\"\n\n\"\"\"\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1'\nassert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\nassert solution('9') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\"\nassert solution(\"3\\n2 3 4 4 2 1\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"10\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"3\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"8\") == \"8\"\nassert solution(\"10\") == \"10\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"5\"\nassert solution(\"4\\n5\\n6\\n7\") == \"5\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    7 1\n    2\n    5\n    10\n''') == '8'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"11\"\nassert solution(\"8\") == \"12\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '8'\nassert solution('5') == '10'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '8'\nassert solution('5') == '8'\nassert solution('7') == '8'\nassert solution('10') == '8'\nassert solution('12') == '13'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n7 1\n2\n5\n10\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3\n3 1\n2\n4\n10\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4\n7 2\n2\n3\n10\n\"\"\") == \"11\"\nassert solution(\"\"\"\n5\n3 1\n2\n5\n10\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\n2 1\n1\n2\n2\n1\n1\n2\n3\n2\n2\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n2\n2\n2\n3\n1\n1\n2\n1\n1\n2\n1\n2\n2\n2\n1\n2\n1\n2\n1\n1\n2\n1\n1\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n2\n2\n2\n1\n2\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n500\\n') == '2'\nassert solution('1\\n2\\n3\\n100\\n') == '1'\nassert solution('1\\n2\\n3\\n200\\n') == '1'\nassert solution('2\\n3\\n4\\n500\\n') == '1'\nassert solution('2\\n3\\n4\\n100\\n') == '1'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n\"\"\"\n\nA, B, C, X = stdin.split()\nA = int(A)\nB = int(B)\nC = int(C)\nX = int(X)\n\nc_n = A + B + C\nx_n = X // 50\n\nans = 0",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"0\") == '0'\nassert solution(\"3\") == '0'\nassert solution(\"5\") == '0'\nassert solution(\"6\") == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"1\") == \"1\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2\n2\n100''') == '2'\nassert solution('''2\n2\n2\n100''') == '2'\nassert solution('''2\n2\n2\n200''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('3 1 3') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 1 1') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"-2 3 2\") == \"No\"\nassert solution(\"1 -2 3 2\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"-1 2 3 4\") == \"Yes\"\n\n-------Hints\nIf you want to use a built-in function, instead of writing the code yourself,\ntry to use it.\n\nIn most cases, this is the way to do it.\n\nFirst, you will have to work with one single line of code.\n\nThen, you will be able to have the same code work with three lines.\n\nThen, you will be able to have the same code work with any number of lines.\n\nLet us try to find the right way to do it.\n\nThe right way depends on the fact that you can have as many functions\nas you want to call.\n\nLet's look at an example of it.",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 2') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 3 3\") == \"No\"\nassert solution(\"1 3 5\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 3 2\n\n''') == 'Yes'\nassert solution('''1 2 3\n\n''') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"-5 3 2\") == \"Yes\"\nassert solution(\"-5 -3 2\") == \"No\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 2') == 'Yes'\nassert solution('1 3 2') == 'No'\nassert solution('2 5 4') == 'Yes'\n\nTest Case 2\n\nTestCase 3\n\nTestCase 4\n\nTestCase 5\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('2 4\\n1 2\\n3 4') == '0'\nassert solution('3 5\\n6 5\\n8 7') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1000\n120\n100\n140\n''') == \"9\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('4 4\\n1000\\n120\\n100\\n140') == '7'\nassert solution('2 10\\n1\\n2') == '2'\n",
        "num_ids_2": 43,
        "num_ids_4": 60
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 1\n10\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"5 1\\n1 2\\n3 4\\n5 6\") == \"5\"\nassert solution(\"5 2\\n1 2\\n3 4\\n5 6\") == \"4\"\nassert solution(\"5 3\\n1 2\\n3 4\\n5 6\") == \"3\"\nassert solution(\"5 4\\n1 2\\n3 4\\n5 6\") == \"2\"\n",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 1000, 120, 100, 140]) == '9'\nassert solution([2, 1000, 120, 100, 140]) == '2'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1000\") == \"9\"\nassert solution(\"1 120\") == \"2\"\nassert solution(\"2 100\") == \"2\"\nassert solution(\"3 200\") == \"2\"\nassert solution(\"3 1000\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1000\n120\n100\n140\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\nassert solution('''2\napple\norange''') == '1'\n\"\"\"\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\napple\norange\napple\n''') == \"2\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '2'\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"\n\"\"\"\n\nn = int(input())\nn_count = 0\nfor i in range(n):\n    S_i = input()\n    if set(S_i) <= set(\"abcdefghijklmnopqrstuvwxyz\"):\n        n_count += 1\nprint(n_count)",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n1\n3\n4\n2\"\"\") == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\napple\\norange\\napple\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\napple\norange\napple\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2 2\"\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '2 2'\nassert solution('2') == '2 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 2\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == \"2 2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2 2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n2100 2500 2700 2700\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n3\n2100 3000 2700\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n5\n2100 2000 2500 2700 2700\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n7\n2100 2000 3000 2700 2700 2700 2700\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n9\n2100 2500 3000 2500 3000 2500 3000\n\"\"\") == \"3 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"700\"\nassert solution(\"xxo\") == \"700\"\nassert solution(\"xox\") == \"700\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('oxo') == '900'\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"xo\") == \"900\"\nassert solution(\"xo\") == \"900\"\nassert solution(\"xo\") == \"900\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"900\"\nassert solution(\"xo\") == \"900\"\nassert solution(\"o\") == \"900\"\nassert solution(\"oo\") == \"900\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('oxo') == '900'\nassert solution('xoo') == '0'\nassert solution('o') == '0'\nassert solution('x') == '700'\nassert solution('oo') == '0'\n\"\"\"\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"700\"\nassert solution(\"xo\") == \"900\"\nassert solution(\"xox\") == \"700\"\nassert solution(\"xoxo\") == \"900\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('oxo') == '900'\nassert solution('xxo') == '700'\nassert solution('xox') == '700'\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"0\"\nassert solution(\"ooxx\") == \"200\"\nassert solution(\"xxxxx\") == \"800\"\nassert solution(\"xxoxx\") == \"200\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        stdin = list(stdin)\n        top_egg = False\n        top_pork = False\n        top_green = False\n        for i in range(len(stdin)):\n            if stdin[i] == 'o':\n                top_egg = True\n            elif stdin[i] == 'x':\n                top_egg = False\n            if stdin[i] == 'x':\n                top_pork = True\n            elif stdin[i] == 'x':\n                top_pork = False\n            if stdin[i] == 'x':\n                top_green = True\n            elif stdin[i] == 'x':\n                top_green = False\n\n        return str(700 + (1 * 100 * (int(top_egg) + int(top_pork) + int(top_green)))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D D') == 'D'\nassert solution('D H') == 'H'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'D'\nassert solution('D H') == 'D'\nassert solution('H D') == 'H'\nassert solution('D D') == 'D'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"H\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"12345\") == \"1+2+3+4+5=7\"\nassert solution(\"1234\") == \"1+2+3+4=7\"\nassert solution(\"123\") == \"1+2=7\"\nassert solution(\"12\") == \"1+2=7\"\n",
        "num_ids_2": 40,
        "num_ids_4": 73
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1222''') == '1+2+2+2=7'''\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABCD') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1220') == '1+2+2=7'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1112') == '1+1+1=3'\nassert solution('0001') == '1+0=1'\nassert solution('22') == '2+2=4'\nassert solution('22') == '2+2=4'\n",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"1+2+2+2=7\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"1+2+3=6\"\nassert solution(\"1212\") == \"1+1+2=5\"\nassert solution(\"1222\") == \"1+2+2+2=7\"\n\nimport re",
        "num_ids_2": 33,
        "num_ids_4": 52
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2 2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 1 3\\n') == '2 1 2\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n0\\n0\\n0'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1 2 2\n2\n4\n5''') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 2 2') == '2'\nassert solution('5\\n1 1 2 2') == '2'\nassert solution('5\\n1 1 2 2') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '3'\nassert solution('6') == '3'\nassert solution('10') == '1'\nassert solution('3') == '0'\nassert solution('12') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nX\n''') == ''\n\nassert solution('''\n10\n''') == '6'\n\nassert solution('''\n0\n''') == '0'\n\nassert solution('''\n3\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0'\nassert solution('5\\n') == '5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"15\") == \"2\"\nassert solution(\"20\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1101\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1118\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1118) == 'Yes'\nassert solution(1111) == 'No'\nassert solution(1011) == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1187') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('1234') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"2855\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1118') == \"Yes\", 'bad test'\nassert solution('1234') == \"No\", 'bad test'\nassert solution('9999') == \"Yes\", 'bad test'\nassert solution('11111') == \"No\", 'bad test'\nassert solution('11') == \"Yes\", 'bad test'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1011\") == \"No\"\n\n--------------------------------------------",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5\\n2 4\\n3 6') == '3'\n\"\"\"\nfrom math import gcd",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 5, 2, 4, 3, 6]) == \"3\"\nassert solution([1, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10]) == \"5\"\nassert solution([1, 3, 4, 2, 5, 6, 7, 8, 9, 10]) == \"0\"\n\"\"\"\n",
        "num_ids_2": 52,
        "num_ids_4": 80
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 5\n2 4\n3 6\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 5\n2 4\n3 6\n''') == '3'\nassert solution('''\n1\n5\n10\n''') == '1'\nassert solution('''\n2\n2 4\n3 6\n''') == '2'\nassert solution('''\n2\n1 5\n2 4\n3 6\n''') == '0'\nassert solution('''\n2\n1 5\n2 4\n3 6\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '2'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 5\n2 4\n3 6''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"X Y\") == \"<\"\nassert solution(\"X Y\") == \"<\"\nassert solution(\"X Y\") == \"=\"\nassert solution(\"A B\") == \">\"\nassert solution(\"A B\") == \">\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \"<\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"C D\") == \">\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A B') == '<'\nassert solution('A D') == '>'\nassert solution('A A') == '='\nassert solution('A E') == '='\nassert solution('B D') == '<'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == \"=<\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''A B\n    \n    ''') == '<'\nassert solution('''B A\n    \n    ''') == '>'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"X A\") == \">\nassert solution(\"X B\") == \">\"\nassert solution(\"X C\") == \">\"\nassert solution(\"X D\") == \">\"\nassert solution(\"X E\") == \">\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A B') == '<'\nassert solution('D E') == '>'\nassert solution('F E') == '='\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"<\"\nassert solution(input()) == \">\"\nassert solution(input()) == \"=\"\n\nprint(solution(input()))\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A B') == '<'\nassert solution('C D') == '>'\nassert solution('E F') == '='\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"1#2#1\"\nassert solution(\"3 5\") == \"11211\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n''') == '1#2#1'\nassert solution('''4 4\n.....\n..#..\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '11211'\n\nsolution('5 5')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '1#2#1'\nassert solution('4 6') == '1#2#1'\nassert solution('5 10') == '1#2#1'\n\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding to the eigth empty square is replaced with 8.\nThe. corresponding to the ninth empty square is replaced with 9.\nThe. corresponding to the tenth empty square is replaced with 1.\nThe. corresponding to the first empty square is replaced with 1.\nThe. corresponding to the second empty square is replaced with 2.\nThe. corresponding to the third empty square is replaced with 3.\nThe. corresponding to the fourth empty square is replaced with 4.\nThe. corresponding to the fifth empty square is replaced with 5.\nThe. corresponding to the sixth empty square is replaced with 6.\nThe. corresponding to the seventh empty square is replaced with 7.\nThe. corresponding",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"11211\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '11211'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '11211'\nassert solution('5 5') == '11211'\nassert solution('7 5') == '11211'\nassert solution('12 5') == '11111'\nassert solution('3 3') == '111'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n.###\\n...##\") == \"1#2#1\"\nassert solution(\"1 5\\n###\\n###\\n###\\n###\\n###\") == \"1#2#1\"\nassert solution(\"1 1\\n###\\n###\\n###\\n###\\n###\") == \"1\"\n",
        "num_ids_2": 53,
        "num_ids_4": 79
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1#2#1\"\nassert solution(\"5\") == \"1#2#1\"\nassert solution(\"3 2\") == \"1#2#1\"\nassert solution(\"3 3\") == \"1#2#1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n...\n.#.#.\n...\n\n''') == \"11211\"\nassert solution('''5 4\n.....\n.#..\n...\n..#\n.##.\n''') == \"1224\"\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 4 240\n60 90 120\n80 150 80 150\n\"\"\") == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('3 4 240') == '3'\nassert solution('3 5 9 300') == '4'\nassert solution('3 5 9 300') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10\\n10 1\\n1 2\\n\") == \"1\"\nassert solution(\"5 3 120\\n60 90 120\\n80 150 80 150\\n\") == \"3\"\nassert solution(\"5 2 2\\n1 2\\n2 1\\n\") == \"1\"\nassert solution(\"6 5 2\\n1 5\\n2 2\\n3 1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 2\\n2 1\\n\") == \"1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\"\n\n'''\n\n\n\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"5 10 200\") == \"5\"\nassert solution(\"10 10 100\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 5 400\") == \"4\"\nassert solution(\"3 5 120\") == \"3\"\nassert solution(\"10 10 10\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 240\") == \"3\"\nassert solution(\"2 1 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 3 240\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 2 480\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n60 90 120\\n80 150 80 150') == '3'\nassert solution('3 4 240\\n60 90 120\\n80 150 80 150') == '4'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"2000 2000 2000 3000 3000\") == \"2000\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1 5 3') == '7900'\nassert solution('1 2 3 4 4') == '5900'\nassert solution('1 2 3 4 4') == '5900'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1500 2000 1600 3 2\n''') == '7900'\nassert solution('''\n1000000 5000 5000 1600 3 2\n''') == '76001'\nassert solution('''\n1000000 5000 5000 1600 2 2\n''') == '77000'\nassert solution('''\n1000000 5000 5000 1600 3 3\n''') == '77000'\nassert solution('''\n1000000 5000 5000 1600 3 3\n''') == '77000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"7900\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1000 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1500 3 2') == '7900'\nassert solution('1000 2000 1500 3 2') == '7900'\nassert solution('1500 2000 1500 3 2') == '7900'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\\\n1500 2000 1600 3 2\n''') == \"7900\"\nassert solution('''\\\n2000 1500 1600 3 2\n''') == \"7900\"\nassert solution('''\\\n1800 1600 1500 3 2\n''') == \"7900\"\nassert solution('''\\\n1500 1800 1600 3 2\n''') == \"7900\"\nassert solution('''\\\n1600 1800 1500 3 2\n''') == \"7900\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 1\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 3\") == \"7900\"\nassert solution(\"1500 2000 1600 3 4\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"4 500 1600 5 2\") == \"2000\"\nassert solution(\"3 100 40 1 1\") == \"130\"\nassert solution(\"2 810 5 2\") == \"2080\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4', 'Wrong answer'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '4', 'First'\nassert solution('''10\n''') == '9', 'Second'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"4\"\nassert solution(\"15\") == \"6\"\nassert solution(\"20\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('6') == '4'\nassert solution('10') == '10'\nassert solution('14') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4', 'Check your code'\nassert solution('10') == '1', 'Check your code'\n\n--Copyright--\n\n\"\"\"\nimport math\n\nn = int(input())\n\nprint(math.factorial(n) % 1000000000)\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '1'\nassert solution('10') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == '4', \"solution([3])\"\nassert solution('') == '4', \"solution([])\"\nassert solution('0') == '1', \"solution('0')\"\nassert solution('5') == '4', \"solution('5')\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '9'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('8') == '8'\nassert solution('10') == '9'\nassert solution('16') == '9'\nassert solution('16') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"9\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"9\"\nassert solution(\"0\") == \"0\"\nassert solution(\"7\") == \"9\"\n\n=========================================\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '9'\nassert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('8') == '8'\nassert solution('9') == '9'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\nassert solution(\"5\\n6\\n8\\n4\\n3\\n\") == \"1\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('4\\n10\\n8\\n8\\n6') == '4'\nassert solution('2\\n10\\n8\\n8\\n6') == '2'\nassert solution('1\\n10\\n8\\n8\\n6') == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n10\\n8\\n6') == '3'\nassert solution('5\\n2\\n10\\n10\\n10\\n5\\n10\\n10\\n10') == '4'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('5\\n20\\n18\\n18\\n18') == '3'\nassert solution('10\\n10\\n10\\n10\\n10') == '2'\nassert solution('5\\n10\\n15\\n10\\n10') == '2'\nassert solution('5\\n8\\n6\\n6\\n6') == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == '3'\nassert solution('12\\n15\\n12\\n10\\n18\\n') == '4'\nassert solution('12\\n10\\n18\\n18\\n') == '2'\nassert solution('9\\n10\\n8\\n6\\n') == '1'\nassert solution('12\\n10\\n10\\n10\\n8\\n') == '0'\n",
        "num_ids_2": 48,
        "num_ids_4": 90
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"5\\n10\\n8\\n8\\n6\") == \"2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"QWEWRTYASDFZXCV\") == \"3\"\n\nFind the greatest length of the string Snuke can construct. Here, the test set guarantees that there always exists a substring of s that starts with A and ends with Z.\n\n-----Constraints-----\n - 1 \u2266 |s| \u2266 200{,}000\n - s consists of uppercase English letters.\n - There exists a substring of s that starts with A and ends with Z.\n\n-----Input-----\ns\n\n-----Output-----\nPrint the answer.\n\n-----Sample Input-----\nQWERTYASDFZXCV\n\n-----Sample Output-----\n5\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"QWERTYASDFZXCV\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n8 12 40\n''') == '2'\nassert solution('''1\n1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n8 12 40\\n\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"8\"\nassert solution(\"100\\n1 3 5 7 11 15 17 19 21 23 25\\n\") == \"10\"\n\"\"\"\nfrom typing import List\nimport sys\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        sys.stdin = open(stdin)\n        N = int(input())\n        res = 0\n\n        for i in range(N):\n            A = int(input())\n            if A % 2 == 0:\n                A //= 2\n                res += 1\n        return str(res)\n",
        "num_ids_2": 41,
        "num_ids_4": 66
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n8 12 40\\n') == '2'\nassert solution('4\\n4 6 20\\n') == '1'\nassert solution('6\\n5 4 2 3 6\\n') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\n\nfrom math import floor\n\nN = int(input())\nA = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n    A[i] = A[i] // 2 if A[i] % 2 == 0 else A[i]\n\nwhile True:\n    for i in range(N):\n        if A[i] % 2 == 1:\n            break\n    else:\n        ans += 1\n    for i in range(N - 1, -1, -1):\n        if A[i] % 2 == 0:\n            break\n    else:\n        ans += 1\n    A[i] = A[i] // 2\n    if i == 0:\n        break\n\nprint(ans)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('6') == '2'\nassert solution('12') == '2'\nassert solution('40') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"12\") == \"216\"\nassert solution(\"24\") == \"2400\"\nassert solution(\"3\") == \"6\"\nassert solution(\"123\") == \"1234\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '6'\nassert solution('3') == '18'\nassert solution('4') == '48'\nassert solution('5') == '210'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"24\"\nassert solution(\"10\") == \"33216\"\nassert solution(\"20\") == \"66656\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '60'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n''') == '6', 'First sample'\nassert solution('''5\n''') == '12', 'Second sample'\nassert solution('''1\n''') == '1', 'Third sample'\nassert solution('''100000000\n''') == '30000000000', 'Fourth sample'",
        "num_ids_2": 14,
        "num_ids_4": 29
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n''') == '6'\nassert solution('''\n5\n''') == '24'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '336'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '4'\nassert solution('10') == '1000000'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\n\nprint('OK') if solution('5') == '10' else print('WRONG')\n\n\"\"\"\n\nnum = int(input())\nans = 0\n\nwhile num >= 0:\n    ans += num\n    num = int(input())\n\nprint(ans)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"6\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"9\") == \"18\"\nassert solution(\"5\") == \"13\"\nassert solution(\"11\") == \"26\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '10'\nassert solution('100') == '100000000000'",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"100 3\") == \"99\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('20') == '8'\nassert solution('2') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"1\") == '1'\nassert solution(\"4\") == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('2\\n4 2') == '2'\nassert solution('2\\n3 1\\n4 2') == '1'\nassert solution('3\\n1 2 3') == '1'\nassert solution('4\\n1 2 3 4') == '2'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 3\") == \"2\"\nassert solution(\"1\\n3 2\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\\n3 1\"\n) == \"2\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '4'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('1 WA') == '1 1'\nassert solution('1 AC') == '1 0'\nassert solution('2 WA') == '2 1'\nassert solution('2 AC') == '2 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"2 1 WA 1 AC\") == \"2 2\"\nassert solution(\"2 1 WA 1 AC 2 WA\") == \"2 2\"\nassert solution(\"5 1 WA 1 AC 1 WA 2 AC 2 WA\") == \"5 2\"\nassert solution
        "num_ids_2": 27,
        "num_ids_4": 65
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('3 3\\n3 AC\\n1 WA\\n1 WA\\n2 WA') == '2 1'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\nassert solution('''3 3\n1 WA\n1 WA\n2 WA\n''') == '1 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0 0\"\nassert solution(\"3 4\") == \"3 4\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 5\") == \"2 2\"\nassert solution(\"3 5\") == \"2 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('1 WA') == '1 1'\nassert solution('1 AC') == '1 0'\nassert solution('2 WA') == '2 1'\nassert solution('2 AC') == '2 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"5 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n3 WA\") == \"2 2\"\nassert solution(\"1 1\\n1 WA\\n1 WA\") == \"1 2\"\n",
        "num_ids_2": 64,
        "num_ids_4": 84
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '2 2'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n4 1 5\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 2') == '4'\nassert solution('3 3') == '3'\nassert solution('3 4') == '2'\nassert solution('3 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1\\n4 1 5') == '5'\nassert solution('3 2\\n4 1 5') == '4'\nassert solution('3 5\\n4 1 5') == '0'\n\n'''",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6 5\n3 5 2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4 3\n3 2 5\n\"\"\") == \"6\"\nassert solution(\"\"\"\n2 1\n2 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"4 1\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"10 1\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n\") == \"5\"\nassert solution(\"3 1\\n\") == \"5\"\nassert solution(\"5 1\\n\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"5\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"3 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n10\n1 3\n''') == '2'\n\nassert solution('''1\n2\n0\n''') == '2'\n\nassert solution('''4\n10\n1 3\n2 5\n3 6\n''') == '20'\n\nassert solution('''6\n10\n1 3\n2 5\n5 6\n6 7\n7 8\n''') == '37'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1\n10\n2\n\n''') == \"4\"\n\nassert solution(\n'''\n1\n10\n0\n\n''') == \"0\"\n\nassert solution(\n'''\n1\n10\n1\n\n''') == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '4'\nassert solution('2') == '16'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n10\n2\n\n\"\"\") == \"4\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"0\"\nassert solution(\"10\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"20\"\nassert solution(\"6\") == \"15\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\nassert solution('3') == '11'\nassert solution('4') == '4'\nassert solution('5') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\nassert solution('3') == '6'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '220'\nassert solution('420') == '420'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\nassert solution(\"500\") == \"500\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\nassert solution(\"10\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\n\n---",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open(0).read()) == '520'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '520'\nassert solution('1') == '520'\nassert solution('10') == '520'\nassert solution('1000') == '520'\nassert solution('10000') == '520'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('5\\n1 2 4 4 0') == '0'\nassert solution('5\\n1 2 4 4 0') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"8\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('4\\n2 4 4 0 2') == '0'\nassert solution('5\\n2 4 4 0 2') == '4'\nassert solution('2\\n2 4 4 0 2') == '0'\n\nimport random",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 4 0 2\\n\") == \"4\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(len(a)):\n    left = a[i-1] if i else 1\n    right = a[i] if i < len(a)-1 else 1\n    ans += abs(right - left)\n    \nprint(ans%(10**9+7))",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 4 4 0 2''') == '4'\nassert solution('''1\n1 2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['20 2 5']) == '84'\nassert solution(['20 3 5']) == '84'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([20, 2, 5]) == 84\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 5\") == \"84\"\nassert solution(\"20 2 5\") == \"84\"\nassert solution(\"20 2 50\") == \"87\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 2 5') == 84\nassert solution('20 1 5') == 20\nassert solution('20 2 5 -3') == 84\nassert solution('20 3 5') == -1\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 2') == '0'\nassert solution('3 4 2') == '7'\nassert solution('6 4 2') == '17'\nassert solution('20 2 5') == '84'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''20 2 5\n''') == '84'\nassert solution('''100 50 20\n''') == '65'\nassert solution('''20 2 5\n''') == '84'\nassert solution('''12 30 33 40 50 60 75 90\n''') == '187'\nassert solution('''100 50 20\n''') == '65'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 4\") == \"84\"\nassert solution(\"20 2 5\") == \"84\"\nassert solution(\"6 9 8\") == \"84\"\nassert solution(\"8 5 4\") == \"84\"\nassert solution(\"3 1 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 5, 6, 4, 7, 8]) == 84, solution([3, 5, 6, 4, 7, 8])\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"1 2 5\") == \"0\"\nassert solution(\"1 10 11\") == \"18\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 2 5\") == 84",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'A'\nassert solution('2') == 'B'\nassert solution('3') == 'C'\nassert solution('4') == 'D'\nassert solution('5') == 'E'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'A'\nassert solution('2') == 'AB'\nassert solution('3') == 'ABC'\nassert solution('4') == 'ABCD'\nassert solution('5') == 'ABCDEF'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100') == 'ABC100'\n\"\"\"\nimport sys\n\nn = int(input())\nprint(\"ABC{}\".format(n))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"100\"\n) == \"ABC100\"\nassert solution(\n    \"120\"\n) == \"ABC120\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"321\") == \"ABC321\"\nassert solution(\"12\") == \"ABC12\"\nassert solution(\"1234\") == \"ABC1234\"\nassert solution(\"1234ABC\") == \"ABC1234ABC\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"ABC100\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100\n''') == 'ABC100'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"100\") == \"ABC100\"\nprint(solution(\"100\"))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"ABC100\"\nassert solution(\"1000\") == \"ABC1000\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '5'\nassert solution('3 3') == '2'\nassert solution('4 6') == '2'\nassert solution('7 7') == '3'\nassert solution('12 13') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\", \"Pass\"\nassert solution(\"5 5\") == \"5\", \"Pass\"\nassert solution(\"4 4\") == \"3\", \"Pass\"\nassert solution(\"3 3\") == \"2\", \"Pass\"\nassert solution(\"2 1\") == \"2\", \"Pass\"\n\n\"\"\"\n\na, b = stdin.split()\na, b = int(a), int(b)\n\ndays = (b-1) + ((a-1) * 30)\n\nprint(days)\n\n\"\"\"\n<\uc785\ub825>\n1 1\n5 5\n4 4\n3 3\n2 1\n\n<\ucd9c\ub825>\n5\n\n<\uc815\ub2f5>\nTrue\nTrue\nFalse\nTrue\nFalse\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '5'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '1'\nassert solution('1 4') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"5 7\") == \"8\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '5'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 2') == '3'\n\"\"\"\n\na, b = input().split()\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == -1, 'Wrong!'\nassert solution('2') == -1, 'Wrong!'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n2') == '2'\nassert solution('5\\n3\\n1\\n2\\n4\\n') == '-1'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == -1\nassert solution(\"3\") == -1",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == '-1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3 1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '-1', \"Not possible\"\nassert solution('3') == '2', \"Not possible\"\nassert solution('3\\n3\\n1\\n2') == '2', \"Not possible\"\nassert solution('4\\n3\\n1\\n2') == '-1', \"Not possible\"\nassert solution('4\\n3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '6', \"Not possible\"\n",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1\\n2\") == \"2\"\nassert solution(\"2\\n1\\n2\\n1\\n2\") == \"1\"\nassert solution(\"3\\n1\\n2\\n1\\n2\") == \"1\"",
        "num_ids_2": 41,
        "num_ids_4": 63
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '1'\nassert solution('2') == '1'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n6\\n2\\n6') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n2\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n\nimport sys\n\ninput = lambda: sys.stdin.readline().rstrip()",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 1 2 2 5\\n') == '1'\nassert solution('3 1\\n2 1 2\\n') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('10 4\\n10 9 9 4 4 3 4 2 2 2 1') == '4'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 4') == '0'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n3 1 5\\n\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n10 2') == '1'\nassert solution('3 1\\n3 2\\n4 5\\n5 6') == '0'\nassert solution('1 1\\n2 2') == '0'\nassert solution('5 1\\n5 2\\n5 3\\n5 4\\n5 5') == '1'\n\n\"\"\"\nimport sys",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('6 4\\n1 2 1 2 3 5') == '1'\nassert solution('10 10\\n1 2 3 4 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6') == '2'\nassert solution('100 10\\nn\"\"\"\n\nfrom collections import defaultdict\n\nn, k = map(int, input().split())\nnum = list(map(int, input().split()))",
        "num_ids_2": 37,
        "num_ids_4": 1575
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"3 3\\n1 1 2\\n\") == \"2\"\nassert solution(\"3 2\\n1 1\\n\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Yes', \"Not yet implemented\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2 1 2\n''') == 'Yes'\nassert solution('''\n2\n2 1 2\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Yes\"\nprint(solution(input))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\", \"Your solution needs to be 1 line long\"\nassert solution(\"2\") == \"No\", \"Your solution needs to be 2 lines long\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"Yes\", \"Test Cases\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Yes'\nassert solution('1') == 'No'\nassert solution('6') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n3 1 2') == 'No'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\nassert solution('1000000000 1000000000') == '1000000001'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 7') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 3') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('2 5') == '3'\nassert solution('4 4') == '4'\nassert solution('4 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n\") == \"2\", 'your function does not work'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\n\nassert solution(\"1 2\") == \"1\"\n\nassert solution(\"3 2\") == \"1\"\n\nassert solution(\"5 5\") == \"6\"\n\nassert solution(\"100 100\") == \"100\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 7') == '4'\nassert solution('1 3') == '1'\nassert solution('2 7') == '2'\nassert solution('3 4') == '1'\nassert solution('4 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '7 7\\n'\n    '1 3\\n'\n    '2 7\\n'\n    '3 4\\n'\n    '4 5\\n'\n    '4 6\\n'\n    '5 6\\n'\n    '6 7\\n'\n) == '4\\n'\nassert solution(\n    '20 20\\n'\n    '1 2\\n'\n    '1 20\\n'\n    '2 10\\n'\n    '2 20\\n'\n    '3 4\\n'\n    '3 6\\n'\n    '4 8\\n'\n    '4 9\\n'\n    '4 10\\n'\n    '4 11\\n'\n    '4 12\\n'\n    '4 13\\n'\n    '4 14\\n'\n    '4 15\\n'\n    '4 16\\n'\n    '4 17\\n'\n    '4 18\\n'\n    '4 19\\n'\n    '4 20\\n'\n    '5 6\\n'\n    '5 7\\n'\n    '6 8\\n'\n    '6 9\\n'\n    '6 10\\n'\n    '6 11\\n'\n    '6 12\\n'\n    '6 13\\n'\n    '6 14\\n'\n    '6 15\\n'\n    '6 16\\n'\n    '6 17\\n'\n    '6 18\\n'\n    '6 19\\n'\n    '6 20\\n'\n    '7 8\\n'\n    '7 9\\n'\n    '7 10\\n'\n    '7 11\\n'\n    '7 12\\n'\n    '7 13\\n'\n    '7 14\\n'\n    '7 15\\n'\n    '7 16\\n'\n    '7 17\\n'\n    '7 18\\n'\n    '7 19\\n'\n    '7 20\\n'\n    '8 9\\n'\n    '8 10\\n'\n    '8 11\\n'\n    '8 12\\n'\n    '8 13\\n'\n    '8 14\\n'\n    '8 15\\n'\n    '8 16\\n'\n    '8 17\\n'\n    '8 18\\n'\n    '8 19\\n'\n    '8 20\\n'\n    '9 10\\n'\n    '9 11\\n'\n    '9 12\\n'\n    '9 13\\n'\n    '9 14\\n'\n    '9 15\\n'\n    '9 16\\n'\n    '9 17\\n'\n    '9 18\\n'\n    '9 19\\n'\n    '9 20\\n'\n    '10 11\\n'\n    '10 12\\n'\n    '10 13\\n'\n    '10 14\\n'\n    '10 15\\n'\n    '10 16\\n'\n    '10 17\\n'\n    '10 18\\n'\n    '10 19\\n'\n    '10 20\\n'\n    '11 12\\n'\n    '11 13\\n'\n    '11 14\\n'\n    '11 15\\n'\n    '11 16\\n'\n    '11 17\\n'\n    '11 18\\n'\n    '11 19\\n'\n    '11 20\\n'\n    '12 13\\n'\n    '12 14\\n'\n    '12 15\\n'\n    '12 16\\n'\n    '12 17\\n'\n    '12 18\\n'\n    '12 19\\n'\n    '12 20\\n'\n    '13 14\\n'\n    '13 15\\n'\n    '13 16\\n'\n    '13 17\\n'\n    '13 18\\n'\n    '13 19\\n'\n    '13 20\\n'\n    '14 15\\n'\n    '14 16\\n'\n    '14 17\\n'\n    '14 18\\n'\n    '14 19\\n'\n    '14 20\\n'\n    '15 16\\n'\n    '15 17\\n'\n    '15 18\\n'\n    '15 19\\n'\n    '15 20\\n'\n    '16 17\\n'\n    '16 18\\n'\n    '16 19\\n'\n    '16 20\\n'\n    '17 18\\n'\n    '17 19\\n'\n    '17 20\\n'\n    '18 19\\n'\n    '18 20\\n'\n    '19 20\\n'\n    )\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 7') == '4'\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n\n--------------------------------------------------------------------------------------------------------------\n12/15/2020\n12.12.2020\n\nGiven an undirected graph, design an algorithm to find out whether there is a path between two nodes\n\nSample input:\n3\n1 3\n2 7\n3 7\n\nSample output:\ntrue\nfalse\n\n***\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****\n\n********\n\n****\n\n********\n\n***\n\n****",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '1'\nprint(solution(''))\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 7\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 6\") == \"4\"\nassert solution(\"6 7\") == \"0\"\nassert solution(\"4 6\") == \"4\"\n\n\"\"\"\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"7 8 5\") == \"5\"\nassert solution(\"5 7 8\") == \"8\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('3 6 3') == '6'\nassert solution('3 4 5') == '4'\n\"\"\"\n\nimport math\n\na, b, c = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 7 5''') == '7'\n\nassert solution('''10 10 10''') == '10'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nprint(solution(\"5 7 5\"))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"7 7 7\") == \"7\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"3 6 7\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == '5'\nassert solution('5 7 5') == '7'\nassert solution('1 2 3 4') == '3'\nassert solution('2 2 3 4') == '2'\nassert solution('1 1 2 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 1 5 5 5 5') == '25'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15\") == \"110 10\"\nassert solution(\"1 2 10 20 15 2 2\") == \"100 10\"\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 10 20 15 200\n''') == '110 10'\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 1 1 1') == '0 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('3 2 10 20 15 200') == '110 10'\nassert solution('4 2 10 20 15 200') == '110 10'\nassert solution('3 1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 2 10 20 15 200\"\n) == \"110 10\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('reserved') =='resv'\nassert solution('world') == 'worl'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''internationalization''') == 'i18n'\nassert solution('''internationalization''') == 'i18n'\nassert solution('''internationalization''') == 'i18n'\nassert solution('''internationalization''') == 'i18n'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('internationalization') == 'i18n'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\nassert solution('abc') == 'abc'\nassert solution('abcdef') == 'abcdef'\nassert solution('abcdefg') == 'abcdefg'\n",
        "num_ids_2": 27,
        "num_ids_4": 49
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"internationalization\"\n    ) == \"i18n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''internationalization''') == 'i18n'\nassert solution('''A0112A00D0D0C0D0B0F0E0C0C1C0F0E0B0C0A''') == 'a0112a00d0d0c0d0b0f0e0c0c1c0f0e0b0c0a'\nprint('All test cases passed.')\n\nTest case 1\nTest case 2\nTest case 3\nTest case 4\nTest case 5\nTest case 6\n'''\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n        'internationalization'\n        ) == 'i18n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'i18n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\nassert solution('c') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''pot\ntop\n''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nC_{11}C_{12}C_{13}\nC_{21}C_{22}C_{23}\n''') == 'YES'\n''')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"ababab\") == \"bab\"\nassert solution(\"abba\") == \"aba\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''aba\n4''') == 'b'\nprint('You passed the test!')",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcdefgh') == 'h'\nassert solution('abbcdefgh') == 'h'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aba') == 'b'\nassert solution('ab') == 'a'\nassert solution('ababab') == 'a'\nassert solution('aa') == 'a'\nassert solution('ac') == 'c'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aba') == 'b'\nassert solution('aa') == 'a'\nassert solution('abb') == 'b'\nassert solution('a') == 'a'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"xyz\") == \"y\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 21,
        "num_ids_4": 28
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aba') == 'b'\nassert solution('abca') == 'c'\nassert solution('ababc') == 'c'\nassert solution('ababcac') == 'c'\nassert solution('abac') == 'c'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abcd\") == \"b\"\nassert solution(\"abcdabc\") == \"bc\"\nassert solution(\"abcdabcbc\") == \"bc\"\nassert solution(\"abcdabcbcab\") == \"bc\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aba') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"ababa\") == \"a\"\nassert solution(\"ababa\") == \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 4 2\\n\"\n    \"2 1 1\\n\"\n    \"3 3 4\"\n) == \"9\"\n\nassert solution(\n    \"3 4 2\\n\"\n    \"3 3 4\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('3 3 4') == '9'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''5 4 2\n1 2 1\n3 3 4\n''') == '12'\nassert solution('''5 4 2\n1 2 1\n1 3 4\n''') == '12'\nassert solution('''5 4 2\n3 2 1\n1 3 4\n''') == '12'\nassert solution('''5 4 2\n2 1 1\n1 3 4\n''') == '9'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('10 10 10') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 4 2\n2 1 2\n3 3 2\n1 3 4''') == '16'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n4 4 5''') == '10'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n4 4 6''') == '8'\nassert solution('''5 4 2\n2 1 2\n3 3 2\n4 4 3''') == '9'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''\n5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''\n5 5 3\n3 1 2\n1 3 1\n''') == '6'\nassert solution('''\n5 4 2\n2 1 1\n1 3 2\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5 4 2\n2 1 1\n3 3 4\n\"\"\"\n) == \"9\"\n\nassert solution(\n\"\"\"5 4 2\n2 1 1\n3 3 4\n\"\"\"\n) == \"9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 5 2\") == \"16\"\nassert solution(\"5 5 2\") == \"16\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"10\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '1211\\n0'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 2 1\n''') == '0'\nassert solution('''\n1\n2 1 1\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    3\n    6 5 1\n    1 10 1\n    '''\n    ) == '12 11 0'\n\n'''\n\u6211\u4eec\u6765\u770b\u770b\u5728\u540c\u4e00\u4e2a\u57ce\u5e02\u4e2d\u53ef\u4ee5\u4ece\u591a\u4e2a\u70b9\u51fa\u53d1\u7684\u5154\u5b50\u7684\u79cd\u7c7b.\n\n\u4e00\u4e2a\u5154\u5b50\u5728\u4e00\u5929\u53ef\u4ee5\u88ab\u5404\u4e2a\u79cd\u7c7b\u5360\u7528\u6240\u6709\u7684\u65f6\u95f4, \u4f46\u662f\u5982\u679c\u8fd9\u4e2a\u5154\u5b50\u53c8\u8981\u88ab\u5360\u7528, \u4ed6\u4e5f\u5c31\u4e0d\u80fd\u88ab\u5176\u4ed6\u5154\u5b50\u4f7f\u7528\u4e86.\n\n\u73b0\u5728, \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4, \u8be5\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5206\u522b\u8868\u793a\u4e00\u5929\u4e2d\u7684\u7b2c i \u679a\u7b2c j \u79cd\u5154\u5b50\u7684\u6570\u76ee. \u8bf7\u4f60\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684\u5154\u5b50\u80fd\u591f\u88ab\u591a\u5c11\u79cd\u5360\u7528\u7684\u603b\u65f6\u95f4.\n\n\u89e3\u6cd5:\n\u6bcf\u5929\u90fd\u521b\u5efa\u4e00\u4e2a\u5154\u5b50\u7684\u673a\u72b6\u6001\u8868, \u7136\u540e\u8ba1\u7b97\u6bcf\u4e2a\u5154\u5b50\u80fd\u591f\u5360\u7528\u7684\u65f6\u95f4, \u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u5154\u5b50\u88ab\u5360\u7528, \u5c31\u4e0d\u80fd\u518d\u88ab\u5360\u7528\u4e86.\n\n\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6bcf\u884c\u662f\u4e00\u5929\u4e2d\u7684\u6240\u6709\u5154\u5b50\u7684\u603b\u6570\u91cf\uff0c\u6bcf\u5217\u662f\u4e00\u5929\u4e2d\u7684\u6240\u6709\u79cd\u7c7b\u7684\u5154\u5b50\u7684\u603b\u6570\u91cf.\n\n\u6bcf\u5929\u521d\u59cb\u5316\u4e00\u4e2a\u5154\u5b50\u7684\u673a\u72b6\u6001\u8868, \u5176\u4e2d\uff0c\u53ea\u6709\u7b2c\u4e00\u5217, \u7b2c\u4e00\u884c, \u6240\u6709\u5154\u5b50\u90fd\u88ab\u5360\u7528\u4e86.\n\n\u7136\u540e\u8ba1\u7b97\u603b\u7684\u65f6\u95f4\uff0c\u7528\u4e8c\u91cd\u5faa\u73af\u786e\u5b9a\u5168\u5c40\u6700\u7ec8\u7ed3\u679c\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2\n5 5 1\n1 10 1\n\"\"\") == \"12\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"5\") == \"11\"\nassert solution(\"6\") == \"0\"\n\n\"\"\"\n\nN = int(stdin.readline())\n\nlines = [stdin.readline().split() for i in range(N)]\n\nfor line in lines:\n    C_i, S_i, F_i = int(line[0]), int(line[1]), int(line[2])\n    C_i += 1\n    S_i += C_i\n    F_i += S_i\n    if C_i % F_i!= 0:\n        print(0)\n    else:\n        print((S_i*C_i) - (S_i*F_i) + (S_i - 1) + C_i)",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n6 5 1\n1 10 1\n''') == '12'\nassert solution('''\n3\n4 2 1\n1 10 1\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '12'\nassert solution('2') == '11'\nassert solution('3') == '0'\nassert solution('4') == '24'\nassert solution('5') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3]) == '12'\nassert solution([5]) == '11'\nassert solution([2]) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"**\\n**\"\nassert solution(\"3 4\") == \"*\\n**\\n*\\n**\"\nassert solution(\"3 5\") == \"**\\n**\\n*\\n*\\n*\\n*\\n\"\nassert solution(\"5 7\") == \"***\\n**\\n***\\n**\\n**\\n**\\n**\\n**\\n**\\n***\"\nassert solution(\"5 9\") == \"***\\n**\\n***\\n**\\n***\\n***\\n***\\n***\\n***\\n***\"\n",
        "num_ids_2": 34,
        "num_ids_4": 100
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '**\\n*\\n**\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"*\\n*\"\n\n2.5.3\n\nGiven a string of characters, print the character with the maximum ascii value.\n\n-----Constraints-----\n - 0\u2266a\u2266100\n - each character is either a, b, or c\n\n-----Input-----\nabc\n\n-----Output-----\nc",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == \"*****\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"*\"\nassert solution(\"2 2\") == \"*.\\n*.\\n*.\\n*.\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == \"*\\n*.\\n*.\\n*.\\n\"\n\nprint(solution('2 2'))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n.\n.\n''') == '''2 2\n.\n.\n'''\nassert solution('''6 6\n*\n*\n.\n*\n*\n''') == '''6 6\n*\n*\n*\n*\n*\n*\n'''\nassert solution('''3 2\n*\n.\n*\n''') == '''3 2\n*\n*\n*\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2\\n*.\\n.*\"\n) == \"\"\"*.\n*.\n*.\n*.\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n*.\\n.*') == '*.\\n*.\\n*.\\n*.\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n*.\\n.\\n') == '..\\n.\\n.\\n'\nassert solution('10 10\\n.\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n') == '*\\n.\\n*\\n.\\n*\\n.\\n.\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*",
        "num_ids_2": 1767,
        "num_ids_4": 1767
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n2 6 1 4 5\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('5\\n7 1 2 3 5') == 'NO'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('6') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('6\\n1 2 3 4 5 6') == 'NO'\nassert solution('5\\n3 4 5 2 1') == 'NO'\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\n\nassert solution(\"6\\n1 2 3 5 4 6\") == \"NO\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"YES\"",
        "num_ids_2": 35,
        "num_ids_4": 57
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"NO\"\nassert solution(\"2\\n3\\n4\") == \"YES\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 1 4\\n') == 'YES'\nassert solution('5\\n2 3 1 4 5\\n') == 'NO'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n3\n1 2 3''') == \"1\"\nassert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == \"2\"\nassert solution('''10\n10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20\n21 22 23 24 25 26 27 28 29 30\n31 32 33 34 35 36 37 38 39 40\n41 42 43 44 45 46 47 48 49 50\n51 52 53 54 55 56 57 58 59 60\n61 62 63 64 65 66 67 68 69 70\n71 72 73 74 75 76 77 78 79 80\n81 82 83 84 85 86 87 88 89 90\n91 92 93 94 95 96 97 98 99 100''') == \"4\"\nassert solution('''100\n100\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20\n21 22 23 24 25 26 27 28 29 30\n31 32 33 34 35 36 37 38 39 40\n41 42 43 44 45 46 47 48 49 50\n51 52 53 54 55 56 57 58 59 60\n61 62 63 64 65 66 67 68 69 70\n71 72 73 74 75 76 77 78 79 80\n81 82 83 84 85 86 87 88 89 90\n91 92 93 94 95 96 97 98 99 100''') == \"3\"\nassert solution('''10\n10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20\n21 22 23 24 25 26 27 28 29 30\n31 32 33 34 35 36 37 38 39 40\n41 42 43 44 45 46 47 48 49 50\n51 52 53 54 55 56 57 58 59 60\n61 62 63 64 65 66 67 68 69 70\n71 72 73 74 75 76 77 78 79 80\n81 82 83 84 85 86 87 88 89 90\n91 92 93 94 95 96 97 98 99 100''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution() == '3'\nassert solution() == '4'\nassert solution() == '1'\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3') == '2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 3 3\\n6\\n1 1 3 4 2 2\\n3') == '4'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3') == '1'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3') == '2'\n",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n10\n4\n1 2 3 4 5 6 7 8 9 10\n5\n2 2 1 1 3 3 3\n2\n5\n2 1 3 4\n2\n6\n1 3\n2\n7\n2 4\n7\n9\n3\n9\n1 2 3 4\n3\n10\n2 4 5\n4\n11\n5 1 1 2 2\n9\n3 4 5 6\n6\n1\n4\n4 1 2 3\n3\n6\n3 1\n4\n1 1 1 1 1\n3\n8\n3 2\n3\n2 2 2\n5\n3\n5\n2 2 1 2 2\n2\n7\n2 1 3 3 3\n2\n4\n3 1 3 1\n5\n4\n2 1 2 2 3\n5\n10\n2 1 1 1\n4\n2 2 2 2\n3\n3\n3\n1 1 1 1 1\n4\n5\n1 1 2 2\n2\n1 2 2 2\n1\n2 3 3 2\n2\n3\n2 3\n1 1 1\n1 2 2\n2\n1 1 1\n2 2 2\n2\n2 2 2\n3\n1 1 1\n3\n3\n2\n1 1 1\n1 2 2\n2\n2 2 2\n1\n2 1 2 2 2\n4\n5\n1 2 3 4 5\n2\n6\n2 1 2 3\n5\n2 3 3 4\n6\n2 3 4 5\n1\n6\n2 1 3 4\n2\n2 3 4 5\n5\n3\n5\n2 3 4 5\n4\n2 3 4 5\n5\n3\n5\n1 2 3 4\n2\n6\n2 1 3 4\n3\n3\n2 2 2 3\n2\n1 2 3 4\n3\n4\n4 1 2 3\n1\n1\n1 1 1\n3\n3\n2 2 2\n2\n1 1 1 1 1\n3\n3\n2 2 2\n3\n2 2 2\n2\n2 1 2 3\n3\n2 3 2 3\n3\n2 2 2 2\n3\n3\n2 2 2 2\n1 1 1 1 1\n3\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 1 2 3\n3\n2 3 2 3\n3\n2 2 2 2\n3\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2 2 2\n3\n2 2 2 2\n2\n2 2 2 2\n3\n2 2",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8') == '2'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3\\n6\\n1 1 3 4 2 2') == '4'\n\n\"\"\"",
        "num_ids_2": 58,
        "num_ids_4": 92
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 2 3 4 5\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\") == \"4\"\nassert solution(\"5\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n6\\n1 1 3 4 2 2\\n3\\n\") == \"4\"\nassert solution(\"5\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n6\\n1 1 3 4 2 2\\n3\\n\") == \"3\"\nassert solution(\"5\\n1 1 1 1 1 1 1 1 1\\n2\\n6\\n1 1 3 4 2 2\\n3\\n\") == \"2\"\nassert solution(\"5\\n1 1 3 4 2 2\\n2\\n6\\n1 1 3 4 2 2\\n3\\n\") == \"1\"\n",
        "num_ids_2": 90,
        "num_ids_4": 182
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '3'\nassert solution(input()) == '4'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3\n2\n4\n4 3\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''6\n7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''3\n10 10\n1 10\n1 10''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3\n1 5''') == '1'\nassert solution('''10\n4\n1 5\n22 5\n987 13\n\n''') == '2'\nassert solution('''4\n1 5\n22 5\n987 13\n\n''') == '2'\nassert solution('''5\n1 5\n22 5\n987 13\n\n''') == '1'\nassert solution('''6\n1 5\n22 5\n987 13\n\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution() == '5'\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '3'\nassert solution('2\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '1'\nassert solution('1\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '5'\nassert solution('7\\n2\\n1 5\\n22 5\\n987 13\\n') == '77'\nassert solution('4\\n8 4\\n1 2\\n3 2\\n1 3\\n3 2\\n7 2\\n5 2\\n1 6\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '5'\n\n\"\"\"\n",
        "num_ids_2": 56,
        "num_ids_4": 111
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''4\n7 3\n1 5\n22 5\n987 13\n''') == '1'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 5') == '2'\nassert solution('22 987') == '77'\nassert solution('7 3') == '3'\nassert solution('1 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"77\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('20 10') == '20 10 1 2 3 5 10 5 9 4 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\nstdin = \"\"\"4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\"\"\"\n\nprint(solution(stdin))",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2\\nabca\\n1 3') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n'\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(\"2\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\nassert solution('''3\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\nassert solution('''4\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\nassert solution('''5\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\nassert solution('''6\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n10 7\ncadfdf\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 ",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('4 2') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution('20 10 1 2 3 5 10 5 9 4') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n",
        "num_ids_2": 72,
        "num_ids_4": 116
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"1 2 1 3\"\nassert solution('2') == \"4 3 2 1 1 1 1\"\nassert solution('3') == \"3 3 2 2 2 1 1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('2 4') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution('3 7') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'",
        "num_ids_2": 71,
        "num_ids_4": 107
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"1999999994\"\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 3 4\\n\"\n    \"10 20 30\\n\"\n    \"5 5 5\\n\"\n    \"2 4 3\\n\"\n    \"1 1000000000 1000000000\\n\"\n    \"1 1000000000 999999999\\n\"\n    \"3 2 5\\n\"\n    \"3 2 6\\n\"\n) == \"0\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('2\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('5\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '1999999994'\n",
        "num_ids_2": 87,
        "num_ids_4": 134
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"2 4 3\") == \"4\"\nassert solution(\"1 1000000000 1000000000\") == \"1999999994\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n4 2 3\n5 3 6\n1 1000000000 1000000000\n1 1000000000 999999999\n2 3 5\n1 1000000000 1000000000\n1 1000000000 999999999\n''') == '1999999994'\nassert solution('''\n3 2 5\n3 2 6\n''') == '4'\nassert solution('''\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 5\") == \"0\"\nassert solution(\"3 3 4\") == \"36\"\nassert solution(\"10 20 30\") == \"9999999994\"\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5 5\n3 2 6\n3 2 6\n5 2 6\n3 2 6\n1 1000000000 1000000000\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n5 5 5\n3 2 6\n3 2 6\n5 2 6\n3 2 6\n1 1000000000 1000000000\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'\nassert solution('''\n1 1 1\n1 2 3\n4 4 5\n''') == '4'\nassert solution('''\n1 1 1\n1 2 3\n4 4 5\n''') == '4'\nassert solution('''\n3 4 5\n3 2 6\n1 1000000000 1000000000\n1 1000000000 999999999\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"2\"\nassert solution(\"2 4 3\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n3\n5\n12 13\n7\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n3\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n3\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''\n3\n5\n12 13\n7\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'YES'\nassert solution('6') == 'YES'\nassert solution('4') == 'NO'\nassert solution('1') == 'NO'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8') == 'YES'\nassert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8') == 'YES'\nassert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8') == 'NO'\n\n\n\"\"\"\nimport math\n",
        "num_ids_2": 143,
        "num_ids_4": 216
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n3\n7\n12''') == 'YES'\n\nassert solution('''1\n1\n3\n7\n12''') == 'YES'\n\nassert solution('''1\n2\n3\n4\n5''') == 'NO'\n\nassert solution('''5\n2\n1\n4\n3\n6''') == 'NO'\n\nassert solution('''4\n1\n3\n2\n6''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n11 14 16 12\n2\n1 8''') == 'YES'\nassert solution('''7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8''') == 'YES'\nassert solution('''5\n1\n2\n3\n4\n5''') == 'NO'\nassert solution('''5\n1\n2\n3\n4\n5''') == 'NO'\nassert solution('''3\n1\n2\n3''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'YES' or solution(input) == 'NO'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'NO'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4\\n11 14 16 12\") == \"YES\"\nassert solution(\"2\\n5\\n7 5 5 5 5\") == \"YES\"\nassert solution(\"2\\n8\\n3 4 7 8\") == \"YES\"\nassert solution(\"2\\n8\\n4 4 7 8\") == \"NO\"\nassert solution(\"3\\n8\\n4 4 7 8\") == \"YES\"\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('6 5 2') == '22'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5''') == '13'\nassert solution('''6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6''') == '22'\nassert solution('''8 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\n''') == '13'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"2 1 3\") == \"4\"\nassert solution(\"2 3 1\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '13'\nassert solution('2 3') == '22'\nassert solution('5 5 4') == '13'\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys\n",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == \"22\"\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == \"13\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1\n2\n6\n13\n14\n3620\n1\n\n''') == '3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n20\") == \"27\"\nassert solution(\"1\\n10\") == \"13\"\nassert solution(\"2\\n5\") == \"3\"\nassert solution(\"3\\n9\") == \"13\"\nassert solution(\"4\\n100\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '1'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('6\\n14') == '9'\nassert solution('13\\n3620') == '27'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n100000\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n100001\n\"\"\") == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n2\\n6\\n') == '3\\n9\\n'\nassert solution('1\\n6\\n') == '27\\n'\nassert solution('6\\n') == '19683\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 58
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '69'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n5\n16\n7\n24\n\"\"\") == \"7\"\nassert solution(\"\"\"\n2\n5\n2\n4\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1\n2\n5\n10\n5\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5\n7\n3\n8\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"3\\n3\\n3\\n3\") == \"3\"\nassert solution(\"4\\n4\\n4\\n4\") == \"4\"\nassert solution(\"5\\n5\\n5\\n5\") == \"5\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 3 3 3 2 2 2'\nassert solution('''6\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 2 2 2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 3 3 2 1 3\\n3 3 3 2 1 3\\n2 3 3 2 1 3\\n1 2 3 4 5\\n4 4 4 1 4\\n1\\n2 2 2 2\\n4 4 4 1 4'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '3'\nassert solution('4') == '5'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '3 3 3 2 1 3\\n3 3 3 2 1 3\\n3 3 3 2 1 3\\n2 3 3 2 1 3\\n2 2 2 2 2\\n4 4 4 1 4\\n1\\n2 2 2 2\\n4 4 4 1 4\\n5\\n5 1 2 4 3'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '3 3 3 2 1 3'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '1 1 1 1 2 2'\nassert solution('''7\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '4 4 4 3 3 2 1 1 1'\nassert solution('''8\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '4 4 4 3 3 2 1 1 1'\nassert solution('''9\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '3 4 3 2 1 3 1 1 2 1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 3 3 2 1 2 1 2 1'\nassert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 2 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n5 1 2 3 4\n2 3 1\n1\n1\n1\n2\n''') == '3 3 3 3 1'\nassert solution('''6\n5 1 2 3 4 5\n3\n2 3 1\n1\n1\n1\n4\n''') == '2 3 3 3 2'\nassert solution('''7\n5 2 2 1 3 5\n2\n3\n4\n4\n1\n4\n''') == '2 2 2 3 3 1 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution() == '1 1 1 1 1\\n2 2 2 2\\n3 3 3\\n4 4 4 1 4'\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3 3 3 2 1 3'\nassert solution('6') == '1 2 2 2'\nassert solution('6') == '2 2 2 2'\nassert solution('6') == '1 2 2 2'\nassert solution('6') == '3 3 3 2 1 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 6\n1 5\n\n''') == '8'\n\nassert solution('''\n3 5\n0 3 1\n\n''') == '7 5 -2 4 -1 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 6\n1 5\n\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 5\n0 3 1\n\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3 5\n-2 4 -1 2\n\n\"\"\") == \"5 -2 4 -1 2\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '7 5 -2 4 -1 2'\nassert solution('3 5') == '5 -2 4 -1 2'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 6\\n1 5\\n') == '8'\nassert solution('3 5\\n0 3 1\\n') == '7'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 2 3\n\"\"\"\n) == \"6\"\nassert solution(\n\"\"\"\n5 3\n1 2 3\n4 5\n\"\"\"\n) == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '7 5 -2 4 -1 2'\nassert solution('2 6') == '8'\nassert solution('1 5') == '-1 2 6 4 0 3'",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1 2 6 4 0 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"7\"\nassert solution(\"3 5\\n0 3 1\") == \"5 -2 4 -1 2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6') == '8'\nassert solution('2 6') == '-1 2 6 4 0 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7'\nassert solution('''\n1 10\n9 4\n''') == '11'\nassert solution('''\n2 10\n10 7\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'YES'\nassert solution('''\n1\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'YES'\nassert solution('''\n2\n3\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == \"NO\"\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n2\n1\n0\n2\n''') == 'YES'\nassert solution('''\n3\n4\n5\n4\n3\n4\n''') == 'NO'\nassert solution('''\n2\n3\n2\n1\n0\n1\n''') == 'YES'\nassert solution('''\n2\n3\n1\n2\n0\n1\n''') == 'NO'\nassert solution('''\n3\n3\n1\n2\n0\n1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2\n3\n3 3\n3 2\n0 0\n0 1\n1\n3 3\n\"\"\") == \"YES\"\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\nassert solution('''4\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''4\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\nassert solution('''8\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(open(0).read()) == \"YES\"\n\nassert solution(open(1).read()) == \"RUUURRRRUU\"\n\nassert solution(open(2).read()) == \"NO\"\n\nassert solution(open(3).read()) == \"RRRRUUU\"\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"NO\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n2 1\n''') == 'RUUURRRRUU'\nassert solution('''\n5 6\n3 3\n2 1\n3 3\n4 4\n4 3\n2 1\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n3 5\n3 3\n1 2\n2 2\n2 1\n''') == 'NO'\nassert solution('''\n3 4\n1 1\n2 2\n3 3\n4 4\n''') == 'YES'\nassert solution('''\n1 2\n1 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\") == \"YES\"\nassert solution(\"3\\n5\\n4 3\\n2\\n1 0\\n0 1\\n1\") == \"YES\"\nassert solution(\"5\\n3\\n5 5\\n4 3\\n2\\n1\\n0 1\") == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 75,
        "num_ids_4": 106
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1\\n') == '8'\nassert solution('500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '2128012501878'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n''') == '0'\n\nassert solution('''\n2\n2\n''') == '0'\n\nassert solution('''\n5\n1\n''') == '0'\n\nassert solution('''\n100\n100000000000000001\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n1 1''') == '8'\nassert solution('''5 2\n1 1\n500 4\n217871987498122 10\n100000000000000001 1''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"8\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n3 4\n10\n10\n\n''') == '2'\nassert solution('''\n3\n6\n7\n8\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n0\\n500\\n2128012501878\\n99999999999999999\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '8'\nassert solution(input()) == '0'\nassert solution(input()) == '500'\nassert solution(input()) == '2128012501878'",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n2\n10\n13\n''') == '0'\nassert solution('''\n5\n3\n-1\n-1\n-1\n''') == '2'\nassert solution('''\n5\n2\n3\n4\n5\n''') == '6'\nassert solution('''\n5\n3\n4\n5\n5\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n3\n1 1\n1 1\n0\n''') == '0'\nassert solution('''\n7\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n100000000000000001 1\n''') == '37'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example1) == '1'\nassert solution(example2) == '2'\nassert solution(example3) == '1'\nassert solution(example4) == '2'\nassert solution(example5) == '4'\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2\n1 0 0\n3\n0 0 1''') == '0'\nassert solution('''2\n1\n1 0''') == '2'\nassert solution('''5\n1 0 0 0 1\n3\n1 0 0''') == '4'\nassert solution('''7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\"\nprint(solution(open(\"input.txt\").read()))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n1 0 0 0 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1\n5\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '1'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '2'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 1 1') == '4'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1') == '3'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 1 1') == '2'\n",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"cbcacab\"\nassert solution(\"2\") == \"abcd\"\nassert solution(\"1\") == \"baabab\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"abcd\"\nassert solution(\"7 3\") == \"cbcacab\"\nassert solution(\"6 2\") == \"baabab\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"cb\"\nassert solution(\"3 2\") == \"bb\"\nassert solution(\"4 5\") == \"abba\"\nassert solution(\"1 100\") == \"baabab\"\nassert solution(\"1 1000\") == \"baaaaaaabbbbbbbbabaaaaaaaaaaaaabbbbbbbbbbbabaaaaaaaaa\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"cbcacab\"\nassert solution(\"3\") == \"abcd\"\nassert solution(\"4\") == \"baabab\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n7 4\n4 4\n6 2\n''') == 'cbcacab'\nassert solution('''5 3\n7 4\n4 4\n6 2\n''') == 'abcd'\nassert solution('''5 3\n7 4\n4 4\n6 2\n''') == 'baabab'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 3\n4 4\n6 2\n''') == 'cbcacab'\n\nassert solution('''\n8 5\n3 5\n9 7\n''') == 'abcd'\n\nassert solution('''\n10 5\n6 9\n9 8\n''') == 'baabab'\n\nassert solution('''\n8 0\n0 0\n0 0\n''') == 'abcd'\n\nassert solution('''\n3 5\n5 1\n3 2\n''') == 'ccbbaaa'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"aba\"\nassert solution(\"3\") == \"acbd\"\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"cbcacab\"\nassert solution(\"5\") == \"abcd\"\nassert solution(\"2\") == \"baabab\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2\n''') == 'cbcacab'\nassert solution('''3\n7 3\n4 4\n6 2\n''') == 'abcd'\nassert solution('''3\n7 3\n4 4\n6 2\n''') == 'baabab'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"cbcacab\"\nassert solution(\"4\") == \"abcd\"\nassert solution(\"6\") == \"baabab\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '''6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n4 4 3\n'''\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '''6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n4 4 3\n'''\nassert solution('''\n10\n1 3 5 7 9 2 4 8 6 5 1\n2\n1 3 5 7 9 2 4 8 6 5 1\n1\n5\n3\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10\n5\n3 1 4 1 5 9 2 6 5 3 5\n1\n2\n0\n1\n10\n9\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '2 1 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n14\n1 3 2 4 2 5 5 6 5 2 3\n3\n1 1 1\n2\n3\n4\n5\n6\n7\n8\n''') == '8 23 21'\nassert solution('''\n7\n13\n1 1 1 1 1 1 1\n2\n1 1 1\n3\n4\n5\n6\n7\n8\n''') == '7 23 21'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 23 21\") == \"1 1000 0\"\nassert solution(\"7\") == \"1 1000 0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5 3 5') == '6 23 21'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1') == '1 1000 0'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1000\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    2\n    2 1\n    6\n    1 1 1\n    7\n    1 1 1\n    \"\"\"\n) == \"23 21\"\nassert solution(\n    \"\"\"\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    2\n    2 1\n    6\n    1 1 1\n    7\n    1 1 1\n    \"\"\"\n) == \"46 45\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == stdin.strip().split('\\n')\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 4 2\n1 5\n2 3\n4\n2 1\n3\n''') == \"1 1 1\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1') == '6 23 21'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1\\n7\\n1 1 1\\n') == '2 1 2'",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '27'\nassert solution(input()) == '39'\nassert solution(input()) == '11'\nassert solution(input()) == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1') == '6'\nassert solution('5\\n1 2') == '27'\nassert solution('5\\n3 4') == '39'\nassert solution('5\\n5 5') == '11'\nassert solution('5\\n5 5 6 6 5') == '17'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n1 2\n3 4''') == '6'\nassert solution('''2 1\n1 2\n3 4''') == '27'\nassert solution('''3 1\n1 2\n3 4''') == '39'\nassert solution('''4 1\n1 2\n3 4''') == '11'\nassert solution('''5 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '17'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''3 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''4 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''6 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '''\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n3 4') == '6'\nassert solution('6\\n6 5\\n5 5 6 6 5') == '27'\nassert solution('5\\n2 1\\n1 2') == '39'\nassert solution('4\\n3 4\\n4 4\\n5 5\\n5 5 6 6 5') == '11'\nassert solution('4\\n0\\n2 2\\n4 4\\n5 5\\n6 6 5\\n7 7\\n9 9\\n10 10\\n11 11') == '17'\n",
        "num_ids_2": 39,
        "num_ids_4": 86
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '''\n\n\n\n\n\n\n\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '27'\nassert solution('''4\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '39'\nassert solution('''5\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '11'\nassert solution('''5\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '17'\nassert solution('''6\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '11'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '27'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '39'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '11'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '17'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nassert solution('''\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n2 2\n2 3\n2 4\n2 5\n2 6\n3 3\n3 4\n3 5\n3 6\n4 4\n4 5\n4 6\n5 5\n5 6\n6 6\n6 5\n5 4\n5 5\n5 4\n''') == '24'\nassert solution('''\n3 3\n2 1\n4 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n3 3\n2 1\n4 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n5\n5\n3 5\n1 3 2 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"0 2 4 7 8 11 13 14 16 17\", \"1st example\"\nassert solution(\"10 3\") == \"0 7 13 18 24 35 36 37 40 45\", \"2nd example\"\nassert solution(\"10 1\") == \"0 2 4 7 8 11 13 14 16 17\", \"3rd example\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n') == '0 2 4 7 8 11 13 14 16 17'",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '10 2\\n'\n    '7 6 18 6 16 18 1 17 17\\n'\n    '6 9 3 10 9 1 10 1 5\\n'\n) == '0 7 13 18 24 35 36 37 40 45\\n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 2\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 1\") == \"0 2 4 7 8 11 13 14 16 17\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10 2\\n\"\n    \"7 6 18 6 16 18 1 17 17\\n\"\n    \"6 9 3 10 9 1 10 1 5\\n\"\n    ) == \"0 7 13 18 24 35 36 37 40 45\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n\"\"\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\n\"\"\"\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n\"\"\") == \"0 2 4 7 8 11 13 14 16 17\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''\n0 1\n1 2 3 4\n''') == '0 2 3 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaaaabaaaaabaaaaaaaa'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == 'aaaaabaaaaabaaaaaaaa', solution(s)\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'aaaabbbbbb'\nassert solution('5 1') == 'aaba'\nassert solution('5 2') == 'aaba'\nassert solution('5 8') == 'bbaab'\nassert solution('5 10') == 'bbaab'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"aaabb\"\nassert solution(\"5 2\") == \"aabab\"\nassert solution(\"5 8\") == \"baaba\"\nassert solution(\"5 10\") == \"bbaaa\"\nassert solution(\"3 1\") == \"abb\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"aaabb\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5 1\") == \"aaabb\"\nassert solution(\"1\\n5 2\") == \"aabab\"\nassert solution(\"1\\n5 8\") == \"baaba\"\nassert solution(\"1\\n5 10\") == \"bbaaa\"\nassert solution(\"1\\n3 1\") == \"abb\"\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n5 1') == 'aaabb'\nassert solution('5 2') == 'aabab'\nassert solution('5 10') == 'abaab'\nassert solution('3 1') == 'abb'\nassert solution('3 2') == 'bab'\n",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == \"aaaaabaaaaabaaaaaaaa\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"aaabb\"\nassert solution(\"5 2\") == \"aabab\"\nassert solution(\"5 8\") == \"baaba\"\nassert solution(\"5 10\") == \"bbaaa\"\nassert solution(\"3 1\") == \"aaaaabaaaaabaaaaaaaa\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"2 1\\n1 1\\n5 1\\n1 5\\n\") == \"1\"\nassert solution(\"3 10\\n1 3 2 4 1 5 4\\n1 5 6 7 2 5 4\\n1 1\\n\") == \"10\"\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '5'\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '10'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example) == '6'\nassert solution(input) == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1\n5\n10\n1000000000\n1000000000\n5000000000\n\n1000000000\n1000000000\n1000000000\n\n20\n199\n192\n219\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n1904\n19",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n3\n2 2 4\n1 5 5 1\n2 1 1 2\n''') == '2'\nassert solution('''\n1\n1 1\n1 1\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\nassert solution('''2\n10\n100 100''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1') == '6'\n\nassert solution('5\\n100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000\\n
        "num_ids_2": 1153,
        "num_ids_4": 1153
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\n''') == '5'\nassert solution('''\n3\n2\n1\n1\n''') == '1'\nassert solution('''\n2\n3\n1\n1\n''') == '1'\nassert solution('''\n3\n1\n1\n1\n''') == '1'\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('''4 3\n1\n2\n1\n2''') == '0\\n0\\n0\\n0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0\\n0\\n0\\n0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0\\n0\\n0\\n0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0\\n0\\n0\\n0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\n\n'''\n\nimport heapq",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 3\n0\n1\n2\n2\n0\n0\n10\n\n''') == '1'\nassert solution('''\n4 3\n1\n2\n1\n2\n\n''') == '0'\nassert solution('''\n4 3\n1\n2\n1\n2\n\n''') == '0'\nassert solution('''\n4 3\n1\n2\n1\n2\n\n''') == '4'\nassert solution('''\n4 3\n1\n2\n1\n2\n\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 3\n0\n1\n2\n2\n0\n0\n10\n''') == \"1\"\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == \"0\"\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == \"0\"\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\nassert solution(\n    \"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\n    \"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1'\nassert solution('7 3') == '1'\nassert solution('4 3') == '0'\nassert solution('3 3') == '0'\n\nfrom collections import deque\n\nn, k = map(int, input().split())\na = deque([0])\n\nfor _ in range(k):\n    x = int(input())\n    a.append(x)\n\nres = a.popleft()\n\ni = 0\nwhile i < n:\n    res = res + a[0]\n    a.append(a.popleft())\n    i += 1\nprint(res)",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3\\n0\\n1\\n2\\n2') == '1\\n2\\n3\\n3'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n1\\n2\\n2\\n\") == \"1\\n2\\n3\\n4\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n4\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\n",
        "num_ids_2": 77,
        "num_ids_4": 111
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 50'\n\nassert solution('''\n5\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 50'\n\nassert solution('''\n3\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 50'\n\nassert solution('''\n5\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 50'\n\nassert solution('''\n5\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 50'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50'\n\nassert solution('''\n2 2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1 49\") == \"1 49\"\nassert solution(\"5 20 50\") == \"20 40 30 50 10\"\nassert solution(\"6 20 50\") == \"20 40 30 50 10\"\nassert solution(\"5 3 8\") == \"8 23 18 13 3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 52
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n\"\"\") == \"1 49 20 40 30 50 10\"\n\nassert solution(\"\"\"\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n\"\"\") == \"1 49 20 40 30 50 10\"\n\nassert solution(\"\"\"\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n\"\"\") == \"1 49 20 40 30 50 10\"\n\nassert solution(\"\"\"\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n\"\"\") == \"1 49 20 40 30 50 10\"\n\nassert solution(\"\"\"\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n\"\"\") == \"1 49 20 40 30 50 10\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10 26 32 20 38 44 50 8 23 18 13 3 1 10 13 4 19 22 25 16 7'\nassert solution('''\n10 2 1 49 50\n10 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 50 10 25 16 7'\nassert solution('''\n5 2 1 49 50\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 50 10 25 16 7'\nassert solution('''\n10 2 1 49 50\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 50 10 25 16 7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 49 20 40 30 50 10'\nassert solution() == '26 32 20 38 44 50 10'\nassert solution() == '8 23 18 13 3 1 10 13 4 19 22 25 16 7'\n",
        "num_ids_2": 28,
        "num_ids_4": 49
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10'\nprint(solution('''\n5 1 5\n3 4 2\n''')) == '1 2 3 4 5'\nprint(solution('''\n5 2 2\n1 1\n''')) == '1 2 1 1 1'\nprint(solution('''\n5 1 2\n1 3\n''')) == '1 3 2 2 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 1 49\n2 1 49\n5 20 50\n6 20 50\n6 3 8\n9 13 22\n\"\"\") == \"\"\"1 49 \n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\n\"\"\", \"The first example\"\n\nassert solution(\"\"\"\n6 2 19\n9 2 20\n5 3 5\n2 4 1\n3 1 2\n1 2 5\n3 1 4\n5 2 2\n\"\"\") == \"\"\"6 2 19 \n9 2 20 \n5 3 5\n2 4 1\n3 1 2\n1 2 5\n3 1 4\n5 2 2 \n\"\"\", \"The second example\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10\\n26 32 20 38 44 50 1 10 13 4 19 22 25 16 7\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 1 2''') == '1 2 3'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('7 10 9 10 4 3 7') == '7 3 4 9 10 10'\nprint('\"Run\" is the best way to get feedback on your code!')\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 2\") == \"1 2 3\"\n\n\nhttps://www.hackerrank.com/challenges/sock-merchant/problem\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('4 7 0 2 3 6') == '0 2 3 6 7 4'\nassert solution('4 8 0 2 3 6') == '0 2 3 6 7 4 8'",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"6 5 1 5 5 1\") == \"1 5 6 5\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 5 1\") == \"1 2 5 1\", \"Should be 1 2 5 1\"\nassert solution(\"4 3 2 1\") == \"1 3 2 4\", \"Should be 1 3 2 4\"\n\nn = int(stdin.readline())\n\narr = list(map(int, stdin.readline().split()))\n\nfor i in range(len(arr)):\n    arr[i] = int(arr[i])\n\narr.sort(reverse=True)\n\nfor i in range(len(arr)):\n    print(arr[i], end=\" \")\n\n\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\n\"\"\"\n\n\nn = int(input())\nlst = list(map(int, input().split()))\n\nlst.sort(reverse=True)\n\nfor i in range(n):\n    print(lst[i], end=\" \")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"5 4 2 3 1\") == \"1 2 3 4 5\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 47
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == \"YES\"\n'''\n\n\n\n\n\n\n\n\n'''\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    s=sum(a)\n    if(s%2==0):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n1\n1 1\n''') == 'NO'\n\nfrom collections import Counter\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"2 2 8 8\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'YES'\nassert solution('''5\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'YES'\nassert solution('''3\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\nassert solution('''4\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n5 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == \"YES\"\nassert solution('''\n2\n5 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('5') == 'YES'\nassert solution('10') == 'YES'\nassert solution('11') == 'NO'\nassert solution('12') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 1 4 2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7\n3\n1\n2\n5\n3\n8\n\"\"\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"\"\"\n3\n1\n3\n\"\"\") == \"3 1 3 2\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1 1 2 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"-1\"\nassert solution(\"7\") == \"3 1 4 2?\"\nassert solution(\"3\") == \"5 1 3 6 2 4 7?\"\nassert solution(\"4\") == \"3 1 4 2?\"\nassert solution(\"6\") == \"5 1 3 6 2 4 7?\"\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1 4 2 3 5\"\nassert solution(\"6\") == \"-1\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"12\") == \"5 1 4 2 3 6 7 11 8 9 10 12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"5 1 4 2 3 6\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"10\") == \"3 1 4 2\"\nassert solution(\"2\") == -1\n",
        "num_ids_2": 32,
        "num_ids_4": 41
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n10\\n2\\n4\\n6\\n7\\n') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('5\\n3\\n1\\n4\\n2\\n') == '5 1 4 2 3'\nassert solution('1\\n2\\n') == '1 2'\nassert solution('13\\n9 7 11 8 4 1 3 5 2 6 10 12\\n') == '13 9 7 11 8 4 1 3 5 2 6 10 12'\nassert solution('1\\n') == '1'\n",
        "num_ids_2": 64,
        "num_ids_4": 118
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2\n4\n6\n''') == '9 6 10 8 4 7 3 1 5 2 '\nassert solution('''\n7\n3\n4\n6\n7\n8\n9\n''') == '3 1 4 2 \n5 3 6 2 4 1 7 '''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n10\\n2\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"6\\n13\\n3\") == \"-1\"\nassert solution(\"6\\n7\\n5\") == \"5 3 6 2 4 1\"\n\nstdin = open(0)\nt = int(stdin.readline().strip())\n\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    if abs(2 - abs(n - 2)) <= 4:\n        print(\"9\", \"6\", \"10\", \"8\", \"4\", \"7\", \"3\", \"1\", \"5\", \"2\")\n    else:\n        print(-1)\n",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '5 1 4 2 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6''') == \"1\"\n\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == \"2\"\n\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\") == \"1\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\") == \"0\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\"",
        "num_ids_2": 63,
        "num_ids_4": 108
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n3 2 7 6\n3\n3 2 6''') == '1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"0\"\nassert solution(\"7\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1\n0\n''') == '1'\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"-1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\n\nassert solution('''\n4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6') == '1'\nassert solution('4\\n4\\n3 2 7 6\\n1\\n7\\n3 2 6') == '2'\nassert solution('4\\n4\\n3 2 7 6\\n1\\n7\\n2\\n1\\n7\\n3 2 6') == '-1'\nassert solution('4\\n4\\n3 2 7 6\\n1\\n7\\n2\\n1\\n7\\n3 2 6') == '0'\n",
        "num_ids_2": 57,
        "num_ids_4": 136
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 1 1 0\n1 2\n1 3\n1 4\n\n''') == '0 -1 1 -1'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '0 -1 1 -1'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '0 -1 1 -1'\nassert solution('''\n6\n0 1 1 0 0 0\n1 2\n1 3\n1 4\n1 5\n1 6\n\n''') == '2 2 2 2 1 1 0 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '0 -1 1 -1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2 '\nassert solution('4\\n0 0 1 0') == '0 -1 1 -1'\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0 1 1 1 0 0 0 0 1\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\") == \"0 -1 1 -1\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 1 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 2 1 1 0 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 -1 1 -1 1 -1'\nassert solution('3') == '0 1 -1'\n\n\"\"\"\n\nimport heapq\nimport sys\n\nsys.setrecursionlimit(10000)",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\"\nassert solution(\"10\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2 ",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '-1 1 -1 1 -1 1 2 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '1 -1 1 -1 1 2 0 2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 1 1 1 0 0 0 0 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"2\"\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"0\"\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1', 'Wrong result on first sample'\nassert solution('''4\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '12', 'Wrong result on second sample'\nassert solution('''5\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1', 'Wrong result on third sample'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '2'\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''6\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '0'\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''10\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"36\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '-1'\nassert solution('12345') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '36'\nassert solution('12345') == '1236'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '1'\nassert solution('12345') == '36'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"36\"\nassert solution(\"12345\") == \"36\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\nB\n''') == '0'\nassert solution('''\n1\n2\nB\n''') == '1'\nassert solution('''\n2\n3\nG\n''') == '1'\nassert solution('''\n4\n5\nR\n''') == '1'\nassert solution('''\n4\n5\nR\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 2\\n'\n    'BGGGG\\n'\n    '5 3\\n'\n    'RBRGR\\n'\n    '5 5\\n'\n    'BBBRR\\n') == '1'\n\nassert solution(\n    '10 2\\n'\n    'BBBRRRRRRRR\\n'\n    '5 5\\n'\n    'BBRRRRRRRRR\\n'\n    'BBBBBBBBBBB\\n'\n    'BBBBBBBBBBB\\n'\n    'BBBBBBBBBBB\\n'\n    'BBBBBBBBBBB\\n'\n    'BBBBBBBBBBB\\n'\n    'BBBBBBBBBBB\\n'\n    'BBBBBBBBBBB\\n') == '3'\n\nassert solution(\n    '6 3\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n'\n    'BBBBBBBBBBBBBB\\n') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nBGGGG\\n5 3\") == \"0\"\nassert solution(\"5 2\\nBGGG\\n5 3\") == \"3\"\nassert solution(\"5 2\\nBGB\\n5 3\") == \"3\"\nassert solution(\"5 2\\nBGBG\\n5 3\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2\\nGGG\\nBBB\\nGG') == \"0\"\nassert solution('5 3\\nRBRG\\nGGG\\nBBB\\nBB') == \"3\"\nassert solution('4 5\\nBGB\\nBBB\\nBBB\\nBB') == \"2\"\nassert solution('10 20\\nRRRBBBBBBR\\nBBBBB\\nRRRRRRRRRRRRRRRRR') == \"4\"\n\n\n'''",
        "num_ids_2": 49,
        "num_ids_4": 110
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\nBGGGG\") == \"0\"\nassert solution(\"5 3\\nRBRGR\") == \"1\"\nassert solution(\"5 5\\nBBBRR\") == \"3\"\n",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '1'\nassert solution('''3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '0'\nassert solution('''3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"GGG\") == \"2\"\nassert solution(\"B\") == \"0\"\nassert solution(\"RGB\") == \"1\"\nassert solution(\"RB\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3\n1 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n1\n1 1\n''') == '2'\nassert solution('''\n1\n0\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '3'\nassert solution('10') == '3'\nassert solution('1000') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n3\n5\n3 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '2'\nassert solution('''\n3\n5\n3 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '2'\nassert solution('''\n3\n5\n3 2 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n5\n2 1 1 1 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''\n2\n5\n1 1 1 1 1\n7\n1 1 1 1 1 2 2\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"6\\n10\\n1 2 4 5 8 10\\n100\\n
        "num_ids_2": 1517,
        "num_ids_4": 1517
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1 2 3\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''10\n3\n0 0 0 0 0 0 0 0 0 0''') == '9'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 1 2 2\n''') == '4'\nassert solution('''4\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 1 2 2\n''') == '2'\nassert solution('''4\n5\n3 1 2 3 1\n7\n1 1 1 1 1 1 1 1 2 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\") == \"1 2 4 3 5\\n1 2 3 4 5\\n1\\n1 4 3 2\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1 5 2 4 3'\nassert solution('4') == '1 2 4 3'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 4 1 3 2\") == \"1 5 2 4 3\"\nassert solution(\"4\\n4 3 2 1\") == \"1 2 3 4\"\n\n----\n\nfrom functools import reduce\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''\n4\n4 3 2 1\n4\n1 2 3 4\n''') == '1 2 3 4 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n    \"\"\"\n) == \"1 5 2 4 3\"\nprint(solution(\"\"))",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5 4 1 3 2\") == \"1 5 2 4 3\"\nassert solution(\"4\\n1 2 4 3\") == \"1 2 3 4\"\nassert solution(\"2\\n2 2\") == \"2\"\nassert solution(\"3\\n4\") == \"4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 3 5 2 4'\nassert solution(input()) == '1 2 3 4 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''\n3\n2 4 1\n2 4 1\n''') == '2 4 1 2'\nassert solution('''\n4\n2 2 2 3\n2 2 2 2\n''') == '2 2 2 2'\nassert solution('''\n2\n1\n1\n''') == '1'\nassert solution('''\n2\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''5\n4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''5\n4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''5\n4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''5\n4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3 2 1', \"Wrong solution\"\nassert solution('5') == '5 4 1 3 2', \"Wrong solution\"\nassert solution('5 4 1 3 2') == '1 5 2 4 3', \"Wrong solution\"\nassert solution('1 2 3 4') == '1 2 3 4', \"Wrong solution\"\nassert solution('4') == '4 3 2 1', \"Wrong solution\"\n",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"\n\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"\n\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"\n\nassert solution('''\n4\n3\n1 2 3\n2\n1 3\n4\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"\n\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\", \"Test\"\nassert solution(\"4\") == \"YES\", \"Test\"\nassert solution(\"1 2 3 4\") == \"YES\", \"Test\"\nassert solution(\"3\") == \"YES\", \"Test\"\nassert solution(\"5\") == \"NO\", \"Test\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"NO\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\\nYES\"\n",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n3\\n1\\n1\\n\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4\\n1\\n5\\n\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4\\n1\\n4\\n\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4\\n1\\n4\\n\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4\\n1\\n3\\n\") == \"NO\"\n",
        "num_ids_2": 51,
        "num_ids_4": 105
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\\n\"\n) == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == 'YES'\nassert solution('5\\n5\\n1 2 3 4\\n3\\n1 3 2') == 'NO'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n1 2 3 4\") == \"YES\"\nassert solution(\"3\\n4\\n1 2 3\") == \"NO\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n4\n1 2\n5\n1 3\n1 5''') == 'YES'\nassert solution('''3\n1 2 3\n4\n1 2\n5\n1 3\n1 5''') == 'YES'\nassert solution('''5\n1 2 3 4 5\n3\n1 2 3 4\n1\n1\n5\n3 2 1 5 4\n3\n1 2 3 4\n1\n1\n5\n3 2 1 5 4\n3\n1 2 3 4\n1\n1\n5''') == 'NO'\nassert solution('''5\n1 2 3 4 5\n3\n1 2 3 4\n1\n1\n5\n3 2 1 5 4\n3\n1 2 3 4\n1\n1\n5''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"75015\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"75015\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"19 4\") == \"18\"\nassert solution(\"12 7\") == \"10\"\nassert solution(\"6 2\") == \"75015\"\nassert solution(\"100000 50010\") == \"75015\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"12 7\") == \"10\"\nassert solution(\"100000 50010\") == \"75015\"\nassert solution(\"3 1\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n1 1\n2 2\n''') == '2'\nassert solution('''\n1 1000000\n3 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '7'\nassert solution('100000 50010') == '75015'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '75015'\nassert solution('100000 50010') == '75015'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n3 1\n3\n1\n4\n3\n''') == '5'\nassert solution('''\n10 4\n12 7\n13 2\n9 5\n3 2\n3 4\n2 2\n3 7\n4 2\n4 2\n4 2\n5 3\n5 3\n''') == '18'\nassert solution('''\n12 7\n12 7\n9 2\n5 3\n3 2\n2 4\n2 3\n2 4\n3 2\n4 2\n4 2\n''') == '10'\nassert solution('''\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n5 2\n19 4\n12 7\n6 2\n100000 50010\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4\n5 2\n7 4\n12 7\n6 2\n\"\"\") == \"6\"\nassert solution(\"\"\"\n6\n3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10\n10 10\n\"\"\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 2') == '18'\nassert solution('5 2') == '10'\nassert solution('5 2') == '75015'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\"\"\") == \"YES 4 2 4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"YES\"\nassert solution(\"10 3\") == \"YES\"\nassert solution(\"100 4\") == \"YES\"\nassert solution(\"8 7\") == \"YES\"\nassert solution(\"97 2\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1'\nassert solution('''10\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1'\nassert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nprint(solution(input()))\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"5 3\") == \"YES\"\nassert solution(\"1000000000 9\") == \"YES\"\nassert solution(\"10 3\") == \"NO\"\nassert solution(\"8 7\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution(\"\"\"1 2 3\n1 4 5\"\"\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '55'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '5500000000000000'\nassert solution('''\n1 2 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '15000000000000000'\nassert solution('''\n1 3 5\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '5100000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"55\\n15000000000000000\\n51\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n1 1 2\n1 1 2\n1 1 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 10 100') == '55'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51'\n",
        "num_ids_2": 24,
        "num_ids_4": 41
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '55'\n\nassert solution('''\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '51'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '550000000000000'\nassert solution('''\n1 2 3\n1 10 100\n''') == '1000000000000000'\nassert solution('''\n2 3 4\n1 10 100\n''') == '1000000000000000'\nassert solution('''\n2 3 4\n1 10 100\n''') == '1000000000000000'\nassert solution('''\n3 3 4\n1 10 100\n''') == '1000000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45''') == '55000000000000000'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n1 3 5\n1 100 500\n1 100 5000\n''') == '5000'\n\nassert solution('''\n2 1 7\n1 1000 70000\n1 1000 10000\n''') == '1000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == \"6\"\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == \"3\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 5') == '7'\nassert solution('7 1000') == '6'\nassert solution('5 4') == '8'\nassert solution('abcbac') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '4'\n\nassert solution(\n'''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '15'\n\nassert solution(\n'''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\n\nassert solution(\n'''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\n\nassert solution(\n'''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"abca\") == \"abca\"\nassert solution(\"7 1000\") == \"1000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('7 1000') == '1000'\nassert solution('5 4') == '4'\nassert solution('abcbac') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6 3\\n\"\n    \"abcbac\\n\"\n    \"3 6\\n\"\n    \"aaa\\n\"\n    \"7 1000\\n\"\n    \"abczgyo\\n\"\n    \"5 4\\n\"\n    \"ababa\\n\"\n    \"20 10\\n\"\n    \"aaebdbabdbbddaadaadc\\n\") == \"6\"\nassert solution(\n    \"6 3\\n\"\n    \"abcbac\\n\"\n    \"3 6\\n\"\n    \"aaa\\n\"\n    \"7 1000\\n\"\n    \"abczgyo\\n\"\n    \"5 4\\n\"\n    \"ababa\\n\"\n    \"20 10\\n\"\n    \"aaebdbabdbbddaadaadc\\n\") == \"3\"\nassert solution(\n    \"6 3\\n\"\n    \"abcbac\\n\"\n    \"3 6\\n\"\n    \"aaa\\n\"\n    \"7 1000\\n\"\n    \"abczgyo\\n\"\n    \"5 4\\n\"\n    \"ababa\\n\"\n    \"20 10\\n\"\n    \"aaebdbabdbbddaadaadc\\n\") == \"5\"\nassert solution(\n    \"6 3\\n\"\n    \"abcbac\\n\"\n    \"3 6\\n\"\n    \"aaa\\n\"\n    \"7 1000\\n\"\n    \"abczgyo\\n\"\n    \"5 4\\n\"\n    \"ababa\\n\"\n    \"20 10\\n\"\n    \"aaebdbabdbbddaadaadc\\n\") == \"4\"\nassert solution(\n    \"6 3\\n\"\n    \"abcbac\\n\"\n    \"3 6\\n\"\n    \"aaa\\n\"\n    \"7 1000\\n\"\n    \"abczgyo\\n\"\n    \"5 4\\n\"\n    \"ababa\\n\"\n    \"20 10\\n\"\n    \"aaebdbabdbbddaadaadc\\n\") == \"15\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"15\"\nassert solution(stdin) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"4 6\") == \"5\"\nassert solution(\"5 4\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1 1\nab\n2 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10 5\naaaa\n3 6\naabab\n1 1\naaaa\n5 4\naaaa\n2 1\naaaa\n2 5\naaaa\n3 4\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc') == '3'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1\n100\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1\n100\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '1 3 5'\nassert solution('5 4') == '1 3 5'\nassert solution('6 2') == '1 2 8'\nassert solution('6 2') == '1 2 8'\nassert solution('6 2') == '1 2 8'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4') == 'YES\\n1 3 5\\nNO'\nassert solution('3\\n4 3\\n3 3\\n3 3') == 'YES\\n1 2 3\\nNO'\nassert solution('5\\n5 1') == 'NO'\nassert solution('5\\n5 1') == 'YES'\nassert solution('5\\n5 1') == 'NO'\n",
        "num_ids_2": 63,
        "num_ids_4": 91
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES\\n1 3 5\\nNO\\nNO\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 5') == 'YES'\nassert solution('2 2') == 'NO'\nassert solution('4 4') == 'YES'\nassert solution('6 2') == 'NO'",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n10 5\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 10\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 10\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2\\n3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n') == 'YES\\n1 3 5\\nNO\\nNO\\nNO'\nassert solution('4\\n4 1\\n6 2\\n2 8\\n4\\n1 2 3\\n3 4 5\\n1 6\\n5\\n1 2 3\\n3\\n1 2 3 4\\n4\\n3\\n5\\n4\\n1 2 3 4\\n6\\n6\\n') == 'YES\\n1 3 5\\n1 2 3 4\\n3 4 5\\n1 2 3\\nNO\\nYES\\nYES'\n",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n3\n3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 5') == '1 3 5'\nassert solution('5 4') == '1 2 3 4 5'\nassert solution('6 2') == '1 2 8 4 10 2'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n\") == \"YES\\n1 3 5\\n\"\nassert solution(\"3\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n\") == \"YES\\n1 3 5\\n\"\nassert solution(\"5\\n8 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n\") == \"NO\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 109
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0101') == '0011'\nassert solution('1011000101') == '1110001011'\nassert solution('1101101100111111111111111111101') == '10111111111111111111111111111111'\nassert solution('111111111111111111111111111111111') == '111111111111111111111111111111111'\nassert solution('110110110011111111111111111110111') == '1110001011'\n",
        "num_ids_2": 28,
        "num_ids_4": 81
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nReverse bits of a given 32 bits unsigned integer.\n\nNote that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.\n\nIn Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.\n\nFollow up:\n\nIf this function is called many times, how would you optimize it?\n\nExample 1:\n\nInput: n = 00000010100101000001111010011100\nOutput:    964176192 (00111001011110000010100101000000)\nExplanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.\n\nExample 2:\n\nInput: n = 11111111111111111111111111111101\nOutput:   3221225471 (10111111111111111111111111111111)\nExplanation: The input binary string 11111111111111111111111111111101 represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is 10111111111111111111111111111111. \n\nConstraints:\n\nThe input must be a binary string of length 32\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"101010101\") == \"964176192\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"10111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"11100111111111111111111111111111\") == \"3221225471\"\nassert solution(\"110111111111111111111111111111111\") == \"3221225471\"\n",
        "num_ids_2": 31,
        "num_ids_4": 73
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00111001011110000010100101000000\") == 964176192\nassert solution(\"0110110010011100111001111110001110101001\") == 3221225471\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('101') == '101'\nassert solution('111') == '111'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1001101001\") == \"10111111111111111111111111111111\"\nassert solution(\"1011\") == \"1001101001\"\nassert solution(\"000000000000000000000000\") == \"000000000000\"\nassert solution(\"00000000000000000000000000000000000000000000000000000000\") == \"0000000000000000000000000000\"\n",
        "num_ids_2": 35,
        "num_ids_4": 62
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"11\") == \"1001\"\nassert solution(\"100\") == \"1000\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"111\"\nassert solution(\"100\") == \"100\"\nassert solution(\"1111\") == \"1111\"\nassert solution(\"\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '964176192'\nassert solution(input()) == '3221225471'\nassert solution(input()) == '43261596'\nassert solution(input()) == '8589934592'\nassert solution(input()) == '137438953472'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == \"\\n\".join(\n    [\"1\", \"1,1\", \"1,2,1\", \"1,3,3,1\", \"1,4,6,4,1\"])",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"[1, 1, 2, 1, 3, 2, 1]\\n\"\nassert solution(\"4\") == \"[1, 4, 6, 4, 1, 1, 1]\\n\"\nassert solution(\"3\") == \"[1, 1, 2, 1]\\n\"\nassert solution(\"2\") == \"[1, 2, 1]\\n\"\nassert solution(\"1\") == \"[1]\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 86
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1'])\n\n\n'''\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        elif numRows == 1:\n            return [[1]]\n        else:\n            prev = self.generate(numRows - 1)\n            return self.generate_helper(prev, numRows)\n\n\n    def generate_helper(self, prev, numRows):\n        n = len(prev)\n        next = []\n        for i in range(n):\n            if i == 0:\n                next.append(1)\n            else:\n                next.append(prev[i - 1] + prev[i])\n        return next + prev\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\\n1\\n1\\n2\\n3\\n\", \"should be 1\\n1\\n1\\n2\\n3\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == stdin\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution(2) == [[1], [1, 1]]",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(5) == \"1\\n1\\n1\\n2\\n3\\n\"\n\n\n\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '\\n'.join(map(''.join, pascal(5)))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n''') == '''\n[\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '\\n'.join([\n    '1',\n    '1 1',\n    '1 2 1',\n    '1 3 3 1',\n    '1 4 6 4 1'\n])",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\na@b.c\\nabc@def.ghi\\nabc@def.g\\nabc@def.g\\n\\n\\nabc@def\\nabc@def\\nabc@def\\n') == ['abc@def.g', 'abc@def.ghi', 'abc@def.g', 'abc@def.g', 'abc@def', 'abc@def', 'abc@def.g']\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"No email address given\"\nassert solution(\"1\\n\") == \"No email address given\"\nassert solution(\"1\\n\") == \"No email address given\"\nassert solution(\"1\\n\") == \"No email address given\"\nassert solution(\"1\\n\") == \"No email address given\"\n\n===========================================",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com''') == [\"ajib@gmail.com\", \"ajib@gmail.com\", \"ajib@gmail.com\"]\nassert solution('''3\najib@gmail.com\najib@gmail.com\najib@gmail.com''') == [\"ajib@gmail.com\"]\nassert solution('''0\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com''') == [\"ajib@gmail.com\"]\nassert solution('''10\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com''') == [\"ajib@gmail.com\",\"ajib@gmail.com\",\"ajib@gmail.com\"]\nassert solution('''5\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com\najib@gmail.com''') == [\"ajib@gmail.com\",\"ajib@gmail.com\",\"ajib@gmail.com\"]\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\nusername@websitename.extension\nusername2@websitename.extension\nusername3@websitename.extension\n''') == '''username@websitename.extension''', solution('''\n10\nusername2@websitename.extension\nusername2@websitename.extension\nusername2@websitename.extension\n''') == '''username2@websitename.extension''', solution('''\n10\nusername@websitename.extension\nusername3@websitename.extension\nusername2@websitename.extension\n''') == '''username2@websitename.extension,username@websitename.extension''', solution('''\n10\nusername3@websitename.extension\nusername3@websitename.extension\nusername3@websitename.extension\n''') == '''username3@websitename.extension,username3@websitename.extension,username2@websitename.extension''', solution('''\n10\nusername@websitename.extension\nusername3@websitename.extension\n''') == '''username@websitename.extension'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\na@abc.com\nb@def.com\nc@ghi.com\n''') == 'abcdefghi'\n=====Sample Test Case 1=====\nInput\n\n6\nabcd@xyz.com\nabc@def.com\nabcd@abc.com\nadcb@def.com\nadcb@xyz.com\nacb@def.com\nOutput\n\nabcdefghi\nExpected\n\nabcdefghi\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1@a.com\\n2@b.com\\n') == ['1@a.com', '2@b.com']\nassert solution('1\\n1@a.com\\n2@b.com\\n') == ['1@a.com']\nassert solution('5\\n@a.com\\n@a.com\\n@a.com\\n@a.com\\n@b.com\\n@b.com\\n') == []",
        "num_ids_2": 67,
        "num_ids_4": 113
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1@gmail.com\") == [\"1@gmail.com\"]\nassert solution(\"4\\n2@gmail.com\") == [\"2@gmail.com\",\"2@gmail.com\"]\nassert solution(\"5\\n3@gmail.com\") == [\"3@gmail.com\",\"3@gmail.com\"]\nassert solution(\"6\\n4@gmail.com\") == [\"4@gmail.com\",\"4@gmail.com\"]\nassert solution(\"7\\n5@gmail.com\") == [\"5@gmail.com\",\"5@gmail.com\"]\n",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"['james@hackerrank.com', 'kate@hackerrank.com']\"\n\nNote: If you don't get the correct answer, try debugging your code using the Sample Input and Sample Output.\n\nInput Format\n\nInput contains a single line of input containing an integer N.\n\nConstraints\n\n0 \u2264 N \u2264 10\n\nOutput Format\n\nPrint the list in lexicographically sorted order, otherwise print the empty list.\n\nSample Input 0\n\n5\njames@hackerrank.com\njames@hackerrank.com\njames@hackerrank.com\nkate@hackerrank.com\nkate@hackerrank.com\n\nSample Output 0\n\n['kate@hackerrank.com', 'james@hackerrank.com']\n\nExplanation 0\n\nSample Input 1\n\n4\ndavid@microsoft.com\njames@trello.com\ntom@amazon.com\njane@yahoo.com\n\nSample Output 1\n\n['david@microsoft.com', 'james@trello.com', 'jane@yahoo.com', 'tom@amazon.com']\n\nExplanation 1\n\nSample Input 2\n\n5\nbrian@sap.com\nlaura@yahoo.com\ndave@gmail.com\ndavid@microsoft.com\ntom@amazon.com\n\nSample Output 2\n\n['david@microsoft.com', 'laura@yahoo.com', 'brian@sap.com', 'dave@gmail.com', 'tom@amazon.com']\n\nExplanation 2\n\n=====Solution=====\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\njane@jane.com\\njordan@jordan.com\") == [\"jane@jane.com\", \"jordan@jordan.com\"]\nassert solution(\"2\\njane@jane.com\\njordan@jordan.com\\njordan@jordan.com\") == []\nassert solution(\"3\\njane@jane.com\\njordan@jordan.com\\njordan@jordan.com\\njordan@jordan.com\") == [\"jane@jane.com\", \"jordan@jordan.com\"]\nassert solution(\"1\\njane\") == [\"jane\"]\nassert solution(\"2\\njane\\njordan\") == []\n",
        "num_ids_2": 78,
        "num_ids_4": 154
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == ['user@gmail.com', 'user2@gmail.com', 'user3@gmail.com', 'user4@gmail.com', 'user5@gmail.com']\nassert solution('4') == ['user1@gmail.com', 'user2@gmail.com', 'user3@gmail.com', 'user4@gmail.com']\n\n\n==========  \n\nInput:\n5\nuser@gmail.com\nuser2@gmail.com\nuser3@gmail.com\nuser4@gmail.com\nuser5@gmail.com\n\nOutput:\n['user1@gmail.com', 'user2@gmail.com', 'user3@gmail.com', 'user4@gmail.com', 'user5@gmail.com']\n\n\n==========\n\nInput:\n4\nuser1@gmail.com\nuser2@gmail.com\nuser3@gmail.com\nuser4@gmail.com\n\nOutput:\n['user1@gmail.com', 'user2@gmail.com', 'user3@gmail.com', 'user4@gmail.com']\n\nInput:\n6\nuser1@gmail.com\nuser2@gmail.com\nuser3@gmail.com\nuser4@gmail.com\nuser5@gmail.com\nuser6@gmail.com\nuser7@gmail.com\nuser8@gmail.com\nuser9@gmail.com\n\nOutput:\n['user1@gmail.com', 'user2@gmail.com', 'user3@gmail.com', 'user4@gmail.com', 'user5@gmail.com', 'user6@gmail.com', 'user7@gmail.com', 'user8@gmail.com', 'user9@gmail.com']\n\n\n>>>>",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '12288'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == ['0', '1', '8', '27', '64']\nassert solution('6') == ['0', '1', '4', '25', '36', '81']\n\"\"\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 5, 2, 1, 4]) == [8, 27, 4, 1, 64]\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"12\"\nassert solution(\"10\") == \"3628800\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == [0, 1, 1]\nassert solution('3') == [0, 1, 1, 2]\n\"\"\"\n\nn = int(input())\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == ['0', '1', '8', '27', '64']\n\n>>>>>>> 1e6c1d3b6d4803c7fd4cb3f43f9f138927c54e76\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5]) == [0, 1, 1, 8, 27]\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 6, 10, 15, 21]) == ['45', '55', '66', '81', '102']\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == [\"0\", \"1\", \"1\", \"8\", \"27\"]\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(0) == [\"0\", \"1\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\"]\nassert solution(3) == [\"0\", \"1\", \"1\", \"4\", \"9\", \"27\"]\nassert solution(7) == [\"0\", \"1\", \"1\", \"8\", \"27\", \"561\", \"3485\"]\n",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n<A><B/><C/></A>') == '3'\nassert solution('5\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>') == '3'\nassert solution('5\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>') == '4'\nassert solution('5\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>') == '4'\nassert solution('5\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>\\n<A><B/><C/></A>') == '3'\n",
        "num_ids_2": 85,
        "num_ids_4": 235
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Suresh's First Blog</title>\n  <subtitle>Hello World!</subtitle>\n  <link rel=\"alternate\" href=\"http://suresh.com/hello-world/\" type=\"text/plain\"/>\n  <updated>2013-08-12T13:25:13Z</updated>\n</feed>''') == \"2\"\n\n''''''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer News</title>\n<subtitle lang='en'>Developer</subtitle>\n<url>https://developer.mozilla.org/en-US/docs/Learn/XML/</url>\n<updated>2013-12-16T00:00:00</updated>\n</feed>''') == 3\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer News</title>\n<subtitle lang='en'>Developer</subtitle>\n<url>https://developer.mozilla.org/en-US/docs/Learn/XML/</url>\n<updated>2013-12-16T00:00:00</updated>\n<entry>\n<title>First entry</title>\n<content lang='en'>Second entry</content>\n<subtitle lang='en'>Subtitle</subtitle>\n<updated>2013-12-17T00:00:00</updated>\n</entry>\n<entry>\n<title>Second entry</title>\n<content lang='en'>Third entry</content>\n<subtitle lang='en'>Subtitle</subtitle>\n<updated>2013-12-18T00:00:00</updated>\n</entry>\n<entry>\n<title>Third entry</title>\n<content lang='en'>Fourth entry</content>\n<subtitle lang='en'>Subtitle</subtitle>\n<updated>2013-12-19T00:00:00</updated>\n</entry>\n</feed>''') == 4\n=====Solution by me=====\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of XML</subtitle>\n<link rel='alternate' href='http://www.w3schools.com/xml/default.asp'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == '3'\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of XML</subtitle>\n<link rel='alternate' href='http://www.w3schools.com/xml/default.asp'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == '3'\n\n'''\n=========================\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert Solution().solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of XML</subtitle>\n<link rel='alternate' href='http://www.w3schools.com/xml/default.asp'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == '3'\nassert Solution().solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial showing the use of XML</subtitle>\n<link rel='alternate' href='http://www.w3schools.com/xml/default.asp'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == '3'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n<title>Some XML</title>\n<link rel=\"alternate\" hreflang=\"en\" href=\"http://example.com/alternate\"/>\n</feed>\n''') == 1\n\n\n''' Read input as specified in the question.\n    Print output as specified in the question.\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n<feed xml:lang=\"en\">\\n  <title>XML Developer\\'s Guide</title>\\n  <link rel=\"alternate\" href=\"https://www.w3schools.com/xml/default.asp\">\\n  <updated>2013-12-25T09:02:00</updated>\\n</feed>\\n') == '3'\nassert solution('4\\n<feed xml:lang=\"en\">\\n  <title>XML Developer\\'s Guide</title>\\n  <link rel=\"alternate\" href=\"https://www.w3schools.com/xml/default.asp\">\\n  <updated>2013-12-25T09:02:00</updated>\\n</feed>\\n') == '2'\nassert solution('4\\n<feed xml:lang=\"en\">\\n  <title>XML Developer\\'s Guide</title>\\n  <link rel=\"alternate\" href=\"https://www.w3schools.com/xml/default.asp\">\\n  <updated>2013-12-25T09:02:00</updated>\\n</feed>\\n') == '1'\n=====Test Case 2\n\nWrite 5 lines of code to test the correctness of solution:\n=====Problem Statement=====\nYou are given an integer,N. You need to print a new integer which is the sum of its digits.\n\n=====Input Format=====\nThe first line contains an integer,N.\n\n=====Output Format=====\nPrint a single integer denoting the new integer.\n\nimport math\n",
        "num_ids_2": 182,
        "num_ids_4": 273
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == \"2\"\nassert solution(\"\"\"\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n    <entry>\n        <title>Welcome to HackerRank</title>\n        <subtitle lang='en'>A warm welcome to our online course.</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <content type='html'>\n            <p>Congratulations on your first Hackerrank Problem!</p>\n        </content>\n    </entry>\n    <entry>\n        <title>Best Practice</title>\n        <subtitle lang='en'>The best way to code is to practice.</subtitle>\n        <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n        <updated>2013-12-25T12:00:00</updated>\n        <content type='html'>\n            <p>We are glad you chose Hackerrank as your first Hackerrank problem!</p>\n        </content>\n    </entry>\n</feed>\n\"\"\") == \"2\"\n\"\"\"\nSample Test Cases\nInput\n\nOutput\n\nHint: For a given XML document, you have to calculate the level of nesting in it. \nThe root has depth 0 and the document has the maximum level of nesting as 2. \nA child has depth 1 and the parent has a maximum level of 2. \nA grandchild has depth 2 and the parent has a maximum level of 3. \nThe first child is printed and has depth 1 and the second child is printed and has depth 2. \nand so on.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('<a><b></b><c/></a>') == 1\nassert solution('<a><b></b><c/><d><e></e></d></c></a>') == 2\nassert solution('<a><b><c><d><e></e></d></c></b></a>') == 3\n\n'''\n",
        "num_ids_2": 48,
        "num_ids_4": 76
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/2000/WD-xml-20001006'/>\n<link rel='alternate' type='application/rss+xml' href='http://www.feedreader.com/blog/xml.rss'/>\n</feed>\"\"\") == \"2\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/2000/WD-xml-20001006'/>\n<link rel='alternate' type='application/rss+xml' href='http://www.feedreader.com/blog/xml.rss'/>\n<category>\n<title>World</title>\n</category>\n<category>\n<title>Sports</title>\n</category>\n</feed>\"\"\") == \"1\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/2000/WD-xml-20001006'/>\n<link rel='alternate' type='application/rss+xml' href='http://www.feedreader.com/blog/xml.rss'/>\n<category>\n<title>World</title>\n</category>\n<category>\n<title>Sports</title>\n</category>\n</feed>\"\"\") == \"3\"\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML Developer's Guide</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3.org/TR/2000/WD-xml-20001006'/>\n<link rel='alternate' type='application/rss+xml' href='http://www.feedreader.com/blog/xml.rss'/>\n<category>\n<title>World</title>\n</category>\n<category>\n<title>Sports</title>\n</category>\n</feed>\"\"\") == \"2\"\n=======\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n<data>\n    <animal>\n        <name>horse</name>\n    </animal>\n    <pet>\n        <owner>John Smith</owner>\n        <age>4</age>\n        <animal>\n            <name>goat</name>\n        </animal>\n    </pet>\n    <pet>\n        <owner>Bill Smith</owner>\n        <age>7</age>\n        <animal>\n            <name>goose</name>\n        </animal>\n    </pet>\n</data>\n''') == 2\nassert solution('''\n<data>\n    <animal>\n        <name>horse</name>\n        <owner>John Smith</owner>\n        <age>4</age>\n        <animal>\n            <name>goat</name>\n        </animal>\n    </animal>\n    <pet>\n        <owner>Bill Smith</owner>\n        <age>7</age>\n        <animal>\n            <name>goose</name>\n        </animal>\n    </pet>\n</data>\n''') == 2\n'''\n\nXML\nDocument\n\n<data>\n    <animal>\n        <name>horse</name>\n        <owner>John Smith</owner>\n        <age>4</age>\n        <animal>\n            <name>goat</name>\n        </animal>\n    </animal>\n    <pet>\n        <owner>Bill Smith</owner>\n        <age>7</age>\n        <animal>\n            <name>goose</name>\n        </animal>\n    </pet>\n</data>\n\n=====Solution=====\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\n'\nprint(solution())\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n738476895\\n73456895\\n738476895\\n73456895\\n738476895\\n73456895') == 'YES\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('10\\n73456895\\n738476895\\n73456895\\n738476895\\n73456895\\n738476895\\n73456895') == 'YES\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\n=====Submission Output=====\nYES\nNO\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\n",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 8592 8592 8592\") == \"YES\\nYES\\nYES\\nNO\"\nassert solution(\"2 2 2\") == \"NO\\nNO\\nNO\\nYES\"\nassert solution(\"2 4 4\") == \"NO\\nNO\\nNO\\nYES\"\nassert solution(\"6 7 7\") == \"YES\\nYES\\nYES\\nYES\"\n",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n91 916 838 47 66\") == \"YES\"\nassert solution(\"2\\n7 838 47 66\") == \"NO\"\n=====Sample Input 1=====\n3\n91 916 838\n47 66\n88 33\n\n=====Sample Output 1=====\nYES\nNO\nYES\n\n=====Explanation 1=====\nString '91 916 838' is valid mobile number since it starts with 7, 9, 1, 6 and ends with 8, 3, 4, 0.\n\nString '47 66' is valid mobile number since it starts with 8 and ends with 4.\n\nString '88 33' is invalid mobile number since it starts with 8 and ends with 0.\n\nhttps://www.hackerrank.com/challenges/validate-a-roman-number/problem\n====================================================\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 8\\n91010\\n91011\") == \"NO\"\nassert solution(\"7 8\\n91010\\n91011\") == \"YES\"\nassert solution(\"7 8\\n91011\") == \"NO\"\nassert solution(\"7 8\\n91012\") == \"NO\"\nassert solution(\"7 8\\n91012\") == \"YES\"\n=====SAMPLE RUNS=====\n2\n91010\n91011\n2\n91011\n=====SOLUTION=====\n",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n-7 857 295 584\n987 678 -485\n987654321 876 -897\n\"\"\") == \"\"\"YES\nNO\nYES\n\"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\\n98745678\") == \"YES\"\nassert solution(\"9\\n859876845\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\"\nassert solution(\"2\\n\") == \"NO\"\nassert solution(\"3\\n\") == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"83963987118023\") == \"YES\"\nassert solution(\"729916999890\") == \"YES\"\nassert solution(\"7999\") == \"YES\"\nassert solution(\"83987123487\") == \"YES\"\nassert solution(\"8398763987\") == \"YES\"\n",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'YES'\nassert solution('22') == 'NO'\nassert solution('36') == 'NO'\nassert solution('32') == 'YES'\nassert solution('92746') == 'NO'\n'''\nimport re\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n07895462130\") == \"YES\"\nassert solution(\"9384938775543\") == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"9384938775543\") == \"YES\"\nassert solution(\"9384938775543\\n\") == \"NO\"\n",
        "num_ids_2": 33,
        "num_ids_4": 57
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n2 4 5 9\n10\n2 4 11 12\n\"\"\") == \"\"\"\n9 11 12\n10\n\"\"\".strip()\n\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"\n5 9 8 7 6 5 4 3 2 1\n1 2 3 4 5 6 7 8 9 10\n\"\"\".strip()\n\nassert solution(\"\"\"\n8\n1 2 3 4 5 6 7 8\n10\n1 2 3 4 5 6 7 8\n9\n1 2 3 4 5 6 7 8\n10\n1 2 3 4 5 6 7 8\n11\n1 2 3 4 5 6 7 8\n12\n1 2 3 4 5 6 7 8\n\"\"\") == \"\"\"\n2 3 5 7 9\n1 2 3 4 5 6 7 8\n8\n1 2 3 4 5 6 7 8\n10\n1 2 3 4 5 6 7 8\n11\n1 2 3 4 5 6 7 8\n12\n1 2 3 4 5 6 7 8\n\"\"\".strip()\n\nassert solution(\"\"\"\n4\n2 4 5 9\n10\n2 4 11 12\n\"\"\") == \"\"\"\n9 11 12\n10\n\"\"\".strip()\n\nassert solution(\"\"\"\n6\n1 2 3 4 5 6\n10\n1 2 3 4 5 6\n9\n1 2 3 4 5 6\n10\n1 2 3 4 5 6\n11\n1 2 3 4 5 6\n12\n1 2 3 4 5 6\n\"\"\") == \"\"\"\n3 5 6\n1 2 3 4 5 6\n10\n1 2 3 4 5 6\n11\n1 2 3 4 5 6\n12\n1 2 3 4 5 6\n\"\"\".strip()",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2\") == \"1 2 3 4\"\nassert solution(\"6 5 4 3 2\") == \"1 2 3 4 5\"\nassert solution(\"3 5 4 3 2\") == \"1 2 3 4 5\"\nassert solution(\"5 4 3 2\") == \"1 2 3 4 5\"\nassert solution(\"2 2 2 2 2 2\") == \"1 1 2 2 3 4 5\"\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4 3 2\n5 4 3 2''') == '3 2 1 4 5'\nassert solution('''5 5 4 3 2\n5 5 4 3 2''') == '3 2 1 5 4 5'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 3 4 5 6\n7\n2 3 4 5 6 7''') == '1 4 7 6'\nassert solution('''5\n1 2 3 4 5\n8\n2 3 4 5 7''') == '1 4 5 7'\n\nassert solution('''3\n1 2 3\n4\n1 2 3\n7\n1 4''') == '1 2 3 4 7'\nassert solution('''4\n1 2 3 4\n5\n1 2 3 4\n7\n1 2 3 4''') == '1 2 3 4 5 7'\n\nassert solution('''4\n1 2 3 4\n5\n1 2 3 4\n7\n1 2 3 4''') == '1 2 3 4 5 7'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4 3 2\n5 4 3 2''') == '3 2 4 5'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n3 4') == '2 3'\nassert solution('1\\n1\\n3 4') == '1'\nassert solution('2\\n1 2\\n2 3') == '1 3'\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n1 2''') == '1\\n2\\n4\\n5\\n'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2''') == '1\\n2\\n4\\n5\\n'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2''') == '1\\n2\\n4\\n5\\n'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2''') == '1\\n2\\n4\\n5\\n'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2''') == '1\\n2\\n4\\n5\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([10, 20, 30, 40, 50]) == \"10 20 40 50\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution([1, 2, 3, 4, 5, 6, 7]) == \"1 2 3 4 5 6 7\"\nassert solution([5, 4, 3, 2, 1]) == \"5 4 3 2 1\"\nassert solution([]) == \"\"\n",
        "num_ids_2": 58,
        "num_ids_4": 108
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(a) == \"2 4 5 9 11 12\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 5 8') == '2 8 5'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nMARKS\nID\nNAME\nCLASS\nMARKS\n2\n12\nABBY\n1\nMARKS\n3\nMARKS\n4\nMARKS\n''') == '82.50'\nassert solution('''\n2\nMARKS\nID\nMARKS\n''') == '50.00'\n=====Test Cases=====\nInput\n\nOutput\n\nExplanation\n\nInput\n1\nMARKS\nID\nNAME\nCLASS\nMARKS\n2\n12\nABBY\n1\nMARKS\n3\nMARKS\n4\nMARKS\n\nOutput\n82.50\n\nExplanation\n1\n\n2\n\nInput\n5\nMARKS\nID\nNAME\nCLASS\nMARKS\n2\n12\nABBY\n1\nMARKS\n3\nMARKS\n4\nMARKS\n\nOutput\n50.00\n\nExplanation\n2\n\n3\n\n4\n\n5\n\nInput\n2\nMARKS\nID\nNAME\nCLASS\nMARKS\n2\n12\nABBY\n1\nMARKS\n3\nMARKS\n4\nMARKS\n\nOutput\n82.50\n\nExplanation\n2\n\n3\n\n4\n\n5\n\nInput\n3\nMARKS\nID\nNAME\nCLASS\nMARKS\n2\n12\nABBY\n1\nMARKS\n3\nMARKS\n4\nMARKS\n\nOutput\n50.00\n\nExplanation\n2\n\n3\n\n4\n\n5\n\nInput\n4\nMARKS\nID\nNAME\nCLASS\nMARKS\n2\n12\nABBY\n1\nMARKS\n3\nMARKS\n4\nMARKS\n\nOutput\n82.50\n\nExplanation\n2\n\n3\n\n4\n\n5\n'''\n\n)\n\n=====Solution=====\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6''') == '86.25'\nassert solution('''5\nID MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n5          80         Peter      6''') == '86.25'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.77\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([0,1,2,3,4]) == 1.33\nassert solution([0,1,2,3,4,5]) == 1.500\nassert solution([1,2,3,4,5,6]) == 2.000\nassert solution([5,6,7,8,9,10]) == 5.000\nassert solution([5,6,7,8,9,10,11]) == 6.500\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1.1\\n2.1\\n3.1\\n4.1\\n5.1\\n6.1\\n') == '2.98'\nassert solution('6\\n1.1\\n2.1\\n3.1\\n4.1\\n5.1\\n6.1\\n') == '2.98'\nassert solution('6\\n1.1\\n2.1\\n3.1\\n4.1\\n5.1\\n6.1\\n') == '2.98'\nassert solution('6\\n1.1\\n2.1\\n3.1\\n4.1\\n5.1\\n6.1\\n') == '2.98'\nassert solution('6\\n1.1\\n2.1\\n3.1\\n4.1\\n5.1\\n6.1\\n') == '2.98'\n",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nid class name\\n1 2 3 4\\n2 3 4 5 6\\n3 4 5 6 7') == '3.66'\nassert solution('1\\nid\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9') == '5.00'\nassert solution('2\\nid name\\n1 2 3\\n2 3 4') == '1.67'\n",
        "num_ids_2": 87,
        "num_ids_4": 113
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nB 2.5 C 0.5 D\\nA 4.0 E\") == \"2.66\"\nassert solution(\"1\\nA 2.5 C 0.5 D\\nB 4.0 E\") == \"2.66\"\nassert solution(\"1\\nA 2.5 C 0.5 D\\nB 4.0 E\") == \"2.66\"\nassert solution(\"1\\nB 2.5 C 0.5 D\\nA 4.0 E\") == \"2.66\"\n=====Sample Input/Output 1=====\nSample Input 1\n\nInput Format\n\nThe first line contains an integer N, the number of students. \nThe second line contains the names of the columns in any order. \nThe next N lines contains the marks, IDs, name and class, under their respective column names.\n\nConstraints\n\n\n0<N\u2264100\n\nOutput Format\n\nPrint the average marks of the list corrected to 2 decimal places.\n\nSample Output 1\n\n2.66\n\nSample Output 2\n\n2.00\n\nSample Output 3\n\n2.0\n\nSample Output 4\n\n2.0\n\n=====Explanation=====\nThe marks of the students are:  B, 2.5, C, 0.5, D, 4.0, E.\n\nThe total students are:  4.\n\nThe average marks of the students are:  2.66.\n\n=====Sample Input 2=====\nSample Output 2\n\nSample Output 3\n\nSample Output 4\n\nSample Output 5\n\nSample Output 6\n\nSample Output 7\n\nSample Output 8\n\nSample Output 9\n\nSample Output 10\n\nSample Output 11\n\nSample Output 12\n\nSample Output 13\n\nSample Output 14\n\nSample Output 15\n\nSample Output 16\n\nSample Output 17\n\nSample Output 18\n\nSample Output 19\n\nSample Output 20\n\nSample Output 21\n\nSample Output 22\n\nSample Output 23\n\nSample Output 24\n\nSample Output 25\n\nSample Output 26\n\nSample Output 27\n\nSample Output 28\n\nSample Output 29\n\nSample Output 30\n\nSample Output 31\n\nSample Output 32\n\nSample Output 33\n\nSample Output 34\n\nSample Output 35\n\nSample Output 36\n\nSample Output 37\n\nSample Output 38\n\nSample Output 39\n\nSample Output 40\n\nSample Output 41\n\nSample Output 42\n\nSample Output 43\n\nSample Output 44\n\nSample Output 45\n\nSample Output 46\n\nSample Output 47\n\nSample Output 48\n\nSample Output 49\n\nSample Output 50\n\nSample Output 51\n\nSample Output 52\n\nSample Output 53\n\nSample Output 54\n\nSample Output 55\n\nSample Output 56\n\nSample Output 57\n\nSample Output 58\n\nSample Output 59\n\nSample Output 60\n\nSample Output 61\n\nSample Output 62\n\nSample Output 63\n\nSample Output 64\n\nSample Output 65\n\nSample Output 66\n\nSample Output 67\n\nSample Output 68\n\nSample Output 69\n\nSample Output 70\n\nSample Output 71\n\nSample Output 72\n\nSample Output 73\n\nSample Output 74\n\nSample Output 75\n\nSample Output 76\n\nSample Output 77\n\nSample Output 78\n\nSample Output 79\n\nSample Output 80\n\nSample Output 81\n\nSample Output 82\n\nSample Output 83\n\nSample Output 84\n\nSample Output 85\n\nSample Output 86\n\nSample Output 87\n\nSample Output 88\n\nSample Output 89\n\nSample Output 90\n\nSample Output 91\n\nSample Output 92\n\nSample Output 93\n\nSample Output 94\n\nSample Output 95\n\nSample Output 96\n\nSample Output 97\n\nSample Output 98\n\nSample Output 99\n\nSample Output 100\n\nSample Output 101\n\nSample Output 102\n\nSample Output 103\n\nSample Output 104\n\nSample Output 105\n\nSample Output 106\n\nSample Output 107\n\nSample Output 108\n\nSample Output 109\n\nSample Output 110\n\nSample Output 111\n\nSample Output 112\n\nSample Output 113\n\nSample Output 114\n\nSample Output 115\n\nSample Output 116\n\nSample Output 117\n\nSample Output 118\n\nSample Output 119\n\nSample Output 120\n\nSample Output 121\n\nSample Output 122\n\nSample Output 123\n\nSample Output 124\n\nSample Output 125\n\nSample Output 126\n\nSample Output 127\n\nSample Output 128\n\nSample Output 129\n\nSample Output 130\n\nSample Output 131\n\nSample Output 132\n\nSample Output 133\n\nSample Output 134\n\nSample Output 135\n\nSample Output 136\n\nSample Output 137\n\nSample Output 138\n\nSample Output 139\n\nSample Output 140\n\nSample Output 141\n\nSample Output 142\n\nSample Output 143\n\nSample Output 144\n\nSample Output 145\n\nSample Output 146\n\nSample Output 147\n\nSample Output 148\n\nSample Output 149\n\nSample Output 150\n\nSample Output 151\n\nSample Output 152\n\nSample Output 153\n\nSample Output 154\n\nSample Output 155\n\nSample Output 156\n\nSample Output 157\n\nSample Output 158\n\nSample Output 159\n\nSample Output 160\n\nSample Output 161\n\nSample Output 162\n\nSample Output 163\n\nSample Output 164\n\nSample Output 165\n\nSample Output 166\n\nSample Output 167\n\nSample Output 168\n\nSample Output 169\n\nSample Output 170\n\nSample Output 171\n\nSample Output 172\n\nSample Output 173\n\nSample Output 174\n\nSample Output 175\n\nSample Output 176\n\nSample Output 177\n\nSample Output 178\n\nSample Output 179\n\nSample Output 180\n\nSample Output 181\n\nSample Output 182\n\nSample Output 183\n\nSample Output 184\n\nSample Output 185\n\nSample Output 186\n\nSample Output 187\n\nSample Output 188\n\nSample Output 189\n\nSample Output 190\n\nSample Output 191\n\nSample Output 192\n\nSample Output 193\n\nSample Output 194\n\nSample Output 195\n\nSample Output 196\n\nSample Output 197\n\nSample Output 198\n\nSample Output 199\n\nSample Output 200\n\nSample Output 201\n\nSample Output 202\n\nSample Output 203\n\nSample Output 204\n\nSample Output 205\n\nSample Output 206\n\nSample Output 207\n\nSample Output 208\n\nSample Output 209\n\nSample Output 210\n\nSample Output 211\n\nSample Output 212\n\nSample Output 213\n\nSample Output 214\n\nSample Output 215\n\nSample Output 216\n\nSample Output 217\n\nSample Output 218\n\nSample Output 219\n\nSample Output 220\n\nSample Output 221\n\nSample Output 222\n\nSample Output 223\n\nSample Output 224\n\nSample Output 225\n\nSample Output 226\n\nSample Output 227\n\nSample Output 228\n\nSample Output 229\n\nSample Output 230\n\nSample Output 231\n\nSample Output 232\n\nSample Output 233\n\nSample Output 234\n\nSample Output 235\n\nSample Output 236\n\nSample Output 237\n\nSample Output 238\n\nSample Output 239\n\nSample Output 240\n\nSample Output 241\n\nSample Output 242\n\nSample Output 243\n\nSample Output 244\n\nSample Output 245\n\nSample Output 246\n\nSample",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nA B C D E\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\") == \"8.33\"\nassert solution(\"8\\nA B C D\\n1 2 3 4 5 6 7 8\\n9 10 11 12 13 14 15\\n16 17 18 19 20 21 22 23 24\") == \"10.00\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([10, 67, 34, 21, 26, 11, 89, 34, 55, 82, 89, 10, 68, 23, 89, 4, 4, 99, 40, 55, 48, 9, 37, 33, 81, 20, 41, 8, 21, 17, 70, 33, 13, 4, 2, 23, 91, 3, 1, 90, 25, 14, 90, 61, 67, 10, 81, 8, 31, 31, 93, 92, 100, 97, 77, 100, 86, 7, 82, 39, 11, 14, 11, 85, 4, 9, 6, 52, 70, 92, 30, 77, 88, 50, 4, 99, 22, 12, 50, 6, 95, 35, 82, 18, 25, 49, 8, 24, 67, 67, 79, 48, 17, 20, 47, 5, 21, 56, 78, 2, 10, 61, 10, 10, 60, 76, 8, 10, 94, 48, 5, 40, 33, 81, 37, 63, 61, 11, 78, 69, 92, 1, 7, 81, 35, 3, 24, 96, 43, 18, 10, 25, 27, 96, 10, 18, 55, 4, 90, 5, 25, 14, 21, 30, 74, 16, 15, 95, 15, 94, 17, 56, 59, 41, 48, 12, 5, 15, 67, 67, 95, 98, 12, 77, 78, 8, 6, 43, 12, 70, 7, 34, 49, 1, 87, 61, 49, 55, 49, 72, 86, 9, 95, 98, 98, 34, 24, 11, 7, 14, 33, 92, 59, 55, 43, 37, 5, 99, 76, 38, 69, 40, 1, 1, 34, 91, 18, 76, 8, 19, 25, 9, 32, 89, 13, 7, 79, 61, 5, 43, 99, 4, 80, 26, 21, 12, 1, 95, 91, 63, 20, 35, 31, 2, 5, 78, 38, 16, 32, 7, 81, 76, 80, 9, 37, 97, 85, 9, 84, 5, 2, 1, 25, 2, 63, 3, 67, 45, 72, 69, 62, 96, 55, 80, 73, 50, 8, 13, 7, 97, 70, 26, 10, 34, 43, 5, 7, 38, 8, 88, 99, 18, 9, 10, 11, 10, 30, 8, 34, 9, 46, 5, 87, 14, 37, 8, 5, 6, 76, 99, 12, 4, 12, 55, 95, 3, 99, 77, 60, 9, 67, 80, 15, 7, 9, 41, 5, 36, 45, 69, 21, 1, 4, 61, 99, 3, 2, 3, 63, 48, 77, 98, 55, 24, 6, 34, 20, 61, 34, 5, 48, 33, 12, 22, 60, 97, 87, 33, 5, 12, 1, 74, 9, 4, 86, 13, 17, 1, 69, 1, 59, 57, 43, 95, 1, 6, 91, 45, 63, 63, 23, 45, 7, 82, 24, 59, 98, 3, 50, 47, 37, 1, 63, 22, 11, 26, 22, 43, 2, 92, 98, 86, 8, 88, 93, 49, 1, 3, 92, 21, 24, 67, 4, 28, 27, 22, 60, 33, 5, 87, 21, 17, 63, 81, 17, 30, 63, 16, 55, 3, 7, 38, 24, 43, 35, 40, 1, 2, 89, 29, 5, 3, 11, 29, 95, 25, 36, 97, 7, 1, 92, 69, 70, 4, 49, 59, 7, 74, 1, 39, 3, 67, 25, 14, 45, 5, 43, 19, 2, 77, 99, 93, 1, 22, 5, 88, 2, 76, 10, 14, 2, 48, 10, 63, 5, 20, 9, 92, 55, 6, 59, 3, 92, 78, 26, 29, 3, 9, 20, 17, 26, 76, 22, 61, 5, 15, 13, 61, 48, 10, 43, 56, 11, 18, 3, 4, 10, 36, 9, 69, 63, 26, 21, 2, 56, 99, 40, 25, 81, 92, 69, 49, 12, 78, 22, 27, 97, 10, 73, 1, 2, 79, 99, 4, 82, 11, 19, 38, 9, 24, 99, 8, 27, 79, 69, 48, 8, 79, 33, 12, 22, 30, 33, 23, 43, 36, 4, 8, 52, 35, 96, 33, 19, 30, 79, 92, 18, 99, 5, 9, 98, 25, 98, 94, 40, 2, 98, 38, 34, 34, 97, 20, 9, 37, 52, 4, 98, 38, 21, 56, 89, 67, 3, 47, 26, 38, 4, 93, 47, 61, 21, 57, 75, 41, 20, 95, 11, 9, 85, 96, 5, 99, 22, 69, 1, 1, 71, 76, 69, 1, 92, 87, 63, 57, 89, 3, 3, 95, 22, 47, 73, 63, 44, 1, 60, 11, 37, 50, 62, 28, 50, 76, 23, 2, 74, 33, 1, 20, 32, 13, 2, 88, 79, 19, 13, 46, 31, 15, 63, 87, 63, 95, 40, 99, 7, 41, 32, 6, 75, 99, 55, 13, 25, 46, 65, 14, 33, 26, 42, 8, 22, 10, 45, 18, 61, 55, 2, 60, 52, 85, 8, 80, 4, 25, 8, 45, 85, 9, 2, 33, 55, 2, 44, 4, 92, 3, 48, 79, 96, 46, 3, 35, 35, 43, 43, 45, 61, 14, 7, 99, 1, 23, 55, 63, 5, 57, 88, 7, 4, 72, 64, 1, 95, 33, 70, 77, 12, 21, 4, 92, 55, 19, 57, 1, 41, 65, 92, 2, 27, 33, 21, 9, 98, 30, 24, 18, 87, 98, 67, 40, 95, 24, 14, 98, 31, 91, 62, 1, 1, 52, 12, 13, 89, 25, 81, 11, 18, 7, 42",
        "num_ids_2": 1561,
        "num_ids_4": 1561
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2, 3, 3, 2, 3, 3]) == 3.00\nassert solution([9, 2, 3, 1, 9, 1, 3]) == 8.50\nassert solution([3, 2, 3, 3, 2, 3, 3]) == 3.00\nassert solution([1, 5, 5, 9, 5, 5, 5]) == 5.00\nassert solution([2, 5, 5, 7, 5, 5, 5]) == 4.50\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Weird'\nassert solution('15') == 'Not Weird'\nassert solution('1') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Not Weird'\nassert solution('21') == 'Not Weird'\nassert solution('22') == 'Weird'\nassert solution('23') == 'Not Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(4) == 'Not Weird'\nassert solution(6) == 'Weird'\nassert solution(20) == 'Weird'\nassert solution(24) == 'Not Weird'\nassert solution(50) == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == 'Not Weird'\nassert solution(2) == 'Weird'\nassert solution(3) == 'Not Weird'\nassert solution(4) == 'Weird'\nassert solution(5) == 'Not Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Not Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Weird'\nassert solution('3') == 'Not Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Weird'\nassert solution('5') == 'Not Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Weird'\nassert solution('6') == 'Not Weird'\nassert solution('21') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20\n''') == 'Not Weird'\nassert solution('''\n    1\n''') == 'Not Weird'\nassert solution('''\n    6\n''') == 'Weird'\n",
        "num_ids_2": 13,
        "num_ids_4": 19
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Weird'\nassert solution('5') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:12:12Z</updated>\n</feed>\n\"\"\") == \"6\"\n\"\"\")",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n<a>1</a>\\n<b></b>\\n<a></a>') == '2'\nassert solution('3\\n<a>1</a>\\n<b></b>\\n<a></a>') == '2'\nassert solution('3\\n<a>1</a>\\n<b></b>\\n<a></a>') == '2'\n=====Explanation=====\n\nThe input to the solution function is a single string of XML. The string is valid, and contains a valid XML document. The solution function then calculates and returns the score of the given XML document. The score is equal to the number of attributes in each element.\n\nThe above sample test case (of length 2) is not valid because:\n\na) The <a> element has 2 attributes, whereas a <b> element has 0 attributes.\n\na) The <a> element has 2 attributes, whereas the <b> element has 1 attribute.\n\na) The <a> element has 2 attributes, whereas the <b> element has 0 attributes.\n\na) The <a> element has 2 attributes, whereas the <b> element has 1 attribute.\n\n'''\n",
        "num_ids_2": 66,
        "num_ids_4": 99
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n<feed xml:lang='en'>\\n\\t<title>Document Title</title>\\n\\t<subtitle lang='en'>Document Subtitle</subtitle>\\n\\t<updated>2013-09-27T23:14:00Z</updated>\\n</feed>\\n\") == \"6\"\n\n\"\"\"\nimport re\nimport sys\nimport xml.etree.ElementTree as et",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n<feed><title>title</title><subtitle>subtitle</subtitle></feed>') == '2'\nassert solution('2\\n<feed><title>title</title><title>subtitle</title></feed>') == '3'\nassert solution('3\\n<feed><title>title</title><title>subtitle</title><title>subtitle</title><title>subtitle</title></feed>') == '4'\nassert solution('4\\n<feed><title>title</title><title>subtitle</title><title>subtitle</title><title>subtitle</title><title>subtitle</title></feed>') == '5'\nassert solution('5\\n<feed><title>title</title><title>subtitle</title><title>subtitle</title><title>subtitle</title><title>subtitle</title><title>subtitle</title></feed>') == '6'\n",
        "num_ids_2": 62,
        "num_ids_4": 157
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>A Programmer's Guide to XML</subtitle>\n<link rel='alternate' href='http://www.w3.org/TR/1999/REC-xml-19991116/index.html'/>\n<updated>2009-05-12T12:34:56Z</updated>\n</feed>''') == '272'\n\n===Sample Input and Output===\nInput:\n\n10\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>A Programmer's Guide to XML</subtitle>\n<link rel='alternate' href='http://www.w3.org/TR/1999/REC-xml-19991116/index.html'/>\n<updated>2009-05-12T12:34:56Z</updated>\n</feed>\n\nOutput:\n272\n\n'''\n\nimport xml.etree.ElementTree as ET",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"<head><title>XML Developer</title><body>Welcome</body></head>\") == 11\nassert solution(\"<head><title>XML Developer</title></head>\") == 1\nassert solution(\"<head><title></title></head>\") == 0\nassert solution(\"<head><title>XML Developer</title><body>Welcome</body></head>\") == 14\nassert solution(\"<head><title>XML Developer</title><body>Welcome</body>\") == 10\n",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n</feed>\"\"\") == \"6\"\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"<head><title>XML</title></head>\") == \"7\"\nassert solution(\"<head><title>XML</title></head>\") == \"3\"\nassert solution(\"<head><title>XML</title></head>\") == \"6\"\nassert solution(\"<head><title>XML</title></head>\") == \"3\"\nassert solution(\"<head><title>XML</title></head>\") == \"7\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n<title>XML Developer's Guide</title>\\n<subtitle lang='en'>Tutorial for XML</subtitle>\\n</feed>\") == \"7\", 'incorrect'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <link rel=\"alternate\" type=\"application/atom+xml\" href=\"http://www.w3.org/2005/Atom\"/>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <updated>2013-04-18T11:00:00Z</updated>\n  <author><name>Some Author</name></author>\n  <title>Some XML document</title>\n  <id>http://www.w3.org/2005/Atom/text()</id>\n  ",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '75.0'\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 0 0 1\n1 0 0 -1\n0 1 0 -1\n-1 0 1 0''') == '90'\n\nassert solution('''0 0 0 1\n1 0 0 -1\n0 1 0 -1\n-1 0 1 0''') == '-90'\n=====",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-1.0 0.0 -1.0\") == \"90\"\nassert solution(\"0.0 0.0 0.0\") == \"0\"\nassert solution(\"-1.0 -1.0 -1.0\") == \"0\"\nassert solution(\"0.0 0.0 0.0\") == \"0\"\nassert solution(\"0.0 0.0 1.0\") == \"180\"\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.1 2.2 3.3 4.4') == '60.00'\nassert solution('1.1 1.2 2.3 3.4') == '60.00'\nassert solution('1.1 1.2 1.3 1.4') == '60.00'\nassert solution('-1.1 -2.2 -3.3 -4.4') == '60.00'\nassert solution('-1.1 -1.2 -2.3 -3.4') == '60.00'\n",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.3 4.5 5.6 3.8\") == \"105.48\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"-1 -1 1 -2\") == \"24.64\"\n=====Test Case 2>>>>>\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 2.2 4 4') == '135.823'\nassert solution('1.5 1 4 4') == '90.0'\n=====Explanation=====\nInput:\n1 2 2.2 4 4\nOutput:\n135.823\n\n=====Example Input=====\nInput 1:\n2 1 2.2 4 4\nOutput 1:\n135.823\n\n=====Example Output=====\nOutput 1:\n90.0\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"60.0\"\n=====Constraints=====\n1 <= length of input <= 100\n==========Sample Input & Output==========\nInput\n4\n1 2 3\nOutput\n45.0\n\nInput\n2\n1 2\nOutput\n45.0\n\nInput\n3\n1 2 3\nOutput\n60.0\n\nInput\n4\n1 2 3\nOutput\n60.0\n\nInput\n2\n1 2\nOutput\n60.0\n=====Sample Test Cases=====\nTest Case 1\n\nInput\n2\n1 2\nOutput\n45.0\n\nTest Case 2\n\nInput\n3\n1 2 3\nOutput\n60.0\n\nTest Case 3\n\nInput\n4\n1 2 3\nOutput\n60.0\n\nTest Case 4\n\nInput\n2\n1 2\nOutput\n45.0\n'''\n\nfrom math import acos, pi",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2.0 4.0 5.0 6.0\") == \"45\"\nassert solution(\"2.1 4.1 5.1 6.1\") == \"45\"\nassert solution(\"3.0 4.0 5.0 6.0\") == \"60.0\"\n=====Test Case 2 (Unsolved)=====\n=====Input=====\n10.0 11.0 12.0\n5.0 10.0 9.0\n3.0 7.0 8.0\n\n=====Output=====\n180.0\n\n=====Test Case 3 (Unsolved)=====\n=====Input=====\n10.0 11.0 12.0\n5.0 10.0 9.0\n3.0 7.0 8.0\n\n=====Output=====\n90.0\n\n=====Test Case 4=====\n=====Input=====\n10.0 11.0 12.0\n5.0 10.0 9.0\n3.0 7.0 8.0\n\n=====Output=====\n135.0\n",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.1 2.1 1.1\") == \"36.0\"\nassert solution(\"-1.1 2.1 1.1\") == \"36.0\"\nassert solution(\"2.1 1.1 1.1\") == \"45.0\"\nassert solution(\"-2.1 1.1 1.1\") == \"45.0\"\nassert solution(\"1.1 1.1 1.1\") == \"45.0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3.0 4.0 4.0 5.0') == '60.0'\nassert solution('3.0 4.0 4.0 4.0') == '90.0'\n\n===========================\n\nimport math\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nhello world') == 2\nassert solution('2\\nword') == 1\nassert solution('3\\nhev') == 0\n=====Explanation=====\nThe function returns the correct score in the first case.\nThe function returns 0 when the function is called with words having even number of vowels.\n'''\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\ne') == 1\n'''\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\nhello\nh e l l\ne y y a\"\"\") == \"3\"\nassert solution(\"\"\"1\na\ne e e\ni i i i i\no o o o o\"\"\") == \"3\"\nassert solution(\"\"\"5\nhi\nhello\nh e l\ne o o\no y y\"\"\") == \"4\"\n'''\nExplanation:\nThe first three words have even number of vowels.\nThe fourth and fifth word has odd number of vowels.\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    Hello World\n    What Is Your Name?\n    I am a Superhero\n''') == '2'\nassert solution('''\n    6\n    Hello World\n    What Is Your Name?\n    I am a Superhero\n    Coding Thumbnail\n    CodeThumb\n''') == '4'\nassert solution('''\n    3\n    Hello World\n    What Is Your Name?\n    I am a Superhero\n    Coding Thumbnail\n    CodeThumb\n''') == '2'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\nhello\\nworld\") == 2\nassert solution(\"5\\ncat\\negg\\npat\\ntat\\n\") == 5",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\nbattana') == '3'\nassert solution('4\\nbattana') == '4'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\ne') == '1', 'First test case failed'\nassert solution('3\\ne a') == '1', 'Second test case failed'\nassert solution('3\\ne e') == '2', 'Third test case failed'\n\n'''\n",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\na ab abc a abc abc a\\nb\\ne\\n\") == 2\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\negg\") == \"3\", \"Test 1 failed\"\nassert solution(\"3\\negg\") == \"2\", \"Test 2 failed\"\nassert solution(\"2\\negg\") == \"1\", \"Test 3 failed\"\nassert solution(\"1\\n\") == \"0\", \"Test 4 failed\"\nassert solution(\"2\\n\") == \"1\", \"Test 5 failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\napple') == 2\nassert solution('5\\ncoffee shop') == 2\n=====Sample Input & Output=====\nInput\nThe input is read by the provided locked code template. In the first line, there is a single integer n denoting the number of words. In the second line, there are n space-separated lowercase words.\n\nOutput\nThe output is produced by the provided and locked code template. It calls function score_words with the list of words read from the input as the argument and prints the returned score to the output.",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('MMCMXCIX') == 'True'\nassert solution('MMM') == 'True'\nassert solution('MMMCDXXI') == 'True'\nassert solution('MMMCMXCIX') == 'False'\nassert solution('X') == 'False'\n=====Sample Test Cases=====\nInput\n\nOutput\n\n=====Expected Output=====\nTrue\nFalse\nFalse\n\n=====Solution=====\nimport re\n\ns = input()\n\npattern = r\"^M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$\"",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('XIX') == True\nassert solution('LXXVI') == True\nassert solution('MMMCMXCIX') == True\nassert solution('MMMCMXCIX') == True\nassert solution('MMMCMXCIX') == True\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('XVIII') == True\nassert solution('L') == False\nassert solution('I') == True\n=====Sample Test Cases=====\nInput\n\n3\nL\n\nOutput\n\nFalse\n\nInput\n\n3\nV\n\nOutput\n\nTrue\n\nInput\n\n13\nMMXVII\n\nOutput\n\nFalse\n\n'''",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"MCMXCVI\") == \"True\", \"Should return True if input is a valid Roman numeral.\"\nassert solution(\"MCMXCVI\") == \"False\", \"Should return False if input is not a valid Roman numeral.\"\nassert solution(\"MDCLXVI\") == \"True\", \"Should return True if input is a valid Roman numeral.\"\nassert solution(\"MDCLXVI\") == \"False\", \"Should return False if input is not a valid Roman numeral.\"\nassert solution(\"MCMXCIV\") == \"False\", \"Should return False if input is not a valid Roman numeral.\"\n",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('MMM') == True\nassert solution('IV') == True\nassert solution('MCMXCIV') == True\nassert solution('MMMCMXCIX') == False\nassert solution('XC') == True\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('VI') == True\nassert solution('XXI') == True\nassert solution('VXI') == True\nassert solution('MCMXCIV') == True\nassert solution('X') == True\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('MMMCMLXXXVI') == True, \"Wrong output\"\nassert solution('IIII') == False, \"Wrong output\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('X') == 'True'\nassert solution('XX') == 'True'\nassert solution('XXX') == 'True'\nassert solution('XL') == 'True'\nassert solution('L') == 'False'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"X\") == True\nassert solution(\"III\") == True\nassert solution(\"XXVI\") == True\nassert solution(\"XXXVIII\") == False\nassert solution(\"MCMXCIV\") == True\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('III') == True, \"Solution is: True\"\nassert solution('IV') == False, \"Solution is: False\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n97499964545\n987646543210\n964765432130\n97499964545\n''') == '+97499964545\\n+97464543210\\n+946543210\\n+97499964545\\n'\nassert solution('''\n5\n1\n234\n2\n15\n2\n234\n''') == '+91 2\\n+91 5\\n+91 7\\n+91 1\\n+91 2\\n+91 15\\n+91 2\\n+91 2\\n'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n+91 948 0300 3580\") == \"+91 948 0300 3580\"\nassert solution(\"2\\n+91 948 0300 3580\") == \"+91 948 0300 3580\"\nassert solution(\"1\\n+91 948 0300 3580\") == \"+91 948 0300 3580\"\nassert solution(\"1\\n+91 948 0300 3580\") == \"+91 948 0300 3580\"\n=====Explanation=====\nIf no prefix is provided, then print the mobile number as is, i.e. without any prefix.",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == \"+91 9158759476\\n+91 9158759467\\n+91 9158759473\\n'\nassert solution('4') == \"91 +91 876 +91 9158759473\\n91 +91 876 +91 9158759476\\n91 +91 876 +91 9158759473\\n91 +91 876 +91 9158759476\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"+91 9199 8582\"\"\") == \"+91 9199 8582\"\nassert solution(\"\"\"+91 9199 8582\"\"\") == \"+91 9199 8582\"\n\nsample = [\n    \"+91 9199 8582\",\n    \"+91 9199 8583\",\n    \"+91 9199 8585\",\n    \"+91 9199 8586\",\n    \"+91 9199 8587\",\n]\n\nprint(\"\\n\\n\".join(solution(stdin) for stdin in sample))\n\n=====Time Complexity=====\nO(N)\n\n=====Space Complexity=====\nO(1)",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '+91 xxxxx xxxxx'\nassert solution(input()) == '+91 xxxxx xxxxx'\nassert solution(input()) == '+91 xxxxx xxxxx'\nassert solution(input()) == '+91 xxxxx xxxxx'\nassert solution(input()) == '+91 xxxxx xxxxx'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n9876543210\\n91234567890\") == \"1+9876543210+91234567890\\n9876543210+9876543210+9876543210+9876543210+9876543210\"\nassert solution(\"4\\n89101112222\\n120123456789\") == \"89101112222+120123456789+89101112222+89101112222+120123456789+89101112222\"\nassert solution(\"1\\n0101010101\\n123456789\") == \"0101010101+0101010101+0101010101+123456789\"\n'''\nimport re\n",
        "num_ids_2": 116,
        "num_ids_4": 160
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '+91 2234 3456'\nassert solution('5') == '+91 2234 5678'\nassert solution('4') == '+91 2234 5680'\n\nSample Test Case #3\n\n=====Input=====\n4\n9876\n987\n123\n456\n\n=====Output=====\n+91 987 678\n+91 9876 5678\n+91 123 456\n\n=====Explanation=====\n+91 887 678\n+91 987 5678\n+91 123 456\n\n=================================\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12\\n9876543210') == '+91 98765432110'\n\n'''",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == stdout, \"Please check your code\"\n=====Your Task=====\nYou don't need to read input or print anything. Your task is to complete the function solution which takes stdin input and returns a string.\n\n=====Constraints=====\n0 <= N <= 100\n\n>>>>>>> Your Solution <<<<<\n\nimport sys\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n6012345678\\n91113546786\\n9175281191\\n91701234567\\n239101234567') == '+91 00000000000\\n+91 010000000000\\n+91 020000000000\\n+91 030000000000\\n+91 040000000000\\n+91 050000000000'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 50\\ngamma 20\\n\") == \"50.0\"\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '50.0'\nassert solution('2') == '50.0'\nassert solution('3') == '30.0'\nassert solution('4') == '40.0'\nassert solution('5') == '20.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\nalpha 100\\nbeta 50\\nalpha\\n') == '50.0'\n'''\n\n###################################################\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nalpha 100\nbeta 100\nalpha 75\nbeta 100\nalpha 70''') == '50.00', \"First Test Case\"\nassert solution('''5\nalpha 100\nbeta 100\nalpha 75\nbeta 100\nalpha 70''') == '50.00', \"Second Test Case\"\nassert solution('''4\nalpha 100\nbeta 100\nalpha 75\nbeta 100''') == '75.00', \"Third Test Case\"\nassert solution('''5\nalpha 100\nbeta 100\nalpha 75\nbeta 100\nalpha 70''') == '75.00', \"Fourth Test Case\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n    alpha 100\n    beta 70\n    gamma 50\n    delta 20\n    alpha''') == '70.00'\n=====Sample Test Cases=====\nSample Input 1\n\n4\n    alpha 100\n    beta 70\n    gamma 50\n    delta 20\n    alpha\nSample Output 1\n\n70.00\nSample Input 2\n\n5\n    alpha 100\n    beta 70\n    gamma 50\n    delta 20\n    alpha\nSample Output 2\n\n50.00\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nalpha 100\\nbeta 90\\ngamma 80\\ndelta 60\\nalpha\\n') == '80.00'\nprint(solution('5\\nalpha 100\\nbeta 90\\ngamma 80\\ndelta 60\\nalpha\\n'))\n\n\n\n=============================================================================================================\n\n2. Write a Python function to find the Max of three numbers.\n\n=====Problem Statement=====\nFind the maximum of the three numbers.\n\n=====Example=====\nInput = 10,20,30,40,50\nOutput = 50\n\n=====Input Format=====\nThe first line of input contains T, the number of test cases. The next T lines of input contains a single integer N.\n\n=====Constraints=====\n1\u2264T\u2264100\n1\u2264N\u22641000\n\n=====Output Format=====\nPrint the maximum number in a single line.\n\n=====Sample Input/Output=====\nInput:\n2\n10\n20\nOutput:\n20\n\nInput:\n3\n40\n60\nOutput:\n60\n\nInput:\n4\n40\n20\n30\n60\nOutput:\n60\n\n=============================================================================================================\n\n3. Write a Python function that takes a list of numbers and returns the sum of the first and last elements.\n\n=====Problem Statement=====\nReturn the sum of the first and last elements of the input array.\n\n=====Example=====\nInput = [10, 20, 30, 40]\nOutput = 60\n\n=====Input Format=====\nThe first line of input contains T, the number of test cases. The next T lines of input contains a single integer N.\n\n=====Constraints=====\n1\u2264T\u2264100\n1\u2264N\u22641000\n\n=====Output Format=====\nPrint the sum of the first and last elements in a single line.\n\n=====Sample Input/Output=====\nInput:\n2\n10\n20\nOutput:\n30\n\nInput:\n3\n40\n60\nOutput:\n100\n\n=============================================================================================================\n\n4. Write a Python function to multiply all the numbers in a list.\n\n=====Problem Statement=====\nMultiply all the numbers in a list.\n\n=====Example=====\nInput = [3, 5, 7, 6]\nOutput = 63\n\n=====Input Format=====\nThe first line of input contains T, the number of test cases. The next T lines of input contains a single integer N.\n\n=====Constraints=====\n1\u2264T\u2264100\n1\u2264N\u22641000\n\n=====Output Format=====\nPrint the product of all the numbers in a single line.\n\n=====Sample Input/Output=====\nInput:\n2\n3\n5\n6\nOutput:\n15\n\nInput:\n3\n3\n7\n6\nOutput:\n63\n\n=============================================================================================================\n\n5. Write a Python function to sum all the numbers in a list, but ignore any section of numbers starting with a 6 and extending to the next 7 (every 6 will be followed by at least one 7).\n\n=====Problem Statement=====\nReturn the sum of the numbers in the list that don't start with a 6 and extend to the next 7.\n\n=====Example=====\nInput = [2, 3, 4, 6, 99, 100, 105, 106]\nOutput:\n106\n\n=====Input Format=====\nThe first line of input contains T, the number of test cases. The next T lines of input contains a single integer N.\n\n=====Constraints=====\n1\u2264T\u2264100\n1\u2264N\u22641000\n\n=====Output Format=====\nPrint the sum of the numbers in a single line.\n\n=====Sample Input/Output=====\nInput:\n2\n2\n3\n4\n6\n99\n100\n105\n106\nOutput:\n106\n\nInput:\n3\n1\n6\n7\n8\nOutput:\n7\n\n=============================================================================================================\n\n6. Write a Python program to create a list of size n with random integer elements between 1 and n2 and print the list.\n\n=====Problem Statement=====\nCreate a list of size n with random integer elements between 1 and n2 and print the list.\n\n=====Example=====\nInput:\nn = 5\nOutput:\n[8, 5, 1, 9, 7]\n\n=====Input Format=====\nThe first line of input contains n, the number of elements in the list.\n\n=====Constraints=====\n1\u2264n\u22641000\n\n=====Output Format=====\nPrint the list elements in a single line separated by a space.\n\n=====Sample Input/Output=====\nInput:\n8\nOutput:\n8 5 1 9 7\n\nInput:\n3\nOutput:\n8 5 1 9 7\n\n=============================================================================================================\n\n7. Write a Python program to print the even numbers in a given list.\n\n=====Problem Statement=====\nPrint all the even numbers in a given list.\n\n=====Example=====\nInput = [2, 4, 6, 8]\nOutput:\n[2, 4, 6]\n\n=====Input Format=====\nThe first line of input contains T, the number of test cases. The next T lines of input contains a single integer N.\n\n=====Constraints=====\n1\u2264T\u2264100\n1\u2264N\u22641000\n\n=====Output Format=====\nPrint the even numbers in a single line separated by a space.\n\n=====Sample Input/Output=====\nInput:\n2\n2\n4\n8\nOutput:\n4 8\n\nInput:\n3\n2\n4\n8\nOutput:\n4 8\n\n=============================================================================================================\n\n8. Write a Python program to print a specified list after removing the 0th, 4th and 5th elements.\n\n=====Problem Statement=====\nPrint a specified list after removing the 0th, 4th and 5th elements.\n\n=====Example=====\nInput = [9, 11, 12, 13, 14, 15, 16, 17, 18, 19]\nOutput:\n[11, 12, 13, 14, 15, 16, 17, 18, 19]\n\n=====Input Format=====\nThe first line of input contains T, the number of test cases. The next T lines of input contains a single integer N.\n\n=====Constraints=====\n1\u2264T\u2264100\n1\u2264N\u22641000\n\n=====Output Format=====\nPrint the modified list in a single line.\n\n=====Sample Input/Output=====\nInput:\n2\n9\n11\n12\n13\n14\n15\n16\n17\n18\n19\nOutput:\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\nInput:\n3\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\nOutput:\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n=============================================================================================================\n\n9. Write a Python program to print the list after removing the 0th, 4th and 5th elements.\n\n=====Problem Statement=====\nPrint a list after removing the 0th, 4th and 5th elements.\n\n=====Example=====\nInput = [9, 11, 12, 13, 14, 15, 16, 17, 18, 19]\nOutput:\n[11, 12, 13, 14, 15, 16, 17, 18, 19]\n\n=====Input Format=====\nThe first line of input contains T, the number of test cases. The next T lines of input contains a single integer N.\n\n=====Constraints=====\n1\u2264T\u2264100\n1\u2264N\u22641000\n\n=====Output Format=====\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nalpha 100\\nbeta 80\\nalpha 90\\nalpha 100\\n\") == \"90.00\"\n=====Explanation=====\nThe input is:\n\n5\nalpha 100\nbeta 80\nalpha 90\nalpha 100\n\nThe query_name is 'alpha'. The answer is the average of the marks obtained by 'alpha'.",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nalpha 100\\nbeta 50\\nalpha\\nalpha\\ntest 1\\ntest 2') == '50.0'\nassert solution('5\\nbeta 100\\nalpha 50\\nbeta\\nalpha\\ntest 1\\ntest 2') == '50.0'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '50.00'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 70\\nalpha\\ntry\") == \"70.0\"\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nIvan Ivanov\\n24\\nM\\n') == 'Mr. Ivan Ivanov'\nassert solution('1\\nPiyush Pai\\n24\\nM\\n') == 'Ms. Piyush Pai'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nJohn Doe,21 M\\nJane Doe,22 F\\n\") == \"Ms. Jane Doe\\nMr. John Doe\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '\\nMr. Henry Davids\\nMs. Mary George\\nMs. George Duke\\nMr. George Duke\\nMr. Duke John'\n'''",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\nHari\\nDavids\\n18\\nF\\n\") == \"Hari David\\n\"\nassert solution(\"1\\nRavindra\\nDavids\\n18\\nF\\n\") == \"Ravi David\\n\"\nassert solution(\"2\\nMarina\\nDavids\\n18\\nF\\n\") == \"Marina David\\n\"\nassert solution(\"3\\nKushal\\nDavids\\n18\\nM\\n\") == \"Kushal David\\n\"\nassert solution(\"4\\nNishanth\\nDavids\\n18\\nM\\n\") == \"Nishanth David\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\nMarry\n29\nF\n2\nSandra\n27\nF\n3\nSally\n22\nM\n4\nMarry\n21\nM\n''') == 'Mr. Marry\\nMs. Sandra\\nMs. Sally\\nMr. Marry\\nMs. Marry\\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n    Saurav Ganguly\n    5\n    M\n    3\n    F\n    4\n    F\n''') == 'Mr. Saurav Ganguly\\nMs. Saurav Ganguly\\nMs. Saurav Ganguly\\nMs. Saurav Ganguly\\nMs. Saurav Ganguly'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nHannah G D\\nMary J G\\n\") == \"Ms. Hannah G D\\nMr. Mary J G\\n\"\n=====Sample Input=====\n1\nHannah G D\nMary J G\n=====Sample Output=====\nMr. Hannah G D\nMs. Mary J G\n>>>>>>> Stashed changes\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nMarry\\n10\\nF\") == \"Ms. Marry\\n\"\nassert solution(\"2\\nHenry\\n10\\nM\") == \"Mr. Henry\\n\"\nassert solution(\"5\\nHenry\\n10\\nM\\nMark\\nM\") == \"Ms. Mark\\nMr. Henry\\n\"\nassert solution(\"5\\nHenry\\n10\\nM\\nMark\\nM\\nEdmund\\nF\") == \"Ms. Edmund\\nMs. Mark\\nMr. Henry\\n\"\nassert solution(\"5\\nHenry\\n10\\nM\\nMark\\nM\\nEdmund\\nF\\nAnne\\nF\") == \"Ms. Edmund\\nMs. Mark\\nMs. Anne\\nMr. Henry\\n\"\n=====Submission Details=====\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 128
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\nMarry Simpons\\n50\\nF\\n') == 'Ms. Marry Simpons'\nassert solution('2\\nEmma Watson\\n50\\nF\\n') == 'Ms. Emma Watson'\n\n'''\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nXimena Avila 18 M\\nFranco Suarez 18 F\\nLucero Valencia 18 M\\nIvan Alvarez 18 M\\nValeriano Martinez 18 F\") == \"Mr. Valeriano Martinez\\nMs. Lucero Valencia\\nMs. Franco Suarez\\nMs. Ivan Alvarez\\nMr. Ximena Avila\"\n",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    3\n    4\n    5\n''') == \"[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (0, 1, 2), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 1, 0), (1, 1, 1), (1, 1, 2)]\"\nassert solution('''\n    1\n    1\n    2\n    3\n''') == \"[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (0, 1, 2), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 1, 0), (1, 1, 1), (1, 1, 2), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 1, 0), (2, 1, 1), (2, 1, 2)]\"\nassert solution('''\n    2\n    1\n    2\n''') == \"[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 1, 0), (2, 1, 1), (2, 1, 2), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 1, 0), (3, 1, 1), (3, 1, 2), (4, 0, 0), (4, 0, 1), (4, 0, 2), (4, 1, 0), (4, 1, 1), (4, 1, 2), (5, 0, 0), (5, 0, 1), (5, 0, 2), (5, 1, 0), (5, 1, 1), (5, 1, 2)]\"\nassert solution('''\n    3\n    3\n    4\n''') == \"[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 2, 0), (0, 2, 1), (0, 2, 2), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 2, 0), (1, 2, 1), (1, 2, 2), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 2, 0), (2, 2, 1), (2, 2, 2)]\"\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"x = 1\\ny = 1\\nz = 2\\nn = 3\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\nprint(solution(\"x = 1\\ny = 1\\nz = 2\\nn = 3\"))\n\"\"\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 1 3\n''') == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\nassert solution('''\n1 1 1 2\n''') == \"[[0,0,0],[0,0,1],[0,1,0],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([x, y, z, n]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n'''\nimport numpy as np\nx,y,z,n = input().split()\nx = int(x)\ny = int(y)\nz = int(z)\nn = int(n)\n\narr = [[i, j, k] for i in range(x+1) for j in range(y+1) for k in range(z+1)]\n\nprint(sorted(arr, key = lambda x: sum(x)))\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3\") ==\n\"\n[[0, 0, 0],\n[0, 0, 1],\n[0, 0, 2],\n[0, 1, 0],\n[0, 1, 1],\n[0, 1, 2],\n[1, 0, 0],\n[1, 0, 1],\n[1, 0, 2],\n[1, 1, 0],\n[1, 1, 1],\n[1, 1, 2]]\n\nassert solution(\"1 1 1 2\") ==\n\"\n[[0, 0, 0],\n[0, 0, 1],\n[0, 0, 2],\n[0, 1, 0],\n[0, 1, 1],\n[0, 1, 2],\n[1, 0, 0],\n[1, 0, 1],\n[1, 0, 2],\n[1, 1, 0],\n[1, 1, 1],\n[1, 1, 2]]\n\nassert solution(\"1 1 2 2\") ==\n\"\n[[0, 0, 0],\n[0, 0, 1],\n[0, 0, 2],\n[0, 1, 0],\n[0, 1, 1],\n[0, 1, 2],\n[1, 0, 0],\n[1, 0, 1],\n[1, 0, 2],\n[1, 1, 0],\n[1, 1, 1],\n[1, 1, 2]]\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 1, 2]) == [[0, 0, 0, 0]]\n\n=====Output Format=====\nPrint the list in lexographic order, each separated by a single newline.\n\n=====Sample Input=====\n[[1,1,2,3],[4,5,6,7],[7,8,9,10]]\n10\n\n=====Sample Output=====\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n'''\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution(\"1 1 1 2\") == [[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution(\"1 1 1\") == [[0,0,0]]\nassert solution(\"1 1\") == [[0,0]]\nassert solution(\"2\") == []\n\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n",
        "num_ids_2": 142,
        "num_ids_4": 171
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['1', '1', '2', '3']) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n===================\n\n===Solution==",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 3, 4, 5]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([3, 3, 6, 8]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1]]\n\n'''\n",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3\\n3\\n4\\n') == '[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]'\n'''",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.1 -2.2\") == \"1.1-2.2\"\nassert solution(\"-1.1 -2.2\") == \"-1.1-2.2\"\nassert solution(\"1.1 +2.2\") == \"1.1+2.2\"\nassert solution(\"-1.1 +2.2\") == \"-1.1+2.2\"\nassert solution(\"0.1 +2.2\") == \"0.1+2.2\"\n",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.2+4.3i\") == \"1.2-4.3i\"\nassert solution(\"1.2-4.3i\") == \"1.2+4.3i\"\nassert solution(\"1.2+4.3\") == \"1.2-4.3\"\nassert solution(\"1.2-4.3\") == \"1.2+4.3\"\n=====Solution=====\n",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n1 3\n''') == '1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.2+3.4i\") == \"1.2+3.4i\"\nassert solution(\"-1.2+3.4i\") == \"-1.2+3.4i\"\nassert solution(\"-1.2-3.4i\") == \"-1.2-3.4i\"\nassert solution(\"1.2+3.4i\") == \"1.2+3.4i\"\nassert solution(\"0.0+1i\") == \"0.0+1i\"\n",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1.5 - 2.5\") == \"2.00-3.00\"\nassert solution(\"3.5 -.5\") == \"2.00-1.50i\"\nassert solution(\"-1.5+1.5\") == \"0.00+2.00i\"\nassert solution(\"-1.5e2-1.5e2\") == \"0.00+0.00i\"\n=====Explanation=====\n",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3.14 15.765 -3.2 -2.34\") == \"14.26 756.50 -3.20 -2.34\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2 2\"\nassert solution(\"1 1 +\") == \"2 2\"\nassert solution(\"1 1 -\") == \"0 0\"\nassert solution(\"1 1 *\") == \"2 2\"\nassert solution(\"1 1 /\") == \"1.41 1.41\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.2 3.4') == '1.2+3.4i'\nassert solution('-1.2 -3.4') == '-1.2-3.4i'\nassert solution('-1.2 1.4') == '0.00+1.00i'\nassert solution('1.2 -3.4') == '1.2-3.4i'\n=====Sample Test Cases=====\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExplanation\n\nInput",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0.0+0.0i\n2.3+2.5i\n-2.5+-5i\n-1.7+2.1i\n''') == '2.1+2.1i'\nassert solution('''\n0.0+0.0i\n1.5+1.5i\n1.0+0.0i\n''') == '1.5+1.5i'\nassert solution('''\n0.0+0.0i\n1.5+1.5i\n1.0+0.0i\n0.0+0.0i\n''') == '1.5+1.5i'\nassert solution('''\n0.0+0.0i\n1.5+1.5i\n1.0+0.0i\n0.0+0.0i\n''') == '0.00+0.00i'\nassert solution('''\n0.0+0.0i\n0.0+0.0i\n0.0+0.0i\n0.0+0.0i\n''') == '0.00+0.00i'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0.00+0.00i'\nassert solution('5 + 3j') == '7.00+2.00i'\nassert solution('5 - 3j') == '-2.00-1.00i'\nassert solution('5 * 3j') == '10.00-1.00i'\nassert solution('5 / 3j') == '1.6667+0.3333j'\n",
        "num_ids_2": 37,
        "num_ids_4": 78
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\nassert solution(\"abc\\nxyz\") == \"xaybzc\"\nassert solution(\"xyz\\nxyz\") == \"xaybzc\"\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('xyz') == 'xaybzc'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\nprint(solution('xyz\\nabc'))\n\n\nIn a real life scenario, the code might be written in a different way, such as using a dictionary.\n\nIn Python, a string can be indexed and sliced like any other Python sequence.\n\nIn other languages, such as Java, the sequence of indexes is referred to as an array, and slicing is a special operation.\n\nAs a bonus, some languages have a built-in array type which can be used for indexing and slicing.\n\n-----Hints & Concepts-----\n- Using indexing and slicing (use list's indexing and slicing)\n- To get a list of items, use slicing.\n- To get a list of items, use indexing.\n- To get the length of a list, use len().\n- To get the first item in a list, use.pop(0).",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\nassert solution('abc\\nxyz') == 'xaybzc'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('xyz') == 'xaybzc'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('01B0') == '00'\nassert solution('0') == '0'\nassert solution('B0') == '00'\nassert solution('00') == '00'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('01B0') == '00'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"01B0\") == \"00\"\nprint(solution(\"01B0\"))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1B0\n''') == '01'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"00\"\nassert solution(\"01\") == \"00\"\nassert solution(\"00\") == \"00\"\nassert solution(\"00B0\") == \"00\"\nassert solution(\"0B0\") == \"00\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('01B0') == '00'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0B0\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"B0\") == \"00\"\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0B0\") == \"00\"\nassert solution(\"\") == \"\"\nassert solution(\"01\") == \"0\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 41
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('01B0') == '00'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1\\n') == '0'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\nprint(solution(input()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('6\\n2 1 5 4 3') == '3'\nassert solution('1\\n1') == '0'\nassert solution('5\\n1 2 5 4 3') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n5\\n4 3\\n2 1 5 4 3\\n') == '4\\n5\\n4 3\\n2 1 5 4 3'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '0'\nassert solution('2\\n1\\n1\\n1\\n1\\n') == '0'\n",
        "num_ids_2": 64,
        "num_ids_4": 88
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '10'\nassert solution('5\\n0 0 0 1 1\\n') == '2'\nassert solution('5\\n0 0 0 1 1\\n') == '0'\nassert solution('5\\n0 0 0 1 1\\n') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\nassert solution('''aba\nacab\naca''') == 'A'\nassert solution('''abcb\nabcc\ncbac''') == 'B'\nassert solution('''abcb\nabbb\nbacb''') == 'B'\nassert solution('''abcb\nabcc\nbcac''') == 'C'\n",
        "num_ids_2": 14,
        "num_ids_4": 30
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"aca\"\n) == \"A\"\nassert solution(\n    \"accc\"\n) == \"C\"\nassert solution(\n    \"ca\"\n) == \"B\"\nassert solution(\n    \"\"\n) == \"\"\nassert solution(\n    \"a\"\n) == \"A\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'A'\nassert solution('ba') == 'A'\nassert solution('ca') == 'C'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\nassert solution('''aca\naccc\ncaa''') == 'B'\nassert solution('''aca\naccc\ncaaa''') == 'C'\nassert solution('''aca\naccc\ncaaa\ncaaa''') == 'A'\nassert solution('''aca\naccc\ncaaa\ncaaa''') == 'B'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"10 10 10 10 10\") == \"YES\"\n\n'''\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('1 1 1 1 1 1 1 1 1 1 1') == 'YES'\nassert solution('1 1 1 1 1 1 1 1 1 1 1') == 'NO'\n",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == 'YES'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5 7''') == 'YES'\nassert solution('''1 5 7''') == 'YES'\nassert solution('''3 3 7''') == 'NO'\nassert solution('''3 4 6''') == 'NO'\nassert solution('''3 5 7''') == 'NO'\n''')\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 7\\n') == 'YES'\nassert solution('4 4 5\\n') == 'NO'\nassert solution('2 2 4\\n') == 'NO'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('3 4 5') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 7\n5 7 5''') == \"YES\"\nassert solution('''2 2 5\n2 5 2''') == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\", \"Wrong\"\nassert solution(\"1 1 1\") == \"YES\", \"Wrong\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 5 6') == 'NO'\nassert solution('5 4 7') == 'NO'\nassert solution('10 5 4 7') == 'YES'\nassert solution('10 4 5 7') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"4\") == \"7\"\nassert solution(\"3\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"18\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '11'\nassert solution('10') == '143'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"5\") == \"11\"\nassert solution(\"3\") == \"11\"\nassert solution(\"5\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('5\\n') == '11'\nassert solution('10\\n') == '761'\nassert solution('100\\n') == '77721058543'\n\n\"\"\"\nimport math\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"25\"\nassert solution(\"11\") == \"121\"\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 1754
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"12\"\nassert solution(\"50\") == \"82\"\nassert solution(\"150\") == \"2684\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"8\"\nassert solution(\"6\") == \"13\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"10\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n\n-----Test cases-----\n\"1\"\n\"2\"\n\"3\"\n\"4\"\n\"5\"\n\"6\"\n\"7\"\n\"8\"\n\"9\"\n\"10\"\n\"11\"\n\"12\"\n\"13\"\n\"14\"\n\"15\"\n\"16\"\n\"17\"\n\"18\"\n\"19\"\n\"20\"\n\"21\"\n\"22\"\n\"23\"\n\"24\"\n\"25\"\n\"26\"\n\"27\"\n\"28\"\n\"29\"\n\"30\"\n\"31\"\n\"32\"\n\"33\"\n\"34\"\n\"35\"\n\"36\"\n\"37\"\n\"38\"\n\"39\"\n\"40\"\n\"41\"\n\"42\"\n\"43\"\n\"44\"\n\"45\"\n\"46\"\n\"47\"\n\"48\"\n\"49\"\n\"50\"\n\"51\"\n\"52\"\n\"53\"\n\"54\"\n\"55\"\n\"56\"\n\"57\"\n\"58\"\n\"59\"\n\"60\"\n\"61\"\n\"62\"\n\"63\"\n\"64\"\n\"65\"\n\"66\"\n\"67\"\n\"68\"\n\"69\"\n\"70\"\n\"71\"\n\"72\"\n\"73\"\n\"74\"\n\"75\"\n\"76\"\n\"77\"\n\"78\"\n\"79\"\n\"80\"\n\"81\"\n\"82\"\n\"83\"\n\"84\"\n\"85\"\n\"86\"\n\"87\"\n\"88\"\n\"89\"\n\"90\"\n\"91\"\n\"92\"\n\"93\"\n\"94\"\n\"95\"\n\"96\"\n\"97\"\n\"98\"\n\"99\"\n\"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('2') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n10\\n15') == '55', 'Should be 55'\nassert solution('1\\n2\\n3') == '6', 'Should be 6'\nassert solution('8\\n9\\n10') == '18', 'Should be 18'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '6'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"3\") == \"7\"\nassert solution(\"2\") == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"7\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"2 4 2\") == \"7\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\n2') == '7'\nassert solution('2\\n3\\n4') == '10'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n''') == '11'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3''') == '11'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"11\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '11'\nassert solution('2') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '11'\nassert solution('2') == '12'\nassert solution('3') == '13'\nassert solution('4') == '14'\nassert solution('5') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '11'\nassert solution('''\n3\n2 1 3\n''') == '11'\nassert solution('''\n4\n1 1 2 2\n''') == '3'\nassert solution('''\n3\n1 1 2 2\n''') == '3'\nassert solution('''\n3\n2 2 3 1\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"11\"\nassert solution(\"3 5 6\") == \"8\"\nassert solution(\"3 7 8\") == \"15\"\nassert solution(\"1 2 3 4\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"49\"\nprint(solution(*[int(i) for i in stdin.split('\\n')]))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\") == \"11\"\nprint(solution(\"3\\n1 2 3\"))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 2') == 'YES', 'Tests failed!'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 2') == 'NO'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 3 2\") == \"NO\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 2') == 'YES'\nassert solution('4 3 2') == 'NO'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 2\") == \"YES\"\nassert solution(\"4 3 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'YES'\nassert solution('4 3 2') == 'NO'\nassert solution('5 2 1') == 'NO'\nassert solution('1 5 2') == 'NO'\nassert solution('4 6 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"YES\"\nassert solution(\"3 3 1\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 1 2\") == \"NO\"\nassert solution(\"4 2 3\") == \"YES\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('4 3 3') == 'NO'\nassert solution('8 8 8') == 'YES'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3 2') == 'YES', \"Test Case 1 Failed\"\nassert solution('1 2 3') == 'NO', \"Test Case 2 Failed\"\nassert solution('1 2 3 4') == 'NO', \"Test Case 3 Failed\"\nassert solution('1 2 3 4 5') == 'NO', \"Test Case 4 Failed\"\nassert solution('4 5 3 2 1') == 'YES', \"Test Case 5 Failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('5 5 5') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1\\n\") == \"1\"\nassert solution(\"5 3 11\\n1\\n\") == \"30\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('5 3 1') == '30'\nassert solution('5 3 11 4') == '26'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 11\\n1') == '30'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5 5 11\") == \"25\"\nassert solution(\"3 3 11\") == \"17\"\nassert solution(\"7 3 11\") == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('5 1 2') == '9'\nassert solution('10 1 2') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 1 1\") == \"9\"\nassert solution(\"1 5 1\") == \"9\"\nassert solution(\"1 1 5\") == \"8\"\nassert solution(\"1 1 5\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaccaba') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abaccaba') == 'Yes', solution('abaccaba')\nassert solution('bab') == 'No', solution('bab')\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcd') == 'No'\nassert solution('abccaba') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcbcd') == 'No'\nassert solution('egea') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('aabbbc') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcabc') == 'No'\nassert solution('abacaba') == 'Yes'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('acbdbc') == 'No'\n\n\"\"\"\n\nw = stdin.readline()\n\na = w.count(\"a\")\nb = w.count(\"b\")\nc = w.count(\"c\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abacdcba') == 'No'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('kajak') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''3 5\n1 1\n2 2\n3 3\n4 4\n5 5''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('4 5') == '5'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\"\n\n\"\"\"\n\nimport heapq\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na = a + [0]\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1', 'test 1 failed'\nassert solution('2 5') == '2', 'test 2 failed'\nassert solution('2 4') == '3', 'test 3 failed'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"6 4\") == \"4\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3 4\\n1 1\\n2 2\\n3 3') == '3'\nassert solution('4 3\\n1 2\\n3 1\\n4 1') == '4'\nassert solution('3 4\\n1 1\\n2 2\\n3 3') == '3'",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 3') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1\n''') == '2'\nassert solution('''2 2\n1\n''') == '2'\nassert solution('''3 5\n2\n''') == '10'\nassert solution('''3 5\n2\n''') == '10'\nassert solution('''3 5\n2\n''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '2'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 0\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 2]) == 2\nassert solution([10, 10]) == 4\nassert solution([100, 100]) == 5\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 1]) == '2'\nassert solution([2, 2]) == '2'\nassert solution([3, 2]) == '3'\nassert solution([4, 3]) == '6'\nassert solution([5, 4]) == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('10 5') == '14'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2,2]) == 2\nassert solution([1,2]) == 1",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2'\nassert solution('10 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 3\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"20 5\") == \"20\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 4\n3 1 2 8''') == '10'\nassert solution('''20 5\n5 2 4 3 1''') == '14'\nassert solution('''20 5\n1 1 2 4 3''') == '19'\n\nprint(solution('''20 4\n3 1 2 8'''))\nprint(solution('''20 5\n5 2 4 3 1'''))\nprint(solution('''20 5\n1 1 2 4 3'''))\nprint(solution('''20 10\n2 1 2 3 4'''))\nprint(solution('''20 10\n3 5 6 4 3'''))\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == ''\nassert solution(\"20 3\") == '10'\nassert solution(\"3 3\") == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 3') == '10'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 5') == '20'\nassert solution('10 5') == '10'\nassert solution('10 2') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"20 3\") == \"10\"\nassert solution(\"20 20\") == \"0\"\nassert solution(\"20 20\") == \"0\"\nassert solution(\"100 20\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"20 3\n5 10 15\"\"\") == \"10\"\nassert solution(\"\"\"20 5\n5 7 8\"\"\") == \"5\"\nassert solution(\"\"\"20 2\n3 4\"\"\") == \"8\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"10\"\nassert solution(\"20 3\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 5 1 2\") == \"1\"\nassert solution(\"6 5 2 8\") == \"16\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 2 7') == '15'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"2 4 5 6\") == \"15\"\nassert solution(\"4 2 6 4\") == \"16\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 2 7') == '15', 'Sample Test Failed'\nassert solution('1 2 3 4') == '4', 'Sample Test Failed'\nassert solution('2 3 4 1') == '4', 'Sample Test Failed'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('0 0 0 0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '15'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"5 5 2 7\") == \"15\"\nassert solution(\"15 5 2 7\") == \"15\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('1 2 3 4') == '4'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"AC 1 WA 1 TLE 1 RE\"\nassert solution(\"6\") == \"AC 3 WA 3 TLE 3 RE\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"1\") == \"AC x 1\"\nassert solution(\"2\") == \"AC x 2\"\nassert solution(\"3\") == \"AC x 0\"\nassert solution(\"4\") == \"WA x 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('1') == 'WA x 1'\nassert solution('2') == 'TLE x 2'\nassert solution('3') == 'RE x 0'\nassert solution('4') == 'AC x 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'AC 3\\nWA 1\\nTLE 2\\nRE 0\\n'\nassert solution('1') == 'WA 1\\n'\nassert solution('2') == 'AC 1\\nTLE 1\\nRE 0\\n'\nassert solution('5') == 'AC 3\\nWA 1\\nTLE 2\\nRE 0\\nWA 2\\nTLE 0\\nRE 1\\n'\nassert solution('6') == 'AC 3\\nWA 1\\nTLE 2\\nRE 0\\nWA 2\\nTLE 0\\nRE 1\\nWA 3\\nTLE 1\\nRE 0\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 100
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'AC x 5'\nassert solution('3') == 'AC x 3'\nassert solution('2') == 'AC x 2'\nassert solution('1') == 'AC x 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nAC\\nWA\\nAC\") == \"AC x 3\"\nassert solution(\"2\\nAC\\nWA\\nAC\") == \"AC x 2\"\nassert solution(\"5\\nAC\\nWA\\nAC\\nAC\\nAC\") == \"AC x 3\"\nassert solution(\"5\\nAC\\nWA\\nAC\\nAC\\nAC\\nAC\") == \"AC x 3\"",
        "num_ids_2": 42,
        "num_ids_4": 99
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n\"\"\"\nfrom typing import List\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"2\") == \"WA x 1\"\nassert solution(\"1\") == \"TLE x 2\"\nassert solution(\"0\") == \"RE x 0\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nAC\\nWA\\nTLE\\nRE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n\"\"\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('21') == '27'\nassert solution('31') == '1'\nassert solution('30') == '0'\nassert solution('15') == '0'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"22\") == \"26\"\nassert solution(\"23\") == \"27\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"4\"\nassert solution(\"24\\n\") == \"12\"\nassert solution(\"30\\n\") == \"27\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"22\") == \"26\"\nassert solution(\"23\") == \"25\"\nassert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"23\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"12\") == \"9\"\nassert solution(\"21\") == \"27\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"22\") == \"28\"\nassert solution(\"23\") == \"28\"\nassert solution(\"24\") == \"29\"\nassert solution(\"25\") == \"30\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('21') == '27'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"21\") == \"27\"\nassert solution(\"15\") == \"1\"\nassert solution(\"22\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"18\") == \"14\"\nassert solution(\"21\") == \"27\"\nassert solution(\"22\") == \"10\"\nassert solution(\"23\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('21') == '27'\nassert solution('22') == '28'\nassert solution('23') == '29'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n') == '8'\nassert solution('10\\n12\\n') == 'error'\nassert solution('5\\n10\\n') == '15'\nassert solution('1\\n2\\n') == '3'\nassert solution('1\\n5\\n') == 'error'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '7'\nassert solution('2 10') == 'error'\nassert solution('2 6') == '7'\nassert solution('4 10') == 'error'\nassert solution('8 9') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '5'\nassert solution('1 2') == '3'\nassert solution('10 20') == 'error'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"error\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '9'\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"4 5\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"6 2\") == \"7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 6\") == \"9\"\n\nassert solution(\n    \"10 10\") == \"error\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3') == '9'\nassert solution('1 2') == '3'\nassert solution('2 1') == '2'\nassert solution('3 1') == '3'\nassert solution('0 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n0 0 0 1 1''') == '1'\nassert solution('''5\n2 3 4 1 2''') == '3'\nassert solution('''5\n0 0 0 1 1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7 9\") == 7\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '7'\nassert solution('5') == '3'\nassert solution('10') == '7'\nassert solution('2') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 4 3 5\") == \"5\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 7 9\\n\") == \"7\"\nassert solution(\"3\\n1 3 4 2\\n\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 4, 5, 6]) == 7\nassert solution([1, 2, 3, 4]) == 4\nassert solution([10, 1, 100, 50, 1, 50]) == 50\nassert solution([20, 20, 20, 20]) == 20\nassert solution([50, 50, 50, 50]) == 50\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3\\n') == 'Yes'\nassert solution('2 2\\n') == 'No'\nassert solution('1 2\\n') == 'No'\nassert solution('1 3\\n') == 'Yes'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"3 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('4 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3\n''') == 'Yes'\nassert solution('''\n10 3\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('1 5') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 3\\n3 2') == 'Yes'\nassert solution('1 2\\n2 3\\n3 2') == 'No'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 3\n\n''') == 'Yes'\nassert solution('''\n1 1\n\n''') == 'No'\nassert solution('''\n1 2\n\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == 'Yes'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]) == 'No'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]) == 'Yes'",
        "num_ids_2": 66,
        "num_ids_4": 102
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Odd\"\nassert solution(\"4\") == \"Even\"\nassert solution(\"4 2\") == \"Even\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Even'\nassert solution('1 3') == 'Odd'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"3 5\") == \"Odd\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"Even\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Even'\nassert solution(input()) == 'Odd'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n3 4\n\"\"\") == \"Even\"\nassert solution(r\"\"\"\n10 20\n\"\"\") == \"Odd\"\nassert solution(r\"\"\"\n5 6\n\"\"\") == \"Even\"\nassert solution(r\"\"\"\n0 0\n\"\"\") == \"Odd\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Even'\nassert solution('4 5') == 'Odd'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"1 5\") == \"Odd\"\nassert solution(\"4 6\") == \"Odd\"\nassert solution(\"5 4\") == \"Even\"\nassert solution(\"2 4\") == \"Even\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('2 5') == 'Odd'\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == 'Even'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 6]) == \"2\"\nassert solution([2, 7]) == \"3\"\nassert solution([3, 8]) == \"3\"\nassert solution([4, 9]) == \"3\"\nassert solution([5, 10]) == \"3\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 6') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 6]) == '2'\n\"\"\"\n\nfrom itertools import product\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 6\\n\") == \"2\"\nassert solution(\"5 8\\n\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '4'\nassert solution('5 5') == '5'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"2 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 6\\n\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6 9'\nassert solution('4') == '0 0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1') == '6\\n9'\nassert solution('3\\n2 1 4\\n2\\n1 1') == '6\\n9'\n\n\"\"\"\n\n\n\nimport math\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6 9\"\nassert solution(\"2\") == \"9\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6 9'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 1 4\") == \"6\\n9\"\nassert solution(\"2\\n1 1\\n2 3\") == \"9\\n9\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"6 9\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6 9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\n\"\"\"\n\nstdin = '3\\n2 1 4\\n2\\n1 1\\n2 3'\n\nn, *_ = list(map(int, stdin.split()))\n\nprint('\\n'.join(map(lambda a, b: str(int(a) + int(b)), (\n    '%.0f' % (((n - 1) * (sum(map(int, stdin.split())))) + ((n - 1) * int(stdin.split()[0])))),\n    *_\n))))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1000 8\\n1 3 4 5 6 7 8 9\\n\"\n    ) == \"2000\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('0') == '0'\nassert solution('0 8') == '8'\nassert solution('0 8 0') == '8'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"1001 8\") == \"3000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2000'\nassert solution('1000') == '2000'\nassert solution('123456789') == '12356789'",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0\\n0\\n0\") == \"2000\"\nassert solution(\"1000 8\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == \"2000\"\n",
        "num_ids_2": 51,
        "num_ids_4": 146
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('10000 10') == '10000'\nassert solution('10200 10') == '10000'\nassert solution('10 200 10') == '10000'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1000 8\") == \"2000\"\n",
        "num_ids_2": 17,
        "num_ids_4": 28
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\") == \"2000\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n3 1\\n') == '1000'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n1 3 4 5 6 7 8 9\\n1 3 4 5 6 7 8 9\\n1 3 4 5 6 7 8 9\\n1 3 4 5 6 7 8 9\\n1 3 4 5 6 7 8 9\\n1 3 4 5 6 7 8 9\\n\") == \"3000\"\n",
        "num_ids_2": 44,
        "num_ids_4": 127
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"4 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n3 1\\n3 2\") == \"2\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n3 4\\n\") == \"3\"\n\nsolution.iterative = True\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n3 4\\n\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 101
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2'\nassert solution('10 2') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"8 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '1'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '0'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"4\\n2\") == \"5\"\nassert solution(\"2\\n1\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"20\"\nassert solution(\"3\") == \"10\"\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == str(10)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3') == '10'\nassert solution('10\\n2') == '8'\nassert solution('100\\n3') == '101'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"10\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nassert solution(\"5\\n2\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '10'\nassert solution('4') == '8'\nassert solution('5') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2\n\n''') == '10'\nassert solution('''\n1\n1\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5\n''') == '10'\nassert solution('''8\n5\n''') == '10'\nassert solution('''10\n2\n''') == '12'\nassert solution('''6\n7\n''') == '21'\nassert solution('''8\n2\n''') == '14'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1.1\") == \"0.0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\", \"Failed test case for 1\"\nassert solution(\"0\") == \"1\", \"Failed test case for 0\"\nassert solution(\"-1\") == \"0\", \"Failed test case for -1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0.1\") == \"0\"\nassert solution(\"1.1\") == \"0\"\nassert solution(\"0.0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('-1') == '0'\nassert solution('0.0') == '0'\nassert solution('0.1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('1') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\n\n------Extra------",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('125') == '176'\nassert solution('0123') == '3'\nassert solution('1234') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('125') == '176'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"125\"\n) == \"176\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"12\") == \"2\"\nassert solution(\"1212\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('125') == '176'\nassert solution('1+2+5+8') == '1+2+5+8'\nassert solution('1+2+5') == '1+2+5'\nassert solution('1+2+5') == '1+2+5'\nassert solution('1+2+5') == '1+2+5'",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n3\n1 2 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n3\\n4\\n5') == '1'\nassert solution('4\\n5\\n6\\n7') == '3'\nassert solution('6\\n7\\n8\\n9\\n10') == '5'\nassert solution('10\\n9\\n8\\n7\\n6') == '7'\n",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('9\\n1 2 3 4 5 6 7 8 9') == '1'\nassert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"1\"\n",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n1 2 3 4 5 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n1 2 3 4 5 6\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"15800\"\nassert solution(\"10\") == \"7500\"\nassert solution(\"7\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"15800\"\n\"\"\"\n\nnum = int(input())\n\nx = 0\ny = 0\n\nfor i in range(1,num+1):\n    x += i*200\n    y += i*800\n\nprint(x-y)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('20') == '15800'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '15800'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"20\"\nassert solution(\"20\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20\") == '15800'\nassert solution(\"1\") == '15800'\nassert solution(\"100\") == '60000'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20') == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20\") == '15800'\nassert solution(\"30\") == '20200'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '15520'\nassert solution('10\\n') == '7520'\nassert solution('10\\n') == '7520'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'abc', \"Should be 'abc'\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\nassert solution('abc') == 'abc'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n\"\"\"\n\nimport itertools\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"101\") == \"2\"\nassert solution(\"100101\") == \"3\"\n\"\"\"\nfrom math import sqrt\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 2\nassert solution(\"101\") == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('101') == '2'\nassert solution('010') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('101') == '2'\nassert solution('001') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('101') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 2\nassert solution('01') == 3\nassert solution('10') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"11\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"2\\n5\\n0\\n1000\\n\") == \"0\"\nassert solution(\"1\\n3\\n10000\\n9000\") == \"48000\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('3\\n1\\n10000\\n9000') == '10000'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 10000 9000') == '48000'\nassert solution('10 4 100000 99999') == '79800'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1770,
        "num_ids_4": 1770
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000'\nassert solution('6\\n2\\n10000\\n9000\\n') == '50000'\nassert solution('1\\n1\\n10000\\n9000\\n') == '10000'\n",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n5\\n\") == \"48000\"\nassert solution(\"2\\n3\\n3\\n\") == \"4000\"\nassert solution(\"4\\n3\\n2\\n\") == \"3500\"\nassert solution(\"5\\n4\\n3\\n2\\n\") == \"30000\"\n\nimport json\nimport os",
        "num_ids_2": 37,
        "num_ids_4": 78
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('20\\n10\\n1\\n2') == '10'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '48000'\nassert solution('4') == '29000'\nassert solution('2') == '9000'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '48000'\n\n'''\n\n'''\nProblem 2 (easy):\nWrite a program that takes an integer as input and outputs its multiplicative\naccumulation.\n\nNote that a number in the multiplication table is a multiplication of itself\n(that is, 1 * 1 = 1, 2 * 2 = 4, 3 * 3 = 9, 4 * 4 = 16, 5 * 5 = 25, etc.),\nbut not the numbers 1, 2, 3, 4, 5, 6, and 7.\n\n-----Constraints-----\n - 1 \\leq N \\leq 100\n - N is an integer.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint a string in the following format:\naccumulation of N\n\nHere accumulation is a string that contains the multiplicative accumulation\nof N.\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\nacmulation of 5\n\nThe multiplicative accumulation of 5 is:\n1 * 1 = 1\n2 * 2 = 4\n3 * 3 = 9\n4 * 4 = 16\n5 * 5 = 25\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5000'\nassert solution('5') == '48000'\nassert solution('10') == '43000'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"2 - 1\") == \"1\"\nassert solution(\"2 + 1\") == \"3\"\n\n\"\"\",\"\"\"\nSolution 1\nclass Solution:\n    def solve(self, A, op, B):\n        if op == '+':\n            return A+B\n        else:\n            return A-B\n        \n\n\"\"\"\",\"\"\"\nSolution 2\nclass Solution:\n    def solve(self, A, op, B):\n        if op == '+':\n            return A+B\n        else:\n            return A-B\n        \n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 + 2') == '3'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 + 2''') == '3'\nassert solution('''1 + 2''') == '3'\n\"\"\"\n\n########################################################################################################################\n\"\"\"\n--- Day 3: Toboggan Trajectory ---\nThe toboggan_map character array is provided for you in the following form:\n\ntoboggan_map = [\n    \"..##.......\",\n    \"#...#...#..\",\n    \".#....#..#.\",\n    \"..#.#...#.#\",\n    \".#...##..#.\",\n    \"..#.##.....\",\n    \".#.#.#....#\",\n    \".#........#\",\n    \"#.##...#...\",\n    \"#...##....#\",\n    \".#..#...#.#\",\n]\nThe heights of each cell in the map above are summed, so\nthe map has a height of 366.\n\nHelp Jonny find the shortest distance to travel along the map.\n\"\"\"\nfrom typing import List, Tuple\n\ntoboggan_map = [\n    \"..##.......\",\n    \"#...#...#..\",\n    \".#....#..#.\",\n    \"..#.#...#.#\",\n    \".#...##..#.\",\n    \"..#.##.....\",\n    \".#.#.#....#\",\n    \".#........#\",\n    \"#.##...#...\",\n    \"#...##....#\",\n    \".#..#...#.#\",\n]",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('2 - 1') == '1'\nassert solution('2 - 2') == '0'\nassert solution('-2 - 1') == '1'\nassert solution('-2 - 2') == '0'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"-2 + -3\") == \"5\"\nassert solution(\"3 + 2 - 4\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 + 2 - 5\") == \"-6\"\nassert solution(\"1 + 2 + 3 - 5\") == \"2\"\nassert solution(\"-3 + 4\") == \"7\"\nassert solution(\"-3 + 4 - 5\") == \"-8\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('5 - 2') == '7'\nassert solution('4 - 2') == '2'\nassert solution('6 - 2') == '4'\nassert solution('2 * 2') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1000''') == 'ARC'\nassert solution('''1''') == 'ABC'\nassert solution('''2''') == 'ARC'\nassert solution('''3''') == 'ARC'\nassert solution('''5''') == 'ARC'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'ABC', 'expected ABC'\nassert solution('1230') == 'ARC', 'expected ARC'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\nassert solution('1201') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ARC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'ARC'\nassert solution('1000') == 'ABC'\nassert solution('1111') == 'ARC'\nassert solution('12000') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1234') == 'ARC'\nassert solution('1') == 'ABC'\nassert solution('2') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('12000') == 'ABC'\nassert solution('22000') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1000\n''') == 'ARC'\nassert solution('''40000000\n''') == 'ABC'\nprint(solution('''999999999\n'''))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n0\n0\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n0\n0\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n0\n0\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n0\n0\n10\n\"\"\") == \"10\"\nassert solution(\"\"\"\n700\n600\n780\n\"\"\") == \"1300\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('1000000000') == '1000000000'\nassert solution('1000000') == '1000000'\nassert solution('1000000') == '1000000'\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n3\\n') == '1300'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    50 100 120\n    ''') == '1100'\nassert solution('''\n    300 300 300\n    ''') == '1300'\nassert solution('''\n    900 1000 100\n    ''') == '1050'\nassert solution('''\n    500 300 100\n    ''') == '1100'\nassert solution('''\n    800 600 100\n    ''') == '1300'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''700 600 780''') == '1300'\nassert solution('''1 1 1''') == '1'\nassert solution('''10 5 10''') == '15'\nassert solution('''1 1 1''') == '1'\nassert solution('''1 1 1''') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 1 4\\n') == '1300'\nassert solution('700 600 780\\n') == '1300'\nassert solution('700 600 780\\n') == '1300'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([700, 600, 780]) == \"1300\"\nassert solution([1000, 1000, 1000]) == \"0\"\nassert solution([1000, 1000, 1000, 1000]) == \"0\"\nassert solution([1000, 1000, 1000, 1000, 1000]) == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"700 600 780\"\n) == \"1300\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"500 500 500\") == \"500\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"2 2 2\") == \"3 1 1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n2 3\nabc\narc\n'''\n    ) == '#####\\n#abc#\\n#arc#\\n#####'\n\nassert solution(\n    '''\n1 10\na\n'''\n    ) == '#####\\na#####'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '#ab##'\nassert solution('2 3') == '#cabc'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"###\\n###\\n###\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '\\n'\nassert solution('2 3') == '\\n\\n#####\\n#abc#\\n#arc#\\n#####'\nassert solution('5 5') == '\\n\\n#####\\n#abc#\\n#arc#\\n#####'\nassert solution('9 9') == '\\n\\n#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 41,
        "num_ids_4": 101
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nprint(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '#####\\n#abc#\\n#arc#'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nIIDID\n''') == '2'\nassert solution('''\n3\nIJIJIJ\n''') == '2'\nassert solution('''\n5\nIIDID\n''') == '0'\nassert solution('''\n5\nIIDID\n''') == '2'\nassert solution('''\n5\nIIDID\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('8') == '2'\nassert solution('5') == '2'\nassert solution('1') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nIIDID\\n') == '2'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('1\\nI') == '1'\nassert solution('2\\nI') == '2'\nassert solution('3\\nID') == '3'\nassert solution('4\\nDI') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('6\\nIIDID\\nDIDID') == '2'\nassert solution('6\\nIIDID\\nDIDID\\nIDIDD') == '3'\nassert solution('5\\nIIDID\\nDIDID\\nIDIDD\\nIIDID') == '2'\nassert solution('5\\nIIDID\\nDIDID\\nIIDID') == '1'\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 90
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\", solution(\"2\")\nassert solution(\"IIDID\") == \"2\", solution(\"IIDID\")\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2IIDID\") == \"\"\nassert solution(\"5IIDID\") == \"\"\nassert solution(\"5IDIID\") == \"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 38
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"10\\nAAAAAA\") == \"0\"\nassert solution(\"5\\nIIDID\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nprint(solution(input()))\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"15009 11532\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"1234567891011121314151617181920212223242526272829\") == \"16\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 9\n''') == '4'\nassert solution('''\n20 19\n''') == '4'\nassert solution('''\n1000 9999\n''') == '4'\n\nstdin = input()",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n11009 11332\n\"\"\") == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11009 11332') == '4'\nprint('Congratulations! All test cases passed!')\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 4') == \"3\"\nassert solution('6 6 5') == \"4\"\nassert solution('5 2 4') == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('2 2 4') == '2'\nassert solution('1 1 4') == '3'\n\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 3') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n\n2\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 4') == '3'\nassert solution('5 2 5') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 1 2 2 2 3 3 4 4 4 4 5 5') == '5'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 58
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 3 2\") == \"3\"\nassert solution(\"1 1 3\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"3\"\nassert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 1 1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2\") == \"3\"\nassert solution(\"1 1 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n') == '12'\nassert solution('6 3\\n1 3 2 5 4 3\\n') == '5'\nassert solution('6 2\\n1 2\\n') == '3'\n",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 2\\n1 2 3 4 5\") == \"7\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '12'\nassert solution('5 2') == '2'\nassert solution('1 1') == '1'\nassert solution('20 4') == '13'\nassert solution('1 10') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"5 4\") == \"8\"\nassert solution(\"5 5\") == \"14\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '12'\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"12\", \"Wrong!\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '1', 'Wrong answer'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '12'\nassert solution('5 3') == '12'\nassert solution('12 2') == '22'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '12'\nassert solution('15 6') == '15'\nassert solution('50 15') == '50'\nassert solution('5 4 3 5') == '13'\nassert solution('5 3 1 2 3 4') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"3 5 7\") == \"A\"\nassert solution(\"15 20 15\") == \"A\"\n\n__author__ = 'praveen@gyandata.com'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 7') == 'B'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 2 7\n\"\"\") == \"B\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 7') == 'A'\nassert solution('10 10 10') == 'B'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('10 3 5') == 'A'\nassert solution('20 10 10') == 'A'\nassert solution('40 10 20') == 'B'\nassert solution('80 10 50') == 'B'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 7''') == 'B'\nassert solution('''4 3 7''') == 'A'\nassert solution('''5 5 7''') == 'A'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'B'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"A\"\nassert solution(\"5 2 7\") == \"B\"\nassert solution(\"6 2 7\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'A'\nassert solution('5 2 7\\n') == 'B'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 2 4\") == \"B\"\nassert solution(\"5 4 7\") == \"A\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n\nassert solution('2017/01/01') == '2018/01/01'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/29\") == \"2017/01/29\"\nassert solution(\"2018/01/29\") == \"2018/01/29\"\nassert solution(\"2017/02/29\") == \"2017/02/29\"\nassert solution(\"2017/03/29\") == \"2017/03/29\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/01') == '2017/01/01'\nassert solution('2017/12/31') == '2018/01/01'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2017/01/07') == '2018/01/07'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/08') == '2018/01/08'\nassert solution('2017/01/09') == '2017/01/09'\nassert solution('2017/01/10') == '2017/01/10'\nassert solution('2017/01/11') == '2017/01/11'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/03') == '2018/01/03'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2017/01/07') == '2018/01/07'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'aac'\nassert solution('1') == 'a'\n\n'''\n\nn = int(input())\ns = input()",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\nacba\\ndaacc\\nacacac') == 'aac'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"aac\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"\"\nassert solution(\"aba\") == \"a\"\nassert solution(\"abc\") == \"b\"\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\ncbaa\ndaacc\nacacac\n''') == 'aac'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'aac'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"a\"\nassert solution(\"3\") == \"aac\"\nassert solution(\"4\") == \"caa\"",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\ncbaa\ndaacc\nacacac\"\"\") == \"aac\"\n\nassert solution(\"\"\"2\nac\nbb\"\"\") == \"ac\"\n\nassert solution(\"\"\"3\nabc\ncba\nacd\"\"\") == \"\"\n\nassert solution(\"\"\"2\naa\nbb\"\"\") == \"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1\n24 30\n\"\"\"\n) == \"7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '7'\nassert solution('10') == '7'\nassert solution('10000') == '7'\nassert solution('100000') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == 7\nassert solution(2) == 6\nassert solution(3) == 5\nassert solution(4) == 4\nassert solution(5) == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n24 30\n''') == '7'\n'''\n\n##### My code #####\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"1\", \"24 30\"]) == \"7\"\nassert solution([\"2\", \"1 2\"]) == \"1\"\nassert solution([\"2\", \"1 1\"]) == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n2 10\\n:') == '7'\nassert solution('3\\n3 4 6\\n:') == '10'\nassert solution('4\\n0 1 2 3\\n:') == '11'\nassert solution('5\\n12 13 14 15 16\\n:') == '16'\n",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"7\"\nassert solution(\"1\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 3') == '1'\nassert solution('6 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '6'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == '1'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1 3'\n) == '6'\nassert solution(\n    '2 2'\n) == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4') == '6'\n\"\"\"\n\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '6'\n'''\n\nimport math\n\nn, m = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n2\n1\n2\n1\n''') == '6', 'Wrong solution'\n\n'''def solution(stdin: str) -> str:\n    n, m = list(map(int, stdin.split()))\n    if n == 1 or m == 1:\n        return 0\n    else:\n        return n + m + 3\n\nassert solution('''3 4\n2\n1\n2\n1\n''') == '6', 'Wrong solution''''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"6\"\n\"\"\"\n\nn, m = list(map(int, input().split()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"4 5\") == \"Impossible\"\nassert solution(\"1 0\") == \"Possible\"\nassert solution(\"1 3\") == \"Possible\"\nassert solution(\"3 3\") == \"Impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Possible\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"Impossible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Possible\"\nassert solution(\"3 1\") == \"Impossible\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"1 1\") == \"Possible\"\nassert solution(\"9 9\") == \"Possible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"3 2\") == \"Impossible\"\n\nsolution(input())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == 'Possible'\nassert solution('5 6') == 'Impossible'\n\n'''\n\nfrom functools import reduce",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"1 1\") == \"Impossible\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Possible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('10 5') == 'Impossible'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Possible\"\nassert solution(\"2 2\") == \"Possible\"\nassert solution(\"3 3\") == \"Possible\"\nassert solution(\"4 4\") == \"Impossible\"\nassert solution(\"5 5\") == \"Possible\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'ctcoder'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"UNRESTORABLE\"\nassert solution(\"?\") == \"UNRESTORABLE\"\nassert solution(\"???\") == \"UNRESTORABLE\"\nassert solution(\"????\") == \"UNRESTORABLE\"\nassert solution(\"???\") == \"???\"\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'UNRESTORABLE'\nassert solution('coder') == 'atcoder'\n\nThe given input contains no leading or trailing spaces, and contains only?,,, and.\n'''",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"tc????\") == \"atcoder\"\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('?') == 'UNRESTORABLE'\nassert solution('???') == 'UNRESTORABLE'\nassert solution('???') == 'UNRESTORABLE'\nassert solution('???') == 'UNRESTORABLE'\nassert solution('??') == 'UNRESTORABLE'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == 'UNRESTORABLE'\nassert solution('?') == 'UNRESTORABLE'\nassert solution('T') == 'T'\nassert solution('T?') == 'T'\nassert solution('c?') == 'c'\n",
        "num_ids_2": 28,
        "num_ids_4": 49
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'UNRESTORABLE'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'tcoder'\n\nfrom collections import defaultdict\nfrom collections import deque",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('atcoder') == 'atcoder'\nassert solution('tc????') == 'UNRESTORABLE'\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'UNRESTORABLE'\nassert solution('?') == 'UNRESTORABLE'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('c') == 'c'\n",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2002\") == \"2032\"\nassert solution(\"2017\") == \"2032\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2002') == '2032'\nassert solution('2017') == '2017'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\nassert solution('2032') == '2002'\nassert solution('2032') == '2002'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2032\"\nprint(\"solution() is ok\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2002') == '2032'\nassert solution('2017') == '2017'\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\"\nassert solution(\"-1\\n-2\\n\") == \"0\"\n\n---Time Limit Exceeded---\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\n'''\n\nR,G=map(int,input().split())",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2002\n2017''') == '2032'\nassert solution('''\n0\n0''') == '0'\nassert solution('''\n-200\n-200''') == '-200'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n10\\n') == '9.5'\nassert solution('1\\n1\\n') == '0.5'\nassert solution('1\\n9999\\n') == '10000.0'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''string\n''') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('assesses') == 1\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"string\",\"string\",\"letter\",\"letter\",\"string\",\"string\",\"string\",\"letter\"]) == 4\nassert solution([\"string\",\"letter\",\"string\",\"letter\",\"string\",\"string\",\"string\",\"letter\"]) == 2\nassert solution([\"string\",\"string\",\"string\",\"letter\",\"string\",\"string\",\"string\",\"string\"]) == 0\nassert solution([\"string\",\"string\",\"string\",\"string\",\"letter\",\"string\",\"string\",\"letter\"]) == 3\nassert solution([\"string\",\"string\",\"string\",\"string\",\"string\",\"string\",\"string\",\"string\"]) == 12\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 4",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '13'\nassert solution(input()) == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''100000000 500 3\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nTLE\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nTLE\n''') == 'TLE'\n\nassert solution('''100000000 500 3\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nTLE\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nTLE\n''') == 'TLE'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'AC'\nassert solution('123') == 'AC'\nassert solution('5') == 'AC'\nassert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''100000000 500 3''') == \"TLE\"\nassert solution('''100000000 50 3''') == \"AC\"\nassert solution('''100000000 10001 5''') == \"TLE\"\nassert solution('''100000000 10000 5''') == \"AC\"\nassert solution('''19931568 1000000 6''') == \"TLE\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'AC'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\n\nSample Input 6:\n100000000 10000 10001 5\nSample Output 6:\nAC\n'''",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'TLE'\nassert solution('19931568 1000000 6') == 'TLE'\nprint(solution(''))\n\nSample Input 1:\n100000000 500 3\nSample Output 1:\nAC\n\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nAC\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nAC\n\nSample Input 6:\n100000000 10001 5\nSample Output 6:\nTLE\n\nSample Input 7:\n100000000 10000 5\nSample Output 7:\nTLE\n\nSample Input 8:\n19931568 1000000 6\nSample Output 8:\nTLE\n\nSample Input 9:\n100000000 10001 5\nSample Output 9:\nTLE\n\nSample Input 10:\n100000000 10000 5\nSample Output 10:\nAC\n\nSample Input 11:\n19931568 1000000 6\nSample Output 11:\nAC\n\nSample Input 12:\n100000000 10001 5\nSample Output 12:\nAC\n\nSample Input 13:\n100000000 10000 5\nSample Output 13:\nAC\n\nSample Input 14:\n19931568 1000000 6\nSample Output 14:\nAC\n\nSample Input 15:\n100000000 10001 5\nSample Output 15:\nTLE\n\nSample Input 16:\n100000000 10000 5\nSample Output 16:\nAC\n\nSample Input 17:\n19931568 1000000 6\nSample Output 17:\nTLE\n\nSample Input 18:\n100000000 10001 5\nSample Output 18:\nTLE\n\nSample Input 19:\n100000000 10000 5\nSample Output 19:\nAC\n\nSample Input 20:\n19931568 1000000 6\nSample Output 20:\nTLE\n\nSample Input 21:\n100000000 10001 5\nSample Output 21:\nTLE\n\nSample Input 22:\n100000000 10000 5\nSample Output 22:\nAC\n\nSample Input 23:\n19931568 1000000 6\nSample Output 23:\nTLE\n\nSample Input 24:\n100000000 10001 5\nSample Output 24:\nAC\n\nSample Input 25:\n100000000 10000 5\nSample Output 25:\nAC\n\nSample Input 26:\n19931568 1000000 6\nSample Output 26:\nAC\n\nSample Input 27:\n100000000 10001 5\nSample Output 27:\nAC\n\nSample Input 28:\n100000000 10000 5\nSample Output 28:\nAC\n\nSample Input 29:\n19931568 1000000 6\nSample Output 29:\nTLE\n\nSample Input 30:\n100000000 10001 5\nSample Output 30:\nAC\n\nSample Input 31:\n100000000 10000 5\nSample Output 31:\nTLE\n\nSample Input 32:\n19931568 1000000 6\nSample Output 32:\nAC\n\nSample Input 33:\n100000000 10001 5\nSample Output 33:\nAC\n\nSample Input 34:\n100000000 10000 5\nSample Output 34:\nAC\n\nSample Input 35:\n19931568 1000000 6\nSample Output 35:\nAC\n\nSample Input 36:\n100000000 10001 5\nSample Output 36:\nAC\n\nSample Input 37:\n100000000 10000 5\nSample Output 37:\nAC\n\nSample Input 38:\n19931568 1000000 6\nSample Output 38:\nAC\n\nSample Input 39:\n100000000 10001 5\nSample Output 39:\nTLE\n\nSample Input 40:\n100000000 10000 5\nSample Output 40:\nAC\n\nSample Input 41:\n19931568 1000000 6\nSample Output 41:\nTLE\n\nSample Input 42:\n100000000 10001 5\nSample Output 42:\nTLE\n\nSample Input 43:\n100000000 10000 5\nSample Output 43:\nAC\n\nSample Input 44:\n19931568 1000000 6\nSample Output 44:\nAC\n\nSample Input 45:\n100000000 10001 5\nSample Output 45:\nAC\n\nSample Input 46:\n100000000 10000 5\nSample Output 46:\nAC\n\nSample Input 47:\n19931568 1000000 6\nSample Output 47:\nAC\n\nSample Input 48:\n100000000 10001 5\nSample Output 48:\nAC\n\nSample Input 49:\n100000000 10000 5\nSample Output 49:\nAC\n\nSample Input 50:\n19931568 1000000 6\nSample Output 50:\nAC\n\nSample Input 51:\n100000000 10001 5\nSample Output 51:\nAC\n\nSample Input 52:\n100000000 10000 5\nSample Output 52:",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"100000000 500 3\"\n    ) == \"AC\"\nassert solution(\n    \"100000000 50 3\"\n    ) == \"AC\"\nassert solution(\n    \"100000000 10001 5\"\n    ) == \"TLE\"\nassert solution(\n    \"100000000 10000 5\"\n    ) == \"TLE\"\nassert solution(\n    \"19931568 1000000 6\"\n    ) == \"AC\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"4 16 8 2\") == \"2 64 32 4\"\nassert solution(\"2 64 32 4\") == \"2048 64 0 0\"\nassert solution(\"1024 1024 64 0\") == \"2 0 0 0\"\nassert solution(\"2\") == \"0 0 0 4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0 4 16 8 2 64 32 4 1024 1024 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('2 0 0 2') == '4 16 8 2'\nassert solution('2 0 0 2') == '2 64 32 4'\nassert solution('2 2 4 8') == '4 0 4 0'\nassert solution('2 2 4 8') == '4 16 8 2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('2 0 0 2') == '4 16 8 2'\nassert solution('2 0 0 2') == '2 64 32 4'\nassert solution('2 0 0 2') == '2048 64 0 0'\nassert solution('2 0 0 2') == '0'",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"2 0 0 2\") == \"4 16 8 2\"\nassert solution(\"2 0 0 2\") == \"2 64 32 4\"\nassert solution(\"2 0 0 2\") == \"2048 64 0 0\"\nassert solution(\"2 0 0 2\") == \"2 0 8 0\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"4 16 8 2\") == \"2 64 32 4\"\nassert solution(\"2 64 32 4\") == \"0 0 0 4\"\nassert solution(\"2 4 4 0\") == \"0 4 0 0\"\nassert solution(\"2\") == \"0 0 0 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('4 16 8 2') == '2 64 32 4'\nassert solution('2 64 32 4') == '0 0 2048 64'\nassert solution('1024 1024 64 0') == '2 0 0 0'\nassert solution('1') == '0 0 0 4'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 64 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"2 0 0 2\") == \"4 16 8 2\"\nassert solution(\"2 0 0 2\") == \"2 64 32 4\"\nassert solution(\"2 0 0 2\") == \"1024 1024 64 0\"\nassert solution(\"2\") == \"0 0 0 4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '12'\n\nprint(solution(*(stdin.split())))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"H\") == \"1\"\nassert solution(\"CH3OH\") == \"1\"\nassert solution(\"C 6H6OCH2O\") == \"2\"\nassert solution(\"C 5H10\") == \"12\"\n",
        "num_ids_2": 21,
        "num_ids_4": 50
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''H2OC100H\nO\n''') == '0'\nassert solution('''C2H6 10\nC3H8\n''') == '6'\nassert solution('''CH3OH 1\nCH4\n''') == '1'\nassert solution('''C6H6OCH2O 10\nHCN\n''') == '12'\nassert solution('''C6H14 10\nC5H10\n''') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(SAMPLE_INPUT_1) == '0'\nassert solution(SAMPLE_INPUT_2) == '6'\nassert solution(SAMPLE_INPUT_3) == '1'\nassert solution(SAMPLE_INPUT_4) == '0'\nassert solution(SAMPLE_INPUT_5) == '12'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"./inputs/input_test_01.txt\") == \"0\"\nassert solution(\"./inputs/input_test_02.txt\") == \"6\"\nassert solution(\"./inputs/input_test_03.txt\") == \"12\"\nassert solution(\"./inputs/input_test_04.txt\") == \"12\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''H2OC100H\nO\n''') == '0'\nassert solution('''C2H6 10\nC3H8\n''') == '6'\nassert solution('''CH3OH 1\nCH4\n''') == '1'\nassert solution('''C6H6OCH2O 10\nHCN\n''') == '0'\nassert solution('''C6H14 10\nC5H10\n''') == '12'",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"1\"\nassert solution(\"C 2\") == \"0\"\nassert solution(\"C 3\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C 2\\nO\") == \"0\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"\n",
        "num_ids_2": 28,
        "num_ids_4": 67
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"H\") == \"1\"\nassert solution(\"H 2 O\") == \"0\"\nassert solution(\"C 6H12 O6\") == \"6\"\nassert solution(\"C 6H12 O6 H2O\") == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\nassert solution('''\nABC TRAGICBIRTHDAYCACEY\n''') == 'FAIL'\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"PASS\"\nprint('solution() is done!')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''\nABC TRAGICBIRTHDAYCACEY\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'\n''' == '''\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========= RESTART: Shell ====================\n>>> \n========",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n\nimport sys\nimport io\n\nsys.stdin = open('input.txt', 'r')\n\nclass TestPass:\n  \n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        res = solution()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print('\\nout =', out)\n        print('\\nres =', res)\n        if out == output:\n            print('\\nTest passed')\n        else:\n            print('\\nTest failed')\n        \n    def test_Sample_Input_1(self):\n        print(\"test_Sample_Input_1\")\n        self.assertIO(\n            'ABC HAPPYBIRTHDAYCACEY',\n            'PASS')\n    def test_Sample_Input_2(self):\n        print(\"test_Sample_Input_2\")\n        self.",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    'ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution(\n    'ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution(\n    'ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution(\n    'SECRET SOMECHORESARETOUGH') == 'PASS'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'PASS'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"[ ] 0\"\nassert solution(\"1\") == \"[ ] 0\"\nassert solution(\"2\") == \"[ ] 0\"\nassert solution(\"10\") == \"[ ] 0\"\nassert solution(\"100\") == \"[ ] 0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"8\\n([] [] ]\\n\"\n    ) == \"] 7\\n\"\n\nassert solution(\n    \"13\\n(([] [[]] ())\\n\"\n    ) == \"ok so far\\n\"\n\nassert solution(\n    \"21\\n[ { { { () () } } ]\\n\"\n    ) == \"] 20\\n\"\n\nassert solution(\n    \"27\\n[ { [[()]] (({})) } ] () {}\\n\"\n    ) == \"ok so far\\n\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '] 7'\nassert solution('13') == '] 20'\nassert solution('21') == 'ok so far'\nassert solution('27') == 'ok so far'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('([] [] ]') == '] 7'\nassert solution('([] [] ] ([] [] ) )') == '] 7'\nassert solution('([] [] ] )') == '] 7'\nassert solution('([] [] )') == '] 7'\nassert solution('([[]][])') == '] 7'\n",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'ok so far'\nassert solution('5') == 'ok so far'\nassert solution('9') == 'ok so far'\nassert solution('10') == 'ok so far'\nassert solution('15') == 'ok so far'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '] 7'\nassert solution('13') == '] 20'\nassert solution('21') == 'ok so far'\nassert solution('27') == 'ok so far'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"(([] [] ] )\") == \"] 7\"\nassert solution(\"(([] ) ] )\") == \"] 7\"\nassert solution(\"(([])) ] )\") == \"] 7\"\nassert solution(\"([] [] ) ] )\") == \"] 7\"\nassert solution(\"([] ) ] )\") == \"] 7\"\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n(([] [] ] )\n''') == '] 7'\n\nassert solution('''\n13\n(([] [[]] ())\n''') == 'ok so far'\n\nassert solution('''\n21\n[ { { ()()()()() } ]\n''') == '] 20'\n\nassert solution('''\n27\n[ { [[()]] (({})) } ] () {}\n''') == 'ok so far'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"([] ())\") == \"] 0\"\nassert solution(\"(([]))\") == \"ok so far\"\nassert solution(\"([] [] )\") == \"] 1\"\nassert solution(\"() (()))\") == \"] 1\"\nassert solution(\"([] [] ())\") == \"] 2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n(([] [] ] )\n''') == '] 7'\nassert solution('''\n(((([] ) ) )\n''') == 'ok so far'\nassert solution('''\n(((([] ) ) )\n''') == 'ok so far'\nassert solution('''\n(((([] ) ) )\n''') == 'ok so far'\nassert solution('''\n(((([] ) ) )\n''') == 'ok so far'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Player 1 lost\"\nassert solution(\"3\") == \"Player 2 lost\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\napple\nextra\napple''') == 'Fair Game'\n\nassert solution('''2\napple\nextra\napple''') == 'Player 1 lost'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle\\n') == 'Fair Game'\nassert solution('3\\napple\\nexternal\\napple\\n') == 'Player 1 lost'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == \"Fair Game\"\nassert solution('''\n3\napple\nextra\napple\n''') == \"Player 1 lost\"\nassert solution('''\n2\napple\nneat\n''') == \"Player 2 lost\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\napple\near\nreal\nletters\nstyle''') == 'Fair Game'\nassert solution('''3\napple\nextra\napple''') == 'Player 1 lost'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\napple\\nextra\\neat\") == \"Player 1 lost\"\nassert solution(\"5\\napple\\near\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"2\\napple\\nneat\") == \"Player 2 lost\"\n",
        "num_ids_2": 43,
        "num_ids_4": 62
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == \"Fair Game\"\nassert solution('''\n3\napple\nextra\napple\n''') == \"Player 1 lost\"\nassert solution('''\n2\napple\nneat\n''') == \"Player 2 lost\"\nassert solution('''\n1\napple\n''') == \"Player 1 lost\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\") == \"Player 2 lost\"\n",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''3\napple\nextra\napple\n''') == 'Player 1 lost'\nassert solution('''2\napple\nneat\n''') == 'Player 2 lost'\n\"\"\"\n\n\nimport collections\nimport heapq\n\nfrom itertools import zip_longest\nfrom typing import Deque, List\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1010\"\nassert solution(\"1000\\n+\\n100\") == \"10010\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"100000\"\nassert solution(\"1000\") == \"100000\"\nassert solution(\"10\") == \"1010\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"100010\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"+\") == \"1010\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == '100000'\nassert solution('+') == '10010'\nassert solution('*') == '1010'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10010\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000\\n+\\n100\") == \"100000\"\nassert solution(\"10\\n+\\n1000\") == \"10100\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000\\n*\\n100') == '100000', \"Should return 100000\"\nassert solution('10\\n+\\n1000') == '1010', \"Should return 1010\"\nassert solution('10\\n+\\n10') == '1010', \"Should return 1010\"\nassert solution('10\\n+\\n100') == '1010', \"Should return 1010\"\nassert solution('10\\n+\\n1000') == '1010', \"Should return 1010\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == '100000'\nassert solution('100') == '10010'\nassert solution('10') == '1010'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '10010'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"100000\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nprint('Congratulations! All test cases pass.')\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 out\\n\") == \"3\"\nassert solution(\"8 in\\n\") == \"6\"\nassert solution(\"52 out\\n\") == \"8\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Manually test 1\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Manually test 2\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Manually test 3\"\n\nprint(solution(input()))\n",
        "num_ids_2": 53,
        "num_ids_4": 78
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''menolaxios mox\nalemaxe maxos\npamoli toxes''') =='menolaxiosexmox'\n\nfrom collections import defaultdict\nimport re",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n\n'''",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''menolaxios mox\nSample Input 2:\nalemaxe maxos\nSample Output 2:\nalemaxexmaxos\n'''\n) == 'alemaxexmaxos'\nassert solution(\n'''pamoli toxes\nSample Input 3:\npamolextoxes\nSample Output 3:\npamolextoxes\n'''\n) == 'pamolextoxes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2018\n''') == 'yes'\nassert solution('''\n2019\n''') == 'no'\nassert solution('''\n2020\n''') == 'yes'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2017') == 'no'\nassert solution('2018') == 'yes'\nassert solution('2019') == 'yes'\nassert solution('2020') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"yes\"\n\"\"\"\n\nstdin = input()\n\nyear = int(stdin)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '64', \"Wrong!\"\n\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000', \"Wrong!\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n4''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n10\n10''') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"64\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution(\n'''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '0'\nassert solution(\n'''\n10 10 10 20 0 10 10 10 10 10\n3\n''') == '1820000'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(samples[0]) == '64'\nassert solution(samples[1]) == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 0\") == \"2 330\"\nassert solution(\"7 1\") == \"2 570\"\nassert solution(\"7 2\") == \"0 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 330\"\nassert solution(input_string=\"7 1\\n30 270 995 996 997 998 999\\n\") == \"2 570\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 570\"\nassert solution(\"\") == \"0 0\"\nassert solution(\"7 0\") == \"2 330\"\nassert solution(\"7 1\") == \"2 570\"\nassert solution(\"7 2\") == \"2 570\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2 330\"\nassert solution(input()) == \"0 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'\nassert solution('7 0\\n0 0') == '0 0'\n",
        "num_ids_2": 50,
        "num_ids_4": 91
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\nSample Input 2:\n7 1\n30 270 995 996 997 998 999\nSample Output 2:\n2 570\n\nSample Input 3:\n7 2\n30 270 995 996 997 998 999\nSample Output 3:\n2 330\n''') == '2 330'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaaaaaaa\") == 1\nassert solution(\"abbaabbaabba\") == 2\nassert solution(\"abcdef\") == 6",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abcdef\") == \"1\"\nassert solution(\"abcdefgh\") == \"1\"\nassert solution(\"abcdefghij\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == 1\nassert solution('ab') == 2\nassert solution('aaa') == 1\nassert solution('bab') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"3 6\\n1 2 3 4 5\\n11 12 15 19 24 30\") == \"0\"\n",
        "num_ids_2": 61,
        "num_ids_4": 87
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40''') == '2'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9''') == '1'\nassert solution('''3 6\n1 2 3 4 5\n11 12 15 19 24 30''') == '1'\nassert solution('''4 8\n2 3 4\n12 14 15\n16 17 18''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 12\") == \"1 2\"\nassert solution(\"5 10\") == \"1 2 3 4 5\"\nassert solution(\"3 6\") == \"1 2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10\") == \"1\"\nassert solution(\"4 10\") == \"1\"\nassert solution(\"5 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 12') == '2'\nassert solution('5 10') == '1'\nassert solution('3 6') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2') == '1'\nassert solution('12 5') == '2'\nassert solution('9 8') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 2\n6 8 12 18 26 28 30 34 36 37 39 40''') == '2'\nassert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40''') == '1'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n10 11 12 13 14 15 16 17 18 19 20''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nprint('Congratulations, have fun!')\n\"\"\"\n\nnumber = input()\nnumber = int(number)",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5551212\\n') == '1'\nassert solution('5519876\\n') == '0'\nassert solution('5055555\\n') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('''5551212\n5519876\n5055555''') == '0'\nprint(solution(input()))\n'''\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5551212\n5519876\n5055555''') == '0'\nassert solution('''123456789\n654321''') == '0'\nprint(solution('''5551212\n5519876\n5055555'''))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0/1') == '0/1'\nassert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"-40/1\") == \"5/9\"\nassert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''32/1''') == '0/1'\nassert solution('''33/1''') == '5/9'\nassert solution('''-40/1''') == '-40/1'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\nC E G\nD F# A\n\"\"\") == \"Transposition\"\nassert solution(\"\"\"7\nC C G G A A G\nC C F F D# D# F\n\"\"\") == \"Inversion\"\nassert solution(\"\"\"7\nA B C D E F G\nG F E D C B A\n\"\"\") == \"Retrograde\"\n\nfrom collections import Counter\nfrom itertools import permutations\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'Transposition'\nassert solution('2') == 'Nonsense'\nassert solution('7') == 'Retrograde'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nC E G') == 'Transposition'\nassert solution('2\\nC C G G A A G') == 'Transposition'\nassert solution('3\\nC E G') == 'Nonsense'\nassert solution('4\\nC C G G A A G') == 'Nonsense'\nassert solution('5\\nA B C D E F G') == 'Inversion'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"\nassert solution(\"10\\nA A A A A A A\\nA A A A A A A\\nA A A A A A A\\n\") == \"Nonsense\"\nassert solution(\"5\\nC D E F\\nG E A\\n\") == \"Nonsense\"\n",
        "num_ids_2": 57,
        "num_ids_4": 129
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    3\n    C E G\n    D F# A\n    '''\n) == 'Transposition', solution(\n    '''\n    7\n    C C G G A A G\n    C C F F D# D# F\n    '''\n)\nassert solution(\n    '''\n    7\n    A B C D E F G\n    G F E D C B A\n    '''\n) == 'Inversion', solution(\n    '''\n    7\n    A B C D E F G\n    G F E D C B A\n    '''\n)\n\n\n\"\"\"\n--- Day 5: Binary Boarding ---\n\nYou board your plane only to discover a new problem: you dropped your boarding pass! You aren't sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control.\n\nYou write a quick program to use your phone's camera to scan all of the nearby boarding passes (your puzzle input); perhaps you can find your seat through process of elimination.\n\nInstead of zones or groups, this airline uses binary space partitioning to seat people. A seat might be specified like FBFBBFFRLR, where F means \"front\", B means \"back\", L means \"left\", and R means \"right\".\n\nThe first 7 characters will either be F or B; these specify exactly one of the 128 rows on the plane (numbered 0 through 127). Each letter tells you which half of a region the given seat is in. Start with the whole list of rows; the first letter indicates whether the seat is in the front (0 through 63) or the back (64 through 127). The next letter indicates which half of that region the seat is in, and so on until you're left with exactly one row.\n\nFor example, consider just the first seven characters of FBFBBFFRLR:\n\nStart by considering the whole range, rows 0 through 127.\nF means to take the lower half, keeping rows 0 through 63.\nB means to take the upper half, keeping rows 32 through 63.\nF means to take the lower half, keeping rows 32 through 47.\nB means to take the upper half, keeping rows 40 through 47.\nB keeps rows 44 through 47.\nF keeps rows 44 through 45.\nThe final F keeps the lower of the two, row 44.\nThe last three characters will be either L or R; these specify exactly one of the 8 columns of seats on the plane (numbered 0 through 7). The same process as above proceeds again, this time with only three steps. L means to keep the lower half, while R means to keep the upper half.\n\nFor example, consider just the last 3 characters of FBFBBFFRLR:\n\nStart by considering the whole range, columns 0 through 7.\nR means to take the upper half, keeping columns 4 through 7.\nL means to take the lower half, keeping columns 4 through 5.\nThe final R keeps the upper of the two, column 5.\nSo, decoding FBFBBFFRLR reveals that it is the seat at row 44, column 5.\n\nEvery seat also has a unique seat ID: multiply the row by 8, then add the column. In this example, the seat has ID 44 * 8 + 5 = 357.\n\nHere are some other boarding passes:\n\nBFFFBBFRRR: row 70, column 7, seat ID 567.\nFFFBBBFRRR: row 14, column 7, seat ID 119.\nBBFFBBFRLL: row 102, column 4, seat ID 820.\nAs a sanity check, look through your list of boarding passes. What is the highest seat ID on a boarding pass?\n\n\"\"\"\n\nimport sys\nimport math",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"\n",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Transposition'\nassert solution('3') == 'Retrograde'\nassert solution('7') == 'Inversion'\nassert solution('10000000') == 'Nonsense'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\nC E G\nD F# A\n\n\"\"\") == \"Transposition\"\n\nassert solution(\n\"\"\"\n7\nC C G G A A G\nC C F F D# D# F\n\"\"\") == \"Inversion\"\n\nassert solution(\n\"\"\"\n7\nA B C D E F G\nG F E D C B A\n\"\"\") == \"Retrograde\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Transposition'\nassert solution('2') == 'Retrograde'\nassert solution('3') == 'Nonsense'\nassert solution('4') == 'Nonsense'\nassert solution('5') == 'Nonsense'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nI love ba-na-na\n''') == 'Gah kove bababa'\nassert solution('''\nCat-a-pil-lar\n''') == 'Catacillar'\nassert solution('''\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''I love ba-na-na\n    cat-a-pil-lar\n    Co-ding is the best\n    ''') == 'Gah kove cababbalar'\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nI love ba-na-na\n''') == 'Gah kove bababa'\nassert solution('''\nCat-a-pil-lar\n''') == 'Catacillar'\nassert solution('''\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa', \"Wrong result in sample 1\"\nassert solution('Cat-a-pil-lar') == 'Catacillar', \"Wrong result in sample 2\"\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh', \"Wrong result in sample 3\"\n",
        "num_ids_2": 57,
        "num_ids_4": 88
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '14'\nassert solution('5') == '20'\nassert solution('6') == '24'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '14'\nassert solution('4') == '16'\nassert solution('1') == '6'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == '6'\nassert solution('''4\n''') == '16'\nassert solution('''3\n''') == '14'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '6\\n'\nassert solution('4\\n') == '16\\n'\nassert solution('3\\n') == '14\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution_2() == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 6\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"5 10\n4 8 1 9 7\n\"\"\") == \"2\"\nassert solution(\"\"\"4 10\n1 3 1 7\n\"\"\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"4\"\nassert solution(\"4 10\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3 4\n''') == '3'\n\nassert solution('''\n5 10\n1 2 3 4 5\n''') == '3'\n\nassert solution('''\n4 10\n1 2 3 4 5\n''') == '4'\n\nassert solution('''\n5 10\n1 2 3 4 5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '4'\nassert solution('4 10') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 8 1 9 7\") == \"4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 59
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(samples[0]) == '3'\nassert solution(samples[1]) == '2'\nassert solution(samples[2]) == '4'\n\nTEST_CASES = [\n    (samples[0], '3'),\n    (samples[1], '2'),\n    (samples[2], '4')\n]\n\nfor inp, solution in TEST_CASES:\n    assert solution == solution(inp)",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == \"possible\"\nassert solution(open(1).read()) == \"impossible\"\nassert solution(open(2).read()) == \"impossible\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\", \"First example\"\nassert solution(\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\", \"Second example\"\nassert solution(\"\"\"\n1 2\n1 0 0\n1 0 1\n\"\"\") == \"impossible\", \"Third example\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'\nprint(solution(input))\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\n\"\"\"\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\", \"example test\"\nassert solution(\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\", \"another example test\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n0 1 1\n1 0 0\n''') == 'possible'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n0 0 0\\n1 1 0\\n\") == \"impossible\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n\"\"\"\n\nn, k = map(int, stdin.split())",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''2 3\n''') == '1.875'\nprint('all tests passed')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n3 1\n2 2\n3 2''') == '1.875'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 0\\n') == '0 0'\nassert solution('4 2 7\\n') == '1 4'\nassert solution('3 0 0\\n') == '1 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1 0\n4 2 7''') == '1 4'\nassert solution('''3 0 0\n4 2 7''') == '1 6'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 0''') == '0 0'\nassert solution('''4 2 7''') == '1 4'\nassert solution('''3 0 0''') == '1 6'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1 0\n3 2 7''') == '1 4'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 0\") == \"1 4\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0\") == '0 0'\nassert solution(\"4 2 7\") == '1 4'\nassert solution(\"3 0 0\") == '1 6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(t) == \"1 4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 0\n4 2 7\n3 0 0\n1 4''') == '1 4'\nassert solution('''2 2 0\n1 2 0\n3 0 0\n2 4''') == '1 6'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '0'\nassert solution('12') == '0'\nassert solution('8') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''4\nBWWB\nWBWB\nBWWB\nBWBW''') == '0'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB''') == '0'\nassert solution('''8\nBWBWBW\nWBWBWB\nWBBWBW\nBBWBWB\nBWWBBW\nWWBWBB\nWBBWBW\nBBWBWB''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nWBWB\\nBWWB\\nBWBW\") == \"1\"\nassert solution(\"4\\nBWBW\\nWBWB\\nBWWB\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\"\nassert solution(\"10\\n
        "num_ids_2": 48,
        "num_ids_4": 1705
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nBWWB\nWBWB\nBWWB\nBWBW\n''') == '1'\nassert solution('''\n4\nBWWB\nWBWB\nBWWB\nBWBW\n''') == '0'\nassert solution('''\n4\nBWWB\nWBWB\nBWWB\nBWBW\n''') == '0'\nassert solution('''\n6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\nassert solution('''\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('3\\nWWBBW\\nWBWBWB\\nWBBWBW') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\nB\n2\nBB\n1\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nBWBW\nWBWB\nBWWB\nBWBW\n''') == '1'\n\nassert solution('''4\nBWBW\nWBWB\nBWWB\nBWBW\n''') == '0'\n\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\n\nassert solution('''\n    4\n    WBWB\n    WBWB\n    BWWB\n    BWBW\n    ''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 27
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\nWBWB\nWBWB\nBWWB\nBWBW\n''') == '1'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 3\") == \"3 2\"\nassert solution(\"2 6 3\") == \"3 2\"\nassert solution(\"3 2 1\") == \"1 2\"\nassert solution(\"2 4 1 3\") == \"1 2\"\nassert solution(\"5 5 7\") == \"7 5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\nassert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 2'\nassert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '4 4'\n'''\n\nimport sys\nimport re\nimport math",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 1 2') == '2 1'\nassert solution('3\\n1 3 1 3') == '3 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2 1\"\nassert solution(\"5\") == \"2 1\"\nassert solution(\"5\") == \"2 1\"\nassert solution(\"5\") == \"3 4\"\nassert solution(\"5\") == \"3 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\n\nassert solution('''\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '1 1'\n\nassert solution('''\n1 5 9 4\n1 5 9 4\n2 5 2 4\n1 4 2 4\n1 5 1 1\n1 5 1 1\n1 6 1 2\n2 5 9 4\n2 5 2 4\n1 5 2 4\n1 5 1 1\n2 5 9 4\n''') == '1 5'\n\nassert solution('''\n1 3 2 2\n2 5 1 3\n1 1 1 2\n1 3 2 2\n1 3 1 2\n1 2 1 2\n1 3 2 2\n''') == '2 1'\n\nassert solution('''\n1 5 9 5\n1 6 1 2\n2 4 1 2\n2 5 1 2\n2 5 4 2\n2 4 2 4\n1 3 2 2\n1 6 2 3\n''') == '2 1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '1 2'\nassert solution('''\n2\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\nassert solution('''\n2\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 2'\nassert solution('''\n2\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 4'\n\nassert solution('''\n3\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2 5 3\") == \"2 3\"\nassert solution(\"6\\n2 2 5 3\") == \"2 3\"\nassert solution(\"10\\n2 2 5 3\") == \"7 2\"\nassert solution(\"20\\n2 2 5 3\") == \"7 2\"\nassert solution(\"1\\n1 1 1 1\") == \"1 1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2 1\"\nassert solution(\"5\") == \"3 4\"\nassert solution(\"5\") == \"3 2\"\nassert solution(\"5\") == \"1 2\"\nassert solution(\"5\") == \"3 7\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n1\n2\n2\n2\n2\n1\n0\n''') == 'true'\nassert solution('''\n1\n2\n1\n2\n2\n2\n2\n1\n0\n''') == 'true'\nassert solution('''\n1\n2\n3\n2\n1\n0\n''') == 'false'\nassert solution('''\n1\n2\n1\n2\n2\n2\n2\n1\n0\n''') == 'false'\nassert solution('''\n1\n2\n1\n2\n2\n2\n2\n1\n0\n''') == 'false'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == 'true'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"[3,2,0,-4], pos = 1\") == \"true\"\nassert solution(\"[1,2], pos = 0\") == \"true\"\nassert solution(\"[1], pos = -1\") == \"false\"\nassert solution(\"[1, 1], pos = 0\") == \"false\"\nassert solution(\"[1, 1, 1, 1], pos = 2\") == \"false\"\n",
        "num_ids_2": 38,
        "num_ids_4": 71
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1,2,3,4,5,6\") == \"true\"\nassert solution(\"1,2,0,4,5,6\") == \"false\"\nassert solution(\"1,2,3,4,5,0\") == \"true\"\nassert solution(\"1,2,3,4,5,0,0\") == \"false\"\nassert solution(\"1,2,3,4,5,0,0,0\") == \"false\"\n",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2\\n0\\n-4') == 'true'\nassert solution('1\\n3\\n2') == 'false'\nassert solution('1\\n-4') == 'false'\nassert solution('1') == 'true'\nassert solution('1\\n2') == 'false'\n",
        "num_ids_2": 39,
        "num_ids_4": 63
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2\n0\n-4\n\n0\n1\n-1\n\n1\n1\n1\n\n0\n''') == 'true'\nassert solution('''\n1\n1\n1\n\n0\n''') == 'true'\nassert solution('''\n1\n1\n1\n\n0\n''') == 'false'\nassert solution('''\n1\n1\n1\n\n0\n''') == 'false'\nassert solution('''\n1\n1\n1\n\n0\n''') == 'false'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,2,0,-4]) == \"true\"\nassert solution([1,2]) == \"true\"\nassert solution([1]) == \"false\"\nassert solution([]) == \"false\"",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"[3,2,0,-4]\\n1\") == \"true\"\nassert solution(\"[1,2]\\n0\") == \"true\"\nassert solution(\"[1]\\n-1\") == \"false\"\nassert solution(\"[1]\\n-2\") == \"false\"",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"[3,2,0,-4]\") == \"true\"\nassert solution(\"[1,2]\") == \"true\"\nassert solution(\"[1]\") == \"true\"\nassert solution(\"[]\") == \"false\"\n\n\nclass LinkedList:\n    class Node:\n        def __init__(self, value):\n            self.value = value\n            self.next = None\n        \n    def __init__(self):\n        self.head = None\n        self.tail = None\n        self.size = 0\n    \n    def addNode(self, value):\n        newNode = self.Node(value)\n        if self.head is None:\n            self.head = newNode\n            self.tail = newNode\n        else:\n            self.tail.next = newNode\n            self.tail = newNode\n        self.size += 1\n    \n    def getSize(self):\n        return self.size\n    \n    def getNode(self, idx):\n        node = self.head\n        for _ in range(idx):\n            node = node.next\n        return node\n    \n    def printList(self):\n        node = self.head\n        while node is not None:\n            print(node.value, end = \" \")\n            node = node.next\n        print()\n        \n    def __iter__(self):\n        node = self.head\n        while node is not None:\n            yield node\n            node = node.next\n    \n    def hasCycle(self):\n        if self.size == 0:\n            return False\n        \n        iter = self.__iter__()\n        for _ in range(self.size):\n            if next(iter, None) is None:\n                return False\n        return True\n        ",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"head\") == \"true\"\nassert solution(\"head,pos\") == \"true\"\nassert solution(\"head,pos,head,pos\") == \"true\"\nassert solution(\"head,pos,head,pos,tail\") == \"true\"\nassert solution(\"head,pos,head,pos,tail,pos\") == \"true\"\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '0 1'\nassert solution('''\nGiven nums = [3, 2, 4], target = 6,\n\nBecause nums[0] + nums[1] = 3 + 2 = 5,\nreturn [0, 1].\n''') == '0 1'\nassert solution('''\nGiven nums = [3, 2, 4], target = 6,\n\nBecause nums[0] + nums[1] = 3 + 2 = 5,\nreturn [0, 1].\n''') == '0 1'\nassert solution('''\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '0 1'\nassert solution('''\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n''') == '0 1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5, 4, 3, 3, 0, 0, 4, 4, 0, 2') == '3, 5'\n\nassert solution('1, 5, 3, 0, 2, 4') == '0, 2'\n\nassert solution('0, 0, 0') == '0, 0'\n\nassert solution('1, 1, 1, 1, 1, 1, 1, 1, 1, 1') == '1, 2'\n\nassert solution('2, 3, 4, 5') == '0, 1'\n",
        "num_ids_2": 52,
        "num_ids_4": 98
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n7\n11\n15''') == '0 1'\nassert solution('''2\n7\n11\n15''') == '0 1'\nassert solution('''2\n7\n11\n15''') == '1 2'\nassert solution('''2\n7\n11\n15''') == '0 1'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5 7\") == \"[1, 2]\"\nassert solution(\"0\") == \"[0]\"\nassert solution(\"5\") == \"[1, 2, 3]\"\nassert solution(\"0 0 0\") == \"[0, 3]\"\nassert solution(\"1 1 1\") == \"[0, 1]\"\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n2\n3\n4\n''') == '0,1'\nassert solution('''\n10\n3\n7\n6\n4\n8\n2\n5\n''') == '1,2'\nassert solution('''\n5\n3\n7\n2\n4\n''') == '0,1'\nassert solution('''\n3\n2\n3\n''') == '0,1'\nassert solution('''\n4\n2\n4\n''') == '0,1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2, 7, 11, 15') == '0 1'\n\n'''\n\n\nclass Solution:\n    def twoSum(self, nums, target):\n        index1, index2 = 0, len(nums) - 1\n        while index1 < index2:\n            if nums[index1] + nums[index2] == target:\n                return str(index1) + \" \" + str(index2)\n            elif nums[index1] + nums[index2] > target:\n                index2 -= 1\n            else:\n                index1 += 1\n\nnums, target = [2, 7, 11, 15], 9\n\nprint(Solution().twoSum(nums, target))",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"1\"\nassert solution(\"9\") == \"0\"\nassert solution(\"11\") == \"1\"\nassert solution(\"15\") == \"0\"\nassert solution(\"2\") == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n7\n11\n15\n''') == '0 1'\n\n'''\nGiven an array of integers, find if the array contains any duplicates.\n\nYour function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.\n\nExample 1:\n\nInput: [1,2,3,1]\nOutput: true\nExample 2:\n\nInput: [1,2,3,4]\nOutput: false\nExample 3:\n\nInput: [1,1,1,3,3,4,3,2,4,2]\nOutput: true\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2\\n5\\n9\\n\") == \"0 1\"\nassert solution(\"4\\n7\\n9\\n\") == \"0 2\"\nassert solution(\"4\\n2\\n3\\n1\\n\") == \"0 1 2\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n\") == \"0 1\"\nassert solution(\"2\\n3\\n\") == \"0 1\"\nassert solution(\"4\\n2\\n3\\n\") == \"0 1\"\nassert solution(\"5\\n2\\n4\\n6\\n\") == \"0 1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 55
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3\n2\n2\n2''') == '1'\nassert solution('''3\n3\n2\n2''') == '1'\nassert solution('''10\n5\n7\n8\n6\n5\n4\n2\n2\n5\n5\n6\n3\n4\n3\n1\n1\n4\n4\n6\n5\n4\n1\n2\n2\n3\n4\n5\n6\n4\n6\n5\n4\n3\n2\n4\n4\n2\n4\n2\n4\n2\n4\n2\n4\n4\n2\n4\n2\n4\n4\n4\n2\n4\n4\n2\n4\n2\n4\n2\n4\n4\n3\n2\n4\n4\n2\n4\n2\n4\n4\n3\n4\n3\n4\n3\n4\n3\n4\n3\n4\n3\n4\n3\n4\n4\n3\n4\n4\n4\n4\n4\n3\n4\n4\n4\n4\n4\n4\n3\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n3\n4\n4\n4\n4\n4\n4\n3\n4\n4\n4\n4\n4\n4\n3\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2\n2\n3\n3\n4\n5\n3\n5\n3\n4\n2\n3\n''') == '0'\n\nassert solution('''\n2\n1\n1\n2\n2\n''') == '1'\n\nassert solution('''\n4\n1\n2\n1\n2\n2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nprint('Congratulations!')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('100') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n5\\n5\\n') == '1\\n'\nassert solution('5\\n6\\n7\\n6\\n') == '1\\n'\nprint('Congratulations, have fun while coding!')\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n0 0 0\n1 1 1\n0 1 0''') == '1'\nassert solution('''5\n0 0 0 0\n1 1 1 1\n0 1 0 0\n1 1 1 1\n0 0 0 0''') == '1'\nassert solution('''15\n
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"impossible\"\nassert solution('2') == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2 2 2 1\n''') == '4'\nassert solution('''\n1\n2 1 2 1\n''') == 'impossible'\nassert solution('''\n1\n3 7\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"3 7\") == \"impossible\"\n\"\"\"\nimport sys\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3 4 5\n''') == 'impossible'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == 'impossible'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n1 2 2 1\n\"\"\") == \"4\"\nassert solution(\"\"\"1\n3 7\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3 7') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"180\"\nassert solution(\"\"\"\n1000 1\n\"\"\") == \"123451000\"\nassert solution(\"\"\"\n8 1\n\"\"\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([184, 1]) == '180'\nassert solution([123450995, 1]) == '123451000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2 1\n\"\"\") == \"180\"\n\nassert solution(\n\"\"\"\n3 1\n\"\"\") == \"123\"\n\nassert solution(\n\"\"\"\n5 1\n\"\"\") == \"10\"\n\nassert solution(\n\"\"\"\n10 1\n\"\"\") == \"1000\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"12 4\") == \"12\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''184 1\nSample Input 2:\n123450995 1\nSample Output 2:\n123451000''') == '123451000'\nprint('All test cases passed!')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''184 1\n123450995 1\n''') == '123451000'\nassert solution('''10 1\n10 10\n''') == '10'\nassert solution('''10 1\n10 10\n''') == '11'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '180'\nassert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\n",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"184 1\") == \"180\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''3\n-1 1\n1 -1\n1 1''') == '0.5'\nassert solution('''3\n1 1\n2 2\n3 3''') == '0.75'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.000000'\nassert solution('1 1') == '0.250000'\nassert solution('2 2') == '1.000000'\nassert solution('3 3') == '0.000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.000000'\nassert solution('1') == '0.000000'\nassert solution('3') == '0.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n2 2\n3 3''') == '0.000000'\nassert solution('''3\n1 1\n2 2\n3 3''') == '0.500000'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 1\n1 0\n1 1\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == \"0.000000\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.000000'\nassert solution('3 3') == '0.000000'\nassert solution('2 2') == '1.000000'\nassert solution('3 3') == '2.000000'\nassert solution('1 1') == '0.000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n0 1\n1 0\n1 1\n3 3\n3 4\n\"\"\") == \"0.000000\"\nprint(\"TESTS PASSED\")",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\nprint('SUCCESS')",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n2 2\n3 3\n''') == \"0.000000\"\n\nassert solution('''\n1 1\n1 1\n2 2\n3 3\n''') == \"0.000000\"\n\nassert solution('''\n10 5\n0 0\n1 1\n5 5\n0 1\n1 2\n0 3\n1 4\n0 5\n1 6\n0 7\n1 8\n0 9\n1 10\n''') == \"0.009265\"\n\nassert solution('''\n5 3\n0 0\n1 1\n2 2\n4 4\n0 1\n1 2\n2 3\n0 4\n1 5\n''') == \"0.009265\"\n\nassert solution('''\n3 7\n0 0\n1 1\n2 2\n0 3\n1 4\n2 5\n''') == \"0.009375\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2 4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(samples[0]) == expected_result[0], 'wrong result'\nassert solution(samples[1]) == expected_result[1], 'wrong result'\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2\\n2 3\\n4 6\\n8 1'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 8'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1\\n2\\n4\\n'\nassert solution('8') == '1\\n2\\n6\\n8\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4\\n'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 2 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''8\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 8'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"1 2 4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4\\n1 2 3 4\\n3 2 3 4') == '1 2 3 4\\n2 2 3 4\\n3 2 3 4\\n'\nassert solution('4\\n5\\n4 3 2 5 1\\n3 2 1 3 4\\n2 2 5 2 4\\n') == '4 3 2 5 1\\n2 2 1 3 4\\n3 2 5 2 4\\n'\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 2 4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 5\n''') == '60'\nassert solution('''2 2 2\n''') == '8'\nassert solution('''1 1 1\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '60'\nprint('Congratulations!')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '8'\nassert solution('3 3 3') == '60'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n        \"5 2 1\"\n    ) == \"8\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.0'\nassert solution('3') == '1.3333333333333335'\nassert solution('5') == '1.5'\nassert solution('100') == '1.0'\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1.6'\nassert solution('3 4 -1') == '1.7'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1.667\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1.66666667'\nassert solution('3 2 0') == '1.6667'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n0 1\n''') == '1.6666666666666667'\nassert solution('''\n3\n0 0 1\n''') == '0.3333333333333333'\nassert solution('''\n3\n0 1 2\n''') == '1.600000023841858'\nassert solution('''\n3\n-1 4 1\n''') == '1.4'\nassert solution('''\n3\n-1 4 1\n''') == '1.4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '2.5'\nassert solution('') == '2.5'\nassert solution('4') == '1.6666666666666667'\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n2 0 2\n\"\"\") == \"2.5\"\nassert solution(\"\"\"\n1\n-1 4\n\"\"\") == \"2.5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0.5'\nassert solution('3') == '1.0'\nassert solution('1') == '1.0'\nassert solution('5') == '1.2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 0 2\n''') == '1.6458333333333336'\nassert solution('''\n3\n1 -1 4\n''') == '2.5'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n1 -1 4') == '2.5'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '3'\nassert solution('10') == '4'\nassert solution('1') == '1'\nassert solution('100') == '97'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '7'\nassert solution('6') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2'\nassert solution('9 3') == '8'\nassert solution('10 2') == '7'\nassert solution('11 1') == '7'\nassert solution('3 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 2') == '5'\nassert solution('5 4') == '4'\nassert solution('5 8') == '7'\nassert solution('5 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"10 3\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('7') == '6'\nassert solution('11') == '9'\nassert solution('15') == '14'\nassert solution('17') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'\nprint('Solution:')\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('9') == '7'\nassert solution('25') == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''123 456 789''') == '1'\nassert solution('''123 456 777''') == '0'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n123456 123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\nprint('All test cases passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''123864 123865\n198765 198769''') == '1'\n'''\n--- Part Two ---\n\nYou remember that you had planned to give you the combination one day, but now you must accept the delay. So, by the time you enter the safe, the keypad lock has expired, and you don't have the combination.\n\nAlthough you had it, you don't have the password. And it wasn't even the first attempt.\n\nSo, to give the safe another try, you have to start with a new combination. The safe has a sequence of six decimal digits.\n\nNow, you know that $c$ is a sequence of six non-zero decimal digits. You don't know that the six digits are different, so you try every combination of the digits (except for $0$, which is the same as any of them).\n\nIt's easy to prove that once you've tried a six-digit combination, you can never get a seven-digit combination. So, how many seven-digit combinations do you have?\n\n-----Input-----\nThe input is a line with one integer $n$\n\n-----Output-----\nPrint one integer, the number of seven-digit combinations.\n\n-----Example-----\nSample Input 1:\n7\nSample Output 1:\n0\n\nSample Input 2:\n5\nSample Output 2:\n1\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''123864 123865''') == '1'\nassert solution('''198765 198769''') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\nassert solution('3') == '0.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n5\n''') == '0.50000000'\nassert solution('''3\n3\n''') == '0.66666667'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n10\n''') == '0.500000'\nassert solution('''\n3\n''') == '0.666667'\nassert solution('''\n2\n''') == '0.50000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0.50000000\"\nassert solution(\"2\") == \"0.66666667\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1\n''') == '0.50000000'\nassert solution('''\n2\n1\n''') == '0.66666667'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\n\"\"\"\n\nn = int(stdin.readline())\nimport math\nprint(0.5 * math.factorial(n - 1) * math.factorial(n - 2) * math.factorial(n - 3) / math.factorial(n - 4) / math.factorial(n))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20\n40\n60\n100\n200\n180\n''') == 'impossible'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''96\n180''') =='single 19\n180\ntriple 19\ntriple 19\ntriple 19\ndouble 15\ndouble 15\ndouble 15\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ndouble 15\ndouble 15\ndouble 15\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\ntriple 19\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    180\n    ''') == 'triple 20'\n    assert solution('''\n    120\n    ''') == 'triple 19'\n    assert solution('''\n    136\n    ''') == 'triple 19'\n    assert solution('''\n    96\n    ''') == 'triple 19'\n    assert solution('''\n    96\n    ''') == 'triple 19'\n    ",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '180'\n    ) == 'triple 20'\nassert solution(\n    '96'\n    ) == 'triple 19'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"180\\n\") == \"single 20\"\nassert solution(\"96\\n\") == \"triple 19\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '168'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"168\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nassert solution('3 1 4 5 6 7') == '9820'\n",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 5\") == \"36\"\nassert solution(\"4 7 5\") == \"168\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"288\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s1) == \"2\"\nassert solution(s2) == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == '1'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10') == '7'\nassert solution('3 8') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1\n    3 10\n    ''') == '7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 10') == '7'\nassert solution('2\\n3 8 5') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"1\"\nprint(solution(s))\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3 10\n    3 8\n    5 8\n    \"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nsimon says smile.\\n') =='smile.'\nassert solution('3\\nsimon says raise your right hand.\\nLower your right hand.\\nsimon says raise your left hand.\\n') =='raise your right hand.\\n raise your left hand.\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile. '\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\n') =='raise your right hand. '\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSample Output 2:\n raise your right hand.\n raise your left hand.') =='raise your left hand.'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"smile.\"\nassert solution(\"2\") == \"raise your right hand.\"\nassert solution(\"3\") == \"raise your left hand.\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"smile\"\nassert solution('2') == \"raise your right hand\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') =='smile'\nassert solution('2') == 'raise your left hand'\nassert solution('3') == 'raise your right hand'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand.\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your left hand.\"",
        "num_ids_2": 58,
        "num_ids_4": 98
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == \"5\"\nassert solution('1 2 4 6 10 12 16 18') == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 4 6 10 12 16 18') == '5'\nprint(solution('''\n0 0 4 6 10 12 16 18\n'''))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    0 0 4 6 10 12 16 18\n    ''') == '5'\nassert solution('''\n    1 2 4 6 10 12 16 18\n    ''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t1) == '5'\nassert solution(t2) == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\nassert solution(\"0 0 4 6 10 12 16 18\") == \"5\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1\\nA\\nA\\nG') == '2'\nassert solution('5 2\\nAA\\nAT\\nTT\\nTC\\n') == '3'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nAA\\nAA\\n\") == \"2\"\nassert solution(\"2 3\\nAA\\nAA\\n\") == \"2\"\nassert solution(\"3 4\\nABABABA\\nG\\n\") == \"3\"\nassert solution(\"1 5\\nA\\nB\\nC\\nD\\n\") == \"1\"\nassert solution(\"1 5\\nAB\\nAC\\nAD\\n\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 85
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"4 2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\nAA\\nAT\\nTT\\nTC') == '2'\nassert solution('3 2\\nAA\\nAA\\nAA') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\nAA\nAT\nTT\nTC\n''') == '3'\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\"\nassert solution(\"9 3\\nAAABAAA\\nA\\nA\\nA\\nAA\\nAAB\\nAAA\\nAA\\nAAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\nAA\\",
        "num_ids_2": 46,
        "num_ids_4": 1487
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaaa\") == \"a\", \"First\"\nassert solution(\"ab\") == \"-1\", \"Second\"\nassert solution(\"\") == \"\", \"Third\"\n\nassert solution(\"a\") == \"a\", \"Fourth\"\nassert solution(\"ab\") == \"ab\", \"Fifth\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"a\"\nassert solution(\"a\") == -1\nassert solution(\"\") == -1\nassert solution(\"b\") == -1\nassert solution(\"aabbb\") == \"a\"\n",
        "num_ids_2": 19,
        "num_ids_4": 36
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''bababababab''') == 'a'\nassert solution('''abcabcabc''') == 'a'\nassert solution('''aaaaaaaaaa''') == 'aaaaaaaaa'\nassert solution('''ababababab''') == '-1'\n\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 100\n2 3\nSample Input 3:\n12 10\nSample Output 3:\nDr. Chaz will have 5 pieces of chicken left over!''') == 'Dr. Chaz will have 5 pieces of chicken left over!'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''20 100\n2 3\nSample Input 3:\n2\n5\nSample Output 3:\nDr. Chaz needs 4 more piece[s] of chicken!''') == 'Dr. Chaz needs 4 more piece[s] of chicken!'\nassert solution('''20 100\n2 3\nSample Input 4:\n3\n4\nSample Output 4:\nDr. Chaz needs 3 more piece[s] of chicken!''') == 'Dr. Chaz will have 3 piece[s] of chicken left over!'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('100 50') == 'Dr. Chaz needs 2 more pieces of chicken!'\n",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nprint(solution(input()))\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == 'Dr. Chaz needs 0 more piece[s] of chicken!'\nassert solution('10 2') == 'Dr. Chaz will have 100 pieces of chicken left over!'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n20 100\n''') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('''\n2 3\n''') == 'Dr. Chaz will have 1 piece of chicken left over!'\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('0 0') == 'Dr. Chaz needs 10 more piece[s] of chicken!'\n\"\"\"\nimport math",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"6 1\") == \"Dr. Chaz needs $1 more piece[s] of chicken!\"\nassert solution(\"5 6\") == \"Dr. Chaz needs $2 more piece[s] of chicken!\"\nassert solution(\"4 4\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"3 5\") == \"Dr. Chaz needs $3 more piece[s] of chicken!\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3 10\n1 1 2\n2 2 2\n3 2 1\n'''\n) == '-2'\nassert solution(\n'''\n3 10\n1 1 2\n2 2 2\n3 2 1\n'''\n) == '0'\nassert solution(\n'''\n4 10\n1 1 2\n5 2 3\n3 2 1\n'''\n) == '0'\nassert solution(\n'''\n4 10\n1 1 2\n5 2 3\n3 2 1\n'''\n) == '-2'\nassert solution(\n'''\n5 20\n2 3 5\n4 5 7\n3 1 2\n'''\n) == '-1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 10\n1 1 2\n2 2 2\n3 2 1\n5 2 3\n5 2 1\n''') == '0'\n\nassert solution('''\n3 30\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n\nassert solution('''\n5 30\n1 1 1\n5 2 3\n5 2 1\n''') == '-2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '0'\nassert solution('3 7') == '-2'\nassert solution('1 1 1') == '0'\nassert solution('2 3') == '0'\nassert solution('3 4') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n5 5 2\\n2 3 5\") == \"0\"\nassert solution(\"3 3\\n1 1 3\\n2 1 3\\n3 3 2\\n4 2 2\\n5 2 2\\n6 2 1\\n7 2 1\") == \"-2\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1') == '-2'\nassert solution('3 30\\n1 1 1\\n5 2 3\\n5 2 1') == '0'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n1\n3\n1 1 1\n''') == '0'\nprint('All test cases passed...')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 100\n1 1 2\n2 2 2\n3 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2', '1st'\nassert solution('''\n3 30\n1 1 1\n5 2 3\n5 2 1\n''') == '0', '2nd'\nassert solution('''\n7 10\n1 1 1\n5 2 3\n5 2 1\n5 1 2\n5 3 3\n5 2 1\n''') == '6', '3rd'\nassert solution('''\n5 90\n3 5 2\n4 5 1\n4 1 2\n4 2 3\n4 3 1\n''') == '6', '4th'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\nassert solution('''3 30\n1 1 1\n5 2 3\n5 2 1\nSample Output 3:\n0\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"-2\"\nassert solution(\"3 30\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nluka\\n#a#\\nkula\\ni#a#\\n\") == \"kala\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'as'\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#as\n''') == 'kala'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\n''') == 'as'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == \"kala\"\n\nassert solution('''\n5 5\nj#k#l#\no#a#b#c#\np#q#r#s#\nf#e#d#g#\nh#i#j#\n''') == \"dghj\"\n\nassert solution('''\n4 4\nkala\no#a#\nkula\ni#a#\n''') == \"kala\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == 'a'\n\nassert solution('3 2') == 'a'\n\nassert solution('4 4') == 'a'\n\nassert solution('4 5') == 'as'\n\nassert solution('4 5') == 'as'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\nluka\\nkula\\ni#as\\n') == 'as'\nassert solution('4 4\\nluka\\nkula\\ni#as\\n') == 'kala'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala'\n\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\ndslfs\\nqwert\\nasdfgh\\njklmn') == 'asdfgh'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WNEENWEENEEN') == \"10\"\nassert solution('NSEW') == \"4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('NESNWESENWWM') == '11'\nassert solution('NSEW') == '4'\nassert solution('N') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '10'\nassert solution('NN') == '9'\nassert solution('NNNN') == '19'\nassert solution('NNNSE') == '6'\nassert solution('WEW') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('WNEENWEENEEN') == '10'\nassert solution('NSEW') == '4'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('WNEENWEENEEN') == '10'\nassert solution('NSEW') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\nassert solution(\"NSEW\") == \"4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('NSWE') == '4'\nassert solution('NSEW') == '4'\nassert solution('WNEENWEENE') == '10'\nassert solution('EWEN') == '3'",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WNEENWEENEEN\") == \"10\"\nassert solution(\"WNESWWEENWW\") == \"8\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\nassert solution(\"NSEW\") == \"4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"WSEW\") == \"4\"\nassert solution(\"NESWE\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', solution('1 2 3 4')\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', solution('0 4 2 2')\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', 'First'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', 'Second'\nassert solution('0 4 2 2') == '0 + 4 = 2 * 2', 'Third'\nassert solution('0 4 2 2') == '0 + 4 = 2 + 2', 'Fourth'\nassert solution('2 4 2 2') == '2 * 4 = 2 + 2', 'Fifth'\n\n---\nSample Input 1:\n1 2 3 4\nSample Output 1:\n1 - 2 = 3 - 4\n1 / 2 = 3 / 4\n\nSample Input 2:\n0 4 2 2\nSample Output 2:\n0 * 4 = 2 - 2\n0 + 4 = 2 * 2\n0 + 4 = 2 + 2\n0 / 4 = 2 - 2\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nassert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('3 4 -') == '3 * 4 = 12 - 2'\nassert solution('3 4 2') == '3 / 4 = 3 * 2'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == \"1 - 2 = 3 - 4\"\nassert solution('0 4 2 2') == \"0 * 4 = 2 - 2\"\nassert solution('1 1 1 1') == \"problems ahead\"\nassert solution('0 0 0 0') == \"problems ahead\"\nassert solution('0 4 2 2') == \"0 * 4 = 2 - 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', \"Not correct\"\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', \"Not correct\"\nassert solution('0 5 0 0') == '0 * 5 = 5', \"Not correct\"\nassert solution('0 -1 1 1') == '0 + 1 = 2 - 1', \"Not correct\"\nassert solution('-0 -1 1 1') == '0 + 1 = 2 - 1', \"Not correct\"\n",
        "num_ids_2": 46,
        "num_ids_4": 91
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3 4\n''') == '1 - 2 = 3 - 4', \"Wrong!\"\n\nassert solution('''\n0 4 2 2\n''') == '0 * 4 = 2 - 2', \"Wrong!\"\n\nassert solution('''\n1 3\n''') == '1 - 3 = -1', \"Wrong!\"\n\nassert solution('''\n1 2 3\n''') == '1 / 2 = -1', \"Wrong!\"\n\nassert solution('''\n3 3 4 4\n''') == '3 + 4 = -2', \"Wrong!\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''BANANA PIDZAMA\nSAMPLE OUTPUT 1\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....''') == '''.T..\nMAMA\n.T..\n.A..'''\n\nassert solution('''TATA MAMA\nSAMPLE OUTPUT 2\n.T..\nTATA\n.T..\n.A..\nTATA''') == '''.T..\nTATA\n.T..\n.A..'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BANANA PIDZAMA') == '1\\n1\\n1\\n2\\n'\nassert solution('MAMA TATA') == '2\\n2\\n2\\n2\\n'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BANANA PIDZAMA') == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution('MAMA TATA') == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nBANANA PIDZAMA\n''') == '''\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n'''\nassert solution('''\nMAMA TATA\n''') == '''\n.T..\nMAMA\n.T..\n.A..\n'''\nassert solution('''\nAA BB\n''') == '''\n.A.\nAA\n.B.\nBB\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\nprint('All tests passed!')",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"\".join(\".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\")\nassert solution(\"MAMA TATA\") == \"\".join(\".T..\\nMAMA\\n.T..\\n.A..\\nMAMA\\n.T..\\n.A..\")\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"10\"\n\nassert solution(input) == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n10 14\n13 17\n25 26\n\"\"\") == \"10\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26\\n') == '10'\nassert solution('2\\n1 365\\n20 28\\n') == '365'\nprint(solution(input()))\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'\nassert solution('1 365') == '365'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\nprint('All test cases passed')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    3\n    10 14\n    13 17\n    25 26\n\"\"\") == \"10\"\nassert solution(\"\"\"\n    1 365\n    20 28\n\"\"\") == \"365\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '10'\nassert solution(sample_input_2) == '365'\nprint('Congratulations!')\n\n\"\"\"\n\n############################################################################\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\nassert solution(\"2\") == \"0\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '0 1'\nassert solution('1') == '0 1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n1\\n4\\n') == '2 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n\"\"\") == \"0 1\"\n\nassert solution(\"\"\"\n2\n\"\"\") == \"2 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 100 99\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'A 100 49'\n\nassert solution('3 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'A 0 99'\n\nassert solution('5 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\\n3 100 50') == 'A 0 99'\n",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"5 4\") == \"A 1 197\"\nassert solution(\"8 1\") == \"0.3636363636\"\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"4 4\") == \"A 0 99\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"4 4\") == \"A 0 99\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"4 4\") == \"A 1 197\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1\n4\n3\n5\n''') == '168'\nprint(\"The answer is: {}\".format(solution(stdin)))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1\n1\n1\n1\n''') == '1'\n\nassert solution('''\n4\n2\n1\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"168\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"9\"\nassert solution(\"3\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == '1'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '168'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '168'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2\n1\n4\n3\n5''') == '168'\nassert solution('''4\n1\n1\n1\n1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '168'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2\n1\n4\n3\n5\n''') == '168'\nprint('PASSED!')",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\nABC\nDEF\n2\n\"\"\") == \"CBADEF\"\nassert solution(\"\"\"\n2\nAABB\nBBBB\n\"\"\") == \"ABABB\"\nassert solution(\"\"\"\n4\nAAA\nBBB\nCCC\nDDD\n\"\"\") == \"DDDDDDD\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF'\nassert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CDBEAF'\nassert solution('''\n1\nA\n''') == 'A'\nassert solution('''\n2\nA\n''') == 'A'\nassert solution('''\n1\nA\n''') == 'A'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CBADEF', \"Wrong Answer\"\nassert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF', \"Wrong Answer\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF', 'First'\nassert solution('''\n3 3\nABC\nDEF\n1\n''') == 'CDBEAF', 'Second'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0\\n') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n2\\n') == 'CDBEAF'\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\nABC\nDEF\n\"\"\") == \"CBADEF\"\n\nassert solution(\"\"\"\n3\nABC\nDEF\n5\nABDC\n\"\"\") == \"ABDCBCADEF\"\n\nassert solution(\"\"\"\n3\nABC\nDEF\n1\nABDC\n\"\"\") == \"ABDCBCADCF\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n0\n''') == 'CBADEF', 'First'\nassert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CDBEAF', 'Second'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\nABA\n0\n\"\"\") == \"CBA\"\nassert solution(\"\"\"\n3\nABA\nABB\n0\n\"\"\") == \"CDBA\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('2') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '1'\nprint('All tests passed')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n5\n100 T\n100 T\n100 T\n100 T\n100 N\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n5\n100 T\n100 T\n100 T\n100 T\n100 N\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n5\n100 T\n100 T\n100 T\n100 T\n100 T\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3\n5\n100 T\n100 N\n100 T\n100 N\n100 N\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n5\n100 T\n100 T\n100 T\n100 T\n100 T\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n\"\"\") == \"4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n2 1 2\n1 3 3\n3 2 1\n1 4 4\n3 1 2\n3 1 4''') == '22'\nprint(solution('''3 2\n1 2 1\n1 3 2\n2 3 3'''))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5'\nassert solution('5') == '9'\nassert solution('7') == '18'\nassert solution('8') == '17'\nassert solution('9') == '22'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '8'\nassert solution(r\"4 3\") == '6'\nassert solution(r\"6 8\") == '22'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '7'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"22\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 4\n4 3 2 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 3\n5 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2 3\n5 2 3\n\"\"\") == \"1\"\n\n\"\"\"\n+-----+\n|     |\n|     |\n|     |\n+-----+\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 4\\n4 3 2 1\") == \"0\"\nassert solution(\"3 3\\n1 2 3\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"0\"\n\n'''",
        "num_ids_2": 33,
        "num_ids_4": 48
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\nassert solution('1 2 2 1') == '0'\nassert solution('1 2 3 1') == '1'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''\n1 4\n4 3 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"1 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 3\n1 2 3\n6 5 4''') == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\nassert solution('''3 5\n1 2 3 4 5\n6 7 8 9 10''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\nassert solution('''10\n3\n10\n2\n12''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n') == '28'\nassert solution('10\\n') == '16'\nassert solution('10\\n') == '28'\nassert solution('10\\n') == '16'\nassert solution('10\\n') == '28'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n3\n4\n6\n2\n''') == '28'\nassert solution('''\n10\n3\n10\n2\n12\nSample Output 3:\n''') == ''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"28\"\nassert solution(\"2\") == \"16\"\nassert solution(\"2\") == \"28\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10\n3\n4\n6\n2\n12\n''') == '28'\nprint('All tests passed!')",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '28'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '28'\nassert solution('10') == '28'\n\"\"\"\n\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '28'\nassert solution('10') == '16'\nassert solution('3') == '28'\nassert solution('3') == '16'\nassert solution('10') == '28'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '28'\nassert solution('10') == '28'\n\n---Input Sample---\nSample Input 1:\n10\n3\n4\n6\n2\nSample Output 1:\n28\n\nSample Input 2:\n10\n3\n10\n2\n12\nSample Output 2:\n16\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n3\n4\n6\n2\n''') == '28'\nassert solution('''\n10\n3\n10\n2\n12\n''') == '16'\nassert solution('''\n20\n3\n9\n2\n14\n''') == '21'\nassert solution('''\n100\n3\n10\n2\n12\n''') == '101'\nassert solution('''\n1000\n3\n10\n2\n12\n''') == '1001'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\namiss\noctopuses\n''') == 'hiss'\nassert solution('''\noctopuses\noctopuses\n''') == 'no hiss'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('waddiw') == 'waddiw'\nassert solution('thesimple') == 'thesimple'\nassert solution('codewars') == 'codewars'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n\nassert solution('across') == 'no hiss'\n\nassert solution('hiss') == 'hiss'\n\nassert solution('aiss') == 'hiss'",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n\nimport re\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\namiss\n\"\"\") == \"hiss\"\n\nassert solution(\n\"\"\"\noctopuses\n\"\"\") == \"no hiss\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\namiss\noctopuses\n''') == 'hiss'\nassert solution(\n'''\nsant\nsanta\n''') == 'no hiss'\nassert solution(\n'''\ns\n''') == 'no hiss'\n'''\n<input value=\"\"/>\n</input>\n'''\n)\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('amiss') == 'hiss'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nc++\nC++\nc\nc#\n''') == \"3\"\nassert solution('''4\npython\npython\npython\npython\n''') == \"3\"\nassert solution('''2\npython\n''') == \"0\"\nassert solution('''4\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nC++\\nC++\\nC\\nC#\\n') == '3'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"-1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(samples[0]) == '4'\nassert solution(samples[1]) == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nC++\nC#\npython\nC\n''') == '3'\nassert solution('''15\nblockchain\nartificial intelligence\nblockchain\nmachine learning\npython\n''') == '5'\nassert solution('''1\nd\n''') == '0'\nassert solution('''2\nt\n''') == '0'\nassert solution('''3\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1', \"Wrong answer in test 1\"\nassert solution('2') == '2', \"Wrong answer in test 2\"\nassert solution('3') == '3', \"Wrong answer in test 3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\nassert solution('CCCTTGTC') == '21'\nassert solution('CCCTTGTC') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\nassert solution(\"TCGTC\") == \"16\"\n\nassert solution(\"TCGTCGTC\") == \"16\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\nassert solution('TCCGTTTCGCGGTTTCCCCCCGTTTCCCCCCTGCCCCTGTTGCCCCTGTTGC') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 60
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"TCGTTC\"]) == \"21\"\nassert solution([\"CCC\"]) == \"9\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''TCGTTC\nCCC''') == '9'\nassert solution('''CGCGC\nTGCTT\nCGGGC\nTCGTC\nCCCCT\nTTCAG\nTTCGT''') == '15'\nassert solution('''TGCGC\nTGCTT\nCGGGC\nTCGTC\nCCCCT\nTTCAG\nTTCGT''') == '16'\nassert solution('''CCCCT\nTTCAG\nTTCGT\nTCGTC\nCGGGC\nTGCTT\nGCGCG''') == '12'\nassert solution('''TGCTT\nCCCCT\nTTCAG\nTTCGT\nCGGGC\nGCGCG\nCGCGC''') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15\\n45') == '90'\nassert solution('10\\n10') == '0'\nassert solution('15\\n45\\n') == '90'",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"-180\") == \"90\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"90\"\nassert solution(\"90\") == \"0\"\nassert solution(\"90\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"-90\") == \"270\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'\nassert solution('-180') == '-90'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0\\n90') == '90'\nassert solution('90\\n0') == '90'\nassert solution('180\\n270') == '90'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n90') == '90'\nassert solution('2\\n-45') == '-90'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"315\\n45\") == \"90\"\nassert solution(\"180\\n270\") == \"90\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('-315') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0\\n90\") == \"90\"\nassert solution(\"180\\n270\") == \"90\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\nassert solution('''5\n1\n12\n12\n12\n12\n12''') == '1'\nassert solution('''10\n1\n2\n2\n2\n2\n2\n2\n2\n2''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == \"3\"\nassert solution('''5\n11\n20\n33\n40\n55''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\nassert solution('''\n5\n1\n23\n18\n13\n99\n''') == '1'\nassert solution('''\n5\n1\n23\n18\n13\n99\n''') == '0'\nassert solution('''\n5\n1\n23\n18\n13\n99\n''') == '1'\nassert solution('''\n5\n1\n23\n18\n13\n99\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\nassert solution('''\n5\n1\n2\n3\n4\n5\n''') == '2'\nassert solution('''\n5\n1\n2\n3\n4\n5\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '0'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('5 1 23 18 13 99') == '2'\nassert solution('5 11 20 33 40 55') == '1'\nassert solution('10') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 23 18 13 99\") == \"3\"\nassert solution(\"5 2 17 18 13 99\") == \"4\"\nassert solution(\"5 2 19 18 13 99\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 23 18 13 99') == '3'\nassert solution('5 2 10 1 1 11') == '1'\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('10') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution
        "num_ids_2": 1740,
        "num_ids_4": 1740
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nBWBWBW\n''') == '1'\nassert solution('''\nBBBBBWB\n''') == '0'\nprint(solution('''\nBBBBBWB\n'''))\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''BWWWBWBW''') == '1'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string_1) == '1'\nassert solution(input_string_2) == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''BWBBB\n''') == '1'\nassert solution('''WBWBWWBBB\n''') == '0'\nassert solution('''WBBBBWWW\n''') == '1'\nassert solution('''WBBBBBBBB\n''') == '1'\nassert solution('''WBWBBBBW\n''') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''WWBWBBW''') == '1'\nassert solution('''WWWWBBW''') == '0'\nprint(solution('''WWWWBBW'''))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''WWW\nBBBB\nB''') == '0'\nassert solution('''WWWBB\nBBBBB\nB''') == '1'\nassert solution('''WWWWBB\nBBBBB\nB''') == '0'\nassert solution('''WWWWBB\nBBBBB\nB''') == '1'\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('BBBBBBBB') == '1'\nassert solution('WWWWBB') == '1'\nassert solution('BBBBBBBB') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 3 3') == \"9\"\nassert solution('1 2 1 1') == \"1.299038105676658\"\nprint('Congratulations! All test cases passed')\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3 4') == '1'\nassert solution('2 4 3 2') == '2.0000'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\nassert solution(\"1000000000 1000000\") == \"1\"\nassert solution(\"2 2 2 2\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 61
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 3 3') == \"9\"\nassert solution('1 2 1 1') == \"1.299038105676658\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 3 3') == \"9\"\nassert solution('1 2 1 1') == \"1.299038105676658\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooooobert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''robert\nroooobert\nrrrroobert\nroobrroobert\nroobert\nroobrroobert\nroobrroobert\nroobert''') == 'robert'\nassert solution('''robert\nroobrobert\nroobrobert\nroobrobert\nroobert\nroobrroobert\nroobrroobert\nroobert''') == 'robert'\nassert solution('''robert\nroobrobert\nroobrobert\nroobrobert\nroobert\nroobrroobert\nroobrroobert\nroobert''') == 'robert'\nassert solution('''robert\nroobert\nroobrobert\nroobrobert\nroobrobert\nroobrober\nroobrober\nroobrober\nroobber\nroobrroobert\nroobrroobert\nroobrroobert\nroobrroobert\nroobrobert\nroobrroobert\nroobrroobert\nroobrroobert\nroobrroobert\nroobrroobert\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobrober\nroobro",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\nassert solution(\"rrroobert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('robert') == 'robert', 'Not solved yet'\nassert solution('rooooobert') == 'robert', 'Not solved yet'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooooobert\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('rroooobert') == 'robert'\nassert solution('robert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roobert\") == \"robert\"\nassert solution(\"rRoObErT\") == \"rrobert\"\nassert solution(\"roobert\") == \"robert\"\nassert solution(\"roob\") == \"roober\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''robert\nroboobert\nrobbobberot''') == 'robert'\nassert solution('''robbobberot\nrobbobberot''') == 'robert'\nassert solution('''roobobert\nroobobert''') == 'robert'\nassert solution('''roobobert\nroobobert''') == 'robert'\nassert solution('''roobobert\nroobobberot''') == 'robert'\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 9 7\n''') == '108 4'\nassert solution('''\n10 9 7\n''') == 'Impossible'\nassert solution('''\n10 1 2 3\n''') == '1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 9 7\n10 9 7''') == '108 4'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1000 9 7\n    ''') == '108 4'\nassert solution('''1000 900 7\n    ''') == 'Impossible'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1000 9 7\n100 9 7\n100 8 7\n100 7 7\n100 6 7\n100 5 7\n100 4 7\n100 3 7\n100 2 7\n100 1 7\n100 7 7\n100 7 7\n100 7 7\n100 6 7\n100 5 7\n100 4 7\n100 3 7\n100 2 7\n100 1 7\n100 7 7\n100 7 7\n100 6 7\n100 5 7\n100 4 7\n100 3 7\n100 2 7\n100 1 7\n100 7 7\n100 7 7\n100 7 7\n100 6 7\n100 5 7\n100 4 7\n100 3 7\n100 2 7\n100 1 7\n100 7 7\n100 7 7\n100 7 7\n100 6 7\n100 5 7\n100 4 7\n100 3 7\n100 2 7\n100 1 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 6 7\n100 5 7\n100 4 7\n100 3 7\n100 2 7\n100 1 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 6 7\n100 5 7\n100 4 7\n100 3 7\n100 2 7\n100 1 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100 7 7\n100",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"Impossible\"\nassert solution('1000 9 7') == \"108 4\"\nassert solution('1000 900 7') == \"Impossible\"\nassert solution('100 9 7') == \"Impossible\"\nassert solution('1000 9 0') == \"Impossible\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nassert solution(\"1 10 3\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '1'\nassert solution('5 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4\\n#..#\\n#..X\\n#..X\\n#XX#') == '1'\nassert solution('4 4\\n....\\n....\\n....\\n#XX#') == '0'\n\n'''\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1'\nassert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '0'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n#..#\\n..X.\\n#XX#\\n\") == \"1\"\nassert solution(\"4 4\\n#..#\\n..X.\\n....\\n#XXX#\\n\") == \"1\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5\nX.#\n...\n...\n...\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1\\n1\\n2\\n1\\n0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '1\\n1\\n2\\n1\\n0'\nassert solution('0 2') == '0\\n0\\n0\\n0\\n0'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\"\nprint(solution(input()))\n\n---\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n\"\"\"\n\nn = int(input())\n\nx = 0\nfor i in range(1, n+1):\n    x += (int(input())) ** i\n\nprint(x)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1953566', 'Sample Test 1 Failed'\nassert solution('5') == '102', 'Sample Test 2 Failed'\n\n--Submissions--\nTest 1\nRuntime: 416 ms, faster than 25.13% of Python3 online submissions for Power of Four.\nMemory Usage: 25.4 MB, less than 7.98% of Python3 online submissions for Power of Four.\n\nTest 2\nRuntime: 328 ms, faster than 9.95% of Python3 online submissions for Power of Four.\nMemory Usage: 29.9 MB, less than 5.84% of Python3 online submissions for Power of Four.\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n212\\n1253\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '5'\nassert solution('5') == '105'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1953566\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1953566\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n213\n''') == '1953566', 'Sample #1'\nassert solution('''\n3\n11\n10\n2\n''') == '2', 'Sample #2'\nassert solution('''\n5\n3\n2\n5\n3\n''') == '102', 'Sample #3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n212\\n1253\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10 10\\n3 3 3\\n') == '0.000000 0.000000 0.000000'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 5') == '0.000000 0.000000 0.000000'\nassert solution('5 10 10') == '0.000000 0.000000 0.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nassert solution('1 1 1') == '0.000000 0.000000 0.000000'",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6 5') == '0.000000 3.000000 6.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000', solution('10 10 10')\nassert solution('9 9 9') == '0.000000 3.000000 6.000000', solution('9 9 9')\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000', 'Wrong result'\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000', 'Wrong result'\nassert solution('''\n500 500 500\n3 3 3\n''') == '25.000000 25.000000 25.000000', 'Wrong result'\nassert solution('''\n500 500 500\n2 2 2\n''') == '33.333333 33.333333 33.333333', 'Wrong result'\nassert solution('''\n500 500 500\n3 2 1\n''') == '34.666667 34.666667 34.666667', 'Wrong result'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000', \"Wrong\"\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000', \"Wrong\"\nassert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000', \"Wrong\"\nassert solution('''\n10 10 10\n3 2 1\n''') == '0.000000 3.000000 6.000000', \"Wrong\"\nassert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000', \"Wrong\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abcd') == 'abcd'\nassert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\"\"\"\n\n\nimport re",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('<') == ''\nassert solution('<foss<') == '<foss<'\n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nKMP''') == 'KMP'\nassert solution('''\nMS''') == 'MS'\nassert solution('''\nK-M-P''') == 'KMP'\nassert solution('''\nM-S-L-O''') == 'MS'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"Knuth-Morris-Pratt\"\n) == \"KMP\"\nassert solution(\n    \"Mirko-Slavko\"\n) == \"MS\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\nassert solution(\"MsKnuth-Morris-Pratt\") == \"KMP\"\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 52
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'\nassert solution('Rivest-Shamir-Adleman') == 'Rivest-Shamir-Adleman'\nassert solution('Shamir-Adleman') == 'Shamir-Adleman'\n",
        "num_ids_2": 20,
        "num_ids_4": 58
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Mirko-Slavko') == 'MS'\n\nassert solution('Knuth-Morris-Pratt') == 'KMP'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == 'Province or Gold'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 0\") == \"Province or Gold\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\nassert solution(\"2 2 0\") == \"Estate or Copper\"\nassert solution(\"2 3 0\") == \"Estate or Copper\"\nassert solution(\"2 4 0\") == \"Estate or Copper\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'Province or Gold'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('3 1 0') == 'Province or Gold'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4 0\n2 1 1\n''') == 'Province or Gold'\nassert solution('''\n3 3 1\n0 2 0\n''') == 'Estate or Copper'\nassert solution('''\n2 2 2\n0 1 0\n''') == 'Province or Gold'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\nassert solution(\"5 3\") == \"100.00\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n70 50') == '90.00'\nassert solution('10 3\\n80 90') == '75.7142857'\nassert solution('100000 100000') == 'impossible'",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('2 1') == '90.00'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00\\n'\nassert solution('10 3\\n80 90\\n') == '75.7142857\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n70 50\n''') == '90.00'\nassert solution('''\n10 3\n80 90\n''') == '75.7142857'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"5\") == \"1 2 3 4 5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3 4 1\n3 4 2 1\n''') == '4 1 3 4'\nassert solution('''\n5\n1 2 3 4 5\n4 1 2 3 5\n''') == '5 1 2 3 4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '1 2 3 4 5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 3 1 5 4 7 6\n''') == '2, 3, 5, 7'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1, 2, 3, 4, 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4 2 3 5 7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\n2 3 1 5 4 7 6\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '1 2 3 4 5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2, 3, 1\\n') == '2, 3, 1'\nassert solution('4\\n4, 4, 1\\n') == '1, 4'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('7') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 3\n''') == '1 0'\nprint(solution('''\n2 2\n'''), '2 1')\nprint(solution('''\n3 2\n'''), '3 1')\nprint(solution('''\n5 2\n'''), '5 0')\nprint(solution('''\n10 2\n'''), '9 23')\nprint(solution('''\n23 2\n'''), '21 25')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 10\\n\") == \"9 25\"\nprint(solution(\"0 30\\n\"))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"23 45\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nprint(solution(input()))\n\n\"\"\"\n\nh, m = map(int, input().split())\nprint((h + m) % 24, (h - m) % 24)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 5\") == \"10 20\"\nassert solution(\"4 0\") == \"6 12\"\nassert solution(\"6 5\") == \"10 20\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000'\nassert solution('2.000000') == '1.414214'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0.36788\n0.36788\n''') == '1.414214'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('3.000000') == '1.414214'\nassert solution('4.000000') == '1.414214'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\nassert solution('2.727273') == '1.727273'\nassert solution('3.800003') == '1.800003'\nassert solution('4.000000') == '1.000000'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('0.36778') == '1.0'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('2.718281') == '1.000000'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3:\n2,1\n2,2\n3,2\n5,4\n5,5\n6,5\n10,10\n13,12\n17,16\n25,25\n''') == '3:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3''') == '3:'\nassert solution('''50''') == '50:'\nassert solution('''2,1''') == '2,1:'\nassert solution('''2,2''') == '2,2:'\nassert solution('''3,2''') == '3,2:'\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\nassert solution(\"51\") == \"51:\"\nassert solution(\"52\") == \"52:\"\nassert solution(\"53\") == \"53:\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('100') == '2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1",
        "num_ids_2": 20,
        "num_ids_4": 1399
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1:'\nassert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('1000') == '1000:'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == '2:'\nassert solution(\"3\") == '3:'\nassert solution(\"51\") == '51:'\nassert solution(\"100\") == '100:'\nassert solution(\"9999\") == '9999:'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n''') == '3:'\nassert solution('''\n50\n''') == '50:'\nassert solution('''\n51\n''') == '51:'\nassert solution('''\n72\n''') == '72:'\nassert solution('''\n53\n''') == '53:'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('51') == '51:'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('51') == '51:'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1:\"\nassert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\nassert solution(\"51\") == \"51:\"\nassert solution(\"5\") == \"2,1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\nstdin = input()\n\nprint(solution(stdin))\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''THE RAIN IN SPAIN''') == \"yes\"\nassert solution('''IN THE RAIN AND THE SNOW''') == \"no\"\nprint(solution('''THE RAIN IN SPAIN'''), 'yes')\nprint(solution('''IN THE RAIN AND THE SNOW'''), 'no')",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n''') == 'no'\nassert solution('''\nTHE RAIN IN SPAIN IN THE PLAIN\n''') == 'yes'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('THE RAIN IN SPAIN') == \"yes\"\nassert solution('IN THE RAIN AND THE SNOW') == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"RLLRLLRLLR\") == \"SSKKKHHS\"\nassert solution(r\"RBBBLLLRR\") == \"SSKKKHHS\"\nassert solution(r\"RRBBBLLRLLLL\") == \"SSKKKHHS\"\nassert solution(r\"RBLLRLLRRLLR\") == \"SSKKKHHS\"\n",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nRLLRLLRR\n''') == 'SSKKKHHS'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''RRBBBLLR''') == 'SSKKKHHS'\nassert solution('''RBLLLBRR''') == 'CHCS'\nprint('all tests passed')",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\nassert solution(\"RRRLLRLL\") == \"RKHCS\"\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"SSKKKHHS\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nprint('Solution:')\nprint(solution(input()))\n'''",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n\n----Hints----\n1. Print integers from $1$ to $N$ in order, each on its own line.\n2. The numbers $X$, $Y$ and $N$ are always integers.\n3. We know that every number is divisible by one of $X$, $Y$ or both, so we can just print those numbers.\n4. We can use a while loop to print all integers in a specific sequence.\n5. We can use nested if-else statements to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n6. We can use a simple if/else statement to print only those divisible by $Y$.\n7. We can use if/elif/else statements to print only those divisible by $X$ and then either divisible by $Y$ or by both.\n8. We can use nested if/elif/else statements to print only those divisible by $X$ and then either divisible by $Y$ or by both.\n9. We can use an if statement to print only those divisible by $X$ and then either divisible by $Y$ or by both.\n10. We can use a nested for loop to print all the divisible integers from $1$ to $N$.\n11. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n12. We can use an if/else statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n13. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n14. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n15. We can use a nested if/else statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n16. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n17. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n18. We can use a nested if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n19. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n20. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n21. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n22. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n23. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n24. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n25. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n26. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n27. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n28. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n29. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n30. We can use a nested if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n31. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n32. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n33. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n34. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n35. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n36. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n37. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n38. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n39. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n40. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n41. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n42. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n43. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n44. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n45. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n46. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n47. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n48. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n49. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n50. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n51. We can use an if statement to print the ones divisible by $X$ and then either divisible by $Y$ or by both.\n52. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n53. We can use a nested for loop to print all the divisible integers from $1$ to $N$, using the logic explained above.\n54. We can use an if statement to print the",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\"\nprint(solution(\"2 3 7\"))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3 7''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('''2 4 7''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\nassert solution('1 3 5 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 57,
        "num_ids_4": 94
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == \"It hadn't snowed this early in 3 years!\"\nassert solution('2 10') == \"It hadn't snowed this early in 0 years!\"\nprint('Check 1: ', check_answer(solution, True))\n\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'It hadn't snowed this early in 2 years!'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == 'It had never snowed this early!'\nassert solution('4 2') == 'It hadn't snowed this early in 3 years!'\n\n---Input---\n5 3\n2 3 3 2\n4 10\n0 100\n7 7 7 7 7 7 7 7\n0\nSample Output 2:\nIt had never snowed this early in 0 years!\n\n'''",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 2\\n\" +\n    \"3 3 3 2\\n\"\n) == \"It hadn't snowed this early in 3 years!\"\nassert solution(\n    \"2 10\\n\" +\n    \"0 100\\n\"\n) == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!', 'Behold, Snow!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!', 'Behold, Snow!'\nassert solution('3 2') == 'It had never snowed this early!', 'Behold, Snow!'",
        "num_ids_2": 58,
        "num_ids_4": 82
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"It hadn't snowed this early in 0 years!\"\nassert solution(\"3 2\") == \"It hadn't snowed this early in 3 years!\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n3 3 3 2') == \"It hadn't snowed this early in 3 years!\"\nassert solution('2 10\\n0 100') == \"It hadn't snowed this early in 0 years!\"\nprint(solution(input()))\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n3 3 3 2\n''') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('''2 10\n0 100\n''') == 'It hadn\u2019t snowed this early in 0 years!'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'It hadn't snowed this early in 3 years!'\nassert solution('10 10') == 'It hadn't snowed this early in 0 years!'\nassert solution('10 10 0') == 'It hadn't snowed this early in 0 years!'",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '7'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n20 4\n5 5 8 10 6 7 7 9 2 3\n''') == '2'\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"1\"\nassert solution(\"10 10\") == \"7\"\nassert solution(\"10 10\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"3\"\nassert solution(\"5 10\") == \"7\"\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3') == '1'\nassert solution('6\\n6') == '3'\nassert solution('5\\n7') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n3') == '7'\nassert solution('4\\n4\\n3') == '4'\nassert solution('4\\n4\\n4') == '2'\nassert solution('5\\n5\\n4') == '1'\nassert solution('3\\n1\\n1') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2\n''') == '2'\nassert solution('''\n10 10\n''') == '7'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n\"\"\"\n\nimport re\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        # Pattern for matching\n        pattern = re.compile(r\"^([0-9]+)(\\D+)*$\")\n        matches = re.search(pattern, stdin)\n\n        # Data structure to store the index and key of matrix\n        d = {}\n\n        # Generate a list of rows and their index\n        rows = []\n        rows.append(0)\n        for i in range(1, int(matches.group(1)) + 1):\n            rows.append(i * len(rows))\n        rows.append(int(matches.group(1)) * len(rows))\n        rows = rows + rows\n\n        # Generate a list of columns and their index\n        cols = []\n        for i in range(len(rows)):\n            cols.append(i)\n\n        # Populate the matrix\n        matrix = []\n        for i in range(len(rows)):\n            matrix.append([])\n            for j in range(len(cols)):\n                matrix[i].append(stdin[rows[i] + cols[j]])\n\n        # Get the matrix that has the most rows\n        max_rows = 0\n        for i in range(len(matrix)):\n            if len(matrix[i]) > max_rows:\n                max_rows = len(matrix[i])\n\n        # Generate the key\n        key = []\n        for i in range(max_rows):\n            for j in range(len(matrix[0])):\n                if matrix[i][j] in d:\n                    d[matrix[i][j]].append(i * len(matrix[0]) + j)\n                else:\n                    d[matrix[i][j]] = []\n                    d[matrix[i][j]].append(i * len(matrix[0]) + j)\n\n        # Generate the cipher text\n        text = []\n        for i in range(len(matrix)):\n            text.append([])\n            for j in range(len(matrix[0])):\n                text[i].append(matrix[i][d[matrix[i][j]][0]])\n                if len(d[matrix[i][j]]) > 1:\n                    for k in range(1, len(d[matrix[i][j]])):\n                        text[i][j] = text[i][j] + matrix[i][d[matrix[i][j]][k]]\n\n        # Return the cipher text\n        return \"\".join(text)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"hello, world\") == \"world\"\nprint(solution(\"hello, world\"))\nprint(solution(\"\"))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"bok\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6 6'\nassert solution('6') == '6 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '8 1'\nassert solution('6\\n') == '8 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 1'\nassert solution('2') == '1 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '8 3'\nassert solution('2') == '8 3'\nassert solution('3') == '8 3'\nassert solution('4') == '8 2'\nassert solution('5') == '8 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '8 2'\nassert solution('10') == '8 4'\nassert solution('15') == '8 7'\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2\n\nSample Input 2:\n8\nSample Output 2:\n9 2\n''') == '8 2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"1 3\\n\"\nassert solution(\"8\\n\") == \"2 1\\n\"\nassert solution(\"10\\n\") == \"2 4\\n\"\nassert solution(\"16\\n\") == \"2 2\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('upped') == 'NO'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"drought\") == \"YES\", \"Should be \" + \"YES\"\nassert solution(\"stairs\") == \"NO\", \"Should be \" + \"NO\"\nassert solution(\"eet eat\") == \"NO\", \"Should be \" + \"NO\"\nassert solution(\"worried and frightened\") == \"YES\", \"Should be \" + \"YES\"\nassert solution(\"tasty sprout\") == \"YES\", \"Should be \" + \"YES\"\n",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('worried') == 'NO'\nassert solution('tasty') == 'YES'\nassert solution('difficult') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('erres') == 'NO'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"eared\") == \"YES\"\nassert solution(\"oared\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"\nassert solution(\"bales of cotton\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"stairs\"\n) == \"YES\"\nassert solution(\n    \"eet eat\"\n) == \"NO\"\nassert solution(\n    \"apples and pears\"\n) == \"YES\"\nassert solution(\n    \"worried and fierce\"\n) == \"YES\"\nassert solution(\n    \"tasty sprout\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\ndrought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and frantic\nforever in doubt\napples and pears''') == 'YES\\nYES\\nYES\\nYES\\nNO'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"eet\") == \"NO\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"plates of meat\") == \"YES\"\n\nstdin = \"\"\"\ndrought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and frantic\nforever in doubt\napples and pears\n\"\"\"\nprint(solution(stdin))\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'NO'\nassert solution('drought') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('drought') == 'YES'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"\n\n------------------------------\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"\nprint(solution(input()))\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"WIN\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == \"WIN\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == \"WIN\"\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == \"LOSE\"\n\"\"\"\n\nimport sys\nfrom typing import List\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"WIN\" or solution() == \"LOSE\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nB\\nC\\nD\") == \"DECREASING\", \"Decreasing\"\nassert solution(\"10\\nZ\\nY\\nX\\nW\\nV\\nU\\nT\\nS\\nR\\nQ\\nP\\nO\\nN\\nI\\nG\\nF\\nE\\nD\\nC\\nB\\nA\") == \"NEITHER\", \"Neither\"\nassert solution(\"13\\nJOE\\nBILLY\\nMARY\\nJOE\\nMARY\\nBILLY\\nMARY\\nJOE\\nMARY\\nBILLY\\nMARY\\nJOE\\nMARY\\nBILLY\\nMARY\\nJOE\\nMARY\\nBILLY\\nMARY\\nJOE\\nMARY\\nBILLY\\nMARY\") == \"INCREASING\", \"Increasing\"\nassert solution(\"9\\nZ\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\n\") == \"NEITHER\", \"Neither\"\n",
        "num_ids_2": 107,
        "num_ids_4": 272
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"INCREASING\", \"Failed Sample Test\"\nassert solution(\"11\") == \"NEITHER\", \"Failed Sample Test\"\nassert solution(\"13\") == \"DECREASING\", \"Failed Sample Test\"\nassert solution(\"18\") == \"DECREASING\", \"Failed Sample Test\"\nassert solution(\"4\") == \"NEITHER\", \"Failed Sample Test\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'DECREASING'\nassert solution('10') == 'NEITHER'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == \"DECREASING\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'DECREASING'\nassert solution('''\n2\nMARY\nJOE\nAL\n''') == 'NEITHER'\nassert solution('''\n3\nHOPE\nBOB\nANDY\nAL\n''') == 'INCREASING'\nassert solution('''\n4\nALI\nHOPE\nBOB\nANDY\n''') == 'NEITHER'\nassert solution('''\n5\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'DECREASING'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\nassert solution('''0\nBOB\nANDY\nAL\nADAM''') == 'INCREASING'\nassert solution('''20\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'INCREASING'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('11') == 'NEITHER'\nassert solution('1') == 'NEITHER'\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"INCREASING\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nGOD\\nHOPE') == 'DECREASING'\nassert solution('12\\nGOD\\nHOPE\\nGOD') == 'NEITHER'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == \"George wins!\"\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == \"Nina wins!\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\n''') == 'George wins!'\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\") == \"George wins!\"\nassert solution(\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\nSample Output 2:\nNina wins!\nJess wins!\n\"\"\") == \"Nina wins!\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\nassert solution('1') == 'No winner!'\n",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == \"George wins!\"\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == \"Nina wins!\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\nassert solution('5 10 13') == 'No winner!'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nassert solution('1 2 3 4 5') == '3.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n\n----Explanation----\nThe longest rope that can be used to satisfy the position of the goat in the house.\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 3 0 0 5 4\n6 0 0 2 7 6''') == '2.0'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\nprint(solution(*[*map(int, input().split())]))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2 4 3\") == \"3.0\"\nassert solution(\"1 1 1 2 5 4\") == \"5.0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"234\") == \"235\"\nassert solution(\"9\") == \"0\"\nassert solution(\"34567\") == \"34568\"\nassert solution(\"6\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5', \"Wrong!\"\nassert solution('27') == '27', \"Wrong!\"\nassert solution('902') == '902', \"Wrong!\"\nassert solution('8911') == '8911', \"Wrong!\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"\nassert solution(\"231\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"4\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"12345\") == \"123450\"\nassert solution(\"123456\") == \"123462\"\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"5 4\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000') == '4'\nassert solution('5 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"4 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 5\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"4\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"5 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000') == '4'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'\nprint('All tests passed')\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4', f'actual: {solution(\"5 4\")}'\nassert solution('4 4') == '3', f'actual: {solution(\"4 4\")}'\nassert solution('6 4') == '2', f'actual: {solution(\"6 4\")}'\nassert solution('10 10') == '1', f'actual: {solution(\"10 10\")}'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"4 4\") == \"3\"\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n5 5\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\nassert solution('''\n5 10\n180000 185000 199999 100000\n199999 180000 170000 120000\n140000 160000 160000 170000\n190000 170000 140000 160000\n''') == '5'\nassert solution('''\n5 9\n180000 185000 199999 100000\n199999 180000 170000 120000\n140000 160000 160000 170000\n190000 170000 140000 160000\n''') == '3'\nassert solution('''\n20 5\n180000 185000 199999 100000\n199999 180000 170000 120000\n140000 160000 160000 170000\n190000 170000 140000 160000\n130000 130000 130000 160000\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '1'\nassert solution('''42\n84\n252\n420\n840\n126''') == '1'\nassert solution('''42\n84\n252\n420\n840\n126''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == \"10\"\nassert solution('''42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT_S) == '1'\nassert solution(INPUT_S2) == '10'\nassert solution(INPUT_S3) == '6'\nassert solution(INPUT_S4) == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\n",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10'\nassert solution('''\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"42\") == \"6\"\n\n## In Sample Input 2:\n## 10\n## 42\n## 84\n## 252\n## 420\n## 840\n## 126\n## 42\n## 84\n## 420\n## 126\n## Sample Output 2:\n## 1\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '6'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 5\n2 6\n3 7\n4 8\n5 9\n6 10\n7 11\n8 12\n9 13\n10 14\n11 15\n12 16\n13 17\n14 18\n15 19\n16 20\n17 21\n18 22\n19 23\n20 24\n21 25\n22 26\n23 27\n24 28\n25 29\n26 30\n27 31\n28 32\n29 33\n30 34\n31 35\n32 36\n33 37\n34 38\n35 39\n36 40\n37 41\n38 42\n39 43\n40 44\n41 45\n42 46\n43 47\n44 48\n45 49\n46 50\n47 51\n48 52\n49 53\n50 54\n51 55\n52 56\n53 57\n54 58\n55 59\n56 60\n57 61\n58 62\n59 63\n60 64\n61 65\n62 66\n63 67\n64 68\n65 69\n66 70\n67 71\n68 72\n69 73\n70 74\n71 75\n72 76\n73 77\n74 78\n75 79\n76 80\n77 81\n78 82\n79 83\n80 84\n81 85\n82 86\n83 87\n84 88\n85 89\n86 90\n87 91\n88 92\n89 93\n90 94\n91 95\n92 96\n93 97\n94 98\n95 99\n96 100\n97 101\n98 102\n99 103\n100 104\n101 105\n102 106\n103 107\n104 108\n105 109\n106 110\n107 111\n108 112\n109 113\n110 114\n111 115\n112 116\n113 117\n114 118\n115 119\n116 120\n117 121\n118 122\n119 123\n120 124\n121 125\n122 126\n123 127\n124 128\n125 129\n126 130\n127 131\n128 132\n129 133\n130 134\n131 135\n132 136\n133 137\n134 138\n135 139\n136 140\n137 141\n138 142\n139 143\n140 144\n141 145\n142 146\n143 147\n144 148\n145 149\n146 150\n147 151\n148 152\n149 153\n150 154\n151 155\n152 156\n153 157\n154 158\n155 159\n156 160\n157 161\n158 162\n159 163\n160 164\n161 165\n162 166\n163 167\n164 168\n165 169\n166 170\n167 171\n168 172\n169 173\n170 174\n171 175\n172 176\n173 177\n174 178\n175 179\n176 180\n177 181\n178 182\n179 183\n180 184\n181 185\n182 186\n183 187\n184 188\n185 189\n186 190\n187 191\n188 192\n189 193\n190 194\n191 195\n192 196\n193 197\n194 198\n195 199\n196 200\n197 201\n198 202\n199 203\n200 204\n201 205\n202 206\n203 207\n204 208\n205 209\n206 210\n207 211\n208 212\n209 213\n210 214\n211 215\n212 216\n213 217\n214 218\n215 219\n216 220\n217 221\n218 222\n219 223\n220 224\n221 225\n222 226\n223 227\n224 228\n225 229\n226 230\n227 231\n228 232\n229 233\n230 234\n231 235\n232 236\n233 237\n234 238\n235 239\n236 240\n237 241\n238 242\n239 243\n240 244\n241 245\n242 246\n243 247\n244 248\n245 249\n246 250\n247 251\n248 252\n249 253\n250 254\n251 255\n252 256\n253 257\n254 258\n255 259\n256 260\n257 261\n258 262\n259 263\n260 264\n261 265\n262 266\n263 267\n264 268\n265 269\n266 270\n267 271\n268 272\n269 273\n270 274\n271 275\n272 276\n273 277\n274 278\n275 279\n276 280\n277 281\n278 282\n279 283\n280 284\n281 285\n282 286\n283 287\n284 288\n285 289\n286 290\n287 291\n288 292\n289 293\n290 294\n291 295\n292 296\n293 297\n294 298\n295 299\n296 300\n297 301\n298 302\n299 303\n300 304\n301 305\n302 306\n303 307\n304 308\n305 309\n306 310\n307 311\n308 312\n309 313\n310 314\n311 315\n312 316\n313 317\n314 318\n315 319\n316 320\n317 321\n318 322\n319 323\n320 324\n321 325\n322 326\n323 327\n324 328\n325 329\n326 330\n327 331\n328 332\n329 333\n330 334\n331 335\n332 336\n333 337\n334 338\n335 339\n336 340\n337 341\n338 342\n339 343\n340 344\n341 345\n342 346\n343 347\n344 348\n345 349\n346 350\n347 351\n348 352\n349 353\n350 354\n351 355\n352 356\n353 357\n354 358\n355 359\n356 360\n357 361\n358 362\n359 363\n360 364\n361 365\n362 366\n363 367\n364 368\n365 369\n366 370\n367 371\n368 372\n369 373\n370 374\n371 375\n372 376\n373 377\n374 378\n375 379\n376 380\n377 381\n378 382\n379 383\n380 384\n381 385\n382 386\n383 387\n384 388\n385 389\n386 390\n387 391\n388 392\n389 393\n390 394\n391 395\n392 396\n393 397\n394 398\n395 399\n396 400\n397 401\n398 402\n399 403\n400 404\n401 405\n402 406\n403 407\n404 408\n405 409\n406 410\n407 411\n408 412\n409 413\n410 414\n411 415\n412 416\n413 417\n414 418\n415 419\n416 420\n417 421\n418 422\n419 423\n420 424\n421 425\n422 426\n423 427\n424 428\n425 429\n426 430\n427 431\n428 432\n429 433\n430 434\n431 435\n432 436\n433 437\n434 438\n435 439\n436 440\n437 441\n438 442\n439 443\n440 444\n441 445\n442 446\n443 447\n444 448\n445 449\n446 450\n447 451\n448 452\n449 453\n450 454\n451 455\n452 456\n453 457\n454 458\n455 459\n456 460\n457 461\n458 462\n459 463\n460 464\n461 465\n462 466\n463 467\n464 468\n465 469\n466 470\n467 471\n468 472\n469 473\n470 474\n471 475\n472 476\n473 477\n474 478\n475 479\n476 480\n477 481\n478 482\n479 483\n480 484\n481 485\n482 486\n483 487\n484 488\n485 489\n486 490\n487 491\n488 492\n489 493\n490 494\n491 495\n492 496\n493 497\n494 498\n495 499\n496 500\n497 501\n498 502\n499 503\n500 504\n501 505\n502 506\n503 507\n504 508\n505 509\n506 510\n507 511\n508 512\n509 513\n510 514\n511 515\n512 516\n513 517\n514 518\n515 519\n516 520\n517 521\n518 522\n519 523\n520 524\n521 525\n522 526\n523 527\n524 528\n525 529\n526 530\n527 531\n528 532\n529 533\n530 534\n531 535\n532 536\n533 537\n534 538\n535 539",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13 3\\n') == 'yes\\n'\nassert solution('1 0\\n') == 'no\\n'\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"\nassert solution(\"50 100\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"yes\"\nassert solution(\"1 0\") == \"no\"\nprint(solution(input()))\n\n'''\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2\n2 3\n3 4\n5 6\n''') == 'yes'\n\nassert solution('''2 2\n1 2\n2 3\n''') == 'no'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 0\n1 1\n1 2\n2 3\n''') == 'no'\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'yes'\nassert solution('1 0') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'yes'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n') == 'yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\nprint(solution(input()))\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nP01K02H03H04\n''') == '12 12 11 13'\nassert solution('''\nH02H10P11H02\n''') == 'GRESKA'\nassert solution('''\nP01K02H03H04\n''') == 'GRESKA'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nassert solution('P01K02H03H04')!= '12 12 11 13'\nassert solution('H02H10P11H02')!= 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\nassert solution('''GRESKA\nP01K02H03H04\nH02H10P11H02''') == 'GRESKA'\nassert solution('''P01K02H03H04\nH02H10P11H02\nGRESKA''') == 'GRESKA'\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Wrong result\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Wrong result\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n\n\"\"\"\n\ns = input()\n\ni = 0\np = 0\nk = 0\nh = 0\nt = 0\n\nwhile i < len(s):\n    if s[i] == 'P':\n        p += 1\n    elif s[i] == 'K':\n        k += 1\n    elif s[i] == 'H':\n        h += 1\n    elif s[i] == 'T':\n        t += 1\n    i += 1\n\nprint(p, k, h, t)",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 5 3\n.....\n.*.*.\n.....\n\"\"\") == \"\"\"1\n+-+..\n|*|*.\n+-+..\n\"\"\"[:-1]\n\nassert solution(\"\"\"7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\nSample Output 2:\n2\n......\n.*.*.*\n+--+..\n|*.|..\n|.*|..\n+--+..\n*....*\n\"\"\"[:-1]\n\nassert solution(\"\"\"7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\nSample Output 2:\n1\n+-+..\n|*|*.\n+-+..\n\"\"\"[:-1]\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 5 3\n.....\n.*.*.\n.....\n\"\"\") == \"1\"\nassert solution(\"\"\"7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"3 5 3\n.....\n.*.*.\n.....\n\"\"\") == \"1\"\nassert solution(\n\"\"\"7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\") == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\n\nsolution(input())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\nassert solution(\"4 5 1\") == \"1\"\nassert solution(\"10 10 10\") == \"2\"\nassert solution(\"10 10 11\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n.*.*.\\n.*.*.\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\nSample Output 2:\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\"\n",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1', 'First example'\n\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\nSample Output 2:\n2\n......\n.*.*.*\n+--+..\n|*.|..\n|.*|..\n+--+..\n*....*\n*....*\n''') == '2', 'Second example'\n\nassert solution('''\n7 7 6 4\n......\n....*.\n...*.+.\n*.*.**\n....*.\n...*.+\n......\n.***.\nSample Output 2:\n4\n......\n*.*.*.\n+--+..\n|*.|..\n|.*|..\n+--+..\n*....*\n*....*\n''') == '4', 'Third example'\n\nassert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1', 'First example'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\\n\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\\n\") == \"3\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '3'\nassert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 43
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''AC AD AH AS KD\nSample Output 1:\n4\nSample Output 2:\n3''') == '4'\n\nassert solution('''2C 4D 4H 2D 2H\nSample Output 1:\n3\nSample Output 2:\n3''') == '3'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AC AD AH AS KD') == \"4\"\nassert solution('2C 4D 4H 2D 2H') == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n\"\"\"\n\nstdin = input()\nstrength = stdin.split(' ')\n\nfor i in range(len(strength)):\n    if strength[i].isdigit():\n        strength[i] = int(strength[i])\n        print(strength[i])\n\nprint(len(strength))\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == '4'\nassert solution(\"2C 4D 4H 2D 2H\") == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"5 1\") == \"7\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n2 1 1 1 0 1\n''') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5'\nassert solution('5 1\\n0 0 0 0 0') == '7'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '5'\nassert solution([6, 5, 2, 1, 1, 1, 0, 1]) == '7'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5\\n2 1 1 1 0 1') == '5'\nassert solution('5 1\\n0 0 0 0 0') == '7'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7'\nassert solution('1 5\\n0 0 0 0 0\\n') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\\n\") == '5'\nassert solution(\"6 5\\n0 0 0 0 0 0\\n\") == '7'\nassert solution(\"6 5\\n0 0 0 0 0 0\\n\") == '8'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\n\nassert solution('''\n5 1\n0 0 0 0 0\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Hello World!') == '-3110 \\\\/\\/0|Z1|)!\\n'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][''$ \\']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\']['[-]?\\n'\nassert solution('1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'a2b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1A2B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1AAABBCCDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADBAAABBCCDDDDDADBBCCDABDCCABDDADB",
        "num_ids_2": 92,
        "num_ids_4": 1243
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a\n@\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz''') == \"abcdegihjklmnopqrsvwxzy\"\n\nassert solution('''a\n@\nb\n[\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n]\n''') == \"abcdegihjklmnopqrsvwxzy\"\n\nassert solution('''a\n[\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n]\n''') == \"abcdegihjklmnopqrsvwxzy\"\n\nassert solution('''a\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == \"abcdegihjklmnopqrsvwxzy\"\n\nassert solution('''a\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == \"abcdegihjklmnopqrsvwxzy\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('All your base are belong to us.\\n') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n'\nassert solution('What\\'s the Frequency, Kenneth?\\n') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'\nassert solution('abcdefg\\n') == 'abcdefg\\n'\n",
        "num_ids_2": 124,
        "num_ids_4": 142
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    'a', 'b', 'c', 'd', 'e',\n    'f', 'g', 'h', 'i', 'j',\n    'k', 'l','m', 'n', 'o',\n    'p', 'q', 'r','s', 't',\n    'u', 'v', 'w', 'x', 'y',\n    'z',\n
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('All your base are belong to us.\\n') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\\n'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('What\u2019s the Frequency, Kenneth?\\n') == '\\/\\/[-]@\\'][''$ \\']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3'[-]?\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Hello World!') == '@3110 \\/\\/0|Z1|)!'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][''$'\\\n                                                      '][\\'[-]3 #|Z3(,)\\'][\\'[-]?\nassert solution('hAllo World!') == '@3110 \\/\\/0|Z1|)!'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][''$'\\\n                                                      '][\\'[-]3 #|Z3(,)\\'][\\'[-]?\n",
        "num_ids_2": 49,
        "num_ids_4": 100
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Hello World!') == 'Hello World!'\nassert solution('abcsdeef') == 'a\\nb\\nc\\nd\\nef'\nassert solution('Hello, my name is Sam.') == '@|H 0 2 0 0 0 0|H~@'\n",
        "num_ids_2": 35,
        "num_ids_4": 63
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nAll your base are belong to us.\nWhat's the Frequency, Kenneth?\n''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'+ \\\n'`][''$'+ \\\n'@\\'][''$'+ \\\n'[]\\[][]\\[]3' + \\\n'][''[-]?'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Alice'\nassert solution('4') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Bob'\nassert solution('1') == 'Alice'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n''') == 'Alice'\nassert solution('''\n4\n''') == 'Bob'\nassert solution('''\n5\n''') == 'Alice'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n''') == 'Alice', 'First'\nassert solution('''3\n4\n''') == 'Bob', 'Second'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Alice'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere') == \"thirty is the number of letters here\"\nassert solution('7\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere') == \"thirty is the number of letters here\"\nassert solution('1\\nthere') == \"one\"\nassert solution('2\\nthere') == \"two\"\nassert solution('3\\nthere') == \"three\"\n",
        "num_ids_2": 74,
        "num_ids_4": 100
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'one'\nassert solution('2') == 'two'\nassert solution('3') == 'three'\nassert solution('4') == 'four'\nassert solution('5') == 'five'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nthis sentence has thirtyone letters\n''') == 'this sentence has thirtyone letters', '''assert'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here', '''assert'''\nprint('all tests passed')\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"one two three\", \"First\"\nassert solution('6') == \"six six six six six six\", \"Second\"\nassert solution('2') == \"one two\", \"Third\"\nassert solution('1') == \"one\", \"Fourth\"\n",
        "num_ids_2": 33,
        "num_ids_4": 60
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'\nassert solution('3') == 'thirty'\nassert solution('10') == 'thirty'\nassert solution('1') == 'one'\n",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''this\nsentence\nhas\n$\nletters\n''') == \"this sentence has thirtyone letters\", \"Wrong\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n$', 'h') == '3h'\nassert solution('3\\n$$', 'h') == '3h'\nassert solution('4\\n$', 'h') == '4h'\nassert solution('5\\n$', 'h') == '5h'\nassert solution('5\\n$', 'e') == '5e'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"one\"\nassert solution(\"2\") == \"two\"\nassert solution(\"3\") == \"three\"\nassert solution(\"4\") == \"four\"\nassert solution(\"5\") == \"five\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == \"this sentence has thirtyone letters\"\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == \"thirty is the number of letters here\"\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\nand\nin\norder\nto\nbe\nsure\n''') == \"thirty is the number of letters here and in order to be sure\"\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\nand\nin\norder\nto\nbe\nsure\nand\nthere\n''') == \"thirty is the number of letters here and in order to be sure and there\"\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\nand\nin\norder\nto\nbe\nsure\nand\nthere\nand\none\nmore\n''') == \"thirty is the number of letters here and in order to be sure and there and one more\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == 0\nassert solution(\"abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\nassert solution(\"ABCDEFG\") == 0",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nC\n\nA\n\nD\n\nE\n\nF\n\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5\n\n---------------------------------------\n\nNext challenges:\n\nMedium Sort\n\nPancake Sort\n\nSmallest String Difference\n\nThree Number Sum\n\nWeb Crawler\n\nUnique Paths\n\nChange Path\n\nMinimum Number of Arrows to Burst Balloons\n\nLongest Word in Dictionary\n\nBinary Tree Paths\n\nPath Sum\n\nAdd Two Numbers\n\nLinked List Cycle\n\nReorder List\n\nMatrix Diagonal\n\nDiameter of Binary Tree\n\nTree From Preorder and Postorder Traversal\n\nBuild BST from Inorder and Preorder Traversal\n\nMerge K Sorted Lists\n\nTwo Sum\n\nRemove Duplicates from Sorted Array\n\nPermutation in String\n\nMinimum Window Substring\n\nN-ary Tree Level Order Traversal\n\nBinary Tree Level Order Traversal II\n\nGraph Valid Tree\n\nFind the Shortest Superstring\n\nArranging Coins\n\nClimbing Stairs\n\nGroup Anagrams\n\nSearch a 2D Matrix\n\nCheck if Array Is Sorted and rotated\n\nGenerate Parentheses\n\nFind the Smallest Common Supersequence\n\nWord Search\n\nSearch Suggestions\n\nMaximum Product Subarray\n\nMinimum Size Subarray Sum\n\nLongest Increasing Subsequence\n\nSum of Subarray\n\nSubarray Sum Equals K\n\nRange Sum of BST\n\nSum of Sorted Array\n\nLongest Substring with At Least K Repeating Characters\n\nCheck If String Contains All Binary Numbers\n\nLongest Common Subsequence\n\nConvert Binary\n\nMake the Array Unique\n\nMaximum Difference in Array\n\nLongest Consecutive Sequence\n\nNumber of Rectangles\n\nMaximum Length of Pair Chain\n\nReverse Words in a String\n\nUnique Paths II\n\nMinimum Depth of Binary Tree\n\nMinimum Number of Removals to Make Binary Search Tree from Preorder Traversal\n\nMaximum Number of K's in the Linked List\n\nGraph Valid Tree II\n\nLongest Palindrome\n\nIs Graph Bipartite?\n\nCircle Number\n\nRemove Nth Node From End of List\n\nPalindrome Partitioning\n\nMinimum Number of Combinations to Make the String Palindrome\n\nMinimum Depth of Binary Tree\n\nMinimum Number of Steps to Reduce a Number to Zero\n\nMaximum Sum of Two No-Zero Integers\n\nMaximum Sum of Subarray\n\nLongest Absolute File Path\n\nNumber of Lines in File\n\nTwo Sum II - Input array is sorted\n\nThree Sum\n\nRepeat String\n\nSearch Suggestions\n\nMaximum Length of Repeated Subarray\n\nMinimize Cost to Paint House\n\nMinimize Cost to Fill Covered Room\n\nThree Sum\n\nTwo Sum II - Input array is sorted\n\nDifferent Ways to Add Parentheses\n\nLongest Increasing Path in a Matrix\n\nMaximum Sum Circular Subarray\n\nFilling Bookcase Shelves\n\nSort Colors\n\nTwo Sum\n\nComponents of Array\n\nN-Queens\n\nRearrange Array\n\nMaximize Rectangle Area\n\nMinimum Absolute Difference in Array\n\nFind Subset of a Binary Search Tree\n\nMaximal Rectangle\n\nMaximum Sum of Paths in a Binary Tree\n\nMinimum Difference Between Leaf Values\n\nSingle Number\n\nMinimize the Total Energy\n\nSort Colors\n\nLargest Rectangle in Histogram\n\nMaximum Depth of N-ary Tree\n\nConvert Binary\n\nFind the kth largest element in an unsorted array\n\nLongest Increasing Subsequence\n\nLongest Uncommon Subsequence\n\nCombinations of Length k\n\nRight Most Tree Node\n\nZero Sum Binary Tree\n\nMaximal Rectangle\n\nMake the Array Unique\n\nMinimum Height of Binary Tree\n\nUnsorted Subarray\n\nReverse Bits\n\nMaximum XOR of Two Numbers\n\nLongest Increasing Subsequence\n\nSubarray Sums Divisible by K\n\nSwap Nodes in a Linked List\n\nZero Sum Binary Tree\n\nTwo Sum\n\nMaximum Width of Binary Tree\n\nMinimum Depth of Binary Tree\n\nReverse Nodes in a Linked List\n\nThree Number Sum\n\nLongest Increasing Subsequence\n\nLeast Common Ancestor\n\nTwo Sum II - Input array is sorted\n\nPaint House\n\nMaximize the Area of a Rectangle\n\nLongest Increasing Subsequence\n\nSum of Subarray\n\nMaximum Length of Repeated Subarray\n\nMinimize Number of Steps to Reduce a Number to Zero\n\nMaximum Number of K's in the Linked List\n\nUnique Paths\n\nRemove Nth Node From End of List\n\nRemove Nth Node From End of List\n\nSmallest Range\n\nMove Zeros\n\nTwo Sum\n\nPalindrome Partitioning\n\nMinimum Number of Steps to Reduce a Number to Zero\n\nMove Zeros\n\nMaximum Number of K's in the Linked List\n\nMaximum Number of K's in the Linked List\n\nTwo Sum II - Input array is sorted\n\nMinimum Number of Steps to Reduce a Number to Zero\n\nMaximum Length of Repeated Subarray\n\nMove Zeros\n\nMaximum Number of K's in the Linked List\n\nThree Number Sum\n\nMaximum Length of Repeated Subarray\n\nFind All Elements in Two Binary Search Trees\n\nArray Intersection\n\nContains Duplicate\n\nIs Graph Bipartite?\n\nFind Minimum in Rotated Sorted Array\n\nMaximum Number of K's in the Linked List\n\nMaximal Rectangle\n\nMaximum Number of K's in the Linked List\n\nSparse Vector\n\nSubarrays With Sum\n\nSubarray Product\n\nSparse Vector\n\nMinimum Size Subarray Sum\n\nTwo Sum II - Input array is sorted\n\nSubarray Sum\n\nMaximum Depth of N-ary Tree\n\nMinimize the Sum of Values in a Binary Tree\n\nSolution\n\nGiven an integer array nums, find the sum of the elements between indices i and j (i \u2264 j), inclusive.\n\nThe update(i, val) function modifies nums by updating the element at index i to val.\n\nReturn the sum of the elements of nums between indices i and j, inclusive.\n\nExample 1:\n\nInput: nums = [-2,0,3,5,-1,2,1,-4], i = 2, j = 5, val = -1\nOutput: -1\nExplanation:",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n''') == \"0\"\n\nassert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n''') == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"0\"\nassert solution(\"AB\") == \"1\"\nassert solution(\"ABC\") == \"2\"\nassert solution(\"ABCD\") == \"3\"\nassert solution(\"ABCDBCDDBCDCAB\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\nassert solution(\"aAaAaAaAaAaAa\") == \"1\"\nassert solution(\"aaBbbCcccccdddddddddd\") == \"3\"\nassert solution(\"abBbCcccccdddddddddddd\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 69
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n\n''') == \"0\"\nassert solution('''Abcd\n\nEaEbFabG\n''') == \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\nassert solution('InciCe') == '2'\nassert solution('InciCe') == '2'\nassert solution('ItOyePtQ') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('5 5') == 'Not a moose'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\nassert solution(\"8 8\") == \"Not a moose\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n''') == 'Odd 6'\nassert solution('''\n3 3\n''') == 'Even 6'\nassert solution('''\n100 100\n''') == 'Not a moose'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\nassert solution(\"0 0\") == \"Not a moose\"\nassert solution(\"2 2\") == \"Even 2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == \"Odd 6\"\nassert solution('3 3') == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\ntomo\\nmono\\ndak') == '1'\nassert solution('2\\nja\\nla\\n52') == '2'\n\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\ntwo\") == \"2\"\nassert solution(\"2\\nfive\") == \"3\"\nassert solution(\"3\\nseven\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\ntomo\nmono\ndak\n6666\n''') == '1'\nassert solution('''\nja\nla\n52\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\ntop') == '1', 'Wrong answer!'\nassert solution('2\\ncat') == '2', 'Wrong answer!'\n\nInput\n3\ntomo\nmono\ndak\n6666\nOutput\n1\n2\n2\n\n'''\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\ntom\\n') == 'tom'\n\nassert solution('2\\nja\\n') == 'def'\n\nassert solution('3\\nja\\nla\\n') == 'jana'\n",
        "num_ids_2": 30,
        "num_ids_4": 49
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '2\\n4'\nassert solution('2\\n3\\n') == '1'\nassert solution('1\\n2') == '0'\nassert solution('1\\n2\\n') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1', 'First'\nassert solution('2') == '1', 'Second'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"...#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"...#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n\nNote: $stdin.readline()$ is very slow. Make sure you have a reasonable input data structure to improve performance.\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''A\nB\nD\nE\nF''') == '''..#..\n.#.#.\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"DOG\") == \"..#...#...*..\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABCD') == 'ABCD', 'One line solution'\nassert solution('DOG') == '..#...#...*..', 'One line solution'\n\nimport collections\nimport itertools\nfrom math import log2",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''A\nSample Output 1:\n..#..\n.#.#.\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n''') == '3.141593'\nassert solution('''\n21\n''') == '1385.442360'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2''') == '3.141593\\n882.000000'\nassert solution('''1\n21''') == '1385.442360\\n882.000000'\nassert solution('''1\n1''') == '3.141593\\n3.141593'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3.141593') == '3.141593'\nassert solution('21\\n882.000000') == '1385.442360'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 -2 3\n''') == '2'\nassert solution('''\n5\n129 44 394 253 147\n''') == '0'\nprint(solution('''\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n129 44 394 253 147\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 -2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n1 -2 3\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2 -3 4\n''') == '6'\nassert solution('''\n5\n129 44 394 253 147\n''') == '0'\nassert solution('''\n3\n1 -2 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 -2 3') == '2'\nassert solution('5129 44 394 253 147') == '0'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 -2 3') == '2'\nassert solution('512944394253024147') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == \"2\"\nassert solution(\"5\\n129 44 394 253 147\\n\") == \"0\"\nassert solution(\"4\\n-4 -3 -2 -1\\n\") == \"5\"\n",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n-2 3') == '2'\nassert solution('5\\n129 44 394 253 147') == '0'\nassert solution('-5\\n-12 -3 -4 -5') == '0'\nassert solution('5\\n-12 -3 -4 -5') == '0'\n",
        "num_ids_2": 33,
        "num_ids_4": 74
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 2 2\\n') == '6'\nassert solution('3\\n4 1 2\\n') == '8'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '8'\nassert solution('2') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 2 2\") == \"6\"\nassert solution(\"3\\n4 1 2\") == \"8\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '8'\nassert solution('4') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n2 2 2\n\"\"\") == \"6\"\nassert solution(\n\"\"\"\n3\n4 1 2\n\"\"\") == \"8\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"8\"\nassert solution(\"3\") == \"9\"\n\"\"\"\n\nfrom math import sqrt\nfrom math import floor\n\nn = int(input())\narr = list(map(int, input().split()))\n\nk = int(floor(sqrt(n)))\n\nt1 = 0\nt2 = 0\nfor i in range(0, k):\n    t1 += arr[i]\n\nt2 = sum(arr[k:])\n\nprint(max(t1, t2))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2 2 2\n''') == '6'\nassert solution('''3\n4 1 2\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 4 4\\n1111\\n1S01\\n1011\\n0L11\"\n) == \"2\"\n\nassert solution(\n    \"2 3 3\\n1111\\n1S01\\n1011\\n0R11\"\n) == \"NOT POSSIBLE\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nprint('OK')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n\") == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('2 4 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"2\"\nassert solution(input_string_2) == \"NOT POSSIBLE\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\nS\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''1 4 4\n1111\n1S01\n1011\n0L11\n''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('2 4 4') == 'NOT POSSIBLE'\n'''\nfrom collections import deque\nt, n, m = map(int, stdin.readline().split())\nmaze = []\nfor i in range(n):\n    maze.append(list(stdin.readline().strip()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0L11\n''') == \"2\"\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == \"NOT POSSIBLE\"\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == \"NOT POSSIBLE\"\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == \"NOT POSSIBLE\"\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == \"NOT POSSIBLE\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''\n3 3 3\n111\n11S\n1U1\n''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4', 'First'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3', 'Second'\nassert solution('''10 5\n2 1 4 5 6 7 9 8\n''') == '8', 'Third'\nassert solution('''1 5\n5\n''') == '0', 'Forth'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n3 1 2 1 1''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1''') == '3'\nassert solution('''4\n1 2\n3 4\n5 6\n7 8''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n1 5 2 1 1\n''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\nassert solution('''1 2\n1 1 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 5') == '4'\nassert solution('5 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 2') == '2'\nassert solution('7 5\\n1 2 1 1 2 1') == '3'\nassert solution('7 5\\n1 1 2 2 3 4 5') == '3'\nassert solution('3\\n1 2 3') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 1 2 1\n''') == '3'\nassert solution('''6\n1 2 4 1 1 2\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '3'\nassert solution('7 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4', 'first'\n\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3','second'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nSSPPR\\nSSPPR\") == \"5\"\nassert solution(\"5\\nSSPPR\\nSSPPR\\nSSPPR\\nSSPPR\") == \"10\"\nassert solution(\"5\\nSSPPR\\nSSPPR\\nSSPPR\\nSSPPR\\nPPRRS\") == \"15\"\n\n'''",
        "num_ids_2": 50,
        "num_ids_4": 85
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP\"\"\") == \"10\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\n\nassert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '15'\n\nassert solution('''10\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '15'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"15\"\nassert solution(\"5\") == \"15\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\nassert solution('''2\nPPRRS\n1\nPPRRS''') == '15'\n\ninput()\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\nSPSR\n2\nPPRR\n''') == '5'\nassert solution('''1\nPSPS\n2\nPPRS\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '10'\n\n\"\"\"\n\nimport math\nfrom typing import List\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n2\\n\") == \"still running\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3\n4\n4\n5\n6\n7\n8\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n7\n11\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n2\n5\n9\n10\n17\n\"\"\") == \"still running\"\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n7\n11\n''') == '4'\nassert solution('''\n5\n2\n5\n9\n10\n17\n''') =='still running'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2\\n5\\n9\\n10\\n17') == '4', 'First'\nassert solution('10\\n2\\n5\\n9\\n10\\n17') =='still running', 'Second'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"still running\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n7\n11\n2\n5\n9\n10\n17''') == '4'\nassert solution('''2\n5\n9\n10\n17''') =='still running'\nassert solution('''5\n2\n5\n9\n10\n17''') == '10'\nassert solution('''5\n1\n1\n1\n1\n1''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4 1 3 2 2 3\") == \"0.6\"\nassert solution(\"4\\n4 1 3 2 3\") == \"impossible\"\nassert solution(\"4\\n4 1 2 3\") == \"impossible\"\n",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n6 1 3 2 2 3\\n') == '0.6'\nassert solution('2\\n2 2\\n') == 'impossible'\nassert solution('0\\n2 2\\n') == 'impossible'\nassert solution('5\\n1 1 1 1 1\\n') == 'impossible'\nassert solution('10\\n8 8 8 8 8 8 8 8 8 8 8 8 8\\n') == '0.875'\n",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n6 1 3 2 2 3') == '0.6'\nassert solution('2\\n2 2') == 'impossible'\nprint('All tests passed')",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '0.6'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('6 1 3 2 2 3') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('2') == 'impossible'",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2\\n2 2\") == \"impossible\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n6 1 3 2 2 3\n''') == '0.6'\nassert solution('''3\n10 1 5 2\n''') == 'impossible'\nassert solution('''2\n4 1\n''') == '0.75'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"5\") == \"0.333\"\nassert solution(\"10\") == \"0.4\"\nassert solution(\"1\") == \"0.6\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'impossible'\nassert solution('6') == '0.6'\nassert solution('2 4 2 4') == '0.4'\nassert solution('4 2 4 2') == '0.25'\nassert solution('6 1 3 2 2 3') == '0.6'\n",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n6 1 3 2 2 3\n''') == '0.6'\nassert solution('''\n1\n2\n''') == 'impossible'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '0.1'\nassert solution('''\n1\n2\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6''') == 'Emma'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 6\n1 7\n1 8\n''') == 'Emma'\n\nassert solution('''\n1 5\n2 6\n3 7\n4 8\n5 9\n''') == 'Tie'\n\nassert solution('''\n1 2\n1 2\n''') == 'Tie'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''1 8 1 8\n1 10 2 5\n''') == 'Emma'\nassert solution('''1 10 1 6\n1 10 2 5\n''') == 'Tie'\nassert solution('''1 4 1 4\n1 6 1 6\n''') == 'Tie'\nassert solution('''1 8 1 8\n1 10 2 5\n''') == 'Tie'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 4 1 4\n1 6 1 6\n\"\"\") == \"Emma\"\nassert solution(\"\"\"\n1 8 1 8\n1 10 2 5\n\"\"\") == \"Tie\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''\n1 8 1 8\n1 10 2 5\n''') == 'Tie'\nassert solution('''\n1 8 1 8\n1 10 2 5\n''') == 'Tie'\nassert solution('''\n1 6 1 6\n1 6 1 6\n''') == 'Emma'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Emma'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1 4 1 4',\n    '1 6 1 6',\n) == 'Emma'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 6 1 6') == 'Tie'\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 4 1 4\") == \"Emma\"\nassert solution(\"1 6 1 6\") == \"Tie\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6\\n') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5\\n') == 'Tie'\nassert solution('1 1 1 1\\n1 1 1 1\\n') == 'Tie'\nassert solution('1 1 1 1\\n1 1 1 1\\n') == 'Tie'\nassert solution('1 1 1 1\\n1 1 1 1\\n') == 'Tie'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"1 2 3\", \"mumble 5\"]) == \"makes sense\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"makes sense\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"something is fishy\"\nassert solution(\"1 2 3\") == \"makes sense\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 3\n1 2 3\n1 2 3\nmumble\nmumble\nmumble\nmumble\nmumble\nmumble''') =='makes sense'\nassert solution('''8\n1 2 3\n1 2 3\n1 2 3\nmumble\nmumble\nmumble\nmumble\nmumble\nmumble''') =='something is fishy'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 3 mumble 5\n1 2 3 mumble 7 mumble 8''') =='something is fishy'\nassert solution('''1 2 3 mumble 5\n1 2 3 mumble 7 mumble 8''') =='makes sense'\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') =='makes sense'\nassert solution('8') =='something is fishy'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') =='makes sense'\nassert solution('8') =='something is fishy'\n\"\"\"\n\nfrom typing import List, Tuple",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"something is fishy\"\nassert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"1 2 3 mumble 5 4\") == \"something is fishy\"\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nprint('Solution:')\nprint(solution(input()))\n\"\"\"\nimport math",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('6 3 9 12 15') == '4 15'\n\"\"\"\n\nimport math",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n5 3 6 9 12 15\n    '''\n) == '1 18'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n\"\"\"\n\nimport math\nimport random\nimport re\nimport unittest\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 18\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 4\n2 3\n2 0\n3 5\n''') == 'INCORRECT'\nassert solution('''\n4\n1 3\n0 2\n3 1\n''') == 'CORRECT'\nassert solution('''\n5\n0 3\n1 2\n3 0\n2 5\n''') == 'INCORRECT'\nassert solution('''\n5\n0 4\n1 2\n3 0\n2 5\n''') == 'INCORRECT'\nassert solution('''\n5\n0 1\n2 4\n3 5\n4 0\n''') == 'CORRECT'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'CORRECT'\n\nassert solution('''4\n2 3\n1 0\n0 2\n3 1\n''') == 'INCORRECT'\n\nassert solution('''8\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == 'INCORRECT'\n\nassert solution('''5\n0 2\n1 3\n2 4\n3 1\n4 0\n''') == 'INCORRECT'\n\nassert solution('''4\n2 3\n1 0\n0 2\n3 1\n''') == 'INCORRECT'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 3\\n0 2\\n3 1\\n4 6\\n5 7\\n6 0\\n7 4\\n\") == \"CORRECT\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n2 3\") == \"CORRECT\"\nassert solution(\"4 2\\n1 0\\n0 2\\n3 1\") == \"INCORRECT\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8') == 'CORRECT'\nassert solution('8 8\\n1 1\\n6 2\\n3 3\\n0 0\\n5 5\\n4 6\\n7 7\\n2 2\\n') == 'INCORRECT'\n",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 3\n2 2\n0 1''') == 'CORRECT'\nassert solution('''5\n1 3\n2 0\n3 2\n0 4\n4 1''') == 'INCORRECT'\nassert solution('''8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\nSample Output 3:\nINCORRECT''') == 'INCORRECT'\nassert solution('''8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\nSample Output 4:\nCORRECT''') == 'CORRECT'\nassert solution('''6\n1 3\n2 0\n3 2\n0 4\n4 1\n5 2''') == 'INCORRECT'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n6 2\\n3 1\\n5 0\") == \"CORRECT\"\nassert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\n\"\"\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == 'CORRECT'\nassert solution('3') == 'INCORRECT'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n0 2 1\\n1 0 3\\n') == 'CORRECT'\nassert solution('4\\n1 0 2 3\\n0 1 3 2\\n3 0 1 2\\n2 3 1 0\\n') == 'INCORRECT'\n\n====================================================\n14.12. Create a function that takes a set of numbers as input and returns the length of the largest sum of subsequences of the given set.\n\nExample:\n\nInput : {5, 7, 9, 10, 3, 11}\nOutput : 8\nThe largest sum of subsequences is {5, 7, 9}, {9, 10}, {3, 11}, {7, 9, 11}, {5, 7, 9, 10} and {3, 11}.\n\n====================================================\n19.12. Create a function that takes in a non-empty array of unique integers and an integer representing a target sum. If any two numbers in the input array sum to the target sum, the function should return them in an array, in sorted order. If no two numbers sum to the target sum, the function should return an empty array.\n\nExample:\n\ninput:  arr[] = {1, 2, 3, 4, 5, 6, 7, 8}\n        targetSum = 9\noutput: {1, 3, 5, 7}\n\n====================================================\n16.13. We have a set of n elements and we have to find the sum of minimum and maximum element of array.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\nmaximum = 5\nminimum = 1\nOutput:\n\n1\n2\n3\n4\n5\n[1, 2, 3, 4, 5]\n\n====================================================\n16.15. Write a function that takes in a non-empty array of unique integers and an integer representing a target sum. If any two numbers in the input array sum to the target sum, the function should return them in an array, in sorted order. If no two numbers sum to the target sum, the function should return an empty array.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\ntargetSum = 9\noutput:\n\n1\n2\n3\n4\n5\n[1, 2, 3, 4, 5]\n\n====================================================\n16.17. Write a function that takes in a non-empty array of unique integers and an integer representing a target sum. If any two numbers in the input array sum to the target sum, the function should return them in an array, in sorted order. If no two numbers sum to the target sum, the function should return an empty array.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\ntargetSum = 9\noutput:\n\n1\n2\n3\n4\n5\n[1, 2, 3, 4, 5]\n\n====================================================\n17.14. A subset of the set {1, 2, 3, 4, 5} has the following properties:\n\n1. sum of the subset = 9\n2. 2 appears twice (in the subset and the complete set), while 3, 4, and 5 do not\n3. sum of elements of subset of the set = 9\n4. elements in the subset are consecutive (i.e., they appear one by one in the subset)\n5. sum of elements of subset of the set is equal to the complete set\n\nWrite a function that takes in a non-empty array of integers as input and returns true if and only if the array satisfies all of the above conditions.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\noutput:\n\ntrue\n\n====================================================\n17.15. A subset of the set {1, 2, 3, 4, 5} has the following properties:\n\n1. sum of the subset = 9\n2. 2 appears twice (in the subset and the complete set), while 3, 4, and 5 do not\n3. sum of elements of subset of the set = 9\n4. elements in the subset are consecutive (i.e., they appear one by one in the subset)\n5. sum of elements of subset of the set is equal to the complete set\n\nWrite a function that takes in a non-empty array of integers as input and returns true if and only if the array satisfies all of the above conditions.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\noutput:\n\ntrue\n\n====================================================\n17.16. A subset of the set {1, 2, 3, 4, 5} has the following properties:\n\n1. sum of the subset = 9\n2. 2 appears twice (in the subset and the complete set), while 3, 4, and 5 do not\n3. sum of elements of subset of the set = 9\n4. elements in the subset are consecutive (i.e., they appear one by one in the subset)\n5. sum of elements of subset of the set is equal to the complete set\n\nWrite a function that takes in a non-empty array of integers as input and returns true if and only if the array satisfies all of the above conditions.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\noutput:\n\ntrue\n\n====================================================\n17.17. A subset of the set {1, 2, 3, 4, 5} has the following properties:\n\n1. sum of the subset = 9\n2. 2 appears twice (in the subset and the complete set), while 3, 4, and 5 do not\n3. sum of elements of subset of the set = 9\n4. elements in the subset are consecutive (i.e., they appear one by one in the subset)\n5. sum of elements of subset of the set is equal to the complete set\n\nWrite a function that takes in a non-empty array of integers as input and returns true if and only if the array satisfies all of the above conditions.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\noutput:\n\nfalse\n\n====================================================\n17.18. The array {1, 2, 3, 4, 5} contains all the positive integers between 1 and 5. But the array {1, 2, 3, 4, -5} does not contain all the integers between 1 and 5.\n\nWrite a function that takes in a non-empty array of integers as input and returns true if and only if the array contains all the integers between 1 and 5.\n\nExample:\n\narr = {1, 2, 3, 4, 5}\noutput:\n\nfalse",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n6 2\") == \"CORRECT\"\nassert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\\n\") == \"INCORRECT\"",
        "num_ids_2": 59,
        "num_ids_4": 89
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 2 3 1 11\"\nassert solution(\"3\") == \"1 1 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 3 1 11\"\nprint(solution())\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 1 1\n1 0 1\n1 1 0''') == '1 1 1'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0''') == '1 2 3 1 11'\nprint('All test cases passed.')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 2 3 1 11'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\nassert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\nassert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\nprint('All test cases passed!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Thursday', solution('1 1')\nassert solution('17 1') == 'Saturday', solution('17 1')\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"Monday\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"1 1\", \"4 7\"]) == \"Thursday\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n''') == \"Thursday\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\n\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == 'Tuesday'\nassert solution('3 1') == 'Wednesday'\nassert solution('12 2') == 'Friday'\nassert solution('13 2') == 'Saturday'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Tuesday\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Tuesday\"\nassert solution(\"17 1\") == \"Saturday\"\nassert solution(\"1 11\") == \"Friday\"\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('500') == '480'\nassert solution('12') == '129'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"100\") == \"40\"\nassert solution(\"1000\") == \"129\"\nassert solution(\"10000\") == \"480\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('12') == '129'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n100\n4\n''') == '4'\nassert solution('''\n1\n100\n6\n''') == '129'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('500') == '129'\nassert solution('1000000') == '999999'\nassert solution('10000') == '999'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2\n7\n5\n1''') == '129'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100\\n4\") == \"4\"\nassert solution(\"1\\n100\\n4\") == \"129\"\nassert solution(\"1\\n1000\\n10\") == \"14\"\nassert solution(\"1\\n1000\\n99\") == \"140\"\nassert solution(\"2\\n100\\n10000\") == \"12\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"129\"\nassert solution(input()) == \"480\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('500') == '129'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '4.0'\nassert solution('2 3') == '2.0'\nassert solution('1 5') == '4.0'\nassert solution('1 4') == '2.0'\nassert solution('1 3') == '2.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0\nassert solution(\n'''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0\n''')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\nassert solution(\"3 1\") == \"3.0\"\nassert solution(\"1 1 2 2\") == \"10.0\"\nassert solution(\"10 5 1 5 1 10 1 6 10 6 4\") == \"60.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('3 2') == '6.0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == \"4.0\"\nassert solution('5 1') == \"4.0\"\nassert solution('3 2') == \"6.0\"\nassert solution('3 1') == \"3.0\"\nassert solution('3 2') == \"3.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"2.0\"\nassert solution(\"2 2\") == \"5.0\"\nassert solution(\"3 2\") == \"4.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\") == \"4.0\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\\n\") == \"6.0\"\nprint('Congratulations! All test cases passed.')",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0'\nassert solution('''3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('32') == '2'\nassert solution('8') == '3'\nassert solution('10') == '4'\nassert solution('20') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nassert solution('300') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('30') == '7'\nassert solution('301') == '17'\nassert solution('3030') == '73'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3\n3\n3\n''') == '2'\nassert solution('''30\n30\n30\n30\n''') == '7'\nassert solution('''1\n20\n10\n10\n''') == '10'\nprint(\"all tests passed\")\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n2\n''') == '2'\nassert solution('''10\n4\n2\n''') == '5'\nassert solution('''6\n5\n4\n3\n2\n1\n''') == '2'\nassert solution('''15\n10\n4\n6\n3\n2\n1\n''') == '5'\nassert solution('''15\n10\n5\n4\n3\n2\n1\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"\n\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('2') == '2'\nassert solution('30') == '7'\nprint('all tests passed')\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == 'HE GOT AWAY!'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1''') == '1'\nassert solution('''N321-CIA\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1''') == 'HE GOT AWAY!'\nprint('All test cases passed!')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\"\nprint('all tests passed')\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"N321-CIA\") == \"HE GOT AWAY!\"\nassert solution(\"F3-B12I\") == \"HE GOT AWAY!\"",
        "num_ids_2": 29,
        "num_ids_4": 47
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\"\n) == \"1\"\nassert solution(\n    \"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\"\n) == \"HE GOT AWAY!\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('N321-CIA') == '1'\nassert solution('F3-B12I') == '2'\nassert solution('OVO-JE-CIA') == '2'\nassert solution('KRIJUMCAR1') == 'HE GOT AWAY!'\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\nN-FBI2\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"2\"\nassert solution(\"G-MI6\") == \"2\"\nassert solution(\"RF-KGB1\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\\n\") == \"8.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 3 3\n4 5 4\n''') == '8.0'\nassert solution('''\n10\n9 8 9 8 2 2 3 2 3 3\n''') == '15.000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '8.0'\nassert solution('3') == '6.843530573929037'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 3 3\n4 4 5\n''') == \"8.0\"\nassert solution('''\n2\n3 3 3\n4 5 4\n''') == \"6.843530573929037\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1 2 1\n4 5 2\n5 6 3\n\"\"\") == \"8.0\"\nassert solution(\"\"\"\n1\n1 1\n2 2\n3 3\n\"\"\") == \"3.0\"\nassert solution(\"\"\"\n1\n1 3\n2 2\n3 1\n\"\"\") == \"5.0\"\nassert solution(\"\"\"\n1\n1 3\n2 2\n3 1\n\"\"\") == \"6.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3\\n4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 3 3') == '8.0'\nassert solution('2\\n4 5 4') == '6.843530573929037'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5\\n') == '8.0'\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '47':\n    print('Correct')\nelse:\n    print('Wrong')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('24') == \"24\"\nassert solution('25') == \"27\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"\nassert solution(\"47\") == \"47\"\nassert solution(\"150\") == \"150\"\nassert solution(\"1356\") == \"1356\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '12'\nassert solution('4') == '8'\nassert solution('3') == '3'\nassert solution('11') == '19'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '11'\nassert solution('3') == '13'\nassert solution('4') == '41'\nassert solution('5') == '51'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '1', \"Second\"\nassert solution('1') == '1', \"First\"\nassert solution('100') == '101', \"Third\"\nassert solution('123') == '124', \"Fourth\"\nassert solution('1234') == '1235', \"Fifth\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('100') == '100'\nassert solution('10000') == '10000'\nassert solution('123456789') == '123456789'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('15') == '15'\nassert solution('16') == '27'\nassert solution('30') == '30'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1+2+3+4+5+6+7+8+9') == '188'\nassert solution(\n    '1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1+9+8+4''') == '7'\nassert solution('''1+2+3+4+5+6+7+8+9''') == '188'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nprint('YOUR CODE IS CORRECT!')\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test_cases[0]) == \"7\"\nassert solution(test_cases[1]) == \"188\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 5 2\n''') == '2 5'\nassert solution('''\n2 2 -4 5\n''') == '5 -2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 5 2\n''') == '5 -2 4'\nassert solution('''\n2 1 3\n''') == '3'\nassert solution('''\n3\n''') == '0 1 2'\nassert solution('''\n2\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5 2\nSample Input 2:\n2 2 -4 5\nSample Output 2:\n5 -2 4''') == '2 5 -2 4'\n\nassert solution('''1 4 5 2\nSample Input 2:\n2 2 -4 5\nSample Output 2:\n5 -2 4''') == '5 -2 4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 5 2''') == '2 5'\nassert solution('''2 2 -4 5''') == '5 -2 4'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n\n'''\n\n\nclass Solution:\n\n    def test(self, stdin, exp):\n        res = self.solution(stdin)\n        if res == exp:\n            print(\"PASSED\")\n        else:\n            print(\"FAILED\")\n\n    def solution(self, stdin):\n        n = int(stdin)\n        constants = [0 for _ in range(n)]\n        constants[0] = int(stdin.split()[1])\n        coeff = stdin.split()[2:]\n        for i in range(n - 1):\n            if i == 0:\n                constants[i + 1] = int(coeff[0])\n            else:\n                constants[i + 1] = constants[i] + int(coeff[i])\n        return \" \".join([str(x) for x in constants])",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"\nassert solution(\"6 4\\n2 2 2 1 2 1 1\") == \"1 1 1 2 2 2\"\n",
        "num_ids_2": 52,
        "num_ids_4": 77
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n5\\n2\\n4') == '1 1 2 2 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1\\n') == '1 1 1 3 3 3 2 2 2'\n\n'''",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n2 1 2 1 2\n''') == '2 2 2 1 1'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2'\nassert solution('''3 2\n2 1 2\n''') == '2 1 2'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1 1 1 1 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n2 1 2 1 2\n''') == '2 2 2 1 1'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n2 1 2 1 2\n''') == '2 1 2 1 2'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n2 1 2 1 2\n''') == '2 1 2 1 2'\n\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2'\n\nassert solution('''5 2\n2 1 2 1 2\n''') == '2 1 2 1 2'\n\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'\nassert solution('1 100') == '100'\n\nstdin = '2 3'\nstdout = '875'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '8 7\\n'\n    '5 8\\n') == '875'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '875', \"WA on first\"\nassert solution('1 100') == '100', \"WA on second\"\n\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"875\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"2 9\") == \"108\"\nassert solution(\"2 3\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 100\") == \"100\"\nassert solution(\"38 24\") == \"875\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 8\n''') == '875'\nassert solution('''\n3 50\n''') == '100'\nprint('all tests passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"875\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n6\n''') == '875'\nassert solution('''\n8 8\n0\n''') == '100'\nassert solution('''\n4 5\n4\n''') == '97'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"38 24\\n1 100\") == \"875\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 100\") == \"100\"\nassert solution(\"38 24\") == \"875\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n\"\"\"\n\nA, B = map(int, input().split())\nprint(max(A, B) if A > B else min(A, B))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''734 893''') == \"437\"\nassert solution('''221 231''') == \"132\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''734 893\n221 231''') == '437'\nassert solution('''110 110\n110 110''') == '110'\nassert solution('''734 893\n000 893''') == '437'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('776 1066') == '776'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 131\nprogramming\ncontest''') == 'programming'\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n9 21\n8 5\n\"\"\") == \"programming\"\n\nassert solution(\"\"\"\n11 -1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n10 1\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''11 131''') == 'programming'\nassert solution('''7 96''') == 'contest'\nassert solution('''18 79''') == 'contest'\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"programming\"\nassert solution(input()) == \"contest\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 131') == 'programming', 'Should be \"programming\"'\nassert solution('7 96') == 'contest', 'Should be \"contest\"'\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 11\\n1 2\") == \"1 2\"\nassert solution(\"12 11\\n1 2\") == \"1 2\"\nassert solution(\"13 11\\n1 2\") == \"1 2\"\n\n------class---------------\nclass Solution:\n    def solve(self, l, w):\n        l_lst = 'abcdefghijklmnopqrstuvwxyz'\n        for l_letter in l_lst:\n            if l <= len(l_letter) <= w:\n                return l_letter\n        return -1",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"programming\"\nassert solution(\"2 15\") == \"contest\"\nassert solution(\"3 3\") == \"impossible\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 21\") == \"apples\"\nassert solution(\"10 8\") == \"hello\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == solution_input_1\nassert solution(sample_input_2) == solution_input_2\n'''",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 'X'\") == \".X\\n--\\n\"\nassert solution(\"3 12 'A'\") == \"ABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n'''\n\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 'X'\") == \".X\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == correct_result\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\".join(output())\nprint(\"All test cases passed!\")\n\"\"\"\n\nfrom test_helper import assert_test_results, get_tests\nimport sys\nimport re\nimport math",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '.'^'\n'''\n\nimport math\nimport re\n\nwhile True:\n    try:\n        stdin_lines = list(map(str.strip, input().split('\\n')))\n        m, n = map(int, re.findall(r'\\d+', stdin_lines[0])[0].split())\n        c = stdin_lines[1][0]\n        stdin_lines = stdin_lines[2:]\n        x = int(math.sqrt(2 * m * n))\n        if x * x == m * n:\n            m += 1\n        y = (m + n + 1) // 2\n        s = x * y\n        s = str(s)\n        for i in range(s):\n            print(c, end='')\n            if i % x == 0:\n                print('\\n', end='')\n            if i % x == y - 1:\n                print('')\n    except EOFError:\n        break",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 'X'\nX^''') == '^'\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 'X'\\nX^\\n--\\n\") == \".^\\n--\"\nassert solution(\"3 12 'A'\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n\") == \"BBABABABABAB\\nBBABABABABAB\\nBBABABABABAB\\n\"\nprint(solution(input()))\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '.^\\n--\\n.^\\n--\\n.^\\n'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\nSample Input 3:\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 3:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4 4 14''') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n'\nassert solution('''100 80 60 240''') == '0 0 4\\n0 3 0\\n1 1 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n'\n",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 4 4 14\"\n) == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\"\nassert solution(\n    \"100 80 60 240\"\n) == \"0 0 4\\n0 3 0\\n1 1 1\\n3 0 2\\n3 1 1\\n3 2 0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4 4 14\n''') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 4 4 14\"\n) == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\n    \"100 80 60 240\"\n) == \"0 0 4\\n0 3 0\\n1 1 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\nassert solution(\"1000000000 3\") == \"1 1 1\"\nprint(solution(input()))\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"9\") == \"good job\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == 'good job'\nassert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\nassert solution('7') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"good job\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"7\") == \"12\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10\n2\n4\n5\n7\n8\n9\n10\n11\n13\n\"\"\") == \"good job\"\nassert solution(\"\"\"\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\"\"\") == \"1, 3, 6, 12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '6'\nassert solution('21') == '20'\nassert solution('18') == '19'\nassert solution('36') == '35'\nassert solution('48') == '47'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"good job\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"12\"\nassert solution(\"6\") == \"good job\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"good job!\"\nassert solution(\"5\") == \"3, 6\"\nassert solution(\"10\") == \"1, 2, 4, 5, 7, 9\"\nassert solution(\"0\") == \"1, 2, 3, 4, 5, 6, 7, 8, 9\"\n",
        "num_ids_2": 23,
        "num_ids_4": 69
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1 3 6 12'\n\"\"\"\nimport sys\n\nn = int(sys.stdin.readline().strip())\ncount = 1\n\nfor i in range(n):\n    print(count, end=' ')\n    count += 1\n\nprint()\n\nfor i in range(1, n + 1):\n    print(i, end=' ')\n    count += 1\n\n\n\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('10') == '5'\nassert solution('7') == '3'\nassert solution('3') == '1'\nassert solution('1') == 'good job!'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''9\n2\n4\n5\n7\n8\n9\n10\n11\n13''') == 'good job'\nassert solution('''5\n2\n4\n5\n7\n8\n9\n10''') == '1 3 6 8 10'\nassert solution('''1\n2\n4\n5\n7\n8\n9\n10''') == '1 2 4 5 7 8 9 10'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\nassert solution('''10 500000 100000000 272.1''') == '157079.04857106 15.598261092309'\nassert solution('''10 800000 100000000 272.1''') == '157079.04857106 15.598261092309'\nassert solution('''10 1000000 100000000 272.1''') == '157079.04857106 15.598261092309'\nassert solution('''10 1000000 100000000 272.1''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 68,
        "num_ids_4": 134
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n\n\"\"\"\n\nimport math\n\nn, p, s, v = map(float, input().split())",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 10.9 1.50000000 2\n''') == '157079.0'\nassert solution('''\n4 8.9 1.50000000 2\n''') == '157079.0'\nassert solution('''\n5 10.9 1.50000000 2\n''') == '157079.0'\nassert solution('''\n5 1000 10.9 1.50000000 2\n''') == '157079.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n3005\\n2000') == '10.552000000000000000000000000000000\\n2.245833333333333333333'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 10 30.3') == '157079.04857106 15.598261092309'\nassert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('100000000000000000 10 3 1') == '157079.04857106 15.598261092309'\nassert solution('3 4 8.9 1.5') == '157079.04857106 15.598261092309'\nassert solution('7 5 10 1.5') == '157079.04857106 15.598261092309'\n\"\"\"\n\nfrom math import log",
        "num_ids_2": 60,
        "num_ids_4": 119
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('100 7.9 800750000 272.1') == '1397.0212121397'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n10 8.9 40075000 272.1\n\"\"\"\n) == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '1'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('5') == '2'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\n\nInput\n\n4\nOutput\n\n4\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n1 2 3 4\n3\n2\n4\n1 2\n3\n''') == '0'\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n''') == '0'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('12') == '2'\nassert solution('123') == '3'\nassert solution('12345') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('8') == '2'\nassert solution('5') == '3'\nassert solution('13') == '4'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0'\ninput()\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nA\\nA\\nB') == '3'\nassert solution('5\\nA\\nA\\nB\\nC\\nD') == '5'\nassert solution('4\\nA\\nB\\nA\\nD') == '4'\nassert solution('4\\nA\\nB\\nA\\nD') == '4'\nassert solution('4\\nA\\nB\\nA\\nD\\nA\\nA\\nA\\nB') == '4'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nA\\nA\\nB\\nC\\n') == '3'\n\nSample Input:\n6\nA\nB\nC\nD\nA\nA\nSample Output:\n4\n'''\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == '3'\nassert solution('4\\nA\\nA\\nB\\nC') == '2'\nassert solution('4\\nA\\nC\\nA\\nB') == '1'\nassert solution('4\\nB\\nC\\nA\\nB') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    A\n    A\n    A\n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    A\n    B\n    C\n    \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    A\n    A\n    A\n    B\n    C\n    \"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nA\nA\nA\nA\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nA\\nA\\nA\\n\") == \"1\"\nassert solution(\"2\\nA\\nB\\n\") == \"1\"\nassert solution(\"3\\nA\\nB\\n\") == \"1\"\nassert solution(\"4\\nA\\nC\\n\") == \"2\"\nassert solution(\"5\\nA\\nB\\nC\\n\") == \"3\"\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '2'\n\nSample Input:\n5\nA\nB\nC\nD\nB\nSample Output:\n0\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nA\\nA\\nA\\n') == '3'\nassert solution('3\\nA\\nB\\nC\\n') == '0'\nassert solution('2\\nB\\nC\\n') == '1'\n'''\n",
        "num_ids_2": 42,
        "num_ids_4": 60
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\n\") == \"3\"\nassert solution(\"5\\nA\\nB\\nC\\nA\\n\") == \"1\"\n\"\"\"\n\nn = int(input())\nans = 0\nfor i in range(n):\n    if i % 2 == 0:\n        if input() == 'A':\n            ans += 1\n    elif i % 2 == 1:\n        if input() == 'C':\n            ans += 1\nprint(ans)\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == \"..xx..\"\nassert solution('3 3 1 4') == \"x.xx.x\"\nassert solution('3 3 5 2') == \"...xx..\"\nprint('All tests passed!')\n",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\") == \"..xx..\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3\n.x.\nx.x\n.x.''') == '..xx..'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '.x.x.'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3 1 2\n.x.\nx.x\n.x.\n\"\"\") == \"\"\"..xx..\nxx..xx\n..xx..\n\"\"\"[1:]\n\nassert solution(\"\"\"\n3 3 1 5\nx.\nx.\n.x.\n\"\"\") == \"\"\"xxx.\nxxx.\nxxx.\n\"\"\"[1:]\n\nassert solution(\"\"\"\n3 4 1 7\nx..\nx..\nxx.\n\"\"\") == \"\"\"x.x.\nxx.x\nx.xx\n\"\"\"[1:]",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 2') == '.x.\\nx.x\\n.x.'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\") == \".xx..\"\nassert solution(\"2 3 1 2\") == \".xx.x\"\nassert solution(\"3 2 3 1\") == \"..xx.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 3, 1, 2]) == '..xx..'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\".x.x\") == \"x..xx\"\nassert solution(\"x.x\") == \"xx..x\"\nassert solution(\"xx.x\") == \".x..x\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '0 0'\nassert solution('F 60 13 0') == '0 0'\nassert solution('B 60 13 0') == '0 0'\nassert solution('B 0 0') == '0 0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''F 60 13 20\nB 60 13 19\nF 60 13 20\n''') == '14 20'\n\nassert solution('''F 60 13 20\nB 60 13 19\nF 60 13 20\n''') == '14 20'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == '14 20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nassert solution(\"B 60 0 1\") == \"60\"\nassert solution(\"B 60 0 0\") == \"12\"\nassert solution(\"B 60 1 23\") == \"61 23\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nassert solution(\"B 60 60 30\") == \"12 30\"\nassert solution(\"F 60 60 30\") == \"12 30\"\nassert solution(\"B 60 60 30\") == \"12 30\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"14 20\"\nassert solution(\"F 9 40 52 80\") == \"10 13 20\"\nassert solution(\"B 9 40 52 80\") == \"10 13 20\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nassert solution(\"B 60 13 21\") == \"13 20\"\nassert solution(\"F 60 13 21\") == \"12 20\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''F 60 13 20''') == '14 20'\nassert solution('''F 60 13 24''') == '14 23'\nassert solution('''F 60 13 13''') == '14 22'\nassert solution('''F 60 12 20''') == '14 21'\nassert solution('''B 60 13 20''') == '13 23'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 20'\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nDaylight Saving Time (DST) is the practice of advancing clocks forward during the summer time, usually by one hour, to gain an extra hour of sunlight in the evenings, at the cost of darker mornings. Countries and regions have changed their DST practices over the years, sometimes changing the dates they switch the clocks, and other times changing the amount of minutes the clock changes by.\n\nThis creates a real hassle. Sleep cycles are disrupted, operating systems and other computer software needs to follow special rules, and sometimes people end up late to work because of it.\n\nTo help make this easier on people, you\u2019ve decided to make a computer program which calculates the new time after an adjustment.\n\n-----Input-----\nInput consists of a single integer $N$ ($1 \\le N \\le 500$) indicating the number of test cases that follow. Each test case consists of a single line with the following information:\n - a single character to indicate whether the clock will roll forwards (F) or backwards (B),\n - an integer $D$ ($0 \\le D \\le 120$) indicating the number of minutes to change by,\n - an integer $H$ ($0 \\le H < 24$) indicating the hour the clock currently reads (without leading zeros), and\n - an integer $M$ ($0 \\le M < 60$) indicating the minutes the clock currently reads.\n\n-----Output-----\nFor each test case, give the time (hours in $24$-hour format, followed by a space, followed by minutes) after the adjustment has occurred, one test case per line. You may report the numbers without leading zeros.\n\n-----Examples-----\nSample Input:\n1\nF 60 13 20\nSample Output:\n14 21\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '14 20'\nassert solution('2') == '20 14'\nassert solution('3') == '13 14'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"Feb 7, 2018\nFeb 27, 2018\nFeb 29, 2018\nFeb 31, 2018\nFeb 7, 2019\nFeb 27, 2019\nFeb 29, 2019\nFeb 31, 2019\"\"\") == \"nope\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('OCT 31') == 'yup'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('OCT 31') == 'yup'\n\nassert solution('JAN 31') == 'nope'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 10') == 'nope'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 22\") == \"nope\"\nassert solution(\"AUG 13\") == \"nope\"\nassert solution(\"DEC 24\") == \"nope\"\nassert solution(\"JAN 16\") == \"nope\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 31') == 'nope'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('FEB 9, 2020') == 'yup'\nassert solution('FEB 10, 2020') == 'nope'\nassert solution('FEB 11, 2020') == 'yup'\nassert solution('FEB 12, 2020') == 'nope'\nassert solution('FEB 13, 2020') == 'nope'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('NOV 26') == 'nope'\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('FEB 9') == 'yup'\nassert solution('JAN 29') == 'nope'\nassert solution('MAR 2') == 'nope'\nassert solution('AUG 5') == 'nope'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == \"\"\"#.#.#.#.\n.#.#.#.#\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"######.#.\\n#.#.#..#\\n#.#.##.#\\n#.##.###\\n#.#.#.###\\n#.###.##\\n######.#\"\nassert solution(\"5 5\") == \"######.#.\\n#.#.#..#\\n#.#.##.#\\n#.##.###\\n#.###.##\\n######.#\"\nassert solution(\"4 4\") == \"######.#.\\n#.honi#.\\n#.nera#.\\n#.irak#.\\n#.#####.\"\nassert solution(\"1 1\") == \"###.###.\"\n",
        "num_ids_2": 101,
        "num_ids_4": 158
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n2 2 2 2\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\"\nassert solution(\"7 3\\n5 5 5 5 5 5 5\\nkrnk pppp\\nryzv zzpm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njmjm\\njm",
        "num_ids_2": 1650,
        "num_ids_4": 1650
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == \"\"\"#.#.#.#.\n.#.#.#.#\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == \"\"\"#.#.#.#.\n.#.#.#.#\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2 2 2 2\\nhoni\\noker\\nera\\nirak') == \"honi#.\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+'\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|'",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == 'White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6'\nassert solution('White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6') == 'White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6'\nassert solution('White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6') == 'White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6'\nassert solution('White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6') == 'White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6'\nassert solution('White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6') == 'White: K.e.1.Q.d.1.Ra.1.Rh.1.Bc.1.Bf.1.Nb.1.a.2.c.2.d.2.f.2.g.2.h.2.a.3.e.4\\nBlack: K.e.8.Q.d.8.Ra.8.Rh.8.Bc.8.Ng.8.Nc.6.a.7.b.7.c.7.d.7.e.7.f.7.h.7.h.6'\n",
        "num_ids_2": 532,
        "num_ids_4": 1100
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"+---+---+---+---+---+---+---+---+\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\"",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:P.|.P.|.P.|:P.|:P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.R.|.B.|.Q.|.K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+'",
        "num_ids_2": 460,
        "num_ids_4": 460
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+'\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '|:p:|.p.|:p:|.p.|:p.|:::|.p.|'\nassert solution('Black: K5,Qd4,Rd1,Rh2,Bc3,Ng3,Nc2,a6,b6,c6,d6,e6,f6,h6') == '|:Q.|:Q.|:Q.|:Q.|:Q.|:::|.Q.|'\nassert solution('Black: K7,Qd8,Rd3,Rh4,Bc5,Ng6,Nc4,a7,b7,c7,d7,e7,f7,h7') == '|:Q.|:Q.|:Q.|:Q.|:Q.|:::|.Q.|'\nassert solution('Black: K6,Qd7,Rd5,Rh6,Bc7,Ng8,Nc5,a7,b7,c7,d7,e7,f7,h7') == '|:Q.|:Q.|:Q.|:Q.|:Q.|:::|.Q.|'\n",
        "num_ids_2": 161,
        "num_ids_4": 329
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: KQKrNfBQnRaBQnRhNcRcRbNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRfNbNrNcNcRf",
        "num_ids_2": 1423,
        "num_ids_4": 1423
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\\nWhite:.r.,.q.,.k.,.n.,.r.,.q.,.k.,.n.,.a.,.c.,.d.,.f.,.g.,.h.,.a.,.e.,.f.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.g.,.h.,.a.,.b.,.c.,.d.,.e.,.f.,.",
        "num_ids_2": 1423,
        "num_ids_4": 1423
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\n\"\n",
        "num_ids_2": 214,
        "num_ids_4": 214
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == input[::-1]",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+'\nassert solution('Black:Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '|:p:|.p.|:p:|.p.|:p.|:::|.p.|'\n",
        "num_ids_2": 161,
        "num_ids_4": 161
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3.00000') == 'Diablo is happy!'\nassert solution('0.30000') == 'Need more materials!'\n\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.000000 4.000000') == \"Diablo is happy!\"\nassert solution('1.000000 12.000000') == \"Need more materials!\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"0.5 1.2\") == \"Need more materials!\"\nassert solution(\"1.2 1.4\") == \"Need more materials!\"\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.000000 4.000000') == 'Need more materials!'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"Diablo is happy!\"\n\nassert solution('1.000000 4.000000') == \"Diablo is happy!\"\n\n\"\"\"\n\nA, N = map(float, input().split())",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 2.000000') == 'Need more materials!'\nprint(solution(input()))\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"3.000000 4.000000\") == \"Need more materials!\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 10.000000') == 'Need more materials!'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 3.000000') == 'Need more materials!'\nassert solution('1.0 2.0') == 'Need more materials!'\nprint('Tests passed')\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"use the stairs\"\nassert solution(\"3 2 1 2 1\") == \"use the stairs\"\nassert solution(\"8 8 8 8 8\") == \"use the stairs\"\nassert solution(\"8 8 8 8 8 8\") == \"use the stairs\"\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 1 1 1 1') == 'use the stairs'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('0 1 10 2 1') == 'use the stairs'\nassert solution('1 1 10 2 1') == '7'\nassert solution('2 1 10 2 1') == 'use the stairs'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 2 1\") == \"use the stairs\"\nassert solution(\"10 1 10 3 3\") == \"use the stairs\"\nassert solution(\"10 1 10 5 1\") == \"use the stairs\"\nassert solution(\"10 1 10 8 1\") == \"use the stairs\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10 2 1') == '6'\nassert solution('10 1 10 2 1') == 'use the stairs'\nassert solution('10 100 100 2 1') == 'use the stairs'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 2\") == \"5\"\nassert solution(\"5 1 6 2\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"8 1 10 1 1\") == \"6\"\nassert solution(\"11 1 10 1 1\") == \"use the stairs\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10 2 1\") == \"6\"\nassert solution(\"5 2 1 4 1\") == \"use the stairs\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 1 10 2 1''') == '6'\nassert solution('''10 10 2 1''') == 'use the stairs'\n\n----Hints----\nWrite a program that uses the elevator described above. Use the following simple interface:",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n500\n120\n75\n''') == '128.8'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n500\n120\n75\n''') == '89.0'\nassert solution('''5\n500\n120\n75\n800\n150\n''') == '89.0'\nassert solution('''20\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n500\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"10\") == \"89.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\"\nassert solution(\"10\\n800\\n600\\n900\\n700\\n500\\n800\\n300\\n900\\n100\\n900\\n300\\n300\\n100\\n600\\n200\\n400\\n500\\n900\\n400\\n200\\n100\") == \"88.8\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n500\\n120\\n75\") == \"128.8\"\nassert solution(\"3\\n500\\n120\\n75\") == \"89.06666666666666\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom collections import Counter\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8', \"Your function does not work!\"\nassert solution('2\\n100\\n500\\n120\\n75') == '89.06666666666666', \"Your function does not work!\"\nassert solution('3\\n500\\n120\\n75') == '128.8', \"Your function does not work!\"\n\"\"\"\nimport re",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n500\n120\n75\n''') == '128.8'\nassert solution('''\n3\n500\n120\n75\n''') == '89.06666666666666'\nassert solution('''\n5\n10\n15\n16\n17\n''') == '9.0'\nassert solution('''\n10\n11\n12\n13\n14\n''') == '14.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '128.8'\nassert solution('5') == '89.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1.0000'\nassert solution('1.0000') == '1.0000'\nassert solution('1.9999') == '1.9995'\nassert solution('1.9995') == '2.0000'\nassert solution('0.0000') == '1.0000'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '128.8'\nassert solution('1') == '89.0'\nassert solution('-2') == '77.0'\nassert solution('-1000') == '86.0'\nassert solution('0') == '0.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 45 65 84 346\\n\") == \"4\"\nassert solution(\"5\\n1 4 1 4 1\\n\") == \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"10\"\nassert solution(\"1000000\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\\\n5\n1 45 65 84 346\n\"\"\"\n) == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '1'\nassert solution('1') == '0'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"2\\n1 2 3\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0\\n'\nassert solution('5\\n1 45 65 84 346') == '4\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4'\nassert solution('3\\n1 3 5 8') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 45 65 84 346') == \"4\"\nassert solution('2 1 4 3 5') == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4'\nassert solution('2\\n1 3 5') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 4\n#######\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\", \"Should be 1\"\nassert solution(\"2\") == \"1\", \"Should be 1\"\nassert solution(\"10\") == \"3\", \"Should be 3\"\nassert solution(\"10x10\") == \"1\", \"Should be 1\"\nassert solution(\"4x5x4\") == \"4\", \"Should be 4\"\n\"\"\"\n\nfrom itertools import product\nfrom collections import defaultdict",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('20 2\\n#.##.#\\n##...#\\n##.###\\n.#.#..\\n###.##\\n..##.#\\n...##\\n#.#.#.\\n###..#\\n##.###\\n.#....\\n###.#.\\n##...##\\n..#.#..\\n#..#.##\\n.##.#..\\n##...##\\n') == '0'\nassert solution('4 10\\n#......\\n#..#..#\\n#..#..#\\n#..#..#\\n#......\\n#..#..#\\n#..#..#\\n#......\\n') == '1'",
        "num_ids_2": 136,
        "num_ids_4": 196
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('3 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '0'\n\n-- Python --\nimport sys",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n#######\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$____$__$__\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$_\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$_____$___\\n__$_____$___$_____$___$_____$___$_____$___$_____$___\\n__$_____$___$_____$___$_____$___$_____$___$_____$___\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$')\n",
        "num_ids_2": 317,
        "num_ids_4": 317
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12 50') == '1'\nassert solution('18 9') == '2'\nassert solution('15 8') == '4'\nassert solution('13 50') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13 50') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13 50') == '5'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"13 50\") == \"5\"\nassert solution(\"1000000 4\") == \"3000000\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i can speak english\") == \"iyay antcay ekspay igpay atinlay\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\"\"\"\n\n\"\"\"\n---Input---\ni cant speak pig latin\nSample Output:\niyay antcay eakspay igpay atinlay\n\n---Explanation---\ni cant speak pig latin\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak\n\ni can speak",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\"\"\"\nimport re",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i like reading books\") == \"iyay aolfolgw blawbocicn\"\n\n'''",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i love pig latin\") == \"iyay olsyay ivecrpay igpay atinlay\"\nassert solution(\"i have a red car\") == \"iyay aredcyay erodhay cay atinlay\"\n",
        "num_ids_2": 55,
        "num_ids_4": 83
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''i cant speak pig latin\n\ni can speak pig latin''') == 'iyay antcay eakspay igpay atinlay'\n\n'''\n'''\n\nimport re",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i am not that stupid\") == \"yay amat inay atotcay ialtay oaytay\"\n\n\"\"\"\nimport re\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n\"\"\"\n\n\"\"\"\nfrom typing import List\n\nfrom string import ascii_lowercase\n\nVOWELS = ascii_lowercase[:5]\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n1\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n3\n2\nq\npotatoes\nsalad\n3\npea soup\npancakes\n''') == 'Anywhere is fine I guess'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nq\\n\") == \"nymble\"\nassert solution(\"2\\nq\\n\") == \"nymble\"\nassert solution(\"2\\nq\\n\") == \"nymble\"\nassert solution(\"2\\nq\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\nq\\n\") == \"Anywhere is fine I guess\"\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\nq\\npotatoes\\n\\nsalad\\n\\n3\\npancakes\\n\\npea soup\\n\\n\\npea soup\\npunsch\\n\\nAnywhere is fine I guess\\n\") == \"nymble\"\nassert solution(\n    \"1\\nq\\n\\nsalad\\n\\n3\\npotatoes\\n\\npea soup\\n\\n\\nAnywhere is fine I guess\\n\") == \"Anywhere is fine I guess\"\nassert solution(\n    \"10\\nq\\npotatoes\\n\\n\\n3\\npotatoes\\n\\nsalad\\n\\n3\\npea soup\\n\\npea soup\\n\\n2\\npea soup\\n\\npea soup\\n\\n\\n3\\n\\npea soup\\n\\npea soup\\n\\n\\n3\\n\\npea soup\\n\\npea soup\\n\\n\\nAnywhere is fine I guess\\n\") == \"Anywhere is fine I guess\"\nassert solution(\n    \"3\\nq\\npotatoes\\n\\nsalad\\n\\n\\n3\\npea soup\\n\\npea soup\\n\\n\\nAnywhere is fine I guess\\n\") == \"Anywhere is fine I guess\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nq\\npotatoes') == 'nymble', 'Should give \"nymble\" when the restaurants have \"potatoes\" and \"pancakes\"'\nassert solution('2\\nnymble\\npotatoes') == 'nymble', 'Should give \"nymble\" when the restaurants have \"potatoes\" and \"pancakes\"'\nassert solution('3\\npea\\nsalad\\npotatoes') == 'nymble', 'Should give \"nymble\" when the restaurants have \"potatoes\" and \"pancakes\"'\nassert solution('3\\nnymble\\nnymble\\npea') == 'nymble', 'Should give \"nymble\" when the restaurants have \"potatoes\" and \"pancakes\"'\nassert solution('2\\nnymble\\nnymble\\nnymble') == 'Anywhere is fine I guess', 'Should give \"Anywhere is fine I guess\" when the restaurants have \"potatoes\" and \"pancakes\"'",
        "num_ids_2": 79,
        "num_ids_4": 167
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npea soup\\npunsch') == 'Anywhere is fine I guess'\nassert solution('1\\n1\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npea soup\\npunsch') == 'Anywhere is fine I guess'",
        "num_ids_2": 90,
        "num_ids_4": 135
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\nq') == \"nymble\"\nassert solution('3\\n3\\npotatoes') == \"Anywhere is fine I guess\"\nassert solution('5\\n4\\njungle\\ncheese\\npotatoes\\npancakes') == \"pancakes\"",
        "num_ids_2": 39,
        "num_ids_4": 70
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''4\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n'''\n\nimport sys\nfrom typing import List\n\nn = int(input())\nmenus = []\nfor _ in range(n):\n    menus.append(list(map(str, input().split())))\n\nprint('Anywhere is fine I guess') if menus.count(['anywhere', 'is fine I guess']) >= 1 else print(menus[menus.index(['anywhere', 'is fine I guess'])][0])",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\") == \"nymble\"\nassert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\") == \"Anywhere is fine I guess\"\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n\"\"\") == \"nymble\"\n\nassert solution(\"\"\"\n4\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n\"\"\") == \"anywhere is fine I guess\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 0 15\n''') == '3'\nassert solution('''\n5 0 15\n''') == '3'\nassert solution('''\n5 0 1\n''') == '4'\nassert solution('''\n5 0 1\n''') == '4'\nassert solution('''\n5 0 1\n''') == '4'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('0 0 0') == '0'\nassert solution('0 1 0') == '1'\nassert solution('0 0 1') == '2'\nassert solution('0 1 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 0 15\n''') == '3'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 0 15\n''') == '3'\nassert solution('''10 0 50\n''') == '4'\nassert solution('''1 1 1\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 0 15\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('4 1 10') == '2'\nassert solution('5 0 2') == '1'\nassert solution('5 0 3') == '1'\nassert solution('5 0 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"1 0 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"100 0 0\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 0 15') == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 15') == '19'\nassert solution('100 10') == '100'\nassert solution('100 12') == '70'\nassert solution('-100 -2') == '-70'\nassert solution('1000 11') == '1000'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n11 15\n''') == '19'\n\nassert solution('''\n-1 -1\n''') == '-1'\n\nassert solution('''\n2 -1\n''') == '-2'\n\"\"\"\n\nimport math",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 15\") == \"19\"\n\ninput()",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 15') == '19'\nassert solution('10 20') == '20'\nassert solution('21 -2') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 15') == '19'\nassert solution('10 20') == '10'\nassert solution('10 10') == '10'\n\"\"\"\n\nR1, R2 = (int(i) for i in input().split())\nprint(int((R1+R2)/2))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 15') == '19'\nassert solution('0 15') == '15'\nassert solution('15 0') == '15'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '19'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 15') == '19'\nassert solution('1 5') == '5'\nassert solution('-1 7') == '7'\nassert solution('-1000 9999999999999999999999999999999999999999999999999999999999') == '999999999999999999999999999999999999999999999999999999999'\n\"\"\"\n\n\"\"\"\ntaken from https://github.com/codehere-ie/coding_test_with_practice",
        "num_ids_2": 22,
        "num_ids_4": 75
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 15') == '19'\nassert solution('0 5') == '6'\nassert solution('9 -10') == '-1'\nassert solution('-7 -11') == '-5'\nassert solution('-7 -11') == '-5'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('North South East') == 'Yes'\nassert solution('East South East') == 'Yes'\nassert solution('West North East') == 'Yes'\nassert solution('East North West') == 'Yes'\nassert solution('East South West') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\nNorth South East\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\nNorth South West\n\"\"\") == \"No\"\nassert solution(\n\"\"\"\nEast West\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\nWest East\n\"\"\") == \"No\"\nassert solution(\n\"\"\"\nNorth East\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North West East') == 'No'\nassert solution('North East South') == 'No'\nassert solution('North East South East') == 'No'\nassert solution('North East South East North East South') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('South West East') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''North West East\nNorth East West\nNorth East East''') == 'Yes'\nassert solution('''North East\nNorth West\nNorth East''') == 'No'\nassert solution('''North East\nNorth East\nNorth East''') == 'Yes'\nassert solution('''North East\nNorth East\nNorth East''') == 'No'",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North South East') == 'No'\nassert solution('North North East') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"North South East\") == \"Yes\"\nassert solution(\"East South West\") == \"No\"\nprint(solution(input))\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('North') == 'Yes'\nassert solution('South') == 'No'\nassert solution('East') == 'Yes'\nassert solution('West') == 'No'\nassert solution('North West East') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''North\nSouth\nEast\nWest''') == 'Yes'\nassert solution('''North\nSouth\nEast\nEast''') == 'No'\nassert solution('''North\nEast\nWest\nEast''') == 'No'\nassert solution('''North\nNorth\nNorth\nNorth''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North West East') == 'No'\nassert solution('South East North') == 'Yes'\nassert solution('North East North') == 'No'\nassert solution('North South South') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 16\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\nthththethththeththeththeththththethththththeththethththththeththethththththththththththththeththththeththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththththth",
        "num_ids_2": 1581,
        "num_ids_4": 1581
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\npirpumse') =='marywasnosyagain'\n\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 16\\nagain\\npirpumse\\nmoystoal') =='marywasnosyagain'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 16\nagain\npirpumsemoystoal\"\"\") == \"marywasnosyagain\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n'abcdefghijklmnopqrstuvwxyz'\\n'abcdefghijklmnopqrstuvwxyz'\") == \"abcdefghijklmnopqrstuvwxyz\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 16\\npirpumsemoystoal') =='marywasnosyagain'\nassert solution('5 11\\nxqtkfkomtfsbkonn\\npevqkblwqkphgpsqrfh') == 'qazwsxedcrfvgb'\nassert solution('10 3\\nxqtkfkomtfsbkonn\\npevqkblwqkphgpsqrfh') == 'aycszqoeiuyrgfkzmdw'\nassert solution('13 5\\nxqtkfkomtfsbkonn\\npevqkblwqkphgpsqrfh') == 'yhcugjzcwgxkzsdpfqbq'\nassert solution('17 5\\nxqtkfkomtfsbkonn\\npevqkblwqkphgpsqrfh') == 'xkyrxgxjyvhzczeepdhj'\n",
        "num_ids_2": 74,
        "num_ids_4": 185
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\ne\nk\ny\ni''') == 'yie'\n\nassert solution('''5\nab\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 16\\npirpumsemoystoal') =='marywasnosyagain'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"Either\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Either\"\nassert solution(\"2\") == \"Even\"\nassert solution(\"3\") == \"Odd\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Either\"\n\nSample Input:\n10\nSample Output:\nOdd\n\nSample Input:\n25\nSample Output:\nEven\n\nSample Input:\n8\nSample Output:\nOdd\n\nSample Input:\n2\nSample Output:\nEven\n\n'''\n\nimport sys\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"Even\"\nassert solution('2') == \"Odd\"\nassert solution('3') == \"Either\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Odd'\nassert solution('1') == 'Even'\nassert solution('5') == 'Either'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Either'\nassert solution('1') == 'Even'\nassert solution('2') == 'Odd'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Odd'\nassert solution('2') == 'Even'\nassert solution('3') == 'Either'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '5',\n    '314',\n    '1',\n    '5926',\n    '5',\n    '35897',\n])) == '3'\n\nassert solution('\\n'.join([\n    '2',\n    '4',\n    '4',\n    '4',\n    '4',\n])) == '2'\n\nassert solution('\\n'.join([\n    '1',\n    '4',\n    '4',\n    '4',\n    '4',\n])) == '1'\n\nassert solution('\\n'.join([\n    '5',\n    '5',\n    '5',\n    '5',\n])) == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('6') == '1'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\nassert solution('100\\n123456789') == '4\\n1\\n2\\n1'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n57\\n1\\n') == '4'\nassert solution('3\\n57\\n1\\n') == '4'\nassert solution('5\\n35897\\n5\\n') == '4'\nassert solution('5\\n35897\\n5\\n') == '4'\nassert solution('5\\n357\\n4\\n') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n314\n1\n5926\n5\n35897\n\"\"\") == \"3\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n314\n1\n5926\n5\n35897\n''') == '3'\nassert solution('''\n5\n2\n1\n5\n5\n35897\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897\\n') == '3\\n1\\n4\\n1\\n5\\n'\n\n---\nSample Input:\n3\n-30\n-3\n0\nSample Output:\n2\n1\n0\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\n7 4\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == \"yes\"\n\nassert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == \"no\"\n\nassert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == \"yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\ni of\\nout the\\n') == 'no'\nassert solution('10 10\\na e\\na k\\na i\\na p\\na o\\na t\\na s\\n') == 'no'\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'no'\nassert solution('''2 4\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9 5\") == \"yes\"\nassert solution(\"c t\") == \"yes\"\nassert solution(\"i r\") == \"no\"\nassert solution(\"k p\") == \"yes\"\nassert solution(\"o c\") == \"yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nwe we\\ncan the\\nwork people\\nit of\\nthe out the') == 'yes'\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nwe we\\ncan the\\nwork people\\nit of\\nthe out the\\n') == 'no'\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nwe we\\ncan the\\nwork people\\nit of\\nthe out the\\n') == 'no'\n",
        "num_ids_2": 114,
        "num_ids_4": 172
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 2\\nct ct\\nit r e\\nt e f\\ntf t\\nt f\\nk p\\nof c\\no o\\nwe o\\ncan t\\nt f\\nwe h\\n\") == 'yes'\nassert solution(\"8 3\\no p\\na k\\nt r\\nc e\\nt\\t f\\nh t\\nk t\\nh e\\nt e\\nk d\\nt c\\nk e\\nt f\\nk e\\nt e\\nh t\\nt\\n\") == 'no'\n",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nab') == 'yes'\nassert solution('1\\nac') == 'no'\nassert solution('4\\nab') == 'no'\nassert solution('2\\nab') == 'no'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\na\nb''') == \"yes\"\nassert solution('''6 6\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == \"no\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 5\\nc t\\n i r\\nk p\\n o c\\nr o\\n t e\\n t f\\n u h\\n w p\\n we we\\n can the\\n work people\\n it of\\n out the\\n') == 'no'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\ncarrots?') == '1\\n'\nassert solution('2 1\\nbunnies?') == '2\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('carrots?\\nbunnies') == '1'\nassert solution('carrots?\\nbunnies\\ncarrots?\\ncarrots?\\ncarrots?') == '2'\n\n\"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\n''') == '1'\nassert solution('''\n1\ncarrots?\n''') == '0'\nassert solution('''\n1\nbunnies?\n''') == '0'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"3 1\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"3 2\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?\\ncarrots?\\nbunnies\") == \"2\"\nassert solution(\"3 1\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\nbunnies\") == \"2\"\nassert solution(\"3 1\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\nbunnies\") == \"1\"\n",
        "num_ids_2": 49,
        "num_ids_4": 128
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 2\\ncarrots?\\ncarrots?\\ncarrots?') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\ncarrots\\nbunnies') == '1'\nassert solution('2 2\\ncarrots?\\ncarrots?\\ncarrots?') == '1'\n\"\"\"\nimport sys\n\ntest = int(input())\nfor i in range(test):\n    p1, p2 = input().split()\n    p1 = int(p1)\n    p2 = int(p2)\n    print(p1+p2)",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\n''') == '1'\nassert solution('''\n1 1\ncarrots?\nbunnies\n''') == '0'\nassert solution('''\n5 5\ncarrots?\nbunnies\ncarrots?\nhuff?\ncarrots?\n''') == '5'\nassert solution('''\n2 2\ncarrots?\nbunnies?\ncarrots?\nhuff?\ncarrots?\n''') == '0'\nassert solution('''\n1 1\ncarrots?\nbunnies?\nhuff?\ncarrots?\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies') == '1'\nassert solution('2 1\\ncarrots?\\nSara, she is so good at it') == '1'\nassert solution('2 1\\ncarrots?\\nBob, he is a bit better than you') == '0'\nassert solution('2 3\\ncarrots?\\nSara, she is so good at it\\nBob, he is a bit better than you\\nSara, she is a bit better than you\\nCarrots, give more energy!') == '1'\nassert solution('2 3\\ncarrots?\\nSara, she is so good at it\\nBob, he is a bit better than you\\nSara, she is a bit better than you\\nCarrots, give more energy!\\nBob, give more energy!') == '0'\n",
        "num_ids_2": 47,
        "num_ids_4": 133
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 4') == '3'\nassert solution('3 3') == '3'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 2\\nbunnies\\nbunnies') == '0'\nassert solution('1\\n') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 47
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,Kd2,Qd2,Ra2,Rh2,Bc2,Bf2,Nb2,Kd3,Qd3,Ra3,Rh3,Bc3,Bf3,Nb3,Kd4,Qd4,Ra4,Rh4,Bc4,Bf4,Nb4,Kd5,Qd5,Ra5,Rh5,Bc5,Bf5,Nb5,Kd6,Qd6,Ra6,Rh6,Bc6,Bf6,Nb6,Kd7,Qd7,Ra7,Rh7,Bc7,Bf7,Nb7,Kd8,Qd8,Ra8,Rh8,Bc8,Bf8,Nb8\\nBlack: Kg1,Qg1,Rb1,Rh1,Bc1,Bf1,Nb1,Kg2,Qg2,Rb2,Rh2,Bc2,Bf2,Nb2,Kg3,Qg3,Rb3,Rh3,Bc3,Bf3,Nb3,Kg4,Qg4,Rb4,Rh4,Bc4,Bf4,Nb4,Kg5,Qg5,Rb5,Rh5,Bc5,Bf5,Nb5,Kg6,Qg6,Rb6,Rh6,Bc6,Bf6,Nb6,Kg7,Qg7,Rb7,Rh7,Bc7,Bf7,Nb7,Kg8,Qg8,Rb8,Rh8,Bc8,Bf8,Nb8\"\n",
        "num_ids_2": 594,
        "num_ids_4": 594
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\"\"\"\n) == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: K,q,R,Q,k,n,R\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: p,p,p,p,p,p,p,p\"\nassert solution(\"|...|:::|...|:::|...|:::|...|:::|...|\") == \"White: a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|...|\") == \"White: a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a\"\n",
        "num_ids_2": 129,
        "num_ids_4": 250
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,Rd1,Rh1,Bc1,Nf1,Nd1,Pd1,Rd1,Bc1,Nb1,Pd1,Rd1,Nf1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nd1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd1,Nd1,Pd1,Nf1,Nd1,Nd",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 358,
        "num_ids_4": 716
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd1,Qd1,Rd1,Kb1,Qb1,Rb1,Rk1\\nBlack: Kd8,Qd8,Rd8,Kb8,Qb8,Rb8,Rk8\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: Kp1,Qp1,Rp1,Kp2,Qp2,Rp2,Qp3,Rp3,Kp4,Qp4\\nBlack: Kp8,Qp8,Rp8,Kp9,Qp9,Rp9,Qp10,Rp10,Kp11,Qp11\\nWhite: Kp12,Qp12,Rp12,Kp13,Qp13,Rp13,Qp14,Rp14,Kp15,Qp15\\nBlack: Kp16,Qp16,Rp16,Kp17,Qp17,Rp17,Qp18,Rp18,Kp19,Qp19\\nWhite: Kp20,Qp20,Rp20,Kp21,Qp21,Rp21,Qp22,Rp22,Kp23,Qp23\\nBlack: Kp24,Qp24,Rp24,Kp25,Qp25,Rp25,Qp26,Rp26,Kp27,Qp27\\nWhite: Kp28,Qp28,Rp28,Kp29,Qp29,Rp29,Qp30,Rp30,Kp31,Qp31\\nBlack: Kp32,Qp32,Rp32,Kp33,Qp33,Rp33,Qp34,Rp34,Kp35,Qp35\\nWhite: Kp36,Qp36,Rp36,Kp37,Qp37,Rp37,Qp38,Rp38,Kp39,Qp39\\nBlack: Kp40,Qp40,Rp40,Kp41,Qp41,Rp41,Qp42,Rp42,Kp43,Qp43\\nWhite: Kp44,Qp44,Rp44,Kp45,Qp45,Rp45,Qp46,Rp46,Kp47,Qp47\\nBlack: Kp48,Qp48,Rp48,Kp49,Qp49,Rp49,Qp50,Rp50,Kp51,Qp51\\nWhite: Kp52,Qp52,Rp52,Kp53,Qp53,Rp53,Qp54,Rp54,Kp55,Qp55\\nBlack: Kp56,Qp56,Rp56,Kp57,Qp57,Rp57,Qp58,Rp58,Kp59,Qp59\\nWhite: Kp60,Qp60,Rp60,Kp61,Qp61,Rp61,Qp62,Rp62,Kp63,Qp63\\nBlack: Kp64,Qp64,Rp64,Kp65,Qp65,Rp65,Qp66,R",
        "num_ids_2": 226,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,P3,P4,P5,P6,P7,P8,R3,R4,R5,R6,R7,R8\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd2,Rd2,Qd2,Rd3,Qd3,Rd4,Rd5,Rd6,Rd7,Rd8,Kd1,Rd1,Qd1,Rd2,Qd2,Rd3,Qd3,Rd4,Qd4,Rd5,Qd5,Rd6,Qd6,Rd7,Qd7,Rd8,Qd8\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: Pt1,Pt2,Pt3,Pt4,Pt5,Pt6,Pt7,Pt8,Pt9,Pt10,Pt11,Pt12,Pt13,Pt14,Pt15,Pt16,Pt17,Pt18,Pt19,Pt20,Pt21,Pt22,Pt23,Pt24,Pt25,Pt26,Pt27,Pt28,Pt29,Pt30,Pt31,Pt32,Pt33,Pt34,Pt35,Pt36,Pt37,Pt38,Pt39,Pt40,Pt41,Pt42,Pt43,Pt44,Pt45,Pt46,Pt47,Pt48,Pt49,Pt50,Pt51,Pt52,Pt53,Pt54,Pt55,Pt56,Pt57,Pt58,Pt59,Pt60,Pt61,Pt62,Pt63,Pt64,Pt65,Pt66,Pt67,Pt68,Pt69,Pt70,Pt71,Pt72,Pt73,Pt74,Pt75,Pt76,Pt77,Pt78,Pt79,Pt80,Pt81,Pt82,Pt83,Pt84,Pt85,Pt86,Pt87,Pt88,Pt89,Pt90,Pt91,Pt92,Pt93,Pt94,Pt95,Pt96,Pt97,Pt98,Pt99,Pt100,Pt101,Pt102,Pt103,Pt104,Pt105,Pt106,Pt107,Pt108,Pt109,Pt110,Pt111,Pt112,Pt113,Pt114,Pt115,Pt116,Pt117,Pt118,Pt119,Pt120,Pt121,Pt122,Pt123,Pt124,Pt125,Pt126,Pt127,Pt128,Pt129,Pt130,Pt131,Pt132,Pt133,Pt134,Pt135,Pt136,Pt137,Pt138,Pt139,Pt140,Pt141,Pt142,Pt143,Pt144,Pt145,Pt146,Pt147,Pt148,Pt149,Pt150,Pt151,Pt152,Pt153,Pt154,Pt155,Pt156,Pt157,Pt158,Pt159,Pt160,Pt",
        "num_ids_2": 259,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Nf2,h3,f3,g3,h4,f4,g4,f5,g5,h5,h6,f6,g6,h7,h8,e8,e9,f9,g9,h10,e10,f10,g10,f11,g11,h11,h12,f12,g12,h13,f13,g13,h14,f14,g14,h15,f15,g15,h16,f16,g16,h17,f17,g17,h18,f18,g18,h19,f19,g19,h20,f20,g20,h21,f21,g21,h22,f22,g22,h23,f23,g23,h24,f24,g24,h25,f25,g25,h26,f26,g26,h27,f27,g27,h28,f28,g28,h29,f29,g29,h30,f30,g30,h31,f31,g31,h32,f32,g32,h33,f33,g33,h34,f34,g34,h35,f35,g35,h36,f36,g36,h37,f37,g37,h38,f38,g38,h39,f39,g39,h40,f40,g40,h41,f41,g41,h42,f42,g42,h43,f43,g43,h44,f44,g44,h45,f45,g45,h46,f46,g46,h47,f47,g47,h48,f48,g48,h49,f49,g49,h50,f50,g50,h51,f51,g51,h52,f52,g52,h53,f53,g53,h54,f54,g54,h55,f55,g55,h56,f56,g56,h57,f57,g57,h58,f58,g58,h59,f59,g59,h60,f60,g60,h61,f61,g61,h62,f62,g62,h63,f63,g63,h64,f64,g64,h65,f65,g65,h66,f66,g66,h67,f67,g67,h68,f68,g68,h69,f69,g69,h70,f70,g70,h71,f71,g71,h72,f72,g72,h73,f73,g73,h74,f74,g74,h75,f75,g75,h76,f76,g76,h77,f77,g77,h78,f78,g78,h79,f79,g79,h80,f80,g80,h81,f81,g81,h82,f82,g82,h83,f83,g83,h84,f84,g84,h85,f85,g85,h86,f86,g86,h87,f87,g87,h88,f88,g88,h89,f89,g89,h90,f90,g90,h91,f91,g91,h92,f92,g92,h93,f93,g93,h94,f94,g94,h95,f95,g95,h96,f96,g96,h97,f97,g97,h98,f98,g98,h99,f",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Nc6,Ng8,Nc8\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,h6,e7,f7,g7,h7,g7,h6,g6,h5,g5,h5,g5,h4,g4,h3,g3,h2,g2,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g1,h1,g",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: K,Q,R,B,N\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: P,P,P,P,P,P,P\"\nassert solution(\"|...|:::|.n.|:::|...|:::|...|:::|.P.|\") == \"White: N,N,N,P,P,P,P\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|...|\") == \"White: K,Q,R,B,N,N,N,N\"\n",
        "num_ids_2": 125,
        "num_ids_4": 230
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Your wish is granted!\"\nassert solution(\"6 5\") == \"You will become a flying monkey!\"\nassert solution(\"6 6\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('1 2') == 'Your wish is granted!'\nassert solution('1 1') == 'You will become a flying monkey!'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"8 4\") == \"You will become a flying monkey!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n7 5\\n\") == \"Your wish is granted!\"\nassert solution(\"9 8\\n7 8\\n\") == \"You will become a flying monkey!\"\nassert solution(\"1 0\\n2 0\\n\") == \"Your wish is granted!\"\nassert solution(\"1 2\\n2 2\\n\") == \"You will become a flying monkey!\"\nassert solution(\"1 2\\n2 2\\n\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Your wish is granted!\"\nassert solution(\"2 5\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Your wish is granted!\"\nassert solution(\"1 3\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Your wish is granted!'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"1 1\") == \"Your wish is granted!\"\nassert solution(\"2 4\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3') == 'Your wish is granted!'\nassert solution('1 3') == 'You will become a flying monkey!'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"Your wish is granted!\"\nassert solution(\"7 4\") == \"You will become a flying monkey!\"\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('16') == '16'\nassert solution('16.0') == '16'\nassert solution('16.00') == '16'\nassert solution('16.0001') == '16'\nassert solution('16.00001') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n    16\n    16''') == '16'\nassert solution('''36\n    19\n    4''') == '36'\nassert solution('''16\n    4\n    8''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == '16'\n\nstdin = '''\n18\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"16\") == \"16\"\nassert solution(\"4\") == \"9\"\nassert solution(\"2\") == \"2\"\nassert solution(\"9\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '16'\nassert solution('1') == '1'\nassert solution('4') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == '16'\nassert solution('8') == '10'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"16\"\nassert solution(\"16\") == \"16\"\nassert solution(\"40\") == \"16\"\nassert solution(\"100\") == \"16\"\nassert solution(\"400\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1', 'Sample Test 1 Failed'\nassert solution('16') == '16', 'Sample Test 2 Failed'\nprint('Solution:')\nprint(solution(input()))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('16') == '16'\nassert solution('64') == '20'\nassert solution('256') == '24'\nassert solution('1024') == '96'\nassert solution('1024') == '96'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20\\n') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n25 30 60 75\\n') == \"4\"\nassert solution('4\\n3 45 35 20 80\\n') == \"4\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\n\n------GATEWAY TO WHILE LOOP---------\n\nwhile (i < n):\n    j = i\n    while (j < n):\n        k = j\n        while (k < n):\n            l = k\n            while (l < n):\n                m = l\n                while (m < n):\n                    n = m\n                k = n\n            l = m\n        j = n\n    i = j",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 180\\n\"\n    \"45 30 55 20 80 20\"\n) == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\\n\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == \"4\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 100\n4 8 3 2 1''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n21\\n34\\n18\\n9\"\n) == \"79\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1\\n'\nassert solution('2') == '2\\n'\nassert solution('3') == '3\\n'\nassert solution('4') == '4\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n') == '6'\nassert solution('2\\n3\\n5\\n') == '10'\nassert solution('10\\n40\\n30\\n') == '76'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '79'\nassert solution('1\\n') == '1'\n\nprint(solution())\nprint(solution('1\\n'))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\\n\"\nassert solution(\"10\") == \"56\\n\"\nassert solution(\"100\") == \"1000000\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n4') == '0', \"3\"\nassert solution('2\\n4\\n5') == '20', \"5\"\nassert solution('3\\n1\\n2') == '1', \"2\"\nassert solution('5\\n3\\n4') == '27', \"3\"\nassert solution('7\\n2\\n3') == '13', \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '59'\nassert solution('5') == '89'\nassert solution('7') == '117'\nassert solution('10') == '197'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2\\n3\\n1') == '7'\nassert solution('4\\n1\\n2\\n3') == '9'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\\n2\") == \"4\"\nassert solution(\"4\\n1 2 4\") == \"8\"\nassert solution(\"8\\n4 5 6 8\") == \"16\"\nassert solution(\"4\\n8 3 7 10\") == \"17\"\n",
        "num_ids_2": 20,
        "num_ids_4": 51
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n7\n9\n10\n''') == '151'\n\nassert solution('''\n10\n3\n20\n5\n4\n9\n10\n''') == '165'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3 4\") == \"2 3 0\"\nassert solution(\"5 3 2 4\") == \"2 3 0\"\nassert solution(\"3 3 3 4\") == \"2 3 0\"\nassert solution(\"10 2 3 4\") == \"2 3 0\"\nassert solution(\"3 3 3 4\") == \"impossible\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\\n\") == \"2 3 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3 4\") == \"2 3 0\"\nassert solution(\"2 2 4 1\") == \"0 1 2 3\"\nassert solution(\"3 4 5\") == \"1 2 3 4\"\nassert solution(\"3 5 5\") == \"1 2 3 4\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"5 3 3 4\n0 1 4\n\"\"\") == \"\"\"2 3 0\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3 3 4\n0 1 4\n''') == '2 3 0'\nassert solution('''\n2 2 2 4\n0 1 4\n''') == '0 0 0'\nassert solution('''\n2 2 2 4\n1 1 4\n''') == '1 1 1'\nassert solution('''\n2 1 4\n0 1 4\n''') == '1 1 4'\nassert solution('''\n1 3 4\n0 1 4\n''') == '0 0 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3 4\") == \"2 3 0\"\nassert solution(\"1 5 2 3\") == \"0 1 0\"\nassert solution(\"10 3 1 1\") == \"2 3 0\"\nassert solution(\"1 1 1 1\") == \"0 0 0\"\nassert solution(\"1 1 1 0\") == \"0 0 0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\nassert solution('1 1 3 4') == '0 0 0'\nassert solution('3 3 3 3') == '3 3 0'\nassert solution('4 4 3 2') == '3 3 3'\nassert solution('8 2 2 2') == '1 1 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 0') == '2 3 0'\nassert solution('5 5 1 3') == '1 2 3 5'\nassert solution('6 6 1 3') == '3 5 6 1'\nassert solution('1 6 1 3') == '3 1 1 6'\nassert solution('6 5 1 3') == '1 3 1 5'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 0 0 0\") == \"impossible\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 0\") == \"1 2\"\nassert solution(\"3 5 3 5\") == \"3 4 1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1 0 0 0 0 1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 0 0 1 1 0') == '2 1 0 0 0 0'\nassert solution('-1 -2 -2 -1 -1 0 0') == '3 -1 0 0 0 0 1'\n",
        "num_ids_2": 40,
        "num_ids_4": 68
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1 0 0 0 0 1\"\nprint(solution())\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 0 0 0 0 1'\nprint(solution())\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('3 4 5 6 7') == '-1 -1 -1 -1 -1 -1'\nassert solution('-2 -3 -4') == '-3 -2 -1'\nassert solution('-1') == '2'\nassert solution('1') == '-2'\n",
        "num_ids_2": 45,
        "num_ids_4": 76
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\nassert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\nassert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\n",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nqwerty') == '1.3334'\nassert solution('2\\nqwerty') == '1.3334'\nassert solution('3\\nqwerty') == '1.3334'\nassert solution('4\\nqwerty') == '1.3334'\nassert solution('5\\nqwerty') == '1.3334'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n123789\n1234567890\n12345678901\n123456789012\n1234567890123\n\n\"\"\") == \"1.3334\"\n\nassert solution(\"\"\"\n1\n123789\n1234567890\n12345678901\n123456789012\n1234567890123\n\n\"\"\") == \"1.3334\"\n\nassert solution(\"\"\"\n1\n123789\n1234567890\n12345678901\n123456789012\n1234567890123\n\n\"\"\") == \"1.3333333333333334\"\n\nassert solution(\"\"\"\n1\n123789\n1234567890\n12345678901\n123456789012\n1234567890123\n\n\"\"\") == \"1.3333333333333334\"\n\nassert solution(\"\"\"\n1\n123789\n1234567890\n12345678901\n123456789012\n1234567890123\n\n\"\"\") == \"1.3333333333333334\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"\nprint(solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\")\nprint(solution(\"\"\"\n3\n123456 0.9667\nqwerty 0.6667\n123456 0.2333\n\"\"\") == \"1.8333\")\nprint(solution(\"\"\"\n3\n123456 1.0667\nqwerty 1.0333\n123456 1.2333\n\"\"\") == \"1.3334\")\nprint(solution(\"\"\"\n1\n123456 1.0667\nqwerty 1.0333\n\"\"\") == \"0.8333\")\nprint(solution(\"\"\"\n1\n123456 1.0667\nqwerty 1.0333\n\"\"\") == \"0.8333\")\nprint(solution(\"\"\"\n3\n123456 0.9667\nqwerty 0.6667\n123456 0.2333\n\"\"\") == \"1.8333\")\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n123456 0.6667\nqwerty 0.3333\nabcde 0.3333\nsdfgh 0.3333\nxyzw 0.3333\n''') == '1.3333'\nassert solution('''\n5\n123456 1\nqwerty 1\nabcde 1\nsdfgh 1\nxyzw 1\n''') == '0.3333'\nassert solution('''\n2\n123456 0.6666\nqwerty 0.3334\n''') == '0.3333'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"\nassert solution(\"\"\"\n3\n1234 0.0476\nqwe 0.1234\n1234 1234.0476\n\"\"\") == \"1.5474\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nqwerty 0.3334\") == \"1.3334\"\nassert solution(\"2\\n123456 0.6666\") == \"1.3334\"\nassert solution(\"3\\nqwerty 0.3334\") == \"2.3333\"\nassert solution(\"4\\nqwerty 0.3333\") == \"1.3334\"\nassert solution(\"5\\nqwerty 0.3333\") == \"2.3333\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nassert solution('3\\n1q 2r 3e 4t 5y 6i 7o 8u 9a 0b 1c 2d 3e 4f 5g 6h 7i 8j 9k 0l mn 0o 1p 2q 3r 4s 5t 6u 7v 8w 9x 0y 1z 2a 3b 4c 5d 6e 7f 8g 9h 10i 11j 12k 13l 14n 15o 16p 17q 18r 19s 20t 21u 22v 23w 24x 25y 26z 27a 28b 29c 29d 29e 29f 30g 30h 31i 32j 33k 34l 35m 36n 37o 38p 39q 40r 41s 42t 43u 44v 45w 46x 4z 47a 48b 49c 49d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e 4f 4g 4h 4i 4j 4k 4l 4m 4n 4o 4p 4q 4r 4s 4t 4u 4v 4w 4x 4y 4z 4a 4b 4c 4d 4e",
        "num_ids_2": 1616,
        "num_ids_4": 1616
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3333'\nprint(solution('2\\n123456 0.6666\\nqwerty 0.3334'))\n\n'''\n\n##############################################################################################################\n'''\n3. Find the sum of all divisors of given number\n\n*The sum of divisors is the total number of divisors of a positive integer, i.e. the total number of positive divisors of a given number excluding 1.\n\n*The sum of divisors of a number n is the sum of all positive integers which divide evenly into n.\n\n*For example, sum of divisors of 24 is 1 + 2 + 3 + 4 + 6 + 8 + 12 = 26.\n\n*You are given an integer n, write a function that prints the sum of all divisors of n.\n\n*Input:\n5\n\n*Output:\n1 + 2 + 3 + 4 + 5 = 15\n\n'''\n\n##############################################################################################################\n\n'''\n4. Find the largest palindrome made from the product of two 3-digit numbers\n\n*The largest palindrome is the number that is the largest product of two 3-digit numbers that have the same odd or even parity.\n\n*For example, the largest palindrome can be 1452, since it is the largest product of two 3-digit numbers (114) with same parity that is less than or equal to itself (114) (4211).\n\n*Your function should take two integer arguments, x and y, and print the largest palindrome made from the product of two 3-digit numbers that have the same parity. If no such number exists, your function should print -1.\n\n*Input:\n10\n20\n\n*Output:\n4411\n-1\n\n*Input:\n5\n10\n\n*Output:\n5114\n-1\n\n'''\n\n##############################################################################################################\n'''\n5. Number of Divisors\n\n*The number of divisors of n is the total number of positive divisors of n, excluding 1.\n\n*For example, number of divisors of 24 is 2 + 3 + 4 + 6 + 8 + 12 = 14.\n\n*Write a function that takes an integer n and prints the number of divisors of n.\n\n*Input:\n4\n\n*Output:\n2\n\n*Input:\n5\n\n*Output:\n3\n\n'''\n\n##############################################################################################################\n'''\n6. Number of Smaller Numbers After Self\n\n*In this Kata we are going to work with the data provided in the collection.\n\n*The collection has several lists, each list consists of numbers.\n\n*We are going to make a new list, which contains the number of numbers in the original list, whose value is less than the corresponding number in the new list.\n\n*Your function should be able to handle lists with up to 1000 elements, in any order.\n\n*Input:\n\n*Lists: [[8,1], [7,1,4], [4,5,7], [1,5,4], [3,5,1,8], [4,4,3], [1,2,2]]\n\n*Output:\n\n*New list: [[1,1,1,0,0,1], [1,2,1,1,0,1], [2,3,2,1,1,0]]\n\n*Note: we will never get a list with only one element, because our algorithm would not work.\n\n'''\n\n##############################################################################################################\n'''\n7. List of Depths\n\n*Question:\n\nWrite a function that takes in a Binary Tree (with values as strings) and returns a list of lists. Each sub-list in the output should contain the nodes in the tree with each node value being the respective depth of the tree.\n\n*We are going to be taking a very large tree and making a very deep copy of it.\n\n*The original tree is represented as a string, and the current subtree as a string.\n\n*Input:\n\n*Tree (string):\n\n*Output:\n\n*A list of lists (integer lists)\n\n*Example:\n\n*Input:\n\n*Tree:\n\n*Output:\n\n*[[4,5,6], [1,3,4], [2,7,2], [1,2,3]]\n\n'''\n##############################################################################################################\n'''\n8. Bubble Sort\n\n*Question:\n\nWrite a function that takes in an array of integers and returns a boolean indicating whether the array is sorted.\n\n*Input:\n\n*Array: [1,2,3,4]\n\n*Output:\n\n*True\n\n*Input:\n\n*Array: [1,4,3,2]\n\n*Output:\n\n*True\n\n*Input:\n\n*Array: [1,1,1,1]\n\n*Output:\n\n*False\n\n*Input:\n\n*Array: []\n\n*Output:\n\n*True\n\n'''\n##############################################################################################################\n'''\n9. Check Permutation\n\n*Question:\n\nWrite a function that takes in two strings and checks if they are permutations of each other.\n\n*Input:\n\n*String 1: \"ab\"\n\n*String 2: \"ba\"\n\n*Output:\n\n*True\n\n*Input:\n\n*String 1: \"ab\"\n\n*String 2: \"ab\"\n\n*Output:\n\n*False\n\n*Input:\n\n*String 1: \"ab\"\n\n*String 2: \"ba\"\n\n*Output:\n\n*False\n\n*Input:\n\n*String 1: \"ab\"\n\n*String 2: \"ab\"\n\n*Output:\n\n*True\n\n'''\n##############################################################################################################\n'''\n10. Generate Parentheses\n\n*Question:\n\nWrite a function that takes in an integer n and returns a list of parenthesis strings that are balanced with a maximum length of n.\n\n*Input:\n\n*N: 3\n\n*Output:\n\n*[\"((()))\",\"(()())\",\"(())()\"]\n\n*Input:\n\n*N: 4\n\n*Output:\n\n*[\"(((())))\",\"((()()))\",\"((())())\",\"((()))()\",\"(()(()))\",\"(()()())\",\"(()())()\",\"(())(())\",\"(()())()\",\"(())(())\",\"(())()()\"]\n\n*Input:\n\n*N: 5\n\n*Output:\n\n*[\"(((()))\",\"((()())\",\"((())())\",\"((()))()\",\"(()(()))\",\"(()()())\",\"(()())()\",\"(())(())\",\"(()())()\",\"(())(())\",\"(())()()\"]\n\n'''\n##############################################################################################################\n'''\n11. Print Cells in a Matrix\n\n*Question:\n\nWrite a function that takes in a 2D matrix and prints it as a list",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(''.join(stdin.strip().split('\\n'))) == '1.3334'\nassert solution(''.join(stdin.strip().split('\\n')[1:])) == '1.3334'\n\n\"\"\"\nimport math",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1 2 4\n''') == '1'\nassert solution('''\n3 1\n4 5 6\n''') == '4'\nassert solution('''\n3 1\n4 5 6\n''') == '4'\nassert solution('''\n3 1\n1 2 3\n''') == '2'\nassert solution('''\n3 1\n3 2 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 4') == '2'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(input())\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"1 1\n\"\"\") == '1'\nassert solution(r\"\"\"\n3 1\n1 2 4\n\"\"\") == '1'\nassert solution(r\"\"\"\n5 1\n3 5 7 9 2\n\"\"\") == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '1'\nassert solution('5 5') == '4'\nassert solution('3 3') == '1'\nassert solution('5 5') == '4'\nassert solution('5 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n1 2 4''') == '1'\nassert solution('''3 1\n1 2 4\n3 2 4''') == '2'\nassert solution('''3 1\n1 2 3\n1 3 4''') == '1'\nassert solution('''3 1\n1 2 3\n1 3 5''') == '2'\nassert solution('''3 2\n1 3 2\n1 2 5''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 1, 2, 4]) == '1'\nassert solution([20, 20, 10, 10]) == '19'\nassert solution([30, 10, 20, 25]) == '29'\nassert solution([6, 20, 20, 30, 30, 25]) == '29'\nassert solution([60, 55, 60, 65, 70, 75]) == '64'\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '3'\nassert solution('10 1') == '4'\nassert solution('10 0') == '1'\n\n--Input--\n4 1\n3 4 5 1\n--Output--\n4",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1 2 3\n''') == '2'\nprint(solution('''3\n1 2 3\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1\\n1 2 4') == '1'\nassert solution('5 2\\n1 2 4') == '3'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == \"G:\\nF:------------------\\ne: \\nD:--------------------\\nc: *\\nB:--------------------------------\\na: \\ng:\\nf:------------------\\ne: \\nD:--------------------\\nc: *\\nB:--------------------------------\\na: \\nG:------------------\"\n\nassert solution('12') == \"G:\\nF:-----------------\\ne: \\nD:----------------\\nc: --------------\\nB:------------------\\na: --------------\\ng:-----------------\\ne: \\nD:----------------\\nc: --------------\\nB:------------------\\na: --------------\"\n\nassert solution('25') == \"G:\\nF:------------------\\ne: --------\\nD: ----------\\nc: --------\\nB: ----------\\na: ----------\\ng: ----------\\ne: --------\\nD: ----------\\nc: --------\\nB: ----------\\na: ----------\"\n",
        "num_ids_2": 139,
        "num_ids_4": 210
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == 'G:                                              \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == 'G:               \\nF: -------------------------------------*--------------------\\nE:       *      *          *            *\\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *      **    *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *\\ng: -----------------------------------------------*----------\\nf:                                               \\ne: ----------------------------------------------------------\\nd:                                               \\nc:                                               \\nb:                                               \\na: ----------------------------------------------------------'\n",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == 'G:       \\nF: -------------------------------------*-------*----------------\\nE:       *   *          *             *   *                \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------*-----*------*-----*------*---------\\nA:                                                  *\\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                           \\nc:                                                           \\nb:                                                           \\na: ----------------------------------------------------------'\nassert solution('1') == 'g:       \\nf:                                   \\ne:                                   \\nd:                                           \\nc:                                           \\nb:                                           \\na:                                   \\n'\nassert solution('16') == 'G:       \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                           \\nc:                                                           \\nb:                                                           \\na: ----------------------------------------------------------\\n'\nassert solution('31') == 'G:       \\nF: ------------------------------------*-----------------------*--------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*-------------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *\\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                               \\nc:                                                               \\nb:                                                               \\na: ----------------------------------------------------------\\n'\nassert solution('56') == 'G:       \\nF: ------------------------------------*-----------------------*--------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*-------------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *\\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                               \\nc:                                                               \\nb:                                                               \\na: ----------------------------------------------------------\\n'\n",
        "num_ids_2": 182,
        "num_ids_4": 455
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''26\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:\ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('27') == '''G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: -----------------------------------------------*----------\nf:\ne:\nd:\nc:\nb:\na: ---------------------------'''\n\nassert solution('1') == '''1:\n*'''\nassert solution('2') == '''1:\n*'''\nassert solution('3') == '''1:\n*'''\nassert solution('4') == '''1:\n*'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution
        "num_ids_2": 1204,
        "num_ids_4": 1204
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:    \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                \\ng: -----------------------------------------------*----------\\nf:                                                \\ne: ----------------------------------------------------------\\nd:                                                \\nc:                                                \\nb:                                                \\na: ----------------------------------------------------------\\n'\nassert solution('5\\nB B G G F D D D C E D D E D F G A A A A E F F F C C C C G F A F D D E D F F C E E A D D D F E D D D D D C E C C D C C A D E D A A A A A D E D A A D D D E D D D A A A A A A A D E D A A D D D A D D D A A D D D A A A A D E D A A A A A A D E D A A D D D E D D D A A A A A A A A D E D A A D D D A A A A A A A A A A D E D A A D D D A A A A A A A A A A D E D A A A D D D A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A",
        "num_ids_2": 1198,
        "num_ids_4": 1198
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"G:     *      *     *      *     *\\nF:     *       *       *     *      *       *\\nE: --*---*---*------*------*--\\nD: --*---*---*------*------*--\\nC: * *      *      *      *       *\\nB:     --*---*---*------*------*--\\nA: --*---*---*------*------*--\\ng: --*---*---*------*------*--\\nf:       *       *       *       *       *\\ne: --*---*---*------*------*--\\nd: --*---*---*------*------*--\\nc: * *      *      *      *       *\\nb:     --*---*---*------*------*--\\na:     *       *      *      *       *\"\nassert solution(\"5\") == \"G:        *      *      *      *      *\\nF: *      *      *       *      *       *\\nE: *      *      *      *       *       *\\nD: *      *      *      *       *       *\\nC: *      *      *      *      *       *\\nB:     *      *      *      *       *       *\\nA: *      *      *      *       *       *\\ng:     *      *      *      *      *      *\\nf:       *      *      *      *      *      *\\ne:     *      *      *      *      *      *\\nd:     *      *      *      *      *      *\\nc: *      *      *      *      *      *\\nb:     *      *      *      *      *      *\\na:     *      *      *      *      *      *\"\nassert solution
        "num_ids_2": 426,
        "num_ids_4": 1077
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == '''G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n3\n1 1 1\n\"\"\") == \"possible\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'possible'\nassert solution('1 1 1') == 'impossible'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 2') == 'impossible'\nassert solution('3 3 2') == 'possible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"possible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == 'possible'\nassert solution('3 2 5') == 'impossible'\n\n'''\n\n\n'''\nApproach:\n\nFirst, we assume that all the provided lengths are positive, and that we can form a triangle with only 3 sticks.\n\nIf we can, we will have two conditions:\n\nThe first condition is that the length of the longest stick is the sum of the two shorter sticks.\n\nThe second condition is that the length of the longest stick is the maximum of the two shorter sticks.\n\nIf both conditions are met, we will have the triangle formed.\n\nElse, we cannot form a triangle.\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 2 1\\n') == 'possible'\nassert solution('3\\n6 3 2\\n') == 'impossible'\nprint(solution('2\\n'))\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1 1\n1 1\n1 1''') == 'possible'\nassert solution('''3\n1 2 2\n1 1\n1 1''') == 'impossible'\nassert solution('''10\n5 1 3 1 3 2 2 2 2 2 2\n5 3 3 3 2 2 2 2 2 2 2''') == 'impossible'\nassert solution('''5\n5 2 1 3 1 3 2 2 2 2\n5 3 2 2 2 2 1 2 1 2''') == 'impossible'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'impossible'\nassert solution('4 7') == 'possible'\nassert solution('8 5 3') == 'impossible'\nassert solution('2 10 4') == 'possible'\nassert solution('1 1 1 1 1 1') == 'impossible'",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"possible\"\nassert solution(\"1 1 1\") == \"impossible\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1 1\n1 1 1\n1 1 1''') == 'possible'\nassert solution('''3\n1 1 1\n2 2 2\n3 3 3''') == 'impossible'\nassert solution('''2\n2 2\n3 3''') == 'impossible'\nassert solution('''2\n2 2\n2 2''') == 'impossible'\nassert solution('''3\n1 1 1\n2 2 2\n2 2 2''') == 'possible'\n''')\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n4 3 3 2 1 2 2 1 1 3\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5\\n'\n    '4 3 3 2 1 2 2 1 1 3'\n    ) == '3'\nassert solution(\n    '5\\n'\n    '4 3 3 2 1 2 2 1 1 3'\n    ) == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 2 2 3') == '3'\nassert solution('5\\n1 1 2 2 3') == '4'\nprint('all tests passed')\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\nassert solution(\"3\\n10 4 2 3 1 5 6 8 10\") == \"1\"\nassert solution(\"9\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\n\"\"\"\n\nimport sys\nfrom math import floor, ceil",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('100\\n400 2 1 3 2 5 2 1 2 5 1 3 4 2 5 1 3 4 5 2 5 1') == '7'\nassert solution('1\\n10 1 1 1') == '1'\n",
        "num_ids_2": 56,
        "num_ids_4": 72
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\nassert solution(\"10\\n10 11 12 13 14 15 16 17 18 19\") == \"2\"\nassert solution(\"10\\n5 1 2 3 1 1 3 2 3\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"5\\n5 5 5 5 5\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 78
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n4 3 3 2 1 2 2 1 1 3\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nPOWELL 9.72 8.61''') == '35.54'\nassert solution('''6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == '9.90'\nassert solution('''6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61''') == '9.90'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '35.54'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'\n\nassert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'\n\nassert solution('''\n4\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nPOWELL 9.78 8.93\nFRATER 9.88 8.92\n''') == 'BLAKE'\n\nassert solution('''\n2\nASHMEADE 9.90 8.85\n''') == 'ASHMEADE'\n\nassert solution('''\n2\nASHMEADE 9.90 8.85\n''') == 'ASHMEADE'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE 9.69 8.72\\nBLAKE 9.78 8.93\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3.0\\nROCK\\nJIM\\nDOB\\nPICK\\n\"\nassert solution(\"4\") == \"3.5\\nROCK\\nJIM\\nPOWELL\\nBLAKE\\n\"\nassert solution(\"2\") == \"3.5\\nDOB\\nPICK\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 84
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"23.88\"\nassert solution(r\"2\\n2.0 1.0\\n3.0 1.0\\n3.0 2.0\\n\") == \"1.34\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nASHMEADE 9.9\\nBLAKE 9.9\\nBOLT 9.9\") == \"ASHMEADE\"\nprint(solution(\"3\\nASHMEADE 9.90\\nBLAKE 9.69\\nBOLT 9.58\"))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"34.86\\nCARTER\\nBOLT\\nPOWELL\\nASHMEADE\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '3\\n1 2\\n2 4\\n5 6') == '2'\nassert solution(\n    '5\\n1 2\\n2 3\\n4 5\\n6 7') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n1 2\n2 4\n5 6\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1 2\n2 4\n5 6\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6\\n') == '2'\nassert solution('5\\n2 4\\n3 1\\n4 6\\n') == '3'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1 2\n2 4\n5 6\n\"\"\") == \"2\"\n\n\"\"\"\nCodeWars - Cloud House\n\nClouds are very hot! Outside the neighborhood, you can't even see them. Fortunately, clouds are made of bright, sunny sunflowers, which are especially useful when you're indoors.\n\nIf you want to play baseball in the rain, you need to bring some shiny white clouds. And the best thing you can do with those clouds is to hang out outdoors. You don't want to get too many of them, though, so you need to pack as many as you can into the same cloud.\n\nYou have to pack as many as you can of the clouds. The number of clouds is always a factor of the total number of clouds. You are given a 2D array of clouds, where each element is either 0 or 1. Each 0 represents a sunny cloud, and each 1 represents a rainy cloud.\n\nLet's start with an example. You have 10 bright, sunny clouds.\n\nWe need to pack 4 of them into a sunny cloud. We can put 4 0s and 4 1s into the same cloud. The following is the representation of the packed clouds:\n\n\nSample Input:\n[\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\nSample Output:\n10\nThe representation of the packed clouds is:\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n\nExplanation:\nWe can pack 4 0s and 4 1s into one cloud.\n\"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''\n10\n1 3\n5 2\n2 5\n6 4\n8 7\n9 6\n10 7\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 4\n5 6\n''') == '2'\n\nassert solution('''\n3\n1 2\n2 4\n5 6\n''') == '1'\n\nassert solution('''\n3\n1 2\n2 3\n5 6\n''') == '2'\n\nassert solution('''\n4\n1 3\n2 4\n5 6\n7 8\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6') == '2'\nassert solution('3\\n1 2\\n2 3\\n3 5\\n5 6') == '2'\nassert solution('1\\n3\\n3\\n') == '1'\nassert solution('2\\n1 2\\n1 4\\n1 2\\n1 6\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n1 2\\n1 4\\n') == '1'\n",
        "num_ids_2": 48,
        "num_ids_4": 130
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('hi') == 'hi'\nassert solution('hey') == 'heey'\nassert solution('heeeyy') == 'heeyy'\n",
        "num_ids_2": 18,
        "num_ids_4": 43
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('hey') == 'hee'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hey') == 'heey'\nassert solution('hey hi') == 'heeey hi'\nassert solution('hey how are you') == 'heeey how are you'\nassert solution('hey i\\'m doing fine') == 'heeyo i\\'m doing fine'\nassert solution('i am done with my project') == 'i m done with my proj'\n\"\"\"\n\n\"\"\"\nimport os\nfrom sys import stdin\n",
        "num_ids_2": 25,
        "num_ids_4": 65
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"Heieye\") == \"heeeye\"\nassert solution(\"heiee\") == \"heehee\"\nassert solution(\"eeeee\") == \"eeeeee\"\nassert solution(\"eee\") == \"eee\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('hey') == 'hey'\nassert solution('oh') == 'oh'\nassert solution('later') == 'alligator'\nassert solution('later this') == 'alligator'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('hey') == 'heey'\nassert solution('hereey') == 'heehe'\nassert solution('hereehreey') == 'heehehehehe'\nassert solution('heeeeey') == 'heehehehhee'\n",
        "num_ids_2": 19,
        "num_ids_4": 50
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hey') == 'hee'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('hey') == 'heey'\nassert solution('hieye') == 'hieyee'\n\"\"\"\n\ns = input()\n\nprint(s.upper() * 2)\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''hey\n\nheyyyy''') == 'heyyyy'\nprint('solution() complete')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"he\u2026ey\") == \"hee\u2026eey\"\nassert solution(\"he\u2026ey abc\") == \"he\u2026eey abc\"\nassert solution(\"he\u2026ey abc xyz\") == \"he\u2026eey abc xyz\"\nassert solution(\"he\u2026ey abc xyz xyz\") == \"he\u2026eey abc xyz xyz\"\nassert solution(\"he\u2026ey abc\") == \"he\u2026eey abc\"\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4'\nassert solution('''\n6\n0 1 1 2 3 2\n1 0 2 3 4 3\n1 2 0 3 4 4\n2 3 3 0 5 4\n2 4 4 5 3 5\n3 4 4 5 4 5\n''') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6'\nassert solution('''\n8\n0 1 1 2 3 2 3\n1 0 2 3 4 3 4\n1 2 0 3 4 4 4\n2 3 3 0 5 4 4\n2 4 4 5 4 5 4\n3 4 4 5 5 5 5\n4 5 5 5 6 4 6\n5 6 6 6 7 4 7\n''') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n1 2\\n1 3\") == \"1 2\"\n\nassert solution(\"1\\n3\\n1 2\\n1 3\") == \"1 2\"\n\nassert solution(\"1\\n5\\n1 2\\n3 4\\n5 3\\n4 5\\n3 1\") == \"1 2\"\n\nassert solution(\"1\\n5\\n1 2\\n3 4\\n5 3\\n4 5\\n3 1\") == \"1 2\"\n\nassert solution(\"1\\n3\\n1 2\\n1 3\") == \"1 2\"",
        "num_ids_2": 44,
        "num_ids_4": 112
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 1 1 2') == '1 2\\n1 3\\n1 4'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('5') == '1 2\\n1 3\\n1 4\\n1 5\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4\\n'\nassert solution('5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''\n2\n0 1 1 2\n1 0 2 3\n''') == '1 2\\n1 3\\n'\nassert solution('''\n3\n0 1 1 2\n1 0 2 3\n1 2 0 3\n''') == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1 2\"\nassert solution(\"2\") == \"1 3\"\nassert solution(\"3\") == \"1 4\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    'EWPGAJRB') == 'ABCD'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"ABCD\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nDRM Encryption is a new kind of encryption. Given an encrypted string (which we\u2019ll call a DRM message), the decryption process involves three steps: Divide, Rotate and Merge. This process is described in the following example with the DRM message \u201cEWPGAJRB\u201d:\n\n\u2013 First, divide the message in half to \u201cEWPG\u201d and \u201cAJRB\u201d.Rotate\n\n\u2013 For each half, calculate its rotation value by summing up the values of each character ($\\textrm{A} = 0, \\textrm{B} = 1, \\ldots, \\textrm{Z} = 25$). The rotation value of \u201cEWPG\u201d is $4 + 22 + 15 + 6 = 47$. Rotate each character in \u201cEWPG\u201d $47$ positions forward (wrapping from Z to A when necessary) to obtain the new string \u201cZRKB\u201d. Following the same process on \u201cAJRB\u201d results in \u201cBKSC\u201d.Merge\n\n\u2013 The last step is to combine these new strings (\u201cZRKB\u201d and \u201cBKSC\u201d) by rotating each character in the first string by the value of the corresponding character in the second string. For the first position, rotating \u2018Z\u2019 by \u2018B\u2019 means moving it forward 1 character, which wraps it around to \u2018A\u2019. Continuing this process for every character results in the final decrypted message, \u201cABCD\u201d.\n\n''')\n    pass",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nprint(solution(input()))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD', \"Should be ABCD\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('ACBDEC' ) == 'ABCD'\nassert solution('ACBEFGH') == 'ABCD'\nassert solution('ABCDEFGH') == 'ABCD'\nassert solution('BCDEFGH') == 'ABCD'\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('EWPGAJRB') == 'ABCD'\nprint('YOUR CODE SUCCESSFULLY RUNS_PYTHON_FORMAT_TESTS')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"EADGAJRB\") == \"ABCD\"\nassert solution(\"EWPGAJRB0\") == \"ABCD\"\nassert solution(\"EWPGAJRB1\") == \"ABCD\"\nassert solution(\"EWPGAJRB2\") == \"ABCD\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abc') == '2'\nassert solution('abcdf') == '2'\nassert solution('abcd') == '0'\nassert solution('abcde') == '1'\nassert solution('abcdd') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"b\"\nassert solution(\"abac\") == \"ac\"\nassert solution(\"abcd\") == \"bc\"\nassert solution(\"aabc\") == \"abc\"\nassert solution(\"aabcdefghijklmnopqrstuvwxyz\") == \"wxyz\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abcd\") == \"cd\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    'abc') == 'ac'\nassert solution(\n    'adef') == 'de'\nassert solution(\n    'ghik') == 'hijk'\nassert solution(\n    'ijklmn') == 'imnj'\nassert solution(\n    'kkmmhh') =='mhkhk'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"ac\"\nassert solution(\"agbc\") == \"cb\"\nassert solution(\"babad\") == \"bab\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == \"a\"\nassert solution(\"aab\") == \"b\"\n\"\"\"\n\n\nimport unittest",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abc') == 'b', \"WRONG!\"\nassert solution('abcd') == 'bcd', \"WRONG!\"\nassert solution('bcd') == 'c', \"WRONG!\"\nassert solution('c') == '', \"WRONG!\"\nassert solution('aa') == 'a', \"WRONG!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"bac\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"bcdfghijklmnopqrstuvwxyz\"\n",
        "num_ids_2": 21,
        "num_ids_4": 57
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == \"c\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"d\") == \"d\"\nassert solution(\"f\") == \"f\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"b\"\nassert solution(\"abcd\") == \"bcd\"\nassert solution(\"aacb\") == \"b\"\nassert solution(\"abac\") == \"ac\"\nassert solution(\"abcde\") == \"e\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaah') == 'no'\n\n### Solution\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        aaah = stdin.count('a')\n        aah = stdin.count('h')\n        if aaah >= 3:\n            return 'no'\n        elif aaah == 2:\n            return 'go'\n        else:\n            return 'go'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\n\nn = int(input())\na = input()\nb = input()\n\na = a.lower()\nb = b.lower()",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\nassert solution('''a\nh\ngo''') == 'no'\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'go'\nassert solution('aaaaa') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\nassert solution('''aaah\naaaaaaah''') == 'no'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaahhh\") == \"no\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaah') == 'no'\nassert solution('h') == 'go'\nassert solution('a') == 'no'\nassert solution('h') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2B1A2B2A1A2A2A2') == 'B'\nassert solution('A1A2A2A1A2A2A2') == 'A'\nassert solution('A1A1A1A1A1A1A1') == 'A'\n",
        "num_ids_2": 50,
        "num_ids_4": 96
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''A2B1A2B2A1A2A2A2''') == 'A'\nassert solution('''B1B2B2A1A2A2A2''') == 'B'\n''')",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B2B1A2A1A2A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1A2B1A2A2A2A2A2B2A1A2A2A2A2A2A2\") == \"B\"\n",
        "num_ids_2": 56,
        "num_ids_4": 99
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'A'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1A2B2A1A2A2A2A\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2A2A2A\") == \"A\"\nassert solution(\"A2B1A2B2A1A2A2A2A2A2A2A2A2\") == \"B\"\nassert solution
        "num_ids_2": 51,
        "num_ids_4": 114
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''A2B1A2B2A1A2A2A2\nA2B1A2A2B2A1A2A2A2\nA1B2A1B1A1B2A1A1A1A1\nB2A1A2A1A1B2A1A1A1A1\nA1A1A1A1A1A1A1A1A1A1A1A1\nA1A1A1A1A1A1A1A1A1A1A1A1A1A1A1\n
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'B'\nassert solution('A2B1A2B2A1A2A2A2A') == 'A'\n",
        "num_ids_2": 50,
        "num_ids_4": 76
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2B') == 'B'\nassert solution('A2B1A2A2B1B2A2B2A1A2A2A2A') == 'B'\nassert solution
        "num_ids_2": 51,
        "num_ids_4": 1657
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5') == '21'\nassert solution('5 3 2 4') == '3'\nassert solution('5 3 2 4') == '3'\nassert solution('1 5 6 20 4') == '20'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21', 'Test #1'\nassert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '15', 'Test #2'\nassert solution('''\n3 1\n1 2\n2 3\n''') == '0', 'Test #3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n\"\"\") == \"21\"\n\nassert solution(\"\"\"\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n\"\"\") == \"21\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5 2 2\\n2 3 8\\n2 4 3') == '21'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == '21'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('7 5\\n1 6 21 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '5'\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"1 6 20 4\\n\"\n    \"5 3 2 4\\n\"\n    \"1 2 2\\n\"\n    \"2 3 8\\n\"\n    \"2 4 3\\n\"\n    \"3 6 10\\n\"\n    \"3 5 15\\n\"\n    ) == \"21\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\"\n\nassert solution(\"3\\n1 2 3\\n\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D HOoorelloLLllLLd!!\") == \"H3o2o3r4l2d1l1l3l2d1!\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D E\") == \"HHHeellloWooorrrrlld!!\"\n\"\"\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"E\") == \"H3e2l3o1W1o3r4l2d1!\"\nassert solution(\"D\") == \"HHHeellloWooorrrrlld!!",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D E') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n\"\"\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D HHHeellloWooorrrrlld!!') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"E Hello World\") == \"H3e2l3o1W1o3r4l2d1!\"\nassert solution(\"D Hello World\") == \"Hello World\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Alice'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"Alice\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"10000000\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Bob\"\nassert solution(\"8\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\nassert solution(\"3\") == \"Alice\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2''') == 'Alice'\nassert solution('''5\n1''') == 'Alice'\n\n'''\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('3') == 'Alice'\nassert solution('1') == 'Bob'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"4\") == \"Bob\"\nassert solution(\"5\") == \"Bob\"\nassert solution(\"10\") == \"Alice\"\nassert solution(\"13\") == \"Bob\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Alice\"\nassert solution(\"10\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"Bob\"\nassert solution(\"3\") == \"Alice\"\nassert solution(\"4\") == \"Bob\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('1') == 'Bob'\nassert solution('10') == 'Bob'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('1 1 1 1') == '1+1+1+1+1'\nassert solution('1 2 3') == '1+2+3'\nassert solution('5 4 3') == '5+4+3'\nassert solution('3 1 2') == '3+1+2'",
        "num_ids_2": 37,
        "num_ids_4": 69
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 3 7\") == \"5+3=7\"\nassert solution(\"5 3 6\") == \"5+3=6\"\nassert solution(\"5 3 5\") == \"5+3=5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 1 7\") == \"5+1=6\"\nassert solution(\"4 -8\") == \"4-8=-4\"\n\"\"\"\n\nn1, n2, n3 = input().split(' ')\nprint(n1 + '+' + n2 + '=' + n3)\nprint(n1 + '-' + n2 + '=' + n3)\nprint(n1 + '*' + n2 + '=' + n3)\nprint(n1 + '//' + n2 + '=' + n3)\nprint(n1 + '%' + n2 + '=' + n3)\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n\nassert solution(\"5 3 4\") == \"5+3=9\"\n\nassert solution(\"5 7 -3\") == \"5-3=7\"\n\nassert solution(\"5 1 3\") == \"5=5\"\n\nassert solution(\"5 -1 3\") == \"5-3=4\"",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('3 5 7') == '3+5=7'\nassert solution('2 3 4') == '2+3=4'\nassert solution('4 2 5') == '4+2=5'\nassert solution('5 5 5') == '5+5=5'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"7 3 8\") == \"7+3=8\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"9 9 9\") == \"9+9=18\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('4 1 8') == '4+1=9'\nassert solution('10 6 7') == '10+6=17'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('2 5 3') == '2+5=7'\nassert solution('5 7 3') == '5+7=12'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('3 2 5') == '3+2=5'\nassert solution('1 2 3') == '1+2=3'\nassert solution('3 1 2') == '3-1=2'\nassert solution('1 1 1') == '1-1=1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n1 1 3\\n') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"5\\n3 2 1 3 2 1 1\") == \"YES\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 2 2 1 1 3 1 1\n''') == 'YES'\nassert solution('''\n2\n1 1\n''') == 'NO'\nassert solution('''\n3\n4 1 1 2\n''') == 'NO'\nassert solution('''\n3\n1 1 3\n''') == 'YES'\nassert solution('''\n3\n4 1 1 3\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 3\\n') == 'YES\\n'\nassert solution('4\\n2 2 2 1\\n') == 'NO\\n'\nassert solution('3\\n2 2 1\\n') == 'NO\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n3 2 2 1 1 3 1 1\n''') == 'YES'\nassert solution('''\n5\n1 3 1 2 3\n''') == 'YES'\nassert solution('''\n3\n1 2 1\n''') == 'YES'\nassert solution('''\n7\n1 2 1 2 1 2 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 2 2 1 1 3 1 1') == 'YES'\nassert solution('7\\n1 2 1 3 1 2 2') == 'NO'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('8') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution([8, 2, 2, 1, 1, 3, 1, 1, 3, 1]) == \"YES\"\nassert solution([10, 5, 3, 2, 1]) == \"NO\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"YES\"\nassert solution(\"15\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\ngoth\\nghost\\nmummy\\nwitch\\nmummy\\nwitch\\nwitch\\nwitch\\nwitch\\nwitch\\nwitch\\nwitch\\n') == 'witch'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'demon'\nassert solution('1') =='mummy'\n'''\nfrom collections import defaultdict\nimport collections\nimport math\nimport random",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\ngoldfish\\n') =='mummy'\nassert solution('2\\npotato\\n') =='mummy'\nassert solution('3\\nmummy\\n') =='mummy'\nassert solution('4\\nmummy\\n') =='mummy'\nassert solution('5\\nmummy\\n') =='mummy'\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\nghost\\nmummy\\nwitch\\nghost\\nmummy\\nwitch\\nghost\\nmummy\\nwitch\\nghost\\nmummy\\nwitch\\n\") == \"ghost\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == 'ghost'\nassert solution('3') =='mummy'\nassert solution('5') == 'witch'\nassert solution('8') == 'demon'\nassert solution('4') =='mummy'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nghost\\nmummy\\nwitch\\ngodess\\n\") == \"ghost\"\nassert solution(\"2\\nghost\\nmummy\\ngold\\n\") == \"ghost\"\nassert solution(\"3\\ngold\\nmummy\\ndemon\\ngold\\n\") == \"demon\"\nassert solution(\"4\\ndemon\\nghost\\n\") == \"mummy\"\nassert solution(\"5\\ndemon\\nwitch\\ngold\\ndemon\\n\") == \"mummy\"",
        "num_ids_2": 46,
        "num_ids_4": 89
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'ghost'\nassert solution('''\n2\nmummy\nghost\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'ghost'\nassert solution('''\n3\nghost\nmummy\nghost\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') =='mummy'\nassert solution('''\n4\nghost\nmummy\nghost\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'witch'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') =='mummy'\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') =='mummy'\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'ghost'\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'ghost'\nassert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'witch'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') =='mummy', \"Should give'mummy'\"\nassert solution('10') == 'ghost', \"Should give 'ghost'\"\nassert solution('10') == 'witch', \"Should give 'witch'\"\nassert solution('10') == 'demon', \"Should give 'demon'\"\n\"\"\"\nfrom collections import defaultdict\n\nn = int(input())\n\nresponses = defaultdict(list)\n\nfor i in range(n):\n    line = input()\n    responses[line].append(i)\n\ncategories = sorted(list(responses.keys()))\n\nres = None\nbest = 0\nfor c in categories:\n    if len(responses[c]) > best:\n        res = c\n        best = len(responses[c])\n\nprint(res)\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nghost') == 'ghost'\nassert solution('1\\nmummy') =='mummy'\nassert solution('1\\nwitch') == 'witch'\nassert solution('10\\ngoth') == 'goth'\nassert solution('10\\nmummy') =='mummy'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nArtist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n\\\n5\\n\\\nTchaikovsky Piano_Favorites November 163\\n\\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\n\\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\n\\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\\nGeorge_Winston Summer Lullaby 215\\n\\\n3\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nTchaikovsky Piano_Favorites November 163\\n\\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\n\\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\n\\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\\nGeorge_Winston Summer Lullaby 215\\n\\\n3\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nTchaikovsky Piano_Favorites November 163\\n\\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\n\\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\n\\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\\nGeorge_Winston Summer Lullaby 215\\n\\\n3\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nTchaikovsky Piano_Favorites November 163\\n\\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\n\\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\n\\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\\nGeorge_Winston Summer Lullaby 215\\n\\\n3\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nTchaikovsky Piano_Favorites November 163\\n\\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\n\\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\n\\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\\nGeorge_Winston Summer Lullaby 215\\n\\\n3\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nTchaikovsky Piano_Favorites November 163\\n\\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\n\\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\n\\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\\nGeorge_Winston Summer Lullaby 215\\n\\\n3\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\\nLength_seconds\\n\\\nTchaikovsky Piano_Favorites November 163\\n\\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\n\\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\n\\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\\nGeorge_Winston Summer Lullaby 215\\n\\\n3\\n\\\nArtist\\n\\\nAlbum\\n\\\nSong_Title\\n\\",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds') == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163'\n",
        "num_ids_2": 217,
        "num_ids_4": 217
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    Artist Album Song_Title Length_seconds\n    5\n    Tchaikovsky Piano_Favorites November 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    3\n    Artist\n    Album\n    Song_Title\n    Sample Output:\n    Artist Album Song_Title Length_seconds\n    George_Winston Summer Lullaby 215\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    ''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n\"\n    \"5\\n\"\n    \"Tchaikovsky Piano_Favorites November 163\\n\"\n    \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\n\"\n    \"James_Taylor Dad_Loves_His_Work London_Town 236\\n\"\n    \"James_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n    \"3\\n\"\n    \"Artist\\n\"\n    \"Album\\n\"\n    \"Song_Title\\n\"\n    \"Sample Output:\") == 'Artist Album Song_Title Length_seconds\\n' + \\\n    'George_Winston Summer Lullaby 215\\n' + \\\n    'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n' + \\\n    'James_Taylor Dad_Loves_His_Work London_Town 236\\n' + \\\n    'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n' + \\\n    'Tchaikovsky Piano_Favorites November 163'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nArtist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\") == \"\"\"Artist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join(['Artist Album Song_Title Length_seconds', '5', 'Tchaikovsky Piano_Favorites November 163', 'James_Taylor Dad_Loves_His_Work Hard_Times 192', 'James_Taylor Dad_Loves_His_Work London_Town 236', 'James_Taylor Dad_Loves_His_Work Summers_Here 163', 'George_Winston Summer Lullaby 215', '3', 'Artist', 'Album', 'Song_Title', 'Length_seconds'])) == '\\n'.join(['Artist Album Song_Title Length_seconds', 'George_Winston Summer Lullaby 215', 'James_Taylor Dad_Loves_His_Work Hard_Times 192', 'James_Taylor Dad_Loves_His_Work London_Town 236', 'James_Taylor Dad_Loves_His_Work Summers_Here 163', 'Tchaikovsky Piano_Favorites November 163', '5', 'Album', 'James_Taylor Dad_Loves_His_Work Hard_Times 192', 'James_Taylor Dad_Loves_His_Work London_Town 236', 'James_Taylor Dad_Loves_His_Work Summers_Here 163', '3', 'Artist', 'Song_Title', 'Length_seconds'])\n\nSample Input:\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----Output-----\nArtist Album Song_Title Length_seconds\n-----Input-----\n1\nArtist\nAlbum\nSong_Title\nLength_seconds\n-----",
        "num_ids_2": 285,
        "num_ids_4": 285
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:') == 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n'\n",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 7') == 'YES'\nassert solution('5 5 5 5 5 5 5') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 5 5 5 5\") == \"YES\"\nassert solution(\"7 2 4 1 1 1 1\") == \"NO\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 10 7\n5 5 5 5 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 1\n3 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 10 1\n3 3\n\"\"\") == \"NO\"\n\n'''\n\nfrom typing import List\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10 7\n5 5 5 5 5 5\n''') == 'YES', 'First'\nassert solution('''\n2 10 7\n5 5 5 5 5\n''') == 'YES', 'Second'\nassert solution('''\n4 10 5\n3 1 2 3\n''') == 'NO', 'Third'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 10 7\") == \"YES\"\nassert solution(\"1 10 7\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n3 10 8\n5 5 5 5 5 5\n''') == 'NO'\nassert solution('''\n3 10 4\n5 5 5 5 5 5\n''') == 'NO'\nassert solution('''\n2 3 4\n5 5 5 5 5\n''') == 'NO'\nassert solution('''\n1 1\n2 2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 10 7\") == \"YES\"\nassert solution(\"1 100 100\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 10 7\n5 5 5 5 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1 10 7\n5 5 5 5 5 5\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n5 3 5 7\\n5 1 5 5 5\\n7 5 5 5 5 5\") == \"YES\"\nassert solution(\"3 3 3\\n4 4 4\\n1 2 1\\n1 2 3\\n1 2 3\\n2 1 1\\n2 1 2\\n1 2 3\\n2 2 1\\n1 2 3\\n2 2 2\\n1 2 3\") == \"YES\"\nassert solution(\"5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\") == \"NO\"\nassert solution(\"5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\\n5 5 5 5 5\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"YES\"\n",
        "num_ids_2": 100,
        "num_ids_4": 189
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == '50.000000'\nassert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == '66.666667'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYYY\\n') == 'Not Effective'\nassert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYYY\\n') == '50.000000'\n",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('10') == '66.67'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == '50.000000'\nassert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == 'Not Effective'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nNNYY\\nYYYY\\nYYNN\\nYYYY\\nYYNN\\nYYYY\\nSample Output:') == '66.666667\\n50.000000'\nprint(solution(input()))\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective'\nassert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == '50.000000'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"Not Effective\"\nassert solution(\"1000\") == \"Not Effective\"\nassert solution(\"1000\") == \"Not Effective\"\nassert solution(\"1000\") == \"Not Effective\"\nassert solution(\"1000\") == \"Not Effective\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nNYNY\nNNNY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\nassert solution('''\n1\nYYNY\nSample Output:\nNot Effective\n50.000000\n''') == 'Not Effective'\nassert solution('''\n100\nYNYY\nSample Output:\nNot Effective\n50.000000\n''') == 'Not Effective'\nassert solution('''\n5\nYNYY\nYYNY\nYNYY\nYYYY\nYYYY\nSample Output:\nNot Effective\n50.000000\n''') == 'Not Effective'\nassert solution('''\n5\nYNYY\nYYYY\nYYYY\nYYYY\nYYYY\nSample Output:\nNot Effective\n50.000000\n''') == 'Not Effective'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nNNNY\\nYYNN\\nYYYY\\nYYYY\\nYYYY\\nYYYY'\n) == 'Not Effective\\n50.0\\nNot Effective\\nNot Effective\\nNot Effective\\nNot Effective\\nNot Effective\\nNot Effective\\nNot Effective\\nNot Effective\\nNot Effective\\n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nNNNY\\nYYNN\\nYYYY\\nYYNN\\nYYYY\\nYYNN'\n) == 'Not Effective\\n50.000000\\n66.666667\\n50.000000\\n66.666667\\n50.000000\\n66.666667\\n50.000000\\n66.666667\\n50.000000'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BAACC') == 'Bruno'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\nC\nC\nA\nA\n''') == \"2\"\nassert solution('''\n10\nAAC\nB\nBAC\nCAB\nCBA\nABB\nACB\nABC\nBAB\nBAC\nAB\n''') == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n\nassert solution() == 'Bruno'\n\nassert solution() == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('5\\nBAAB') == '2'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"ABBB\") == \"2\"\nassert solution(\"BCBA\") == \"2\"\nassert solution(\"BCBA\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nBAACC''') == 'Bruno'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nA\\nA\\nA\\nA\\nA\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nA\\nB\\nB\\nA\\nB\\nC\\nB\\nA\\nA\\nB\\nB\\nC\\nB\\nA\\nA\\nB\\nB\\nA\\nA\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nA\\nA\\nA\\nB\\nC\\nC\\nC\\nA\\nA\\nC\\nA\\nB\\nB\\nC\\nB\\nB\\nA\\nA\\nB\\nA\\nB\\nB\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nB\\nA\\nA\\nB\\nB\\nC\\nB\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nA\\nA\\nA\\nB\\nC\\nC\\nC\\nA\\nA\\nC\\nA\\nB\\nB\\nC\\nB\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nB\\nA\\nA\\nB\\nB\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nA\\nA\\nC\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nB\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nB\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\nA\\nB\\nB\\nC\\nC\\nC\\nC\\nA\\",
        "num_ids_2": 1626,
        "num_ids_4": 1626
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BAACC') == 'Bruno'\nassert solution('BABAC') == 'Bruno'\nassert solution('AABCC') == 'Goran'\nassert solution('AABCCC') == 'Goran'\nassert solution('CBAAC') == 'Adrian'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 E right\") == \"3 543\"\nassert solution(\"10 A wrong\") == \"10 704\"\nassert solution(\"30 C wrong\") == \"30 637\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n') == '3 543'\nassert solution('1 3 right\\n1 2 wrong\\n1 5 wrong\\n1 4 wrong\\n1 2 wrong\\n-1\\n') == '3 4'\nassert solution('9 8 right\\n7 2 wrong\\n1 8 wrong\\n9 7 wrong\\n-1\\n') == '9 8'\nassert solution('7 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n') == '7 543'\nassert solution('8 E right\\n7 A wrong\\n1 5 wrong\\n9 D wrong\\n-1\\n') == '8 4'",
        "num_ids_2": 94,
        "num_ids_4": 183
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4 3'\n\"\"\"\nimport re",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 E right') == '3 543'\nassert solution('10 A wrong') == '10 543'\nassert solution('30 C wrong') == '30 543'\nassert solution('50 B wrong') == '50 543'\nassert solution('100 A wrong') == '100 543'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join(['3 E right', '10 A wrong', '30 C wrong', '50 B wrong', '100 A wrong', '200 A right', '250 C wrong', '300 D right', '-1'])) == '3 543'\nassert solution('\\n'.join(['7 H right', '15 B wrong', '30 E wrong', '35 E right', '80 B wrong', '80 B right', '100 D wrong', '100 C wrong', '300 C right', '300 D wrong', '-1'])) == '7 543'\n\n-----------------------------------------------------------------------------------------------------------------------------------------------\nI didn't understand the required format for the problem. I assumed that the input was formatted correctly and it was only one line of the form, or at least, multiple lines of the form, like this one. I kept going through each line of the input and if the line does not contain a word 'right' or 'wrong', I ignore it. I never encountered a line of the form like this:\n\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n10 G wrong\n\nThis is not a submission log.\n\nI would like to write code that would allow me to generate an E-log. So how would I write that?\n\nI don't quite remember.\n\nI didn't quite get the required format for the problem. I assumed that the input was formatted correctly and it was only one line of the form, or at least, multiple lines of the form, like this one. I kept going through each line of the input and if the line does not contain a word 'right' or 'wrong', I ignore it. I never encountered a line of the form like this:\n\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n10 G wrong\n\nThis is not a submission log.\n\nI would like to write code that would allow me to generate an E-log. So how would I write that?\n\nI don't quite get the required format for the problem. I assumed that the input was formatted correctly and it was only one line of the form, or at least, multiple lines of the form, like this one. I kept going through each line of the input and if the line does not contain a word 'right' or 'wrong', I ignore it. I never encountered a line of the form like this:\n\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n10 G wrong\n\nThis is not a submission log.\n\nI would like to write code that would allow me to generate an E-log. So how would I write that?\n\nI don't quite get the required format for the problem. I assumed that the input was formatted correctly and it was only one line of the form, or at least, multiple lines of the form, like this one. I kept going through each line of the input and if the line does not contain a word 'right' or 'wrong', I ignore it. I never encountered a line of the form like this:\n\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n10 G wrong\n\nThis is not a submission log.\n\nI would like to write code that would allow me to generate an E-log. So how would I write that?\n\nI don't quite get the required format for the problem. I assumed that the input was formatted correctly and it was only one line of the form, or at least, multiple lines of the form, like this one. I kept going through each line of the input and if the line does not contain a word 'right' or 'wrong', I ignore it. I never encountered a line of the form like this:\n\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n10 G wrong\n\nThis is not a submission log.\n\nI would like to write code that would allow me to generate an E-log. So how would I write that?\n\nI don't quite get the required format for the problem. I assumed that the input was formatted correctly and it was only one line of the form, or at least, multiple lines of the form, like this one. I kept going through each line of the input and if the line does not contain a word 'right' or 'wrong', I ignore it. I never encountered a line of the form like this:\n\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n10 G wrong\n\nThis is not a submission log.\n\nI would like to write code that would allow me to generate an E-log. So how would I write that?\n\nI don't quite get the required format for the problem. I assumed that the input was formatted correctly and it was only one line of the form, or at least, multiple lines of the form, like this one. I kept going through each line of the input and if the line does not contain a word 'right' or 'wrong', I ignore it. I never encountered a line of the form like this:\n\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n10 G wrong\n\nThis is not a submission log.\n\nI would like to write code",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\nassert solution('7 H right\\n15 B wrong\\n30 E wrong\\n35 E right\\n80 B wrong\\n80 B right\\n100 D wrong\\n100 C wrong\\n300 C right\\n300 D wrong') == '4 543'\nassert solution('7 H right\\n15 A wrong\\n30 E wrong\\n35 E right\\n80 B wrong\\n80 B right\\n100 D wrong\\n100 C wrong\\n300 C right\\n300 D wrong') == '4 543'\n",
        "num_ids_2": 112,
        "num_ids_4": 171
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3 543'\n\"\"\"\n\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 A right\n20 A wrong\n2 C wrong\n10 E right\n''') == \"0 543\"\nassert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n''') == \"3 543\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'\nassert solution('''7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong''') == '502 532'\n'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 E right') == '5 3 543'\nassert solution('10 A wrong') == '10 1 2 543'\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5') == '5'\nassert solution('20 10') == '-1'\nassert solution('20 3') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''5 10\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n4 5\n1 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 5') == '5'\nassert solution('10 1') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '-1'\n",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == '5'\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n10 20\n10 5 1 3 4 2 4 2 1 2 1\n9 5 3 4 1 5 3 1 1 4\n8 5 2 4 1 5 4 5 2 4 1\n7 5 1 5 5 3 5 2 3 2\n6 5 2 3 2 3 1 5 5 5\n5 4 2 4 1 5 4 5 2 4 1\n4 5 1 5 4 3 5 2 3 2\n2 5 1 5 5 3 5 2 3 2\n5 3 2 1 4 3 5 2 3 1\n3 4 2 4 2 2 4 4 2 3\n''') == '8'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 7') == 'gunilla has a point'\nassert solution('2\\n1 7\\n5 5') == 'edward has a point'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'gunilla has a point'\nassert solution('5') == 'gunilla has a point'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n0\\n7\\n5\\n') == 'gunilla has a point'\nassert solution('1\\n5\\n0\\n5\\n') == 'edward is right'\nassert solution('2\\n1\\n2\\n') == 'gunilla has a point'\n",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'gunilla has a point'\nassert solution(\"\"\"\n1 7\n5 5\n\"\"\") == 'gunilla has a point'\nassert solution(\"\"\"\n3\n1 2\n2 3\n3 4\n\"\"\") == 'edward is right'\nassert solution(\"\"\"\n1\n2\n\"\"\") == 'gunilla has a point'\nassert solution(\"\"\"\n5\n1 3\n2 4\n3 5\n\"\"\") == 'edward is right'\n",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"gunilla has a point\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 7') == 'gunilla has a point'\nassert solution('2 1') == 'gunilla has a point'\nassert solution('3') == 'Edward has never been watching'\n\n'''\n\n'''\n  1. Write and test a function that takes in a number n and then calls itself n times. Return the product of all of these numbers.\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 7\\n5 5') == 'gunilla has a point'\nassert solution('2\\n1 3\\n2 2') == 'gunilla has a point'\nassert solution('2\\n2 3\\n4 4') == 'gunilla has a point'\nassert solution('2\\n2 2\\n1 1') == 'gunilla has a point'\nassert solution('5\\n1 2\\n3 4\\n5 5\\n6 6') == 'gunilla has a point'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4 1\\n5 3\\n6 7') == 'gunilla has a point'\nassert solution('1\\n2 3\\n1 2 3\\n4 5 6') == 'gunilla has a point'\nassert solution('1\\n2 5\\n1 5 3\\n4 6 7') == 'gunilla has a point'\nassert solution('2\\n6 4\\n6 2 2\\n4 6 7') == 'gunilla has a point'\nassert solution('2\\n3 2\\n3 1 1\\n4 2 1\\n5 3 2\\n4 5 2\\n3 5 3\\n') == 'gunilla has a point'\n",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'gunilla has a point'\nassert solution('1') == 'edward is right'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 7\n5 5\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n2\n1 2\n3 3\n\"\"\") == \"edward is right\"\nassert solution(\"\"\"\n3\n4 3\n5 2\n\"\"\") == \"gunilla has a point\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''1\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''2\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''2\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution(\"\") == '1'\nassert solution(\"1\\nt\") == '1'\nassert solution(\"1\\nt1\\nt\") == '2'\nassert solution(\"1\\nt1\\nt2\\ns\") == '2'\n",
        "num_ids_2": 17,
        "num_ids_4": 44
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\n s 1\\ns 2\\ns 3\\ns 4\\n t 5 6\\ns 5\\ns 6\\ns 10\\n\"\n) == \"4 4 4 1 2 2\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"1\\n2\\n2\\n4\\n\"\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 11') == '4'\nassert solution('10 12') == '4'\nassert solution('10 11') == '4'\nassert solution('10 13') == '4'\n\ninput:\n2\n1 1\n0\nSample Output:\n0\n0",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '2'\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\nt 1\\",
        "num_ids_2": 1515,
        "num_ids_4": 1515
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '3'\nassert solution('10 3') == '4'\nassert solution('20 1') == '2'\nassert solution('10 4') == '5'\nassert solution('5 2') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2 3 4\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n') == '2015'\nassert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n') == '1982'",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2015'\nassert solution('2') == '1982'\nassert solution('3') == '2016'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\n\n'''\n=====\nGiven a list of trips of which trips include all the countries visited by Grandpa Bernie, can you tell if the list contains an infinite number of trips, or if it contains a finite number of trips?\n\nInput:\nThe input consists of:\n - one line with one integer $n$ ($1 \\leq n \\leq 10^5$), the number of trips Grandpa Bernie went on;\n - $n$ lines each containing the name $s$ ($1 \\leq |s| \\leq 20$) of a country and an integer $y$ ($1 \\leq y \\leq 10^6$) representing a trip to country $s$ that Grandpa Bernie went on in year $y$;\n - one line with one integer $q$ ($1 \\leq q \\leq 10^5$), the number of queries;\n - $q$ lines each containing the name $s$ of a country and an integer $k$ representing a query for the $k$:th time Grandpa Bernie went to country $s$.\n\nEach country name only consists of letters from the English alphabet. It is also guaranteed that, for each query asking for the $k$:th trip to country $s$, $k$ is at least $1$ and no greater than the number of times Grandpa Bernie went to country $s$. In particular, it is guaranteed that Grandpa Bernie has visited country $s$ at least once.\n\nSample Input:\n5\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\nSample Output:\nTrue\nFalse\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n\") == \"1985\"\nassert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n\") == \"1985\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nassert solution('''\n5\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '1982'\n'''\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(sys.path[0]))\nfrom graphs.graph_utils import TreeNode",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\n\nassert solution('''\n7\nMelbourne 1982\nLondon 1975\nNew South Wales 1990\nVictoria 1995\nTasmania 1997\nWales 1996\nSouth Australia 1993\n''') == 'Tasmania 1997'\n\nassert solution('''\n5\nChicago 1986\nLondon 1986\nParis 1985\nAtlanta 1986\nMilan 1987\n''') == 'Milan 1987'\n\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1982'\nassert solution('2') == '1996'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"2015\"\nassert solution(\"2\") == \"1982\"\nassert solution(\"3\") == \"2016\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n\") == \"1982\\n2016\\n2015\"\nprint(solution(\n    \"3\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n\"))\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nIceland 1\\nIceland 2\\nIceland 1\") == \"1982\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '10'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abbcccddddeeeee') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n\nassert solution(\"aabc\") == \"1\"\n\nassert solution(\"aabc\") == \"1\"\n\nassert solution(\"abcd\") == \"1\"\n\nassert solution(\"aabc\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 49
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '10'\nassert solution('abbcccddddeeeee') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abbcccddddeeeee') == '10'\nassert solution('abbcccddddeeeee') == '10'\nassert solution('abbcccddddeeeee') == '10'\nassert solution('abbcccddddeeeee') == '10'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abdcdcde') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abcdefgh') == '10'\nassert solution('aaaaaaaaaa') == '10'\nassert solution('ab') == '0'\nassert solution('') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering... and its. humanity'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\") == \"Engineering... and its humanity\"\nassert solution(\"Inefficiency is a blight on the world and its humanity\") == \"Inefficiency... and its humanity\"\n\nIf your code has already been running, the first line will print \"Goodbye\" and your program will exit. Otherwise, the program will run and print \"Welcome to your personal dictionary.\"\n\n\"\"\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering.. saving. the. world from... and.... its... humanity'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering... and its humanity'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'I....... and its humanity'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its humanity'\nassert solution('''\nPiiiiiii is the name\nof the\nartist\nby the\nname of the\ngenius\n''') == 'Piiiiiii... and the name of the artist by the name of the genius'\nassert solution('''\nHe said \"The Giver\" to Bob, \"the Giver\"\nand the Greed and Temptation, \"the Greed and Temptation\"\nbut\"The Man himself\" and \"the Man himself\"\nand the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\nto Bob, \"the Giver\" and the Greed and Temptation, \"the Greed and Temptation\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from.. and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its... and its...",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering will save the world from inefficiency.'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'Inefficiency is a blight on the world and its humanity.'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering will save the world from inefficiency.'\nassert solution('Book\\nBook\\nBook\\n') == 'Book.'\nassert solution('dear\\nDear\\nDear\\n') == 'dear.'\n",
        "num_ids_2": 60,
        "num_ids_4": 80
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\") == \"Engineering will save the world from.. and its humanity\"\nassert solution(\"Inefficiency is a blight on the world and its humanity\") == \"Inefficiency is a.. and its.. and its humanity\"\nassert solution(\"Coding: Python\") == \"Coding:. Python\"\nassert solution(\"FIFA: FIFA\") == \"FIFA:. FIFA\"\nassert solution(\"Inefficiency is a blight on the world and its humanity\") == \"Inefficiency is a.. and its.. and its humanity\"\n",
        "num_ids_2": 60,
        "num_ids_4": 94
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency.. is a.. and its humanity'\nprint(solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n'''))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''5 5\n-1 -2 3\n-1 1 2\n1 -2 3\n1 1 -2\n1 -2 -3''') == 'unsatisfactory'\n\n'''\n\nimport math\nimport sys\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'\nassert solution('10 20\\n1 2 3 4 5 6 7 8 9 10\\n
        "num_ids_2": 1332,
        "num_ids_4": 1332
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"satisfactory\"\nassert solution(\"\"\"5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\"\"\") == \"satisfactory\"\nassert solution(\"\"\"1\n-1\"\"\") == \"unsatisfactory\"\nassert solution(\"\"\"4\n1\n1 2\n1 3\n-1\n3\"\"\") == \"satisfactory\"\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 29
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') =='satisfactory'\n\nassert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'\n\nassert solution('5 3\\n-1 -2 3\\n-1 2 3\\n1 2 -3\\n1 -2 -3\\n1 -2 3') == 'unsatisfactory'\n\n\nSample Input 2:\n5 2\n-3\n-2\n1 2\n1 -2\n-1 -2\nSample Output:\nsatisfactory\n",
        "num_ids_2": 58,
        "num_ids_4": 103
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == \"satisfactory\"\nassert solution('''1 1\n-1 -1\n1 -1''') == \"unsatisfactory\"\nassert solution('''2 1\n-1 -1\n1 -1''') == \"satisfactory\"'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\nassert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == 'unsatisfactory'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') =='satisfactory'\nassert solution('5 3') == 'unsatisfactory'\nassert solution('4 3') =='satisfactory'\nassert solution('3 4') == 'unsatisfactory'\n'''\nimport itertools\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"unsatisfactory\"\nassert solution(\"\") == \"unsatisfactory\"\nassert solution(\"12 3\") == \"unsatisfactory\"",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == \"satisfactory\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\nprint('PASSED!')",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"5\\n1 1 1 1 1 1\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 1 1 5 3 4 6 6\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 1 1 5 3 4 6 6\n''') == \"4\"\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('8') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"10\") == \"none\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n1 1 1 5 3 4 6 6') == '3'\n\"\"\"\nfrom typing import List\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        return self.__solution(stdin)\n\n    def __solution(self, stdin: str) -> str:\n        stdin = list(map(int, stdin.split(' ')))\n        max_uoc = max(stdin)\n        max_uoc_ind = stdin.index(max_uoc)\n        if max_uoc_ind == 0:\n            return '0'\n        elif max_uoc_ind == max_uoc:\n            return 'none'\n        else:\n            return str(max_uoc_ind)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 1 1 5 3 4 6 6\n''') == '4'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 1 1 5 3 4 6 6\n''') == '4'\nassert solution('''\n3\n1 1 1 5 3 4 6 6\n''') == 'none'\nassert solution('''\n6\n1 1 1 5 3 4 6 6\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '20:00:00\\n04:00:00') == '08:00:00'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10:00:00') == '10:00:00'\nassert solution('10:00:00') == '10:00:00'\nassert solution('00:00:00') == '00:00:00'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"08:00:00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n\"\"\"\nimport time\n\nstdin = input()\nt = time.strptime(stdin, '%H:%M:%S')\n\nh = int(t.tm_hour)\nm = int(t.tm_min)\ns = int(t.tm_sec)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\nassert solution('23:00:00') == '14:00:00'\nassert solution('20:00:00') == '08:00:00'\n\nstdin = input()\nt = int(stdin.split(':')[0])\nv = int(stdin.split(':')[1])",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12:00:00\") == \"12:00:00\"\nassert solution(\"00:00:00\") == \"00:00:00\"\nassert solution(\"00:00:00\") == \"00:00:00\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\nprint('ok')\nassert solution(\"20:00:00\\n00:00:00\") == \"08:00:00\"\nprint('ok')\nassert solution(\"20:00:00\\n00:00:00\") == \"08:00:00\"\nprint('ok')\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"4\"\nassert solution(\"24 8\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1, 1\\n') == '4'\nassert solution('2, 3\\n') == '2'\nassert solution('3, 3\\n') == '3'\nassert solution('4, 4\\n') == '4'\nassert solution('5, 5\\n') == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('31 6') == '4'\nassert solution('31 5') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n31 6\n''') == '4'\nassert solution('''\n31 1\n''') == '4'\nassert solution('''\n2 2\n''') == '2'\nassert solution('''\n2 2\n''') == '1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution(input_string=\"1 10\") == '4'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"1 9\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('0') == '1.000000000000000000'\nassert solution('1') == '1.000000000000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == 2\nassert solution('3') == 2.6666666666666665",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('8') == '2.25'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('1000000') == '2.718281828459045'\nassert solution('1000000') == '3.14159265358979'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2.6'\nassert solution('4') == '2.4'\nassert solution('10') == '3.141592653589793'\nassert solution('1000000000000') == '3.141592653589793'\nassert solution('1000000000000000') == '1.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 60
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2.718281828459045'\nassert solution('10') == '22.2220303030403'\nassert solution('1000000') == '2.718281828459045'\n",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2.0'\nassert solution('10000000') == '8.3333333333333335'\n\"\"\"\nn = int(stdin)\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2.6666666666666665'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2.0'\nassert solution('10') == '10.0'\nassert solution('100') == '100.0'\nassert solution('1000') == '999.0'\nassert solution('10000') == '9997.0'\nprint('YOUR CODE IS CORRECT!')\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"paul\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == \"opponent\"\nassert solution(\"5 3 7\") == \"paul\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('12 5 23') == 'opponent'\nassert solution('1 1') == 'paul'\nassert solution('1 2') == 'opponent'\nassert solution('1 1 1 1 1') == 'paul'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 7\n    ''') == 'paul'\nassert solution('''4 2 6\n    ''') == 'opponent'\nassert solution('''1 1 1\n    ''') == 'opponent'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2 7\npaul\n''') == 'opponent'\nassert solution('''\n5 3 7\nopponent\n''') == 'paul'\n'''\n    'YO, I AM THE GOD!\n      ''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"paul\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 7\npaul''') == 'opponent'\nassert solution('''5 5 9\npaul''') == 'paul'\nassert solution('''3 7 6\npaul''') == 'opponent'\nassert solution('''1 1 1\npaul''') == 'paul'\nassert solution('''10 10 10\npaul''') == 'opponent'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('2 2 2') == 'paul'\nassert solution('4 4 4') == 'opponent'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"opponent\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 7\n''') == 'paul'\nassert solution('''\n0 3 7\n''') == 'opponent'\nassert solution('''\n5 0 7\n''') == 'paul'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 1766,
        "num_ids_4": 1766
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '4'\nassert solution('20\\n') == '20'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123') == 'Yes', \"123\"\nassert solution('123a') == 'No', \"123a\"\nassert solution('123d') == 'No', \"123d\"\nassert solution('123z') == 'No', \"123z\"\nassert solution('12345') == 'No', \"12345\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1234\n1234a''') == 'No'\nassert solution('''1233\n1233a''') == 'No'\nassert solution('''1232\n1232a''') == 'Yes'\nassert solution('''1231\n1231a''') == 'No'\nassert solution('''1231\n1231a''') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123') == 'No'\nassert solution('1213') == 'Yes'\nassert solution('123a') == 'No'\nassert solution('1213') == 'Yes'\n\nstdin = 'c0deninja5'\n\nfor c in stdin:\n    if c.isupper():\n        print('No')\n        break\n    elif c.islower():\n        print('Yes')\n        break\n    else:\n        print('No')\n        break",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123\\n123a') == 'No'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123\\n123a\") == \"No\"\nassert solution(\"abc\\n123\") == \"Yes\"\nprint(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"123\\n123a\") == \"No\"\nassert solution(\"45\") == \"No\"\nassert solution(\"AaBbCc\") == \"Yes\"\nassert solution(\"5f7zj6hj6\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\n\nassert solution(\"a2\") == \"No\"\nassert solution(\"a1\") == \"Yes\"\n\nassert solution(\"2a\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'No'\nassert solution('123') == 'Yes'\nassert solution('123') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a abc') == 'abc'\nassert solution('a aa') == 'aa'\nassert solution('a aa ab') == 'aa ab'\n",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"mamalakah\") == \"mamala kahaha\"\nassert solution(\"papapapapapapa\") == \"papapapa papapapa\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('papapripikapa') == 'zelena paprika'\nassert solution('kepemipijapa') == 'zelena paprika'\nassert solution('papapripikapa') == 'zelena paprika'\nassert solution('papapripikapa') == 'zelena paprika'\n",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('zepelepenapa papapripikapa') == \"zelena paprika\"\n\nimport re",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('papapripikapa') == 'zelena paprika'\nassert solution('zapapapripelepenapa') == 'zelena paprika'\nassert solution('zapapapripelepepapa') == 'zelena paprika'\n",
        "num_ids_2": 39,
        "num_ids_4": 61
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))\nfrom itertools import product",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n1 1''') == \"IMPOSSIBLE\"\nassert solution('''1 2\n2 1''') == \"IMPOSSIBLE\"\n\nassert solution('''1 2\n2 1''') == \"ALL GOOD\"\nassert solution('''1 1\n1 1''') == \"ALL GOOD\"\nassert solution('''1 2\n2 1''') == \"IMPOSSIBLE\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\") == \"ALL GOOD\"\nassert solution(\"12\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"-2\\n-1\") == \"-2\"\nassert solution(\"-3\\n3\") == \"IMPOSSIBLE\"\nassert solution(\"-1\\n-2\") == \"-1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution([1,2,3]) == \"ALL GOOD\"\nassert solution([-1,2,3]) == \"-30\"\nassert solution([-1,2,3,-1]) == \"IMPOSSIBLE\"\nassert solution([-1,2,3,-2]) == \"-60\"\n",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '-1'\nassert solution('3 1') == '-2'\nassert solution('2 1') == '-2'\nassert solution('0 0') == 'IMPOSSIBLE'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"0 2\") == \"IMPOSSIBLE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"10\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"\nassert solution(\"0 5\") == \"10\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"-10 -5\") == \"30\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-32 2') == \"-32\"\nassert solution('-32 2') == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '20 25\\n') == '-33\\n', \"First\"\nassert solution(\n    '0 10\\n') == '0\\n', \"Second\"\nassert solution(\n    '8 10\\n') == '8\\n', \"Third\"\nassert solution(\n    '10 -16\\n') == '-30\\n', \"Fourth\"\nassert solution(\n    '40 50\\n') == '-15\\n', \"Fifth\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 0\n1\n''') == 'IMPOSSIBLE', 'For Example'\nassert solution('''\n1 0\n2\n''') == '-1', 'For Example'\nassert solution('''\n0 1\n2\n''') == '-1', 'For Example'\nassert solution('''\n0 2\n1\n''') == '-1', 'For Example'\nassert solution('''\n0 2\n3\n''') == '-1', 'For Example'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('32 2') == '-32'\nassert solution('2 2') == '-32'\nassert solution('-32 2') == '-32'\nassert solution('-2 2') == '-32'\nassert solution('-32 -2') == '-32'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3 2\") == \"both\"\nassert solution(\"1 3 2\") == \"one\"\nassert solution(\"1 3 2\") == \"one\"\nprint('\"Run\" is good. How is \"Check\"?')\"\"\"\n\nimport math\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 3 3\n1 3 4\n''') == 'both'\nassert solution('''2 1 4\n1 2 3\n''') == 'both'\nassert solution('''1 1 2 2\n1 3 3\n''') == 'one'\nassert solution('''3 4 3\n4 5 1\n''') == 'none'\nassert solution('''3 4 4\n1 1 1\n''') == 'one'",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 2, 3, 3]) == \"both\"\nassert solution([1, 3, 4]) == \"one\"\nassert solution([1, 3, 4, 3, 3, 4]) == \"none\"\n",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2 3 3\"\n) == \"both\"\nassert solution(\n    \"1 3 4\"\n) == \"one\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 3 3\n1 3 4''') == 'both'\nassert solution('''2 2 3 3\n1 3 4\n1 2 4''') == 'one'\nassert solution('''2 2 3 3\n1 3 4\n1 2 4\n1 3 4''') == 'none'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('2 2 3 3') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(\"sample.in\").read()) == \"both\"\nassert solution(open(\"input.in\").read()) == \"both\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"1 2 3\") == \"none\"\n\n---Input---\n\n1 2 3\n1 3 4\n\n---Output---\n\nboth\none\nnone\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('1 2 3') == '2'\nassert solution('-6 4 5') == '4'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == 10\nassert solution('1 2 3 4 5') == 10\nassert solution('5 6 3 2 1') == 10\nassert solution('-100 9 -20 -5 -1') == 9",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('-3 -2 -1') == '2'\nassert solution('6 7 8') == '7'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"-3 -2 0 1\") == \"1\"\nassert solution(\"-3 -2 0 1 -10\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 45
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('-4 -6 -8') == '-10'\nassert solution('-1 -2 -3') == '2'\n\n--------------------------------------------------------------",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6 8\") == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2 2') == 2\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().rstrip()\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"5 7 8\") == \"10\"\nassert solution(\"-3 -2 -1\") == \"-2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('500 70') == '533'\nassert solution('50000 70') == '54024'\nassert solution('5000 70') == '54020'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '533'\nassert solution(sample_input_2) == '532'\nassert solution(input) == '500'\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''500 70\nSample Input:\n500 70\nSample Output:\n533''') == '533'\nassert solution('''1000000 1000000\nSample Input:\n1000000 1000000\nSample Output:\n32000000''') == '32000000'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"500 70\") == \"533\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''100 75\n''') == '75'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"600 90\") == \"502\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '533'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('500 70') == '533'\nassert solution('1000 10') == '1002'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('500 70') == '533'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('500 70') == '533'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\"\nassert solution(\"4 4\\n7 7\\n10 10\\n20 20\\n30 30\\n40 40\\n50 50\\n60 60\") == \"30.0\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 10, 60, 2, 90, 80, 89]) == '39.0'\nassert solution([4, 5, 7, 3, 8, 9, 1, 2]) == '30.0'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n10 90\\n20 50\\n') == '39.0'\nassert solution('5\\n6 1\\n9 7\\n20 50\\n30 80\\n') == '30.0'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"39.0\"\nassert solution(\"2\") == \"30.0\"\nassert solution(\"100\") == \"31.0\"\nassert solution(\"6\") == \"13.0\"\nassert solution(\"1 0\") == \"41.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 9\\n69 60\\n100 60\\n') == '39.0'\nassert solution('1 2\\n1 5\\n1 5\\n') == '6.0'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n3\n10 10\n20 10\n30 10\n\"\"\") == r\"\"\"\n39.0\n\"\"\".strip()\n\nassert solution(r\"\"\"\n5\n20 10\n30 10\n40 10\n40 10\n30 10\n\"\"\") == r\"\"\"\n30.0\n\"\"\".strip()\n\nassert solution(r\"\"\"\n10\n20 10\n30 10\n40 10\n50 10\n60 10\n70 10\n80 10\n90 10\n100 10\n\"\"\") == r\"\"\"\n40.0\n\"\"\".strip()\n\nimport sys\nfrom io import StringIO\nimport unittest\nimport os\nfrom utils import *\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print(out)\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"\n2 9\n69 60\n100 60\n\"\"\"\n        output = \"\"\"\n39.0\n\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"\n5\n20 10\n30 10\n40 10\n40 10\n30 10\n\"\"\"\n        output = \"\"\"\n30.0\n\"\"\"\n        self.",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    2 9\n    69 60\n    100 60\n''') == '39.0'\nassert solution('''\n    4 10\n    0 20\n    10 20\n    10 10\n    10 10\n''') == '30.0'\nassert solution('''\n    7 100\n    57 68\n    97 90\n    96 74\n    94 75\n    83 84\n    82 86\n    77 89\n''') == '34.0'\nassert solution('''\n    6 20\n    100 60\n    100 60\n    10 20\n    10 20\n    10 20\n    10 20\n''') == '4.0'\nassert solution('''\n    6 20\n    100 60\n    100 60\n    10 20\n    10 20\n    10 20\n    10 20\n''') == '4.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n46 46 46 46 46\n45 45 45 45 45\n45 45 45 45 45\n45 45 45 45 45\n''') == '35.22222222222223'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1.0'\nassert solution('2 3') == '1.3636363636363636'\nassert solution('2 1') == '0.0'\nassert solution('3 4') == '1.5357142857142858'\nassert solution('4 4') == '2.5357142857142858'\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2.0\"\nassert solution(\"2 3\") == \"3.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n23 27 31 28 30\n''') == '2 28'\nassert solution('''\n2\n0 0\n''') == '2 0'\nassert solution('''\n1\n1\n''') == '2 1'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n23 27 31 28 30\n''') == '2 28'\nassert solution('''3\n10 20 30\n''') == '2 30'\nassert solution('''5\n10 20 30\n''') == '0 1 2 3 4'\nassert solution('''10\n10 20 30\n''') == '0 1 2 3 4'\nassert solution('''5\n10 20 30\n''') == '1 2 3 4 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n23 27 31 28 30\n''') == '2 28'\nassert solution('''\n10\n100 2 5 30 30 40\n''') == '1 20'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n23 27 31 28 30\nSample Input:\n3\n23 28 29\nSample Output:\n1 28''') == '1 28'\n\nassert solution('''5\n23 27 31 28 30\nSample Input:\n4\n23 27 30 29\nSample Output:\n2 28''') == '2 28'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n23 27 31 28 30') == '2 28'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n23 27 31 28 30\nSample Input:\n7\n15 9 -11 0 19 28 -15\nSample Output:\n2 15\n''') == '2 15'\nassert solution('''\n4\n0 1 2 3\nSample Input:\n8\n-16 -13 15 -8 17 0 -6 2 -13 -2\nSample Output:\n0 2''') == '0 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 4 5\\n3\\n-10 -20 -30\") == \"3 -20\"\nassert solution(\"5\\n23 27 31 28 30\\n3\\n-10 -20 -30\\n-20 -30 -40\\n-30 -40 -50\") == \"3 -20\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'\nassert solution('5\\n6 8 17 28 30') == '3 17'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9 10'\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 59
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n23 27 31 28 30\n''') == '2 28'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n6 10 -6 4 9 2\n\"\"\") == \"1 9\"\n\nassert solution(\"\"\"\n2\n12 1 5\n\"\"\") == \"2 1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 3\"\n) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0', \"Should be 0\"\nassert solution('2 2') == '0', \"Should be 0\"\nassert solution('2 1') == '1', \"Should be 1\"\nassert solution('2 5') == '2', \"Should be 2\"\nassert solution('4 2') == '1', \"Should be 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == \"2\"\nassert solution('3 6') == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('3 5') == '1'\nassert solution('4 2') == '0'\nassert solution('8 4') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('4 4 4') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n1 2 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 7\n1 2 1 1 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n5\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"M\") == \"\", \"One\"\nassert solution(\"MWWMM\") == \"\", \"Two\"\nassert solution(\"MMWMW\") == \"\", \"Three\"\nassert solution(\"M\") == \"\", \"Four\"\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nMWWMMWM\nW\nM\nW\nW\nM\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\nMWM\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nMWWMWMMWM') == '9'\nassert solution('5\\nMMWMMMMMW') == '5'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '9'\nassert solution('3') == '1'\nassert solution('4') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1\\nMM\\nW\") == \"9\\nM\"\nassert solution(\n    \"1\\nM\\nM\") == \"9\\nM\"\nassert solution(\n    \"10\\nWW\\nWWWWW\\nWW\\nWMM\\nWMM\\nM\") == \"9\\nM\"\nassert solution(\n    \"5\\nWMM\\nWWW\\nWMM\\nWWM\") == \"5\\nM\"\nassert solution(\n    \"1\\nM\\nM\") == \"9\\nM\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"9\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '3'\nassert solution('5 3') == '2'\nassert solution('4 4') == '0'\nassert solution('5 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 -2 3 undo 2\n9 -1 3 undo 2 undo 1 undo 2 undo 1\n1 undo 1 undo 2''') == \"3\"\nprint(solution('''5 4\n8 -2 3 undo 2\n9 -1 3 undo 2 undo 1 undo 2 undo 1\n1 undo 1 undo 2'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2\\n') == '3'\nassert solution('2 3\\n3 4\\n4 5\\n5 5\\n5 5\\n') == '5'\nassert solution('10 10\\n8 -2 3 undo 2\\n1 3\\n4 5\\n7 8\\n9 10\\n9 10\\n') == '8'\nassert solution('2 4\\n3 4\\n4 5\\n5 5\\n5 5\\n') == '4'\nassert solution('6 6\\n5 7\\n6 8\\n7 8\\n8 9\\n9 10\\n10 10\\n') == '5'\n",
        "num_ids_2": 50,
        "num_ids_4": 120
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1\n2\n4\n0''') == '1'\nassert solution('''5\n2\n-1\n3\n2''') == '2'\nassert solution('''5\n3\n2\n4\n1''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 4\\n8 -2 3 undo 2\"\n    ) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n8 -2 3 undo 2\n''') == '3'\n\"\"\"\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nparents = [i for i in range(n)]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"8 -2 3 undo 2\"\n) == \"3\"\n\nassert solution(\n    \"6 3\\n\"\n    \"2 3 4 5 1 5\"\n) == \"5\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 2 3\"\n) == \"2\"\n\nassert solution(\n    \"3 1\\n\"\n    \"0 2 -1\"\n) == \"2\"\n\nassert solution(\n    \"2 1\\n\"\n    \"-1 2\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('10 3\\n8 -2 -2 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2') == '0'\nassert solution('10 3\\n8 -2 -2 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2') == '0'\nassert solution('10 3\\n8 -2 3 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2') == '1'\nassert solution('10 3\\n8 -2 3 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2\\n8 undo 2') == '0'\n",
        "num_ids_2": 94,
        "num_ids_4": 233
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n8 -2 3 undo 2\n''') == '3'\n\nassert solution('''5\n-4\n''') == '4'\n\nassert solution('''5\n8 -2 -1 -2\n''') == '3'\n\nassert solution('''5\n-4\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 5\\n8 -2 3 undo 2\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3\\n3 2 1') == '6 7'\nassert solution('2 4\\n4 2 4 1') == '8 9'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 2 1\n''') == '6 7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 3\n3 2 1''') == '6 7'\n\nassert solution('''2 3\n3 2 1\n5 7 8''') == '11 13'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 2 3\n3 2 1\n\"\"\") == \"6 7\"\nassert solution(\n\"\"\"\n1 2\n3 2\n\"\"\") == \"7 6\"\nassert solution(\n\"\"\"\n2 2\n2 2\n\"\"\") == \"4 4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 2 3\n3 2 1\n''') == '6 7'\nassert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '7 6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '6 7'\nassert solution('2 3') == '6 5'\nassert solution('2 2') == '3'\nassert solution('2 1') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\n\nassert solution('''\n3 4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '15 15 15 15'\n\nassert solution('''\n2 2\n2 3 1\n''') == '2 2'\n\nassert solution('''\n2 2\n2 2 1\n''') == '2 2'\n\nassert solution('''\n1 1\n1 1\n''') == '1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6 7'\nassert solution('8 5') == '9 10 11 12 13 14 15 16 17 18'\nassert solution('8 5') == '9 10 11 12 13 14 15 16 17 18'\nassert solution('1000 4') == '0 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '''64 correct\n665 incorrect'''\n\nassert solution('''\n10\nmijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn mijn m",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect''') == '65 incorrect'\nassert solution('''7\nals mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen mollen m",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n') == \"64 incorrect\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 incorrect\\n665 correct\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '12 correct\\n43 incorrect\\n'\nassert solution('8') == '14 correct\\n22 incorrect\\n'\nassert solution('10') == '8 correct\\n7 incorrect\\n'\nassert solution('14') == '6 correct\\n14 incorrect\\n'\nassert solution('20') == '64 correct\\n16 incorrect\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nI am in the war\\n6\\nI am in the war\") == \"6 correct\"\nassert solution(\"5\\nI am confused\\n6\\nI am in the war\") == \"4 correct\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills correct\\n\") == \"665 correct\"\nassert solution(\"4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"65 incorrect\"\nassert solution(\"10\\nmermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\") == \"3 correct\"\nassert solution(\"10\\nmermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\") == \"8 incorrect\"\nassert solution(\"5\\n\"\n                 \"mermals mils mils mils mils mils mils mils mils\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals\\n\"\n                 \"mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals mermals merm",
        "num_ids_2": 68,
        "num_ids_4": 158
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nIk ben in de war\\n4\\nmijn molen molen molen molen molen molen molen\\n2\\nmijn moles moles moles moles moles moles moles\\n1\\nIk ben in de war\\n2\\nmijn molen molen molen molen molen molen molen\\n1\\nIk ben in de war\\n2\\nmijn moles moles moles moles moles moles moles\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben in de war\\n2\\nIk ben",
        "num_ids_2": 1498,
        "num_ids_4": 1498
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == \"0 correct\\n0 incorrect\"\nassert solution('1') == \"0 correct\\n1 incorrect\"\nassert solution('2') == \"2 correct\\n1 incorrect\"\nassert solution('3') == \"2 correct\\n1 incorrect\"\nassert solution('4') == \"1 correct\\n1 incorrect\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 incorrect'\n\nassert solution('''10\nThe abacate and abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate abacate abacate abacate abacate abacate\nabacate ab",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3 4 3') == '7'\nassert solution('20 19 2 3 4 7 9 21') == '23'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 4 3') == '7'\nassert solution('3 2 3') == '3'\nassert solution('5 1 2 1 2 1') == '1'\nassert solution('5 1 2 3 4 2') == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 3 4 3''') == '7'\nassert solution('''2\n1 2''') == '4'\nassert solution('''5\n4 1 3 4 3\n3 5 2 1''') == '7'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '7'\nassert solution('10') == '13'\nassert solution('1000000') == '9030800'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n2 3 4 3''') == '7'\nassert solution('''5\n2 3 4 3 5''') == '6'\nprint('All test cases passed.')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 2 3 4 3\\n') == '8'\nassert solution('100000\\n
        "num_ids_2": 1687,
        "num_ids_4": 1687
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '7'\nassert solution('5') == '10'\nassert solution('6') == '7'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3 4') == '7'\nassert solution('4\\n1 2 3 4') == '1'\nassert solution('1000\\n100 2 3 4') == '101'\nassert solution('4\\n2 3 4 5') == '1'\nassert solution('4\\n2 3 4 5') == '4'\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\nassert solution('7\\n1 4 3 2 5') == '2'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\n\"\"\"\n\nimport math",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3 1 1 0\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3 2 1 0\") == \"0.0 0.0\\n1.0 2.0\\n0.0 4.0\"\nassert solution(\"3 4 1 0\") == \"0.0 0.0\\n1.0 2.0\\n0.0 4.0\"\nassert solution(\"3 5 1 0\") == \"0.0 0.0\\n1.5 2.0\\n0.0 4.0\"\n",
        "num_ids_2": 65,
        "num_ids_4": 133
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '''\n0.0 0.0\n2.0 2.0\n0.0 4.0\n'''\n\nassert solution('''\n4\n0 0\n1 1\n0 2\n3\nSample Output:\n-0.0 1.0\n0.0 1.0\n0.0 1.0\n-0.0 0.0\n''') == '''\n-0.0 1.0\n0.0 1.0\n0.0 1.0\n-0.0 0.0\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1\\n1 2\\n0 2\\n3 4\\n') == '2.0 2.0\\n1.0 3.0\\n0.0 4.0\\n'\n\nassert solution('4\\n-1 2\\n-1 3\\n0 2\\n3 4\\n') == '0.0 0.0\\n2.0 3.0\\n-1.0 4.0\\n'\n\nassert solution('5\\n-1 2\\n-1 3\\n0 2\\n3 4\\n') == '0.0 0.0\\n-1.0 3.0\\n-1.0 4.0\\n-2.0 5.0\\n'\n\nassert solution('6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n') == '1.0 1.0\\n2.0 2.0\\n3.0 3.0\\n4.0 4.0\\n5.0 5.0\\n6.0 6.0\\n'\n\nassert solution('6\\n-2 2\\n-2 3\\n0 2\\n3 4\\n5 5\\n6 6\\n') == '-2.0 2.0\\n-2.0 3.0\\n0.0 4.0\\n3.0 4.0\\n5.0 5.0\\n6.0 6.0\\n'",
        "num_ids_2": 105,
        "num_ids_4": 252
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('5\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 96,
        "num_ids_4": 144
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2.0 2.0\"\nassert solution(\"10\") == \"10.0 10.0\"\nassert solution(\"100\") == \"100.0 100.0\"\nassert solution(\"50\") == \"50.0 50.0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''\n3\n0 0\n1 1\n0 2\n2\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''\n2\n0 0\n3 3\n''') == '0.0 0.0\\n3.0 3.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n''') == '3'\nassert solution('''5\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1\n3\n2\n1\n3''') == \"4\"\nassert solution('''5\n3\n2\n2\n1\n3''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('10') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"7\"\nassert solution(\"5\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5''') == \"1\"\nassert solution('''20''') == \"2\"\nassert solution('''10''') == \"2\"\nassert solution('''15''') == \"3\"\nassert solution('''100''') == \"25\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 3') == '4'\nassert solution('100 100') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n12 16\nSample Input 2:\n3 3\n10 20\nSample Output 2:\n40\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"16\"\nassert solution(\"4 2\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"1 2 3 4\") == \"5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n5 6''') == '6'\n\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n20\n10\n10\n20\n12\n10\n15\n''') == '34'\n\nassert solution('''4 2\n20\n12\n20\n10\n20\n''') == '32'\n\nassert solution('''3 4\n20\n12\n10\n20\n''') == '25'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n4 3') == '4'\nassert solution('3\\n2\\n2\\n1') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n1 1\n12 16\n\"\"\") == \"34\"\nassert solution(r\"\"\"\n100 1\n12 16\n\"\"\") == \"34\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1\\n12 16') == '34'\nassert solution('3 1\\n4 5\\n6 7') == '9'\nassert solution('3 1\\n4 5\\n6 7') == '9'\nassert solution('3 1\\n1 2\\n2 3') == '3'\nassert solution('3 1\\n1 2\\n2 3') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 1\n12 16\n\"\"\") == \"34\"\n\nassert solution(\"\"\"0 1\n0 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 1 1\\n3\\n1 2 3\\n') == '3'\nprint('Tests passed!')",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 2 3\") == \"3\"\n\nprint(solution(input()))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_stdin()) == \"3\"\n\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution(\"1 2 3 1\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\nassert solution('4\\n1 2 3 1') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n1\n''') == '3'\nassert solution('''\n4\n1 2 3 1\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3\n1 2\n2 1''') == '1'\nprint('All tests passed!')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n5\n1 2 3 2 1\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n3\n1 2 3 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"0.1\") == \"0\"\nassert solution(\"0.01\") == \"0\"\nassert solution(\"0.001\") == \"0\"\nassert solution(\"0.0001\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10.0') == '1010'\nassert solution('999') == '9989'\nassert solution('1.0') == '1010'\nassert solution('0.0') == '0'\nassert solution('10.00') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"0.1\") == \"1\"\nassert solution(\"101.1\") == \"1095\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.0') == '1088'\nassert solution('5.0') == '500'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1088\"\nassert solution(\"2\") == \"2308\"\nassert solution(\"3\") == \"3363\"\nassert solution(\"4\") == \"4481\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1088\"\nassert solution(\"0.0\") == \"1088\"\nassert solution(\"0\") == \"1088\"\nassert solution(\"1.1\") == \"1088\"\nassert solution(\"10\") == \"1088\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.0') == '1088'\nassert solution('4.0') == '250'\nassert solution('-1.0') == '-250'\nassert solution('1000.0') == '1000'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0.1') == '1088'\nassert solution('1.0') == '1088'\nassert solution('1.1') == '1088.0'\nassert solution('1.4') == '1088.0'\nassert solution('1.5') == '1088.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(1.0) == '1088'\nassert solution(2.1) == '2320'\n\nassert solution(1.5) == '1780'\nassert solution(1.75) == '2590'\nassert solution(1.25) == '2190'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"8.2\") == \"216\"\nassert solution(\"0.3\") == \"0\"\nassert solution(\"-0.2\") == \"0\"\nassert solution(\"12.34\") == \"1234\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 4\\n') == '25.000000000'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '250.0000000000'\nassert solution('1 2') == '260.0000000000'\nassert solution('1 3') == '280.0000000000'\nassert solution('1 4') == '300.0000000000'\nassert solution('2 1') == '250.0000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 4') == \"25.000000000\"\n\"\"\"\nimport math\nn, s = map(int, input().split())\n\nradius = list(map(int, input().split()))\n\nposition = list(map(int, input().split()))\n\nfrom itertools import permutations\n\nfor i in permutations(radius, r=n):\n    for j in range(len(i)):\n        x = position[0] + i[j]\n        y = position[1] + i[j]\n        z = position[2]\n        for k in range(len(i)):\n            if i[k] < x or i[k] < y or i[k] < z:\n                pass\n            else:\n                break\n        else:\n            print(x, y, z)\n\nprint(x, y, z)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 4') == \"25.000000000\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"25.000000000\"\nassert solution(\"4 1\") == \"25.000000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 2') == '12.000000'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 4\n1 1\n1 2\n1 3\n1 5\n''') == '''1.000000000\n2.000000000\n3.000000000\n3.000000000\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 4\\n') == '25.000000000'\nassert solution('0 1\\n0.25\\n1 2\\n0.25\\n1 3\\n0.75\\n1 4\\n0.75\\n1 5\\n0.75\\n1 6\\n0.75\\n1 7\\n0.75\\n1 8\\n0.75\\n1 9\\n0.75\\n1 10\\n0.75\\n1 11\\n0.75\\n1 12\\n0.75\\n1 13\\n0.75\\n1 14\\n0.75\\n1 15\\n0.75\\n1 16\\n0.75\\n1 17\\n0.75\\n1 18\\n0.75\\n1 19\\n0.75\\n1 20\\n0.75\\n1 21\\n0.75\\n1 22\\n0.75\\n1 23\\n0.75\\n1 24\\n0.75\\n1 25\\n0.75\\n1 26\\n0.75\\n1 27\\n0.75\\n1 28\\n0.75\\n1 29\\n0.75\\n1 30\\n0.75\\n1 31\\n0.75\\n1 32\\n0.75\\n1 33\\n0.75\\n1 34\\n0.75\\n1 35\\n0.75\\n1 36\\n0.75\\n1 37\\n0.75\\n1 38\\n0.75\\n1 39\\n0.75\\n1 40\\n0.75\\n1 41\\n0.75\\n1 42\\n0.75\\n1 43\\n0.75\\n1 44\\n0.75\\n1 45\\n0.75\\n1 46\\n0.75\\n1 47\\n0.75\\n1 48\\n0.75\\n1 49\\n0.75\\n1 50\\n0.75\\n1 51\\n0.75\\n1 52\\n0.75\\n1 53\\n0.75\\n1 54\\n0.75\\n1 55\\n0.75\\n1 56\\n0.75\\n1 57\\n0.75\\n1 58\\n0.75\\n1 59\\n0.75\\n1 60\\n0.75\\n1 61\\n0.75\\n1 62\\n0.75\\n1 63\\n0.75\\n1 64\\n0.75\\n1 65\\n0.75\\n1 66\\n0.75\\n1 67\\n0.75\\n1 68\\n0.75\\n1 69\\n0.75\\n1 70\\n0.75\\n1 71\\n0.75\\n1 72\\n0.75\\n1 73\\n0.75\\n1 74\\n0.75\\n1 75\\n0.75\\n1 76\\n0.75\\n1 77\\n0.75\\n1 78\\n0.75\\n1 79\\n0.75\\n1 80\\n0.75\\n1 81\\n0.75\\n1 82\\n0.75\\n1 83\\n0.75\\n1 84\\n0.75\\n1 85\\n0.75\\n1 86\\n0.75\\n1 87\\n0.75\\n1 88\\n0.75\\n1 89\\n0.75\\n1 90\\n0.75\\n1 91\\n0.75\\n1 92\\n0.75\\n1 93\\n0.75\\n1 94\\n0.75\\n1 95\\n0.75\\n1 96\\n0.75\\n1 97\\n0.75\\n1 98\\n0.75\\n1 99\\n0.75\\n1 100\\n0.75\\n2 101\\n0.75\\n3 102\\n0.75\\n4 103\\n0.75\\n5 104\\n0.75\\n6 105\\n0.75\\n7 106\\n0.75\\n8 107\\n0.75\\n9 108\\n0.75\\n10 109\\n0.75\\n11 110\\n0.75\\n12 111\\n0.75\\n13 112\\n0.75\\n14 113\\n0.75\\n15 114\\n0.75\\n16 115\\n0.75\\n17 116\\n0.75\\n18 117\\n0.75\\n19 118\\n0.75\\n20 119\\n0.75\\n21 120\\n0.75\\n22 121\\n0.75\\n23 122\\n0.75\\n24 123\\n0.75\\n25 124\\n0.75\\n26 125\\n0.75\\n27 126\\n0.75\\n28 127\\n0.75\\n29 128\\n0.75\\n30 129\\n0.75\\n31 130\\n0.75\\n32 131\\n0.75\\n33 132\\n0.75\\n34 133\\n0.75\\n35 134\\n0.75\\n36 135\\n0.75\\n37 136\\n0.75\\n38 137\\n0.75\\n39 138\\n0.75\\n40 139\\n0.75\\n41 140\\n0.75\\n42 141\\n0.75\\n43 142\\n0.75\\n44 143\\n0.75\\n45 144\\n0.75\\n46 145\\n0.75\\n47 146\\n0.75\\n48 147\\n0.75\\n49 148\\n0.75\\n50 149\\n0.75\\n51 150\\n0.75\\n52 151\\n0.75\\n53 152\\n0.75\\n54 153\\n0.75\\n55 154\\n0.75\\n56 155\\n0.75\\n57 156\\n0.75\\n58 157\\n0.75\\n59 158\\n0.75\\n60 159\\n0.75\\n61 160\\n0.75\\n62 161\\n0.75",
        "num_ids_2": 1467,
        "num_ids_4": 1467
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2') == '8.000000000'\nassert solution('1 2') == '10.000000000'\nassert solution('2 2') == '10.000000000'\nassert solution('3 2') == '10.000000000'\nassert solution('4 2') == '10.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"0.16666667\"\n\nassert solution(\"3 10\") == \"1.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\n\nassert solution('''\n5 5 10\n5\n10\n10\n20\n25\n''') == 'DA'\n\nassert solution('''\n5 1 2\n1\n1\n1\n1\n1\n''') == 'NE'\n\nassert solution('''\n5 10 10\n5\n10\n10\n20\n25\n''') == 'DA'\n\nassert solution('''\n5 10 10\n5\n10\n10\n20\n25\n''') == 'NE'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n5\n4\n3\n2\n1\n''') == 'NE'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'NE'\nassert solution('''\n5 3 4\n5\n4\n3\n2\n1\n''') == 'DA'\nassert solution('''\n5 3 4\n5\n4\n3\n2\n1\n''') == 'DA'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 4') == 'DA'\nassert solution('2 3 5') == 'DA'\nassert solution('2 3 6') == 'DA'\nassert solution('2 3 7') == 'NE'\nassert solution('2 3 8') == 'NE'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 4') == 'DA'\nassert solution('5 5 5') == 'DA'\nassert solution('3 2 2') == 'DA'\nassert solution('2 3 2') == 'NE'\nassert solution('1 2 1') == 'NE'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == 'DA'\nassert solution('2\\n2\\n3\\n4\\n') == 'NE'\nassert solution('2\\n2\\n5\\n6\\n') == 'DA'\nassert solution('2\\n2\\n3\\n5\\n') == 'NE'\nassert solution('3\\n3\\n4\\n5\\n') == 'DA'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'DA'\nassert solution('2') == 'DA'\nassert solution('3') == 'DA'\nassert solution('4') == 'DA'\nassert solution('5') == 'DA'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('1 2 3') == 'NE'\n\"\"\"\n\n\nimport sys\n\ntest_cases = []\nfor line in sys.stdin:\n    test_cases.append(line)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('1') == 'NE'\nassert solution('2') == 'DA'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\"\nassert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\"\nassert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\"\nassert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\"\nassert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'DA'\nassert solution('2') == 'DA'\nassert solution('3') == 'DA'\nassert solution('4') == 'DA'\nassert solution('5') == 'DA'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0\\n7 42') == '6'\nassert solution('1\\n0 0\\n7 0') == '7'\nassert solution('1\\n0 0\\n7 42\\n3') == '7'\nassert solution('1\\n0 0\\n7 42\\n0') == '7'\nassert solution('1\\n0 0\\n7 42\\n3\\n0') == '7'\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n1 0\\n2 2\\n4 1\\n') == '6'\nassert solution('1\\n3\\n0 0\\n2 2\\n4 1\\n') == '6'\nassert solution('5\\n6\\n3\\n4\\n4\\n5\\n') == '10'\nassert solution('6\\n6\\n3\\n5\\n4\\n4\\n') == '6'\nassert solution('100\\n2\\n25\\n55\\n125\\n25\\n') == '60'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n0 0\n5 6\n0 7\n2 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1\n0 0\n1 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n3 1\n4 0\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '1\\n'\nassert solution('4\\n0 0\\n0 0\\n0 0\\n') == '0\\n'\nassert solution('8\\n0 1\\n0 1\\n0 1\\n') == '1\\n'\nassert solution('10\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0\\n'\nassert solution('12\\n0 0\\n1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '1\\n'\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 49,
        "num_ids_4": 133
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == \"6\"\nassert solution(\"10\\n0 0\\n10 10\") == \"20\"\nassert solution(\"10\\n0 0\\n10 10\\n0 1\\n20 1\") == \"19\"\n",
        "num_ids_2": 36,
        "num_ids_4": 62
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n0 0\n7 42\n''') == '6'\nassert solution('''2\n1 1\n4 8\n''') == '3'\nassert solution('''2\n0 0\n7 42\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0\n7 42\n''') == '6'\n\"\"\"\n\nimport math\n\nn = int(input())\n\nmax = -1\n\nfor i in range(n):\n    t, d = map(int, input().split())\n    t = int(t / 3600)\n    d = int(d / math.sqrt(d * d + 1))\n    if t * 3600 + d > max:\n        max = t * 3600 + d\n\nprint(max)",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 0\n7 42\n''') == '6'\nassert solution('''\n4\n0 0\n1 1\n2 2\n3 3\n''') == '6'\nassert solution('''\n5\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '6'\nassert solution('''\n5\n1 1\n2 2\n3 3\n4 4\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 0, 0]) == \"6\"\nassert solution([7, 42]) == \"6\"\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0') == '6'\nassert solution('2\\n0 0\\n1 2') == '6'\nassert solution('2\\n0 0\\n1 2\\n3 4') == '6'\nassert solution('2\\n0 0\\n1 2\\n3 4\\n5 6') == '6'\nassert solution('2\\n0 0\\n1 2\\n3 4\\n5 6\\n7 8') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 80
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"correct\"\nassert solution(\"5\") == \"correct\"\nassert solution(\"10\") == \"correct\"\nassert solution(\"4\") == \"incorrect\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\n-> CARL\n''') == '1'\nassert solution('''\n-> CARL\n-> BOB\nALICE BOB -> CARL\n''') == '2'\nassert solution('''\n-> ALICE\n-> BOB\n-> CARL\n''') == '3'\nassert solution('''\n-> CARL\n-> BOB\nALICE BOB -> CARL\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n-> BOB\nALICE -> CARL\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n-> ALICE\n-> JESUS\n-> JESUS\n-> BOB\n-> ALICE\n->",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n-> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n-> CARL\\n-> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n-> CARL\\n-> CARL\\n-> CARL') == 'correct'",
        "num_ids_2": 58,
        "num_ids_4": 131
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n-> 2\n-> 3\n-> 4\n-> 5\n1 2 3 4 -> 1 2\n1 2 -> 2\n1 2 3 -> 3\n1 2 3 4 -> 4''') == 'correct'\n\nassert solution('''2\n-> 2\n-> 3\n-> 4\n-> 5\n5 4 -> 4''') == 'correct'\n\nassert solution('''1\n-> 2\n-> 3\n-> 4\n-> 5\n1 2 3 4 -> 1 2\n1 2 -> 2\n1 2 3 -> 3\n1 2 3 4 -> 4''') == 'incorrect'\n\nassert solution('''1\n-> 2\n-> 3\n-> 4\n-> 5\n1 2 3 4 -> 1 2\n1 2 -> 2\n1 2 3 -> 3\n1 2 3 4 -> 4''') == 'correct'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"correct\"\n\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"1\"\n\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"1\"\n\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"1\"\n\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n-> 2\n-> 3\n-> 2\n-> 3\n-> 4\n-> 5\n-> 2\n-> 3\n-> 5\n-> 4\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n-> 5\n->",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\n-> BOB\n-> BOB\n-> BOB\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '1'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\n-> BOB\n-> ALICE\n-> BOB\n-> BOB\n-> BOB\n-> BOB\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '1'\nassert solution('''\n-> ALICE\n-> BOB\n-> BOB\n-> ALICE\n-> BOB\n-> BOB\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'correct'\nassert solution('1') == 'correct'\nassert solution('3') == 'correct'\nassert solution('5') == 'correct'\nassert solution('10') == 'correct'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '2'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '3'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '4'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Connie Froggatt'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Penny Franklin'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Runoff!'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Runoff!'\n",
        "num_ids_2": 150,
        "num_ids_4": 296
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    Penny Franklin\n    Marti Graham\n    Connie Froggatt\n    Joseph Ivers\n    Connie Froggatt\n    Penny Franklin\n    Connie Froggatt\n    Bruce Stanger\n    Connie Froggatt\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    Connie Froggatt\n''') == 'Connie Froggatt'\n\nassert solution('''\n    Penny Franklin\n    Marti Graham\n    Connie Froggatt\n    Joseph Ivers\n    Connie Froggatt\n    Penny Franklin\n    Connie Froggatt\n    Bruce Stanger\n    Connie Froggatt\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    Connie Froggatt\n    Penny Franklin\n''') == 'Penny Franklin'\n\nassert solution('''\n    Penny Franklin\n    Marti Graham\n    Connie Froggatt\n    Joseph Ivers\n    Connie Froggatt\n    Penny Franklin\n    Connie Froggatt\n    Bruce Stanger\n    Connie Froggatt\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    Connie Froggatt\n    Penny Franklin\n    Connie Froggatt\n''') == 'Penny Franklin'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner''') == 'Connie Froggatt'\nprint('All tests passed!')",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt''') == \"Connie Froggatt\"\nassert solution('''Connie Froggatt\nPenny Franklin\nMarti Graham\nConnie Froggatt\nConnie Froggatt\nPenny Franklin\nConnie Froggatt''') == \"Connie Froggatt\"\nassert solution('''Connie Froggatt\nPenny Franklin\nMarti Graham\nConnie Froggatt\nConnie Froggatt\nPenny Franklin\nConnie Froggatt''') == \"Connie Froggatt\"\nassert solution('''Connie Froggatt\nMarti Graham\nConnie Froggatt\nConnie Froggatt\nPenny Franklin\nConnie Froggatt''') == \"Connie Froggatt\"\nassert solution('''Connie Froggatt\nMarti Graham\nConnie Froggatt\nConnie Froggatt\nPenny Franklin\nConnie Froggatt''') == \"Marti Graham\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Barbara Skinner\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Barbara Skinner\"",
        "num_ids_2": 152,
        "num_ids_4": 300
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\nConnie Froggatt''') == 'Connie Froggatt'\nassert solution('''\nBarbara Skinner\nConnie Froggatt\nPenny Franklin\nMarti Graham\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\n***\nConnie Froggatt''') == 'Connie Froggatt'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\nConnie Froggatt''') == 'Penny Franklin'\nassert solution('''\nBarbara Skinner\nConnie Froggatt\nPenny Franklin\nMarti Graham\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\n***\nConnie Froggatt''') == 'Barbara Skinner'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(\"sample.in\").read()) == \"Connie Froggatt\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\nassert solution('Abdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski\\nAbdur Rahman\\nSasha Sha\\nElija Dimas\\nMaxim Kulhinski",
        "num_ids_2": 1663,
        "num_ids_4": 1663
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Penny Franklin'\nassert solution('foo') == 'Runoff!'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Penny Franklin\"\nprint(solution('''Runoff!'''))\nprint(solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n'''))",
        "num_ids_2": 150,
        "num_ids_4": 150
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n\nassert solution('''11\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\nLuke Chewbacca Huttese Basic Jawaese\nLuke Peter Huttese Basic Jawaese\nLuke Skywalker Huttese Basic Jawaese\nLuke Vader Huttese Basic Jawaese\nLuke Vader Huttese Basic Jawaese\nLuke Boba Fett Huttese Basic Jawaese\nLuke Larsen Huttese Basic Jawaese\nLuke Skywalker Huttese Basic Jawaese\nLuke Anakin Huttese Basic Jawaese\nLuke Qui-Gon Huttese Basic Jawaese\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\nassert solution('5\\nLuke Jawaese\\nGrakchawwaa Jawaese\\nChewbacca Syllohalli\\nLuke Syllohalli\\nR2D2 Syllohalli') == '1'\nassert solution('6\\nLuke Jawaese\\nGrakchawwaa Jawaese\\nChewbacca Syllohalli\\nLuke Syllohalli\\nR2D2 Syllohalli') == '1'\n\"\"\"\n\nimport re",
        "num_ids_2": 142,
        "num_ids_4": 196
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\n\nassert solution('10\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Binary\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nSample Input:\n8\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\nLuke Basic Jawaese Binary\nSample Output:\n5\n\"\"\"\nimport sys\nimport math\n",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nBib-Fortuna Huttese Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '3'\nassert solution('8\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '4'\n",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\nassert solution('4\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nChewbacca Jawaese Jawaese') == '3'\nassert solution('2\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '1'\n",
        "num_ids_2": 188,
        "num_ids_4": 254
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"\"\"2\"\"\"\nassert solution(\"\"\"\n5\nLuke Jawaese Basic\nLuke Jawaese Basic\nLuke Jawaese Basic\nLuke Jawaese Basic\nLuke Jawaese Basic\n\"\"\") == \"\"\"1\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '2'\n\n\"\"\"\nimport itertools\n\nN = int(input())",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n2 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '800'\nassert solution('''\n2 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n2 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''\n2 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nassert solution('''3 100000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 100 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n\nassert solution('''\n5 100 5 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n\nassert solution('''\n5 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1000 2 3\n200\n0 2 2\n300\n27 3 20''') == '900'\nassert solution('''4 2 4 4\n1\n0 2 1\n1\n0 2 1\n1\n0 2 1''') == '5'\nassert solution('''3 200 2 3\n200\n0 2 2\n300\n27 3 20\nSample Output:\n900\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n2 500 3 3\n3 100 3\n100 2 100\n5 200\n8 100 3\n10 2\n\"\"\") == \"908\"\n\nassert solution(\"\"\"\n2 500 3 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n3 500 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"1 1 1\n2\"\"\"\n) == \"200\"\nassert solution(\n\"\"\"3 1002\n2\n200\n3\n5\n4\n6\n1\n0\n2\n0\n9\n0\n2\n5\n3\n4\n0\n1\n2\n3\n6\n9\n6\n5\n4\n3\n4\n1\n5\n1\n1\n2\n3\n4\n5\n6\n3\n4\n5\n7\n7\n7\n7\n6\n7\n7\n7\n7\n7\n6\n7\n7\n7\n7\n7\n7\n6\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1\\n4\\n7\\n1000\\n10\\n3\\n17\\n7\\n') == '900'\nassert solution('3\\n1\\n4\\n7\\n1000\\n10\\n3\\n17\\n7\\n') == '900'\nassert solution('3\\n1\\n4\\n7\\n1000\\n10\\n3\\n17\\n7\\n') == '900'\nassert solution('3\\n1\\n4\\n7\\n1000\\n10\\n3\\n17\\n7\\n') == '900'\n",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n1 1000 5 2\n100\n3 4\n0\n0\n0\n1\n0\n\"\"\") == \"101\"\nassert solution(\"\"\"\n1 1000 3 2\n200\n1 2 3\n300\n1\n\"\"\") == \"800\"\nassert solution(\"\"\"\n1 1000 1 2\n100\n2 2\n200\n1\n\"\"\") == \"100\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nC D F D C D F F F C \n''') == 'A# C D# F'\nprint('1. Accepts input.')\n\nassert solution('''\n10\nA D F D C D F F F C \n''') == 'none'\nprint('2. Empty input.')\n\nassert solution('''\n10\nC D F D C D F F F C \n''') == 'A# C D# F'\nprint('3. Perfectly fit.')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nC D F D C D F F C') == 'A# C D# F'\nassert solution('6\\nB C D E F G') == 'B C E F'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"none\"\nassert solution(\"\") == \"none\"\nassert solution(\"1\\nC D F D C D F F F C\\n\") == \"A# C D# F\"\nassert solution(\"1\\nA B A C\\n\") == \"A# C D# F\"\nassert solution(\"1\\nA A A A A\\n\") == \"A# C D# F\"\n",
        "num_ids_2": 18,
        "num_ids_4": 70
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"A\"\nassert solution(\"2\") == \"A#\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nC D F D C D F F F C') == \"A# C D# F\"\nassert solution('2\\nA D A C D C A D E F G A F E\\n') == \"A# C D# F\"\nassert solution('3\\nA B A# C D E F# A F E F# G A G F# A F# E\\n') == \"C# D# E\"\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 60,
        "num_ids_4": 101
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nC E D F\") == \"C D# E F\"\nassert solution(\"4\\nA C D F E F\") == \"A C D E F\"\nassert solution(\"5\\nA B C D F E G\") == \"A B C D E F\"\nassert solution(\"10\\nC D E F G A C D E F\") == \"A D F C E G\"\nassert solution(\"1\\nA\") == \"A\"\n",
        "num_ids_2": 42,
        "num_ids_4": 93
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\nC D F D C D F F F C\n''') == 'A# C D# F'\n\nassert solution('''5\nA D E F G A\n''') == 'D# E F# G A#'\n\nassert solution('''7\nA C D E F G A C\n''') == 'C# E F# G# A#'\n\nassert solution('''11\nA C D E F G A C C\n''') == 'C# E F# G# A#'\n\nassert solution('''13\nA C D E F G A B C\n''') == 'C# E F# G# A#'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nC D E A B\") == \"A# C D# F\"\nassert solution(\"10\\nC D E A F\") == \"none\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\nC D F D C D F F F C') == 'A# C D# F'\nassert solution('10\\nC D F D C D F F F C') == 'none'\nassert solution('10\\nE F G A D C F D') == 'A# C D# F'\n",
        "num_ids_2": 49,
        "num_ids_4": 74
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == 'A# C D# F'\nassert solution('12') == 'A# C D# F'\nassert solution('1') == 'A# C D# F'\nassert solution('12 12') == 'A# C D# F'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"a\") == \"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"dae ae ju traeligt va arbv\u00e4xelig\") == \"haer talar vi rikssvenska\"\nprint(\"You passed all the tests!\")\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''dae ae ju traeligt va\n    haer talar vi rikssvenska''') == 'haer talar vi rikssvenska', solution('''dae ae ju traeligt va\n    haer talar vi rikssvenska''')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"h\u00e4r talar vi rikssvenska\") == \"h\u00e4r talar vi rikssvenska\"\n\n'''\n\nstdin = input()",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('dae ae ju traeligt va') == \"dae ae ju traeligt va\", \"WA\"\nassert solution('haer talar vi rikssvenska') == \"haer talar vi rikssvenska\", \"WA\"\nassert solution('haer talar vi rektalen') == \"haer talar vi rikssvenska\", \"WA\"\nassert solution('dae ae ju talar vi rektalen') == \"dae ae ju talar vi rikssvenska\", \"WA\"\nassert solution('dae ae ju talar vi rektalen ae') == \"dae ae ju talar vi rektalen\", \"WA\"\n",
        "num_ids_2": 66,
        "num_ids_4": 136
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('dae ae ju traeligt va n\u00e5gonligt') == 'haer talar vi rikssvenska'\nassert solution('dae ae ju traeligt va eller n\u00e5gonligt') == 'haer talar vi rikssvenska'\nassert solution('h\u00e4r l\u00e5ter vi komma igen p\u00e5 en person') == 'haer talar vi rikssvenska'\n",
        "num_ids_2": 60,
        "num_ids_4": 132
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\ndae\n\na\n''') == 'dae ae ju traeligt va'\n\nassert solution('''\ndae ae ju traeligt va\n''') == 'dae ae ju traeligt va'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 60,
        "num_ids_4": 1673
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e a e ae a e a e a e a e a e a e a e a e a e ae ae a e ae a e ae a e ae ae a e ae ae a e ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae a",
        "num_ids_2": 1673,
        "num_ids_4": 1673
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\\n\") == \"E.E#.E#\"\nassert solution(\"5 5\\n.E#.E.\\n.....\\n.###.\\n#...#\\nE.###\\n\") == \"E.E#.E#\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\n\nThe chain of coffee shops in Gridland, Espresso Bucks, and a big chocolate factory, is expanding to the country of Gridland. Since you are an expert on Gridland culture and geography, Espresso Bucks have hired you to decide where to put their coffee shops for maximum profit. Gridland consists of an $n$ by $m$ grid, where some cells are land, and some are water. At most one coffee shop can be built on each land cell. Nothing can be built on the water cells, but on the other hand, no one lives in the water. After a lot of long meetings with the Espresso Bucks people, you have come to the conclusion that there are only two constraints the placement of coffee shops has to satisfy: \n - Each land cell must have a coffee shop directly on it, or adjacent to it.\n - No two coffee shops can be adjacent to each other.\n\nTwo cells are adjacent if one is immediately to the west, north, east, or south of the other. Find any placement of coffee shops that satisfies these constraints.\n\n-----Input-----\nThe first line of input consists of two integers $n$ and $m$ ($1 \\leq n,m \\leq 100$). The following $n$ lines each contain a string of length $m$ consisting only of the characters \u2018.\u2019 (land) and \u2018#\u2019 (water). This is the map of gridland. It is guaranteed that the map contains at least one land cell.\n\n-----Output-----\nOutput a copy of the map of gridland, where some of the land cells have been replaced with the letter \u2018E\u2019, meaning that a coffee shop was placed on the corresponding land cell. This placement should satisfy the constraints above. If there are many solutions, any one will be accepted.\n\n-----Examples-----\nSample Input:\n5 6\n....#.\n....#.\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(samples.EXAMPLE) == \"..E#E\\n..E.#E\\nE...E\\nE...E\\nE...E\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n...#.\\n...#.\\n#.....\\n......\\n##...#\\n\") == \"E.E#\"\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n.\\n..\\n..\\n###\\n\") == \"E..E#\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n....#.\n....#.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"...#.\\n...#.\\n#.....\\n......\\n##...#\"\nassert solution(\"10 10\") == \"...#...#\\n..#....\\n#..#...\\n.##...#\\n#.#.##.\\n#...###\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == 'E..E#.'\nassert solution('5 6') == '..E.#E'\nassert solution('5 6') == '#..E..'\nassert solution('5 6') == 'E...E'\nassert solution('5 6') == '##E.E#'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\n.....\n.....\n......\n##...#\n##...#''') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n', 'Solution is wrong'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT_S) == OUTPUT_S\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('1 1 1 1 1 1') == '1 1 1 1 1 1'\nassert solution('13 8 3 6 9 4 4 7 10') == '13 10 4 7 8 9 4 3'\n",
        "num_ids_2": 42,
        "num_ids_4": 67
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n12 8 2 4 10 3 25 14\n''') == '12 10 3 8 4 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '12 10 3 8 4 2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([12, 8, 2, 4, 10, 3, 25, 14]) == \"12 10 3 8 4 2\"\nassert solution([1, 9, 3, 2, 2, 1]) == \"1 9 3 2 2 1\"\nassert solution([1, 2, 5, 4, 2, 2]) == \"1 2 5 2 2\"\n\n'''",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('4 8 2 6 12 14 10 3') == '4 6 8 2 12 10'\nassert solution('6 8 6 6 12 12 12') == '6 12 12 12'\n",
        "num_ids_2": 44,
        "num_ids_4": 63
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'\nassert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'\nassert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'\nassert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('5 9 6 8 5 4 4 8') == '5 9 6 8 5 4'\nassert solution('5 8 7 10 8 1 1 7 8') == '5 8 7 10 8 1 1 7 8'\n",
        "num_ids_2": 44,
        "num_ids_4": 70
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n12 8 2 4 10 3 25 14\n''') == '12 10 3 8 4 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 0 3') == '4'\nassert solution('1000 0 3') == '4'\nassert solution('1000 1 2') == '3'\nassert solution('1000 2 1') == '3'\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 2\n''') == '4'\nassert solution('''\n3\n0 2\n''') == '3'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 0 3') == '4'\nassert solution('9 0 0') == '9'\nassert solution('9 0 0 0') == '9'\nassert solution('0 9 0 3') == '4'\nassert solution('9 9 9 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '4'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 4') == '1'\nassert solution('1 5 2') == '1'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 0 5\n''') == \"1\"\n\nassert solution('''\n5 0 7\n''') == \"2\"\n\nassert solution('''\n5 0 9\n''') == \"3\"\n\nassert solution('''\n1000 0 5\n''') == \"2\"\n\nassert solution('''\n1000 0 3\n''') == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 9 0 3') == '4'\nassert solution('5 5 5 5 5') == '6'\nassert solution('7 7 7 7 7') == '8'\nassert solution('8 8 8 8 8 8') == '10'\nassert solution('9 9 9 9 9 9') == '10'",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 0 3\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1010') == '12'\nassert solution('10101') == '123'\nassert solution('10001') == '12'\nassert solution('111010110') == '13'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1010') == '12'\n\nassert solution('1111') == '77'\n\nassert solution('11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 21,
        "num_ids_4": 1770
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"1111\") == \"63\"\nassert solution(\"101111\") == \"10311\"\nassert solution(\"11111111\") == \"8585858585858\"\nassert solution(\"101111111\") == \"3448\"\n",
        "num_ids_2": 21,
        "num_ids_4": 50
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '15'\nassert solution('1100') == '10'\nassert solution('1011') == '11'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert solution('1010') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11010') == '14'\nassert solution('101') == '1'\nassert solution('10') == '0'\n\n---\n\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----\nThe input contains a binary numeral. The number of digits will be less than $100$, and the first digit will be $1$.\n\n-----Output-----\nOutput the number in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----\nThe input contains a binary numeral. The number of digits will be less than $100$, and the first digit will be $1$.\n\n-----Output-----\nOutput the number in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----\nThe input contains a binary numeral. The number of digits will be less than $100$, and the first digit will be $1$.\n\n-----Output-----\nOutput the number in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----\nThe input contains a binary numeral. The number of digits will be less than $100$, and the first digit will be $1$.\n\n-----Output-----\nOutput the number in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----\nThe input contains a binary numeral. The number of digits will be less than $100$, and the first digit will be $1$.\n\n-----Output-----\nOutput the number in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----\nThe input contains a binary numeral. The number of digits will be less than $100$, and the first digit will be $1$.\n\n-----Output-----\nOutput the number in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----\nThe input contains a binary numeral. The number of digits will be less than $100$, and the first digit will be $1$.\n\n-----Output-----\nOutput the number in octal.\n\n-----Examples-----\nSample Input:\n1010\nSample Output:\n12\n\n------Clarification------\nSlavko is a programing guy in an industrial era. He is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n\n- Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n\n- Group adjacent binary digits into groups of $3$ digits.\n\n- Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\nTable\u00a01: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\n-----Input-----",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"101100\") == \"202\"\nassert solution(\"1011101\") == \"205\"\nassert solution(\"1011111\") == \"205\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '49'\nassert solution('0110') == '4'\nassert solution('0111') == '2'\nassert solution('0000') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10011001') == '12'\nassert solution('10101010') == '22'\nassert solution('10100101') == '12'\nassert solution('01') == '0'\nassert solution('111') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1010') == '12'\nassert solution('1011') == '11'\nassert solution('0110') == '10'\nassert solution('0111') == '11'\nassert solution('1110') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n..o\no..\no.o\n.o.\n''') == '4'\nassert solution('''\n5 4\n...ooo\no.ooo\nooo.o\n.ooo.\nooo...\n''') == '7'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n.\\no\\n') == '2'\nassert solution('1\\n.\\n') == '1'\nassert solution('2\\n.\\no\\n') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n...o\no...\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n..o\no..\n''') == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n...o\\no...\\n') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n.o\no..\nSample Input 2:\n4 4\n.ooo\noo.oo\noo.ooo\noo.ooo\no.ooo\noo.ooo\n.ooo.o.o\nSample Output 2:\n4''') == '4'\nassert solution('''4 4\n.ooo\noo.oo\noo.ooo\noo.ooo\no.ooo\noo.ooo\n.ooo.o.o\nSample Output 3:\n5''') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 3\"\n) == \"2\"\nassert solution(\n    \"1.\"\n) == \"1\"\nassert solution(\n    \"1. 1\"\n) == \"2\"\nassert solution(\n
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n..o\no..\n''') == '2'\n\nassert solution('''2 3\nooo\noo.\n''') == '1'\n\nassert solution('''2 4\nooo\nooo\noo.\n''') == '0'\n\nassert solution('''5 2\no.ooo\nooo\nooo\no.ooo\n''') == '5'\n\nassert solution('''10 3\nooo\nooo\nooo\no.ooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo\nooo",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n.o\\no.') == '2'\nassert solution('2 2\\n..o\\no.') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\n\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1\n1 2\n2 3\n1 1\n1 1\n1 1\n1 1\n1 2''') == 'LADICA'\nassert solution('''6 1\n1 1\n1 2\n1 3\n2 2\n3 1\n1 3\n2 1\n3 3\n1 3\n1 3\n1 3\n1 3\n1 2''') == 'LADICA'\nassert solution('''3 5\n1 2\n2 3\n1 2\n2 3\n1 2''') == 'SMECE'\nassert solution('''6 4\n1 1\n2 3\n2 3\n1 1\n1 2\n2 2\n3 3\n1 2\n1 3''') == 'LADICA'\nassert solution('''6 4\n1 1\n2 3\n1 2\n1 3\n2 2\n1 2\n2 3\n1 3''') == 'LADICA'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('1 1') == 'SMECE'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"LADICA\\nSMECE\\nSMECE\\nSMECE\\nSMECE\"\nassert solution(\"6 8\") == \"LADICA\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"LADICA\"\nassert solution(\"2 3\") == \"SMECE\"\nprint(\"You're a smart cookie!\")\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"LADICA\"\nassert solution(\"5 5\") == \"SMECE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"LADICA\"\nassert solution(\"5 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\") == \"LADICA\"\nassert solution(\"5 3\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\") == \"SMECE\"\nassert solution(\"5 3\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\") == \"SMECE\"\n",
        "num_ids_2": 46,
        "num_ids_4": 112
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('6 5') == 'LADICA'\nassert solution('5 3') == 'LADICA'\nassert solution('5 4') == 'LADICA'\nassert solution('5 4') == 'LADICA'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 2\"\nassert solution(\"2\") == \"1 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n0\n\"\"\") == \"\"\"1 2\"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n0\nSample Input:\n2\n0 2\nSample Output:\n1 2\n''') == '1 2'\n\nassert solution('''\n2\n0 0\nSample Output:\n1 2\n''') == '1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0\n1\n3\n2\n''') == '1 2 3 4'\nassert solution('''\n10\n0\n1\n5\n6\n3\n9\n10\n8\n7\n4\n2\n5\n''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''\n7\n0\n1\n2\n3\n4\n5\n''') == '0 1 2 3 4 5 6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"2 3 1\") == \"1 2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 3\") == \"1 2\"\n\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"10\\n2 4 3 5 6 7 8 1\") == \"1 2 3 4 5 6 7 8 1\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"1 3 2\"\nassert solution() == \"1 2 3 4 5 6 7 8\"\n",
        "num_ids_2": 19,
        "num_ids_4": 34
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0') == '1 2'\nassert solution('2\\n0 1') == '1 2'\nassert solution('4\\n0 1 3') == '1 3 2 4'\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 47
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2'\nprint(solution())\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 5') == '1'\n\nassert solution('10 7 5') == '10'\n\nassert solution('12 2 4') == '5'\n\nassert solution('10 10 10') == '10'\n\nassert solution('6 3 2') == '6'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"2\"\nprint(solution(*map(int, input().split())))\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '1'\n\nSample Input:\n4 5\n0 1\n2 2\n1 3\n0 3\nSample Output:\n1\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '4'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '3'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '2'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '2'\n",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nprint(solution('''\n7 4 5\n1 2 3\n0 1 2\n0 2 3\n0 3 4\n1 3 4\n2 4 5\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 5') == \"4\"\nassert solution('2 3 5') == \"3\"\n\"\"\"\n\n\nimport math\nimport sys\nsys.setrecursionlimit(1000000)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n\"\"\") == \"1\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 5') == '1'\n\nassert solution('0 5 2') == '2'\n\nassert solution('0 1') == '0'\n\nassert solution('1 2') == '2'\n\nassert solution('4 5') == '5'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 3') == '1 2 3 4 5'\nprint(solution('2\\n2 3 4'))\nprint(solution('5\\n1 2 3 4'))\nprint(solution('2\\n-3 -1 2'))\nprint(solution('1\\n-1 -3'))\nprint(solution('4\\n-1 2 3 -4'))\nprint(solution('5\\n-1 -3 -2 -4'))\nprint(solution('5\\n-1 -3 -2 -4 1 -5'))\nprint(solution('5\\n-1 -3 -2 -4 1 -5 1 -5 -2 -3 -4 -5 -1 -2 -3 -4 -5'))\nprint(solution('10\\n-1 -3 -2 -4 1 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29 -30 -31 -32 -33 -34 -35 -36 -37 -38 -39 -40 -41 -42 -43 -44 -45 -46 -47 -48 -49 -50 -51 -52 -53 -54 -55 -56 -57 -58 -59 -60 -61 -62 -63 -64 -65 -66 -67 -68 -69 -70 -71 -72 -73 -74 -75 -76 -77 -78 -79 -80 -81 -82 -83 -84 -85 -86 -87 -88 -89 -90 -91 -92 -93 -94 -95 -96 -97 -98 -99 -100 -101 -102 -103 -104 -105 -106 -107 -108 -109 -110 -111 -112 -113 -114 -115 -116 -117 -118 -119 -120 -121 -122 -123 -124 -125 -126 -127 -128 -129 -130 -131 -132 -133 -134 -135 -136 -137 -138 -139 -140 -141 -142 -143 -144 -145 -146 -147 -148 -149 -150 -151 -152 -153 -154 -155 -156 -157 -158 -159 -160 -161 -162 -163 -164 -165 -166 -167 -168 -169 -170 -171 -172 -173 -174 -175 -176 -177 -178 -179 -180 -181 -182 -183 -184 -185 -186 -187 -188 -189 -190 -191 -192 -193 -194 -195 -196 -197 -198 -199 -200 -201 -202 -203 -204 -205 -206 -207 -208 -209 -210 -211 -212 -213 -214 -215 -216 -217 -218 -219 -220 -221 -222 -223 -224 -225 -226 -227 -228 -229 -230 -231 -232 -233 -234 -235 -236 -237 -238 -239 -240 -241 -242 -243 -244 -245 -246 -247 -248 -249 -250 -251 -252 -253 -254 -255 -256 -257 -258 -259 -260 -261 -262 -263 -264 -265 -266 -267 -268 -269 -270 -271 -272 -273 -274 -275 -276 -277 -278 -279 -280 -281 -282 -283 -284 -285 -286 -287 -288 -289 -290 -291 -292 -293 -294 -295 -296 -297 -298 -299 -300 -301 -302 -303 -304 -305 -306 -307 -308 -309 -310 -311 -312 -313 -314 -315 -316 -317 -318 -319 -320 -321 -322 -323 -324 -325 -326 -327 -328 -329 -330 -331 -332 -333 -334 -335 -336 -337 -338 -339 -340 -341 -342 -343 -344 -345 -346 -347 -348 -349 -350 -351 -352 -353 -354 -355 -356 -357 -358 -359 -360 -361 -362 -363 -364 -365 -366 -367 -368 -369 -370 -371 -372 -373 -374 -375 -376 -377 -378 -379 -380 -381 -382 -383 -384 -385 -386 -387 -388 -389 -390 -391 -392 -393 -394 -395 -396 -397 -398 -399 -400 -401 -402 -403 -404 -405 -406 -407 -408 -409 -410 -411 -412 -413 -414 -415 -416 -417 -418 -419 -420 -421 -422 -423 -424 -425 -426 -427 -428 -429 -430 -431 -432 -433 -434 -435 -436 -437 -438 -439 -440 -441 -442 -443 -444 -445 -446 -447 -448 -449 -450 -451 -452 -453 -454 -455 -456 -457 -458 -459 -460 -461 -462 -463 -464 -465 -466 -467 -468 -469 -470 -471 -472 -473 -474 -475 -476 -477 -478 -479 -480 -481 -482 -483 -484 -485 -486 -487 -488 -489 -490 -491 -492 -493 -494 -495 -496 -497 -498 -499 -500 -501 -502 -503 -504 -505 -506 -507 -508 -509 -510 -511 -512 -513 -514 -515 -516 -517 -518 -519 -520 -521 -522 -523 -524 -525 -526 -527 -528 -529 -530 -531 -532 -533 -534 -535 -536 -537 -538 -539 -540 -541 -542 -543 -544 -545 -546 -547 -548 -549 -550 -551 -552 -553 -554 -555 -556 -557 -558 -559 -560 -561 -562 -563 -564 -565 -566 -567 -568 -569 -570 -571 -572 -573 -574 -575 -576 -577 -578 -579 -580 -581 -582 -583 -584 -585 -586 -587 -588 -589 -590 -591 -592 -593 -594 -595 -596 -597 -598 -599 -600 -601 -602 -603 -604 -605 -606 -607 -608 -609 -610 -611 -612 -613 -614 -615 -616 -617 -618 -619 -620 -621 -622 -623 -624 -625 -626 -627 -628 -629 -630 -631 -632 -633 -634 -635 -636 -637 -638 -639 -640 -641 -642 -643 -644 -645 -646 -647 -648 -649 -650 -651 -652 -653 -654 -655 -656 -657 -658 -659 -660 -661 -662 -663 -664 -665 -666 -667 -668 -669 -670 -671 -672 -673 -674 -675 -676 -",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"5\") == \"3 4 5 6 7\"\nassert solution(\"10\") == \"3 5 8 9 10 7 6 4 1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 4') == '4 3 1'\nassert solution('10 1 2 3 4 5 6 7 8 9 10') == '10 1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 3 4') == '4 3 1'\nassert solution('5\\n1 2 3 4 5') == '5 4 3 1'\nassert solution('7\\n1 2 3 4 5 6 7') == '7 6 5 4 3 2 1'\nassert solution('1\\n') == 'impossible'\nassert solution('4\\n1 3 4') == 'impossible'\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 3 4\n''') == '4 3 1'\nassert solution('''\n2\n1 2\n''') == '2 1'\nassert solution('''\n3\n5 4 2\n''') == '5 4 2 3'\nassert solution('''\n5\n10 8 4 2 1\n''') == '1 1 10 8 4 2'\nassert solution('''\n5\n7 2 9 4 3\n''') == '7 9 4 3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 4\\n\") == \"4 3 1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 3 4\n\"\"\") == \"4 3 1\"\nassert solution(\"\"\"\n5\n1 3 4 2 5\n\"\"\") == \"5 1 3 4 2\"\n\nassert solution(\"\"\"\n3\n-1 -2 -3\n\"\"\") == \"-1 -2 3\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"4 3 1\"\nassert solution(\"2\") == \"1 3\"\nassert solution(\"10\") == \"3 4 1 2 5 6 7 8 9 10\"\nassert solution(\"1\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 3 4\n\"\"\") == \"4 3 1\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"10 9 8 7 6 5 4 3 2 1\"\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"1 1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2 1'\nassert solution('3') == '1 2 3'\nassert solution('5') == '3 2 4 1'",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '0.500000'\nassert solution('2\\n1\\n1') == '0.200000'\nassert solution('2\\n1\\n2') == '1.800000'\nassert solution('2\\n1\\n3') == '1.800000'\nassert solution('2\\n2\\n1') == '1.800000'\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 20 15\\n3 10') == '18.400'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 20 15\n3 10\n''') == \"18.400\"\n\nassert solution('''\n2 20 15\n4 10\n''') == \"40.500\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 20 15\\n3 10') == '18.400'\nassert solution('3 20 10\\n2 10') == '10.000'\nassert solution('5 20 10\\n3 10') == '10.000'\nassert solution('5 20 10\\n5 20 10') == '10.000'\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 20 15\") == \"18.400\"\nassert solution(\"3 10\") == \"25.600\"\nassert solution(\"2 100\") == \"25.500\"\n\n'''",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 15, 3, 10]) == '18.400', solution([2, 15, 3, 10])\nprint(solution([2, 15, 3, 10]))\nassert solution([2, 15, 3, 10]) == '18.400', solution([2, 15, 3, 10])\nprint(solution([2, 15, 3, 10]))\nassert solution([2, 15, 3, 10]) == '18.400', solution([2, 15, 3, 10])\nprint(solution([2, 15, 3, 10]))\n'''",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 20 15\\n3 10') == \"18.400\"\nassert solution('100 20 10\\n1 1 1') == \"10.000\"\nassert solution('1 1 1\\n1 1 1') == \"1.000\"\nassert solution('1 1 1\\n2 2 2') == \"1.000\"\nassert solution('5 5 5\\n1 2 1\\n2 2 2\\n3 3 2\\n4 4 4') == \"14.000\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 20 15') == '18.400'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 20 15') == \"18.400\"\nassert solution('1 1 1') == \"0.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 15, 10]) == \"18.400\"\nassert solution([3, 10, 5]) == \"14.200\"\nassert solution([4, 10, 1]) == \"14.000\"\nassert solution([2, 1, 1]) == \"1.000\"\nassert solution([2, 3, 2]) == \"1.000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\".H.H.H....H.H...H.H.S.S.S.S...H.H.H\") == 5\n\n\"\"\"\n\n\nclass Manhattan:\n    def __init__(self):\n        pass\n\n    def manhattan_dist(self, pt1, pt2):\n        return abs(pt1[0] - pt2[0]) + abs(pt1[1] - pt2[1])\n\n    def manhattan_dist_2(self, pt1, pt2):\n        return abs(pt1[0] - pt2[0]) + abs(pt1[1] - pt2[1])\n\n    def part1(self, stdin: str):\n        grid = stdin.strip().split(\"\\n\")\n        visited = set()\n        max_dist = 0\n\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] == \".\":\n                    continue\n                if (i, j) in visited:\n                    continue\n                dist = self.manhattan_dist((i, j), (0, 0))\n                if dist > max_dist:\n                    max_dist = dist\n                visited.add((i, j))\n        return max_dist\n\n    def part2(self, stdin: str):\n        grid = stdin.strip().split(\"\\n\")\n        visited = set()\n        max_dist = 0\n\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] == \".\":\n                    continue\n                if (i, j) in visited:\n                    continue\n                dist = self.manhattan_dist_2((i, j), (0, 0))\n                if dist > max_dist:\n                    max_dist = dist\n                visited.add((i, j))\n        return max_dist\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('5') == '10'\nassert solution('5') == '10'\n\n<COMPLETE THE CODE FOR THIS PROBLEM>\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5.3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n....H\\n.....\\ns....\\n....H\\n.....\\n\") == \"5\"\nassert solution(\"5\\n....S\\n.....\\n.SSS\\n.....\\n\") == \"0\"\nassert solution(\"3\\nH...\\n.H.\\n...S\\n\") == \"1\"\nassert solution(\"1\\nH...\\n.H.\\n...S\\n\") == \"0\"\n\"\"\"",
        "num_ids_2": 56,
        "num_ids_4": 106
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n....H\n.....\nS....\n....H\n.....\n''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == \"5\"\nassert solution(\"3\\n.H.\\n.H.\\n.H.\\n.H.\\n.H.\") == \"0\"\nassert solution(\"7\\n.H.\\n..H.\\nS.H.\\n...H.\\n.H.\\n....H.\\n...H.\\n.H.\") == \"5\"\nassert solution(\"3\\n.H.\\n..H.\\nS.H.\\n...H.\\n.H.\\n....H.\\n...H.\\n.H.\") == \"4\"\nassert solution(\"3\\n.H.\\n.H.\\n.H.\\n.H.\\n.H.\\n.H.\\n.H.\\n.H.\") == \"0\"\n",
        "num_ids_2": 62,
        "num_ids_4": 162
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1000000\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5 2\n2 4\n1 3 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 4 2\n2 4\n1 3 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10 10 3\n7 8\n9 7\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5 4 2\n2 4\n1 3 5\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\nprint(\"Solution = OK\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\") == \"0\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"5 1 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3\\n2\\n1\\n3\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3') == '0'\n\nassert solution('1 1 1') == '1'\n\nassert solution('1 2 2') == '2'\n\nassert solution('1 3 5') == '0'\n\nassert solution('1 1 1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\n2 4') == '0'\nassert solution('5 2 3\\n1 3 5') == '0'\nassert solution('4 3 5\\n2 4\\n1 3 5') == '1'\nassert solution('4 3 5\\n2 4\\n1 3 5') == '0'\n",
        "num_ids_2": 33,
        "num_ids_4": 75
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5\\n') == '0'\nassert solution('3\\n3 4\\n2\\n3\\n') == '3'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\n\"\"\"\n\nn, s, r = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[int(input())] = 1\n\nreserve = {}\nfor i in range(s, n):\n    if i in d:\n        d.pop(i)\n    else:\n        reserve[i] = 1\nprint(len(d)+len(reserve))\n\n\"\"\"\nUsing Hash Set\n\nfrom collections import defaultdict",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3\\n2\\n1\\n3'\n) == '0'\nassert solution(\n    '5\\n2\\n4\\n3\\n1\\n3\\n5\\n2'\n) == '3'\nassert solution(\n    '5\\n1\\n2\\n3\\n4\\n3\\n2\\n1'\n) == '2'\nassert solution(\n    '4\\n1\\n3\\n2\\n4'\n) == '1'\nassert solution(\n    '9\\n1\\n2\\n3\\n4\\n3\\n2\\n1\\n5\\n6\\n7\\n8\\n9'\n) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"1 100\") == \"0.00000000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('10 10') == '0.25'\nassert solution('5 5') == '0.25'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0.000000000'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.000000000'\n\"\"\"\n\nfrom math import pi\nR, C = list(map(int, input().split()))\n\nprint(pi * R * C / 4)\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('0.01 1') == '0.010000'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"0.5\"\nassert solution(\"5 5\") == \"1.0\"\nassert solution(\"2 2\") == \"0.000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"1.5 1\") == \"0.5\"\nassert solution(\"1.8 1\") == \"0.8\"\nassert solution(\"1.9 1\") == \"0.9\"\nassert solution(\"4 1\") == \"0.16666666667\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('4 5') == '0.3333333333'\nassert solution('10 20') == '0.1500000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\nprint(solution(input()))\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\nSample Input 2:\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\nSample Output 2:\n2\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\nSample Output:\n2\n''') == '2'\n\nassert solution('''\n4\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\nSample Output:\n3\n''') == '3'\n\nassert solution('''\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\nSample Output:\n5\n''') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\"\nassert solution(\n    \"7\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n103 102 101 488 100\\n103 102 101 488 100\\n103 102 101 488 100\\n\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '1'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2'\nassert solution('''5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n100 300 100 101 102\n''') == '4'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\"\n) == \"2\"\nassert solution(\n    \"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1729'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('25') == '1731'\nassert solution('150') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"9\"\nassert solution(\"10\\n\") == None\nassert solution(\"0\\n\") == None\nassert solution(\"400000\\n\") == \"9\"\nassert solution(\"4001\\n\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'none'\nassert solution('1\\n') == 'none'\nassert solution('7\\n') == '7'\nassert solution('100\\n') == '99'\nassert solution('4\\n') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('7') == '7'\nassert solution('120') == '120'\nassert solution('1407') == '1407'\nassert solution('123456789') == '123456789'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('1') == '1'\nassert solution('12') == '12'\nassert solution('1001') == '1001'\nassert solution('35') == '35'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1000000') == '1000099'\nassert solution('10000001') == '10000100'\nassert solution('10000010') == '10000110'\nassert solution('10000011') == '10000111'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1729\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n') == 'None'\nassert solution('2\\n') == 'None'\nassert solution('4\\n') == 'None'\nassert solution('5\\n') == 'None'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9\\n') == '8'\nassert solution('1\\n') == '2'\nassert solution('32\\n') == '33'\nprint('Tests passed')\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"16\"\nassert solution(\"40\") == \"20\"\nassert solution(\"65536\") == \"16\"\nprint(solution.__doc__)\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n10\n4 1 2\n4 2 5\n4 3 6\n4 1 3\n4 2 5\n\"\"\") == \"16\"\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('65536') == '16'\n\nSample Input:\n3\n1 3 5\nSample Output:\n2\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('65536') == '16'\nassert solution('101') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"65536\") == \"16\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('65536') == '16'\nprint(solution(input()))\n\"\"\"\n\nimport math\n\nstdin_data = input()\n\nfor i in range(int(math.ceil(math.sqrt(int(stdin_data)))), int(math.sqrt(int(stdin_data)))):\n    if math.sqrt(int(stdin_data)).is_integer():\n        print(i)\n        break",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('2\\n...\\n...\\n...\\n...\\n...') == '-1'\nprint('All tests passed!')\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n..#..\n...#.\n.#.#.\n''') == '2'\nassert solution('''\n4\n###.\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n....\n....\n...K\n''') == '1'\nassert solution('''5\n....\n....\n...#\n...#\n..#.''') == '1'\nassert solution('''3\n....\n....\n...K''') == '1'\nassert solution('''8\n...K.\n.##...\n....#\n...##.\n....#.\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n....\n....\n....\n...K''') == '2'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2'\nassert solution('1') == '-1'\n\nSample Input:\n3\n...\n...\n...\nSample Output:\n2\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n#.K\\n##.\\n#.K\\n###.\\n\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_str) == '2'\nprint(solution(input_str))\n'''\n\nn = int(input())\n\nboard = [['.' for _ in range(n)] for _ in range(n)]\n\nboard[1][1] = 'K'\n\nvisited = set()\n\nres = -1",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n.....\\n.....\\n.....\") == \"3\"\nassert solution(\"5\\n.....\\n....\\n....\\n....\") == \"4\"\nassert solution(\"1\\n0\\n0\\n0\") == \"1\"",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('7') == '-1'\nassert solution('15') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n....\n....\n....\n...K\n''') == '2'\nassert solution('''\n...K\n...K\n.K\n.K\n....\n...K\n...K\n.K\n....\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\nassert solution('''\n10 5\n99\n3\n2\n9\n1\n''') == 'too late'\nassert solution('''\n10 5\n42\n3\n2\n99\n1\n''') == '23'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n42\\n3\\n2\\n99\\n1') == '23'\nassert solution('50 10\\n3\\n5\\n9\\n10\\n11\\n5\\n9\\n10\\n11\\n12\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n13\\n",
        "num_ids_2": 1747,
        "num_ids_4": 1747
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n23\\n99') == 'too late'\nassert solution('100 5') == '23'\nassert solution('100 0') == 'too late'\nassert solution('100 100') == 'too late'\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100 5') == '23'\nassert solution('40 3') == 'too late'\nassert solution('30 1') == 'too late'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4') == '1 2'\nassert solution('100 5') == 'too late'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"23\"\nassert solution(input_string=\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5\\n'\n    '42\\n'\n    '3\\n'\n    '2\\n'\n    '99\\n'\n    '1\\n') == '23'\n\nassert solution(\n    '10\\n'\n    '1\\n'\n    '4\\n'\n    '1\\n'\n    '4\\n'\n    '1\\n'\n    '4\\n'\n    '1\\n'\n    '1\\n'\n    '1\\n'\n    '1\\n') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1\n2\n5\n99\n99\n2\n99\n3\n99\n''') == '23'\nassert solution('''\n5\n1\n3\n4\n1\n''') == 'too late'\nassert solution('''\n2\n3\n4\n1\n''') == 'too late'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n5\\n42\\n99\\n3\\n1\\ntoo late\") == \"23\"\nassert solution(\"100\\n5\\n42\\n99\\n3\\n1\\ntoo late\") == \"too late\"\n\n------YOUR CODE BELOW HERE------\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('5 2\\n2\\n1\\n') == '3'\nassert solution('5 4\\n2\\n3\\n') == 'too late'\n",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"stupid algorithm\") == \"HIPQAJYUDWEMLKMBLOFXCWZ\"\nassert solution(\"BIOI\") == \"CASJQVUVJBTJWVZFGHXTFD\"\nassert solution(\"TELEPHONE\") == \"OHVZSGFSCGQWQJFCYKXSJKMBJQQR\"\nassert solution(\"HELLO\") == \"CEBJXNGVPDDWDOSLMXYDLLJIYRTKVXQFEDS\"\n",
        "num_ids_2": 56,
        "num_ids_4": 119
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"sample\") == \"RPDDGCNRFNNVSSQJZXCWFVS\"\n\"\"\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n\"\"\"\n\nkey_phrase, plaintext = stdin.split(\"\\n\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('playfair example') == 'BMCNXEBVZADJMUVIFYXOMRKP'\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"stump\") == \"SRHVBVGTZSDBNYCIBBEUWQJAHQMZG\"\nassert solution(\"h\") == \"S\"\nassert solution(\"x\") == \"X\"\nassert solution(\"\") == \"\"\n\"\"\"\nfrom string import ascii_lowercase as letters\n",
        "num_ids_2": 59,
        "num_ids_4": 79
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nHello World\n''') == 'HE LL OW ORLD'\nassert solution('''\nPlayfair example\n''') == 'PLLRJJJVLQDYLMBFBBCON'\nassert solution('''\nThis is a test.\n''') == 'SRJRJLMBFBBCONHXET'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n\n'''\n\n\n\nfrom itertools import permutations",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('hide the gold in the tree stump') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 1.000 1.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$2$).\"\nassert solution(\"1.000 1.500 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.500 1.500 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n",
        "num_ids_2": 70,
        "num_ids_4": 108
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"The gopher can escape through the hole at ($1$,$2$).\"\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1.000 1.000 2.000 2.000\n1.500 1.500\n1.500 2.000''') == \"The gopher cannot escape.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.000 1.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.000 2.000') == 'The gopher can escape through the hole at ($1$,$1$).'\n",
        "num_ids_2": 66,
        "num_ids_4": 129
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher cannot escape.\nassert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1$,$2$).'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$2$).\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n\"\"\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n0.000 1.000 1.000\n0.000 2.000 2.000\n0.000 3.000 3.000\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n1.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n0.000 2.000 2.000 1.000\n0.000 3.000 3.000 3.000\n\"\"\"\n) == \"The gopher cannot escape.\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher cannot escape.\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher cannot escape.\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher cannot escape.\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher cannot escape.\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$, $2$).\"\n\n\"\"\"\nsolution(\n\"\"\"\n0.000 1.000 2.000 2.000\n1",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1.000 1.000 2.000 2.000''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''1.000 1.000 1.000 2.000''') == 'The gopher can escape through the hole at ($1$,$2$).'\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 1\\n10') == 'Y'\nassert solution('3 3\\n3 3\\n10') == 'N'\nassert solution('3 4\\n3 4\\n10') == 'Y'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Y'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"3 4\\n3 3\\n2\") == \"N\"\nassert solution(\"3 4\\n2 5\\n3\") == \"N\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1,1') == 'Y'\nassert solution('2,2') == 'N'\nassert solution('-1,-1') == 'Y'\nassert solution('-1,2') == 'Y'\nassert solution('1,2') == 'Y'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 1\\n') == 'Y'\nassert solution('1 1\\n1 2\\n') == 'N'\nassert solution('1 100000\\n3 3\\n') == 'Y'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 4\n3 3\n3\"\"\") == \"Y\"\nassert solution(\"\"\"3 4\n3 3\n0\"\"\") == \"N\"\nassert solution(\"\"\"3 4\n0 0\n3\"\"\") == \"Y\"\nassert solution(\"\"\"3 4\n0 0\n3\n1\"\"\") == \"N\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('3 4\\n-3 -3\\n3') == 'N'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Y\"\nassert solution(\"1 2\") == \"N\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4\\n3 3\\n3') == 'Y'\nassert solution('0 3\\n0 2\\n1') == 'N'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 1\n1 1\n5\nY\"\"\") == \"Y\"\nassert solution(\"\"\"2 -1\n3 1\n2\nY\"\"\") == \"Y\"\nassert solution(\"\"\"3 -1\n1 -1\n3\nY\"\"\") == \"Y\"\nassert solution(\"\"\"3 3\n3 3\n3\nY\"\"\") == \"Y\"\nassert solution(\"\"\"3 3\n2 2\n3\nN\"\"\") == \"N\"\n",
        "num_ids_2": 15,
        "num_ids_4": 30
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n......#.#\\n#..#.##..\\n..#....###\\n.#.#.#....\\n..#....#.#\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n\"\nprint(solution(input()))\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n\") == \"...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n..#V..\\n.......\\n.......\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n...#.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n.V...\n...V\n...V''') == '...V...\\n...V...\\n...V...'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7\\n.V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '.V...\\n...#...\\n..VVV..\\n.VV#VV.\\n.V###V.'\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '.....\\n...V..\\n...V..\\n...V..\\n...V..\\n...V..'\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '.V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n",
        "num_ids_2": 121,
        "num_ids_4": 183
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 7\n.#.V.\n...V...\n.#.###\n...#...\n.#.###\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\nassert solution('''9 7\n....#.#\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('.#.') == '.##.'\nassert solution('..#.') == '..#.'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 5\n...V...\n.......\n.......\n...#...\n..###..\nSample Output:\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n''') == '''\n.....\n.....\n...V...\n...V...\n...V...\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '11'\nassert solution('01') == '10'\nassert solution('10') == '01'\nassert solution('11') == '01'\nassert solution('00') == '00'\n\nimport collections\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13') == '11'\nassert solution('100') == '101'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '11'\nassert solution('12345678') == '54321'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('01') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '11'\nassert solution('-13') == '-11'\nassert solution('13') == '11'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"101\") == \"101\"\nassert solution(\"100101\") == \"00011\"",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '11'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"2\"\nassert solution(\"20\") == \"2\"\nassert solution(\"100\") == \"10\"\nassert solution(\"-1\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"-1\"\nassert solution(\"-2147483648\") == \"2147483648\"\n",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '11'\nassert solution('100') == '00'\nassert solution('1000') == '0'\nassert solution('111111111111') == '111111111111'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"1\") == \"I must watch Star Wars with my daughter\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '9'\nassert solution('10') == '8'\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('22') == '5'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'I must watch Star Wars with my daughter'\nassert solution('2') == 'I must watch Star Wars with my daughter'\nassert solution('12') == 'I must watch Star Wars with my daughter'\nassert solution('123') == 'I must watch Star Wars with my daughter'\nassert solution('12345') == 'I must watch Star Wars with my daughter'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == '9'\nassert solution('8') == '0'\nassert solution('12p') == '2'\nassert solution('12p1') == '3'\nassert solution('12p2') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '9'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('12') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == '9'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == '9'\nassert solution('12') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == '9'\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('12') == '9'\nassert solution('13') == '10'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '9'\nassert solution('21') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('2 7 3') == '7 3 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('ABC') == 'ABC'\nassert solution('AABC') == 'BCA'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"2 3 1\") == \"1 3 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 2\") == \"2 5 4\"\nassert solution(\"5 4 3\") == \"3 5 4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 5 3\nABC\"\"\") == \"1 3 5\"\nassert solution(\"\"\"\n1 2 4\nBC\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n1 4 2\nABC\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n1 6 5\nBAC\n\"\"\") == \"1 5 6\"\nassert solution(\"\"\"\n1 6 5\nBAC\n\"\"\") == \"1 6 5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 3 5\"\nassert solution(input(\"\")) == \"1 3 5\"\nassert solution(input(\"ABC\")) == \"1 3 5\"\nassert solution(input(\"A1B2C3\")) == \"1 2 3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 58
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\n\"\"\"\n\na, b, c = map(int, stdin.split())\nprint(a, b, c)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"2 4 5\") == \"5 4 2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 3') == '1 3 5', \"First\"\nassert solution('ABC') == 'ABC', \"Second\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '8.0'\nprint(solution(input))\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('buy 1 15\\n') == '8.00000000'\nassert solution('sell 1 5\\n') == '8.00000000'\nassert solution('die 4\\n') == '8.00000000'\nassert solution('buy 1\\n') == '1.00000000'\nassert solution('sell 1\\n') == '1.00000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sell 1 5') == \"8.00000000\"\nassert solution('buy 1 15') == \"8.00000000\"\nassert solution('buy 1 15') == \"10.00000000\"\nassert solution('buy 1 15') == \"10.00000000\"\nassert solution('buy 1 15') == \"10.00000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n\"\"\") == \"8.00000000\"\n\nassert solution(\"\"\"\nbuy 1 6\nbuy 1 7\nsell 1 6\nsell 1 7\ndie 4\n\"\"\") == \"3.70000000000000004\"\n\nassert solution(\"\"\"\nbuy 2 5\nbuy 2 6\nsell 2 6\nsell 2 7\ndie 3\n\"\"\") == \"7.0000000000000006\"\n\nassert solution(\"\"\"\nbuy 3 2\nsell 4 5\nsell 5 6\nsell 6 7\nbuy 4 8\nbuy 4 9\nbuy 4 10\nsell 4 11\nsell 4 12\nbuy 5 13\nsell 5 14\nbuy 5 15\nsell 5 16\nbuy 5 17\nsell 5 18\nsell 5 19\nbuy 5 20\nsell 5 21\nsell 5 22\nbuy 5 23\nsell 5 24\nsell 5 25\nsell 5 26\nbuy 5 27\nsell 5 28\nsell 5 29\nsell 5 30\nsell 5 31\nbuy 5 32\nsell 5 33\nbuy 5 34\nsell 5 35\nsell 5 36\nsell 5 37\nbuy 5 38\nbuy 5 39\nsell 5 40\nsell 5 41\nbuy 5 42\nsell 5 43\nbuy 5 44\nsell 5 45\nsell 5 46\nbuy 5 47\nsell 5 48\nsell 5 49\nsell 5 50\nsell 5 51\nsell 5 52\nsell 5 53\nsell 5 54\nsell 5 55\nsell 5 56\nsell 5 57\nsell 5 58\nsell 5 59\nsell 5 60\nsell 5 61\nsell 5 62\nsell 5 63\nsell 5 64\nsell 5 65\nsell 5 66\nsell 5 67\nsell 5 68\nsell 5 69\nsell 5 70\nsell 5 71\nsell 5 72\nsell 5 73\nsell 5 74\nsell 5 75\nsell 5 76\nsell 5 77\nsell 5 78\nsell 5 79\nsell 5 80\nsell 5 81\nsell 5 82\nsell 5 83\nsell 5 84\nsell 5 85\nsell 5 86\nsell 5 87\nsell 5 88\nsell 5 89\nsell 5 90\nsell 5 91\nsell 5 92\nsell 5 93\nsell 5 94\nsell 5 95\nsell 5 96\nsell 5 97\nsell 5 98\nsell 5 99\nsell 5 100\nsell 5 101\nsell 5 102\nsell 5 103\nsell 5 104\nsell 5 105\nsell 5 106\nsell 5 107\nsell 5 108\nsell 5 109\nsell 5 110\nsell 5 111\nsell 5 112\nsell 5 113\nsell 5 114\nsell 5 115\nsell 5 116\nsell 5 117\nsell 5 118\nsell 5 119\nsell 5 120\nsell 5 121\nsell 5 122\nsell 5 123\nsell 5 124\nsell 5 125\nsell 5 126\nsell 5 127\nsell 5 128\nsell 5 129\nsell 5 130\nsell 5 131\nsell 5 132\nsell 5 133\nsell 5 134\nsell 5 135\nsell 5 136\nsell 5 137\nsell 5 138\nsell 5 139\nsell 5 140\nsell 5 141\nsell 5 142\nsell 5 143\nsell 5 144\nsell 5 145\nsell 5 146\nsell 5 147\nsell 5 148\nsell 5 149\nsell 5 150\nsell 5 151\nsell 5 152\nsell 5 153\nsell 5 154\nsell 5 155\nsell 5 156\nsell 5 157\nsell 5 158\nsell 5 159\nsell 5 160\nsell 5 161\nsell 5 162\nsell 5 163\nsell 5 164\nsell 5 165\nsell 5 166\nsell 5 167\nsell 5 168\nsell 5 169\nsell 5 170\nsell 5 171\nsell 5 172\nsell 5 173\nsell 5 174\nsell 5 175\nsell 5 176\nsell 5 177\nsell 5 178\nsell 5 179\nsell 5 180\nsell 5 181\nsell 5 182\nsell 5 183\nsell 5 184\nsell 5 185\nsell 5 186\nsell 5 187\nsell 5 188\nsell 5 189\nsell 5 190\nsell 5 191\nsell 5 192\nsell 5 193\nsell 5 194\nsell 5 195\nsell 5 196\nsell 5 197\nsell 5 198\nsell 5 199\nsell 5 200\nsell 5 201\nsell 5 202\nsell 5 203\nsell 5 204\nsell 5 205\nsell 5 206\nsell 5 207\nsell 5 208\nsell 5 209\nsell 5 210\nsell 5 211\nsell 5 212\nsell 5 213\nsell 5 214\nsell 5 215\nsell 5 216\nsell 5 217\nsell 5 218\nsell 5 219\nsell 5 220\nsell 5 221\nsell 5 222\nsell 5 223\nsell 5 224\nsell 5 225\nsell 5 226\nsell 5",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nbuy 1\nsell 1\nbuy 1\nsell 1\n\"\"\") == \"4.00000000\"\n\nassert solution(\"\"\"\nbuy 3\nsell 3\nsell 1\ndie 2\n\"\"\") == \"0.00000000\"\n\nassert solution(\"\"\"\nsell 5\nbuy 3\nbuy 5\nsell 1\nbuy 7\nsell 4\nsell 2\n\"\"\") == \"14.00000000\"\n\nassert solution(\"\"\"\nsell 10\nsell 7\nsell 5\nbuy 6\nbuy 2\nbuy 5\nbuy 5\nbuy 5\nsell 4\nbuy 4\nsell 3\nsell 2\nsell 1\nsell 2\nsell 1\n\"\"\") == \"22.00000000\"\n\nassert solution(\"\"\"\nbuy 1\nbuy 3\nsell 3\nsell 1\nbuy 1\nsell 3\nsell 2\nbuy 7\nsell 4\nsell 2\nsell 3\nsell 4\nsell 1\nbuy 7\n\"\"\") == \"3.00000000\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nbuy 1 5\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n\"\"\") == \"8.00000000\"\n\nassert solution(\"\"\"\nbuy 1 5\nbuy 1 15\nbuy 1 7\nbuy 1 6\nbuy 1 1\nsplit 3\nsell 1 5\nsell 1 15\ndie 4\n\"\"\") == \"15.00000000\"\n\nassert solution(\"\"\"\nbuy 1 5\nbuy 1 15\nsell 1 5\nsplit 3\nsell 1 15\ndie 4\n\"\"\") == \"15.00000000\"\n\nassert solution(\"\"\"\nbuy 1 5\nbuy 1 15\nsell 1 5\nsell 1 15\nsplit 3\nsell 1 15\ndie 4\n\"\"\") == \"15.00000000\"\n\nassert solution(\"\"\"\nbuy 1 15\nbuy 1 15\nsell 1 5\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nbuy 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nbuy 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nbuy 1 15\nbuy 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nbuy 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nbuy 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nbuy 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nbuy 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\nsell 1 15\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nbuy 1 15\nsell 1 5\nsell 4 5\n''') == '8.00000000'\nassert solution('''\nbuy 1 10\nbuy 3 15\nsell 1 5\nsell 4 5\n''') == '19.500000000000001'\nassert solution('''\nbuy 1 10\nbuy 3 15\nsplit 3\nsell 1 5\nsell 4 5\n''') == '11.500000000000002'\nassert solution('''\nbuy 1 10\nbuy 3 15\nmerge 3\nsell 1 5\nsell 4 5\n''') == '12.500000000000002'\nassert solution('''\nbuy 1 10\nbuy 3 15\nmerge 3\nsplit 3\nsell 1 5\nsell 4 5\n''') == '12.500000000000002'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4') == '8.00000000'\nassert solution('buy 1 100\\nbuy 1 200\\nbuy 1 300\\nbuy 1 400\\nbuy 1 500\\nbuy 1 600\\nbuy 1 700\\nbuy 1 800\\nbuy 1 900\\nbuy 1 1000\\nbuy 1 1200\\nbuy 1 1300\\nbuy 1 1400\\nsell 1 1000\\nsell 1 1200\\nsell 1 1300\\nsell 1 1400\\nsell 1 1500\\nsell 1 1600\\nsell 1 1700\\nsell 1 1800\\nsell 1 1900\\nsell 1 2000\\nbuy 1 2200\\nbuy 1 2300\\nbuy 1 2400\\nbuy 1 2500\\nsell 1 2300\\nsell 1 2400\\nsell 1 2500\\nbuy 1 2600\\nsell 1 2600\\nsell 1 2700\\nsell 1 2800\\nsell 1 2900\\nsell 1 3000\\nsell 1 3100\\nsell 1 3200\\nsell 1 3300\\nsell 1 3400\\nsell 1 3500\\nsell 1 3600\\nsell 1 3700\\nsell 1 3800\\nsell 1 3900\\nsell 1 4000\\nsell 1 4100\\nsell 1 4200\\nsell 1 4300\\nsell 1 4400\\nsell 1 4500\\nsell 1 4600\\nsell 1 4700\\nsell 1 4800\\nsell 1 4900\\nsell 1 5000\\nsell 1 5100\\nsell 1 5200\\nsell 1 5300\\nsell 1 5400\\nsell 1 5500\\nsell 1 5600\\nsell 1 5700\\nsell 1 5800\\nsell 1 5900\\nsell 1 6000\\nsell 1 6100\\nsell 1 6200\\nsell 1 6300\\nsell 1 6400\\nsell 1 6500\\nsell 1 6600\\nsell 1 6700\\nsell 1 6800\\nsell 1 6900\\nsell 1 7000\\nsell 1 7100\\nsell 1 7200\\nsell 1 7300\\nsell 1 7400\\nsell 1 7500\\nsell 1 7600\\nsell 1 7700\\nsell 1 7800\\nsell 1 7900\\nsell 1 8000\\nsell 1 8100\\nsell 1 8200\\nsell 1 8300\\nsell 1 8400\\nsell 1 8500\\nsell 1 8600\\nsell 1 8700\\nsell 1 8800\\nsell 1 8900\\nsell 1 9000\\nsell 1 9100\\nsell 1 9200\\nsell 1 9300\\nsell 1 9400\\nsell 1 9500\\nsell 1 9600\\nsell 1 9700\\nsell 1 9800\\nsell 1 9900\\nsell 1 10000\\nsell 1 11000\\nsell 1 12000\\nsell 1 13000\\nsell 1 14000\\nsell 1 15000\\nsell 1 16000\\nsell 1 17000\\nsell 1 18000\\nsell 1 19000\\nsell 1 20000\\nsell 1 21000\\nsell 1 22000\\nsell 1 23000\\nsell 1 24000\\nsell 1 25000\\nsell 1 26000\\nsell 1 27000\\nsell 1 28000\\nsell 1 29000\\nsell 1 30000\\nsell 1 31000\\nsell 1 32000\\nsell 1 33000\\nsell 1 34000\\nsell 1 35000\\nsell 1 36000\\nsell 1 37000\\nsell 1 38000\\nsell 1 39000\\nsell 1 40000\\nsell 1 41000\\nsell 1 42000\\nsell 1 43000\\nsell 1 44000\\nsell 1 45000\\nsell 1 46000\\nsell 1 47000\\nsell 1 48000\\nsell 1 49000\\nsell 1 50000\\nsell 1 51000\\nsell 1 52000\\nsell 1 53000\\nsell 1 54000\\nsell 1 55000\\nsell 1 56000\\nsell 1 57000\\nsell 1 58000\\nsell 1 59000\\nsell 1 60000\\nsell 1 61000\\nsell 1 62000\\nsell 1 63000\\nsell 1 64000\\nsell 1 65000\\nsell 1 66000\\nsell 1 67000\\nsell 1 68000\\nsell 1 69000\\nsell 1 70000\\nsell 1 71000\\nsell 1 72000\\",
        "num_ids_2": 1002,
        "num_ids_4": 1002
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('buy 1 15') == '8.00000000'\nassert solution('buy 1 15\\n') == '8.00000000'\nassert solution('split 3') == '0.00999999'\nassert solution('sell 1 5') == '5.00000000'\nassert solution('die 4') == '0.00000000'\n\nstdin = '''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n'''",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n''') == '8.00000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('808') == '8'\nassert solution('2') == '2'\nassert solution('9') == '9'\nassert solution('9') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"42\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1234\") == \"3\"\nassert solution(\"12345\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('808') == '8'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''808\nSample Input:\n''') == '8'\nassert solution('''2\nSample Input:\n''') == '2'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('808') == '8'\n\nassert solution('1') == '1'\n\nassert solution('2') == '2'\n\nassert solution('3') == '3'\n\nassert solution('4') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"27\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '8'\nassert solution('2') == '2'\n\n----Hints----\n- You can use the built-in function ord() to convert an ascii character into an integer.\n\n----Extras----\n- For inputs that are not integers, you may have to use a custom function.\n- What should be returned?\n\n---Test cases---\nInput:\n\nstdin = ['8', '3']\nOutput:\n\n'8'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5\\nLCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == \"0\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nLLLL\\nLLLL\\nLLLL\\n\") == \"1\"\nassert solution(\"5 6\\nLLLLLLLL\\nLLLLLLLL\\nLLLLLLLL\\nLLLLLLLL\\nLLLLLLLL\\nLLLLLLLL\\nLLLLLLLL\\nLLLLLLLL\\n\") == \"2\"\nassert solution(\"2 2\\nLLLLLL\\nLLLLLL\\nLLLLLL\\n\") == \"0\"\n",
        "num_ids_2": 86,
        "num_ids_4": 114
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5\nCCCC\nCCCC\nCCCC\nCCCC\n''') == '0'\nassert solution('''\n1 1\nL\n''') == '1'\nassert solution('''\n1 1\nLL\n''') == '0'\nassert solution('''\n1 1\nCC\n''') == '1'\n\n\"\"\"\nimport collections\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0\\nL\\nC') == '1'\nassert solution('2\\n2\\nWWWW\\nWWWW') == '1'\nassert solution('2\\n4\\nWWWW\\nWWWW') == '2'\n",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"0\"\nassert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"0\"\nassert solution(other_input) == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 0\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == \"60\"\nassert solution(\"1 C\\n\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\nprint('\"{}\"'.format(solution(input())))\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 S') == '60'\nassert solution('2 H') == '26'\nassert solution('2 C') == '19'\nassert solution('2 D') == '13'\nassert solution('2 S') == '60'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\"\nassert solution(\"3 S\\nTD\\nAS\\n8S\") == \"18\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '60'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n''') == '60'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''5 K\nKS\n9C\nTD\nJD\nQD\n7S\n''') == '28'\nassert solution('''10 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n6H\nAC\n''') == '83'\n\n'''\nInput\n\n2\nS\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n\nOutput\n\n60\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 S') == '60'\nassert solution('2 H') == '34'\nassert solution('2 D') == '24'\nassert solution('2 C') == '16'\nassert solution('2 T') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"5 K\") == \"55\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 S\\nTH') == '60'\nassert solution('2 H\\n9C') == '55'\nassert solution('2 D\\nQS') == '50'\nassert solution('2 D\\n5D') == '50'\nassert solution('2 D\\n9C') == '39'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\nthis\nis very\nannoy\nn\n\"\"\") == \"se\"\n\nassert solution(r\"\"\"\n\n\"\"\") == \"\"\n\nassert solution(r\"\"\"\n\n\"\"\") == \"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n\nThe rows of your keyboard are each a single letter, space, or digit.\nThe rows are all the same length.\n\nYour computer is connected to a keyboard and you enter the characters of each row in the same order in which they are displayed in the keyboard.\n\nYour computer displays these characters, from left to right, each time you press a key.\n\nWhen you press a sticky key, it is sent twice. The character that corresponds to the sticky key appears twice on your computer, each time it is pressed.\n\nBut unlike in this previous exercise, the keys are not sticky. They are pressed only once.\n\nGiven the text of these rows, find the letters and digits that must be sticky to allow you to type a few characters in the same order.\n\n\"\"\") == \"se\"\n\nassert solution(r\"\"\"\n\nThe rows of your keyboard are each a single letter, space, or digit.\nThe rows are all the same length.\n\nYour computer is connected to a keyboard and you enter the characters of each row in the same order in which they are displayed in the keyboard.\n\nYour computer displays these characters, from left to right, each time you press a key.\n\nWhen you press a sticky key, it is sent twice. The character that corresponds to the sticky key appears twice on your computer, each time it is pressed.\n\nBut unlike in this previous exercise, the keys are not sticky. They are pressed only once.\n\nGiven the text of these rows, find the letters and digits that must be sticky to allow you to type a few characters in the same order.\n\n\"\"\") == \"se\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\\nthiss iss veery annoying\\n\") == \"se\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\nassert solution(\"seeeeee\") == \"seee\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying\n''') =='se'\n\"\"\"\nimport collections\n\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        pass\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == '3'\nassert solution('5 3 1\\n0 0 1 1 2') == '2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 0\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1 4 1\\n1 2 1 2\\n3') == '1'\nassert solution('2 3 1 4 1\\n1 2 1 2\\n4') == '2'\nassert solution('2 2 2\\n4 1\\n1 3') == '1'\nassert solution('5 2 5\\n5 5\\n3') == '2'\nassert solution('5 2 5\\n5 5\\n2') == '1'\n",
        "num_ids_2": 46,
        "num_ids_4": 85
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2\\n') == '3'\nassert solution('5 2 0\\n0 0 1 1 2\\n') == '2'\nassert solution('5 3 1\\n0 0 1 1 2\\n') == '1'\nassert solution('5 2 1\\n0 0 1 1 2\\n') == '1'\nassert solution('1000000000 5000000000 0\\n0 0 1 1 2\\n') == '1'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''\n10 5 0\n0 0 1 1 2 3 4 5 6 7 8 9\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 3 0\\n0 0 1 1 2\") == \"3\"\nassert solution(\n    \"1 1 1\\n0\") == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n0 0 1\\n') == \"3\"\nassert solution('6 5 1\\n0 0 1 1 2 3\\n') == \"4\"\n\nimport sys\nlines = sys.stdin.readlines()\n\nN, M, K = [int(x) for x in lines[0].split()]\ncolors = [int(x) for x in lines[1].split()]",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == '3'\nassert solution('5 3 1\\n0 0 1 1 2') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 0\\n0 0 1 1 2') == '3'\nassert solution('1 3 0\\n0 0 1 1 2\\n1 2 3 4 5') == '2'\nassert solution('5 3 0\\n0 0 1 1 2\\n1 2 3 4 5') == '4'\nassert solution('5 3 0\\n0 0 1 1 2\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '4'\nassert solution('5 3 0\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '3'\n",
        "num_ids_2": 45,
        "num_ids_4": 111
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\nprint('All tests passed!')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n2\\n3') == '1'\nassert solution('4\\n1\\n2\\n3') == '2'\nassert solution('5\\n1\\n2\\n3') == '6'",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '1'\nassert solution('1\\n2\\n3\\n') == '2'\nassert solution('1\\n2\\n3\\n') == '6'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n2\\n2\") == \"1\"\nassert solution(\"1\\n3\\n4\") == \"1\"\nassert solution(\"1\\n2\\n2\\n3\") == \"1\"\nassert solution(\"1\\n3\\n4\\n5\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == '4 2'\nassert solution('4 2 3 1') == '5 2'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3 1 2') == '4 2'\nassert solution('5\\n10 1 2 4 3 5 7') == '10 5'\nassert solution('3\\n8 1 2 3') == '7 3'\nassert solution('3\\n8 2 5 6') == '7 5'\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3') == '4 2'\nassert solution('3\\n2 3') == '4 2'\nassert solution('4\\n2 3') == '8 2'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1 1 2 3 2'\nassert solution('4') == '1 2 1 1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '4'\nassert solution('4') == '4'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2\n\"\"\") == \"4 2\"\nassert solution(\"\"\"\n4 3\n5 6\n\"\"\") == \"8 5\"\nassert solution(\"\"\"\n2 4\n10 12\n\"\"\") == \"14 10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == \"4\"\nassert solution(\"3\\n1 2 3\") == \"6 6\"\nassert solution(\"4\\n6 5 4 3\") == \"9 9\"\n",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4 2'\nassert solution('3 1 2') == '4 2'\nassert solution('5 1 2 3 4') == '8 2'\nassert solution('10 1 2 3 4 5 6 7 8') == '9 2'\nassert solution('15 1 2 3 4 5 6 7 8 9 10') == '12 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 58
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5 3 2 1\") == \"10 2\"\nassert solution(\"4\") == \"7\"\nprint('You passed all tests!')\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2') == '4 2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1\n1\n1\n2\n1\n1''') == '2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 1\") == \"2\"\nassert solution(\"10 3 2\") == \"3\"\nassert solution(\"3 2 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 1''') == '2'\nassert solution('''10 2 2''') == '4'\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 1''') == '2'\nassert solution('''10 3 1''') == '4'\nassert solution('''100 6 1''') == '129'\nassert solution('''2 1 1''') == '3'\nassert solution('''10 5 4''') == '30'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('1000000 10 1') == '999999'\nassert solution('9 9 1') == '99'",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 1\n''') == '2'\nassert solution('''\n4 3 3\n''') == '3'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1\\n') == '2'\nassert solution('10 5 5\\n') == '5'\nassert solution('1000 2 1\\n') == '0'\nassert solution('3 5 1\\n') == '1'\nassert solution('2 100 5\\n') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 1\n2 3''') == '2'\nassert solution('''5 3 2\n5 3''') == '3'\nassert solution('''5 5 1\n5 5''') == '5'\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1') == '2'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n''') == '6'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n4\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"36\"\nassert solution(\"7\") == \"288\"\nassert solution(\"10\") == \"108\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '36'\nassert solution
        "num_ids_2": 1473,
        "num_ids_4": 1473
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '36'\nassert solution('1') == '1'\nassert solution('100') == '10000000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3\n7\n''') == '36'\nassert solution('''\n5\n5\n7\n''') == '288'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nSample Input:\n7\nSample Output:\n288\n''') == '36', \"Should return 36\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"36\"\nassert solution(\"5 1\") == \"36\"\n\nstdin = \"\"\"\n10\n\"\"\"\n\nassert solution(stdin) == \"21\"\n\nstdin = \"\"\"\n1000000000\n\"\"\"\nassert solution(stdin) == \"213700202540390265128980700\"\n\nstdin = \"\"\"\n1000000000 1\n\"\"\"\nassert solution(stdin) == \"213700202540390265128980700 36\"\n\nstdin = \"\"\"\n5\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 53
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('4') == '8'\nassert solution('9') == '22'\nassert solution('10') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '36'\nassert solution('13') == '283'\n\n--Input is read by line--\n\nRuntime: 140 ms, faster than 92.88% of Python3 online submissions for Hailstone Sequence.\nMemory Usage: 14.1 MB, less than 69.55% of Python3 online submissions for Hailstone Sequence.\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '36'\nassert solution('13') == '217'\nassert solution('1000000000') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '2 3 1'\nassert solution('4') == '2 3 1 4'\nassert solution('5') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3') == '1 2 3'\nassert solution('3\\n3 1') == '1 2 3'\nassert solution('3\\n2 1') == '1 2 3'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 3 1') == '2 3 4 1'\nassert solution('4\\n2 3 3 1') == '2 3 4 1'\nassert solution('4\\n2 2 2 1') == '2 2 4 1'\nassert solution('5\\n2 3 4 3 1') == '2 3 4 1 5'\nassert solution('1\\n2 3') == '2 3'\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 1\") == \"2 3 4 1\"\nassert solution(\"2 3 1\") == \"impossible\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == 'impossible'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('4') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3 3 1') == '2 3 4 1'\nassert solution('5\\n5 5 5 5 5') == '5 5 5 5 5'\nassert solution('3\\n3 1 1') == '1 1 1'\n",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2 3 1\\n') == '2 3 4 1'\nassert solution('5 1 1 1 1\\n') == '1 1 2 3 4'\nassert solution('5 1 1 1 1\\n') == '1 1 1 2 3'\nassert solution('5 1 1 1 1\\n') == '1 1 1 1 1'\nassert solution('5 1 1 1 1\\n') == '1 1 1 1 1'\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('4 2 2 2') == '4 1 3 2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\nleft_oar\nright_oar\nleft_oar\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3\nright_oar\nright_oar\nright_oar\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\nhull\nhull\nhull\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\nleft_oar\nleft_oar\nhull\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\nleft_oar\nleft_oar\nleft_oar\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('3 3\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '3'\nassert solution('3 1\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '1'\n",
        "num_ids_2": 78,
        "num_ids_4": 117
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n1 2 3\\n1 2 3\\n1 2 3') == '4'\nassert solution('5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5') == '1'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\nassert solution('2 1\\n') == '1'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\nhull\\nright_oar\\n') == '4'\nassert solution('2 2\\nleft_oar\\nright_oar\\nhull\\n') == '2'\nassert solution('2 3\\nleft_oar\\nleft_oar\\nhull\\n') == '1'\n",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\nassert solution('5 1\\nhull\\nleft_oar\\nleft_oar\\nleft_oar\\nhull\\nright_oar\\n') == '1'\n\n\"\"\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\n\n'''\n\np, n = [int(x) for x in input().split()]\n\nparts = []\nfor i in range(n):\n    parts.append(input())\n\nd = {}\nfor i in range(p):\n    if parts[i] in d:\n        d[parts[i]] += 1\n    else:\n        d[parts[i]] = 1\n\nmax = 0\nkey = ''\nfor k,v in d.items():\n    if v>max:\n        max = v\n        key = k\nprint(key)",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar''') == '4'\n''' == '4'\n\nP=3 N=5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\nSample Input:\n2 3\nhull\nhull\nhull\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('3 2\\nleft_oar\\nright_oar\\nleft_oar') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n2 2\\n3 3\\n') == '1 2\\n2 1\\n2 3\\n3 1\\n3 2\\n3 3\\n4 4\\n5 5'\nassert solution('5 6\\n5 7\\n7 6\\n') == '5 6\\n7 7\\n5 6\\n7 5\\n7 5\\n6 5\\n6 7\\n7 7\\n5 6\\n'",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 3\n5 7\n7 5\n''') == '7 7'\nassert solution('''\n2 5\n5 7\n7 5\n''') == '7 7'\nassert solution('''\n3 3\n5 7\n7 5\n''') == '7 7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"\nassert solution(\"1 1\\n1 5\\n5 1\\n\") == \"1 5\"\nassert solution(\"1 5\\n5 1\\n5 1\\n\") == \"5 5\"\nassert solution(\"5\\n5\\n5\\n\") == \"5 5\"\nassert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\nassert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('3 3\\n4 4\\n5 5\\n') == '4 4'\n\n'''",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\nassert solution('1 10\\n2 10\\n3 10\\n') == '10 10'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '7 7'\nassert solution('5\\n7\\n5\\n4\\n3') == '7 7'\nassert solution('5\\n7\\n5\\n6\\n4') == '7 7'\nassert solution('5\\n7\\n6\\n4\\n3') == '7 7'\nassert solution('5\\n7\\n6\\n3\\n4') == '7 7'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"7 7\"\nassert solution(\"7 8\") == \"7 7\"\nassert solution(\"10 4\") == \"8 4\"\nassert solution(\"1 1\") == \"2 2\"\nassert solution(\"2 2\") == \"2 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n5 7\n7 5\n''') == '7 7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n2 2\\n3 4\\n\") == \"1 1\"\nassert solution(\"2 2\\n4 4\\n1 1\\n\") == \"2 2\"\nassert solution(\"1 2\\n5 5\\n5 2\\n\") == \"2 2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"7 7\"\nassert solution(\"5 7\") == \"7 7\"\nassert solution(\"7 5\") == \"7 7\"\nassert solution(\"7 7\") == \"7 7\"\nassert solution(\"10 10\") == \"10 10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 60\n1 61\n''') == '1.016666667'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 61\\n') == '1.016666667'\nassert solution('2\\n4 5\\n') == '2.0'\nassert solution('3\\n6 9\\n') == '0.833333'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('1\\n1 62') == '1.1'\n\n------------------------------------------------------\nhttps://app.codility.com/programmers/lessons/4-counting_elements/max_sequence/\n------------------------------------------------------\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1.016666667\"\nassert solution(input(\"\")) == \"measurement error\"\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1.01'\nassert solution('2') =='measurement error'\nassert solution('3') =='measurement error'\nassert solution('4') =='measurement error'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n1 63\") == \"1.033333333\"\nassert solution(\"4\\n1 64\\n3 67\\n3 68\\n2 69\") == \"4.5\"\nassert solution(\"2\\n1 65\\n2 71\\n3 71\\n4 72\") == \"2.75\"\nassert solution(\"2\\n1 66\\n3 67\\n4 68\") == \"3.033333333\"\nassert solution(\"2\\n1 67\\n2 70\\n3 70\\n4 71\") == \"2.5\"\n",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('2\\n1 61') =='measurement error'\nassert solution('3\\n1 61') =='measurement error'\nassert solution('4\\n1 61') =='measurement error'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1 61\n2 64\n2 80\n2 95\n3 76\n3 82\n4 70\n4 72\n5 62\n5 64''') == '1.01666667'\nassert solution('''1\n1 61\n2 64\n2 80\n2 95\n3 76\n3 82\n4 70\n4 72\n5 62\n5 64''') =='measurement error'\nassert solution('''1\n1 61\n2 64\n2 80\n2 95\n3 76\n3 82\n4 70\n4 72\n5 62\n5 64''') == '0.02166667'\nassert solution('''1\n1 61\n2 64\n2 80\n2 95\n3 76\n3 82\n4 70\n4 72\n5 62\n5 64''') =='measurement error'\nassert solution('''1\n1 61\n2 64\n2 80\n2 95\n3 76\n3 82\n4 70\n4 72\n5 62\n5 64''') == '1.01666667'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 1\n5 61\n\"\"\") == \"1.016667\", \"First\"\nassert solution(\"\"\"\n2 1\n5 61\n\"\"\") == \"1.016666667\", \"Second\"\nassert solution(\"\"\"\n3 1\n5 61\n\"\"\") == \"1.016666667\", \"Third\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1 61\n''') == '1.016666667'\nassert solution('''\n1\n1 61\n''') == '1.016666667'\nassert solution('''\n1\n1 6\n''') == '1.0'\nassert solution('''\n1\n1 61\n''') == '1.0'\nassert solution('''\n1\n1 61\n''') == '1.0'\n'''\nSample Input:\n1\n3 100\nSample Output:\n1.36787944117\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CPMCRYY','ALBERTA') == 'CALGARY'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"\nassert solution(\"CPMCRYY\",\"ENAMIN\") == \"CALGARY\"\nassert solution(\"CPMCRYY\",\"CYBER\") == \"CALGARY\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('CPMCRYY\\nALBERTA') == 'CALGARY'\nprint(solution('CPMCRYY\\nALBERTA'))\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CPMCRYY') == 'ALBERTA'\n\"\"\"\n\n\nimport collections",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''KPYKQQRPQJJBBEFA\nPMDFGHJIJLQM''') == 'HELLO'\nassert solution('''XZYQQMJJCCDFDJ\nRSAQYMDRKQZP''') == 'DAOJRCLLU'\nassert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'\nassert solution('ALBERTA') == 'CALGARY'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('BCABCDCAB') == '3'\nassert solution('BCABCDCABABCDCAB') == '3'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 1734
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AB') == '3'\nassert solution('BABC') == '2'\nassert solution('CBBC') == '2'\nassert solution('ABCC') == '1'\nassert solution('ABCD') == '2'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AB') == '3'\nassert solution('BC') == '2'\nassert solution('CBA') == '1'\nassert solution('CBAABCBCA') == '1'\nassert solution('ABBCAAAB') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AB') == '1'\nassert solution('CB') == '3'\nassert solution('CC') == '2'\nprint('Congratulations!')\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AB\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AB') == '3'\nassert solution('BCA') == '2'\nassert solution('CAB') == '1'\nassert solution('ABC') == '0'\nassert solution('ABCD') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nBA\n''') == '2'\nassert solution('''\nCC\n''') == '3'\nassert solution('''\nAC\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == '3'\nassert solution
        "num_ids_2": 1733,
        "num_ids_4": 1733
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 5 3 4\") == \"4\"\nassert solution(\"3 7 5 4\") == \"1\"\nassert solution(\"2 5 4 3\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 3 3 4') == '3'\nassert solution('1 5 3 4') == '3'\nassert solution('1 7 4 4') == '3'\nassert solution('3 4 1 2') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '3'\n\nassert solution('2 2 4 5') == '3'\n\nassert solution('1 1 1 1') == '1'\n\nassert solution('1 1 2 2') == '2'\n\nassert solution('1 3 3 3') == '3'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3 4\n''') == '3'\nassert solution('''\n3 2 1 4\n''') == '4'\nassert solution('''\n1 4 2 3\n''') == '5'\nassert solution('''\n1 3 3 4\n''') == '5'\nassert solution('''\n1 2 2 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2 2') == '3'\nassert solution('0 1 0 1') == '1'\nassert solution('0 0 0 0') == '0'\nassert solution('0 0 1 1') == '1'\nassert solution('1 0 1 0') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 2 2') == '4'\nassert solution('2 2 2 2') == '4'\nassert solution('2 2 2 2') == '4'\nassert solution('2 2 2 2') == '4'\nassert solution('2 2 2 2') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 3 4 2') == '3'\nassert solution('1 5 6 4') == '10'\nassert solution('3 4 1 2') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 2 5 6') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3 4\n''') == '3'\nassert solution('''\n2 2 2 1\n''') == '1'\nassert solution('''\n5 5 5 4\n''') == '5'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 3 4') == '3'\nassert solution('1 1 1 1') == '1'\n\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n\") == \"1\"\nassert solution(\"2 1\\n\") == \"2\"\nassert solution(\"3 1\\n\") == \"3\"\nassert solution(\"4 1\\n\") == \"4\"\nassert solution(\"5 1\\n\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('1 3') == '1 2'\nassert solution('1 4') == '1 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('5') == '10'\nassert solution('8') == '12'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"2\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"27 27\") == \"2\"\nassert solution(\"103 103\") == \"2\"\nassert solution(\"102 102\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"10 7\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('103 27') == '4'\nassert solution('80 22') == '5'\nassert solution('110 7') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\nprint(solution())\n\"\"\"\n\na, b = map(int, input().split())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('103 27') == '4'\nassert solution('102 20') == '3'\nassert solution('1 1') == '2'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '1 2'\nassert solution('10 11') == '2 3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    }
]