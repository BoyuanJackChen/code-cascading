[
    {
        "number": 4000,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    edges = []\n    for i in range(n - 1):\n        edges.append(input().split())\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key=lambda x: x[1])\n    edges = sorted(edges, key=lambda x: x[0])\n    edges = sorted(edges, key",
        "generated_testcode": "assert function(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4001,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string)\n    b=[]\n    for i in range(1,a+1):\n        if a%i==0:\n            b.append(i)\n    return b\n\n",
        "generated_testcode": "assert function(\"10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4002,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m,k = list(map(int,input_string.split(' ')))\n    a = []\n    for i in range(n):\n        a.append(list(map(int,input().split(' '))))\n    a = np.array(a)\n    a = a.reshape(n,m)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = sorted(a)\n    a = a[::-1]\n    a = a[:int(m/2)]\n    a = np.array(a)\n    a = a.reshape(int(m/2),2)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = np.array(a)\n    a = a.reshape(int(m/2),2)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = np.array(a)\n    a = a.reshape(int(m/2),2)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = np.array(a)\n    a = a.reshape(int(m/2),2)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = np.array(a)\n    a = a.reshape(int(m/2),2)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = np.array(a)\n    a = a.reshape(int(m/2),2)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = np.array(a)\n    a = a.reshape(int(m/2),2)\n    a = a.tolist()\n    a = [item for sublist in a for item in sublist]\n    a = np.array(a)\n    a = a.reshape(int(m/",
        "generated_testcode": "assert function(\"3 4 3\") == 24\n",
        "difficulty": "introductory"
    },
    {
        "number": 4003,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    k = 1\n    s = 'L'\n    for i in range(n-1):\n        if a[i] < a[i+1]:\n            k += 1\n            s += 'R'\n        else:\n            s += 'L'\n    return k, s\n\n",
        "generated_testcode": "assert function(\"1 2 4 3 2\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4004,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    d = 0\n    for i in range(n):\n        if a[i] < 0:\n            d = -1\n            break\n        else:\n            d = a[i]\n    if d == 0:\n        d = -1\n    return d\n\n",
        "generated_testcode": "assert function(\"1 4 4 7 4 1\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4005,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x1, y1, x2, y2 = map(int, input_string.split(' '))\n    x3, y3, x4, y4 = map(int, input_string.split(' '))\n    x5, y5, x6, y6 = map(int, input_string.split(' '))\n    if x1 < x3 and x2 > x4 and y1 < y3 and y2 > y4:\n        if x5 < x3 and x6 > x4 and y5 < y3 and y6 > y4:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')\n\n",
        "generated_testcode": "assert function(\"2 2 4 4\") == \"NO\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4006,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    count = 0\n    while n > 0:\n        if n % 10 == 0:\n            n = n // 10\n        else:\n            n = n + 1\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"1098\") == 20\n",
        "difficulty": "introductory"
    },
    {
        "number": 4007,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    q=int(input_string)\n    l=[]\n    for i in range(q):\n        l.append(int(input()))\n    l.sort()\n    for i in range(q):\n        if l[i]==0:\n            print(q-i)\n        else:\n            print(l[i])\nfunction(input())\n",
        "generated_testcode": "assert function(\"5 0 0 2 4\") == \"5 3 1 2 4\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4008,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    if k == 1:\n        return \"NO\"\n    if k == n:\n        return \"YES\"\n    if k == 2:\n        if a[0] == a[1]:\n            return \"NO\"\n        else:\n            return \"YES\"\n    if k == 3:\n        if a[0] == a[1] or a[0] == a[2]:\n            return \"NO\"\n        else:\n            return \"YES\"\n    if k == 4:\n        if a[0] == a[1] or a[0] == a[2] or a[0] == a[3]:\n            return \"NO\"\n        else:\n            return \"YES\"\n    if k == 5:\n        if a[0] == a[1] or a[0] == a[2] or a[0] == a[3] or a[0] == a[4]:\n            return \"NO\"\n        else:\n            return \"YES\"\n    if k == 6:\n        if a[0] == a[1] or a[0] == a[2] or a[0] == a[3] or a[0] == a[4] or a[0] == a[5]:\n            return \"NO\"\n        else:\n            return \"YES\"\n    if k == 7:\n        if a[0] == a[1] or a[0] == a[2] or a[0] == a[3] or a[0] == a[4] or a[0] == a[5] or a[0] == a[6]:\n            return \"NO\"\n        else:\n            return \"YES\"\n    if k == 8:\n        if a[0] == a[1] or a[0] == a[2] or a[0] == a[3] or a[0] == a[4] or a[0] == a[5] or a[0] == a[6] or a[0] == a[7]:\n            return \"NO\"\n        else:\n            return \"YES\"\n    if k == 9:\n        if a[",
        "generated_testcode": "assert function(\"4 2\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4009,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, x, y = map(int, input_string.split())\n    number = input_string[2:]\n    number = list(number)\n    number = [int(i) for i in number]\n    number = number[::-1]\n    number = [str(i) for i in number]\n    number = ''.join(number)\n    number = int(number)\n    print(number)\n    print(number % (10 ** x))\n    print(number % (10 ** y))\n    print(number % (10 ** x) - number % (10 ** y))\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 ** x) - number % (10 ** y) + 10 ** y)\n    print(number % (10 **",
        "generated_testcode": "assert function(\"11 5 2\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4010,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    for i in range(n):\n        if(a[i]==a[n-i-1]):\n            if(a[i]==a[n-i-2]):\n                if(a[i]==a[n-i-3]):\n                    print(\"YES\")\n                    break\n                else:\n                    print(\"NO\")\n                    break\n            else:\n                print(\"NO\")\n                break\n        else:\n            print(\"NO\")\n            break\nfunction(input())\n",
        "generated_testcode": "assert function(\"1234\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4011,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    return n\n\n",
        "generated_testcode": "assert function(\"1337\") == 1553\n",
        "difficulty": "introductory"
    },
    {
        "number": 4012,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a, b, c = list(map(int, input_string.split()))\n    if a > b:\n        a, b = b, a\n    if b > c:\n        b, c = c, b\n    if a > b:\n        a, b = b, a\n    if b % a == 0:\n        return b // a\n    else:\n        return b // a + 1\n\n",
        "generated_testcode": "assert function(\"1 2 3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4013,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    print(a[n-1]-a[0])\nfunction(input())\n",
        "generated_testcode": "assert function(\"1 3 3 7\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4014,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    rd = lambda: list(map(int, input_string.split()))\n    n, m = rd()\n    days = []\n    for i in range(m):\n        s, d, c = rd()\n        days.append([s, d, c])\n    days.sort()\n    # print(days)\n    # print(n, m)\n    # print(days)\n    # print(days[0][0])\n    # print(days[0][1])\n    # print(days[0][2])\n    # print(days[1][0])\n    # print(days[1][1])\n    # print(days[1][2])\n    # print(days[2][0])\n    # print(days[2][1])\n    # print(days[2][2])\n    # print(days[3][0])\n    # print(days[3][1])\n    # print(days[3][2])\n    # print(days[4][0])\n    # print(days[4][1])\n    # print(days[4][2])\n    # print(days[5][0])\n    # print(days[5][1])\n    # print(days[5][2])\n    # print(days[6][0])\n    # print(days[6][1])\n    # print(days[6][2])\n    # print(days[7][0])\n    # print(days[7][1])\n    # print(days[7][2])\n    # print(days[8][0])\n    # print(days[8][1])\n    # print(days[8][2])\n    # print(days[9][0])\n    # print(days[9][1])\n    # print(days[9][2])\n    # print(days[10][0])\n    # print(days[10][1])\n    # print(days[10][2])\n    # print(days[11][0])\n    # print(days[11][1])\n    # print(days[11][2])\n    # print(days[12][0])\n    # print(days[12][1])\n    # print(days[12][2])\n    # print(days[13][0",
        "generated_testcode": "assert function(\"5 2\") == \"1 2 3 0 3\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4015,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = map(int, input_string.split())\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n % 3 == 0 and m % 3 == 0:\n        return n // 3 + m // 3\n    if n % 3 == 0 and m % 3 == 2:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 2 and m % 3 == 0:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 2 and m % 3 == 2:\n        return n // 3 + m // 3 + 2\n    if n % 3 == 1 and m % 3 == 0:\n        return n // 3 + m // 3 + 2\n    if n % 3 == 1 and m % 3 == 2:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 2 and m % 3 == 1:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 1 and m % 3 == 1:\n        return n // 3 + m // 3 + 2\n    if n % 3 == 1 and m % 3 == 1:\n        return n // 3 + m // 3 + 2\n    if n % 3 == 2 and m % 3 == 1:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 2 and m % 3 == 1:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 1 and m % 3 == 2:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 1 and m % 3 == 1:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 2 and m % 3 == 1:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 2 and m % 3 == 1:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 1 and m % 3 == 2:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 1 and m % 3 == 1:\n        return n // 3 + m // 3 + 1\n    if n % 3 == 2 and m % 3 == 2:\n        return n // 3 + m // 3 + 1\n    if n % 3 ==",
        "generated_testcode": "assert function(\"120 51840\") == 7\n",
        "difficulty": "introductory"
    },
    {
        "number": 4016,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int,input_string.split()))\n    t = input()\n    l = 0\n    r = 0\n    s = ''\n    while r < n:\n        if t[r] == t[l]:\n            r += 1\n            l += 1\n            if r == n:\n                s += t[l:r]\n                r = n\n        else:\n            s += t[l:r]\n            l = r\n            r = l\n    s += t[l:r]\n    if len(s) < k:\n        return 'Impossible'\n    else:\n        return s[:k]\n\n",
        "generated_testcode": "assert function(\"aba\") == \"ababababa\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4017,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        if a[i] == sum(a) - a[i]:\n            b.append(i)\n    if len(b) == 0:\n        print(0)\n    else:\n        print(len(b))\n        print(*b)\n\n",
        "generated_testcode": "assert function(\"2 5 1 2 2\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4018,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    s = input()\n    if k > n:\n        return -1\n    if k == n:\n        return 0\n    if k == 1:\n        return n\n    if k == 2:\n        return n - 1\n    if k == 3:\n        return n - 2\n    if k == 4:\n        return n - 3\n    if k == 5:\n        return n - 4\n    if k == 6:\n        return n - 5\n    if k == 7:\n        return n - 6\n    if k == 8:\n        return n - 7\n    if k == 9:\n        return n - 8\n    if k == 10:\n        return n - 9\n    if k == 11:\n        return n - 10\n    if k == 12:\n        return n - 11\n    if k == 13:\n        return n - 12\n    if k == 14:\n        return n - 13\n    if k == 15:\n        return n - 14\n    if k == 16:\n        return n - 15\n    if k == 17:\n        return n - 16\n    if k == 18:\n        return n - 17\n    if k == 19:\n        return n - 18\n    if k == 20:\n        return n - 19\n    if k == 21:\n        return n - 20\n    if k == 22:\n        return n - 21\n    if k == 23:\n        return n - 22\n    if k == 24:\n        return n - 23\n    if k == 25:\n        return n - 24\n    if k == 26:\n        return n - 25\n    if k == 27:\n        return n - 26\n    if k == 28:\n        return n - 27\n    if k == 29:\n        return n - 28\n    if k == 30:\n        return n - 29\n    if k == 31:\n        return n - 30\n    if k == 32:\n        return n - 31\n    if k == 33:\n        return n - 32\n    if k == 34:\n        return n - 33\n    if k == 35:\n        return n - 34\n    if k == 36:\n        return n - 35\n    if k == 37:\n        return n - 36\n    if k == 38",
        "generated_testcode": "assert function(\"asdf\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4019,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    [n, m, d] = list(map(int, input_string.split()))\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, input().split())))\n    return n, m, d, edges\n\n",
        "generated_testcode": "assert function(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4020,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split(':'))\n    if a>23:\n        a=a-24\n    if b>59:\n        b=b-60\n    return str(a)+':'+str(b)\n\n",
        "generated_testcode": "assert function(\"10:00\") == \"10:30\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4021,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    x=int(input_string)\n    if x%2==0:\n        return int(x/2)\n    else:\n        return int(3*x+1)\n\n",
        "generated_testcode": "assert function(\"2\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4022,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    segments=[]\n    for i in range(N):\n        segments.append(list(map(int,input().split())))\n    segments.sort()\n    segments.sort(key=lambda x:x[1])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1]-x[0])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1]-x[0])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1]-x[0])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1]-x[0])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1]-x[0])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1]-x[0])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1])\n    segments.sort(key=lambda x:x[0])\n    segments.sort(key=lambda x:x[1]-x[0])\n    segments.sort(key=lambda x:x[",
        "generated_testcode": "assert function(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4023,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    if n==1:\n        return \"YES\"\n    elif n==2:\n        if a[0]==a[1]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    else:\n        if a[0]==a[1] and a[0]==a[2]:\n            return \"YES\"\n        elif a[0]==a[1] and a[0]!=a[2]:\n            if a[1]==a[2]:\n                return \"YES\"\n            else:\n                return \"NO\"\n        elif a[0]!=a[1] and a[0]!=a[2]:\n            if a[1]==a[2]:\n                return \"YES\"\n            else:\n                return \"NO\"\n        else:\n            return \"NO\"\n\n",
        "generated_testcode": "assert function(\"5\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4024,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    s=input()\n    if k>n:\n        return -1\n    if k==n:\n        return 0\n    if k==1:\n        return n\n    if k==2:\n        return n-1\n    if k==3:\n        return n-2\n    if k==4:\n        return n-3\n    if k==5:\n        return n-4\n    if k==6:\n        return n-5\n    if k==7:\n        return n-6\n    if k==8:\n        return n-7\n    if k==9:\n        return n-8\n    if k==10:\n        return n-9\n    if k==11:\n        return n-10\n    if k==12:\n        return n-11\n    if k==13:\n        return n-12\n    if k==14:\n        return n-13\n    if k==15:\n        return n-14\n    if k==16:\n        return n-15\n    if k==17:\n        return n-16\n    if k==18:\n        return n-17\n    if k==19:\n        return n-18\n    if k==20:\n        return n-19\n    if k==21:\n        return n-20\n    if k==22:\n        return n-21\n    if k==23:\n        return n-22\n    if k==24:\n        return n-23\n    if k==25:\n        return n-24\n    if k==26:\n        return n-25\n    if k==27:\n        return n-26\n    if k==28:\n        return n-27\n    if k==29:\n        return n-28\n    if k==30:\n        return n-29\n    if k==31:\n        return n-30\n    if k==32:\n        return n-31\n    if k==33:\n        return n-32\n    if k==34:\n        return n-33\n    if k==35:\n        return n-34\n    if k==36:\n        return n-35\n    if k==37:\n        return n-36\n    if k==38",
        "generated_testcode": "assert function(\"asdf\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4025,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a = list(map(int, input_string.split()))\n    fish = a[0]\n    rabbit = a[1]\n    chicken = a[2]\n    days = 0\n    while fish > 0 and rabbit > 0 and chicken > 0:\n        if days % 7 == 0:\n            fish -= 1\n            rabbit -= 1\n            chicken -= 1\n        elif days % 7 == 1:\n            fish -= 1\n            rabbit -= 1\n        elif days % 7 == 2:\n            fish -= 1\n            chicken -= 1\n        elif days % 7 == 3:\n            fish -= 1\n        elif days % 7 == 4:\n            rabbit -= 1\n        elif days % 7 == 5:\n            chicken -= 1\n        elif days % 7 == 6:\n            fish += 1\n            rabbit += 1\n        days += 1\n    return days\n\n",
        "generated_testcode": "assert function(\"2 1 1\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4026,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    matrix=[]\n    for i in range(n):\n        matrix.append(list(map(int,input().split())))\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j]!=matrix[j][i]:\n                return \"NO\"\n    for i in range(n):\n        for j in range(n):\n            if i+j>n-1:\n                if matrix[i][j]!=matrix[n-1-j][n-1-i]:\n                    return \"NO\"\n    return \"YES\"\n\n",
        "generated_testcode": "assert function(\"3 4\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4027,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=[]\n    b=[]\n    for i in range(1,n+1):\n        if i%2==0:\n            a.append(i)\n        else:\n            b.append(i)\n    print(abs(sum(a)-sum(b)))\nfunction(input())\n",
        "generated_testcode": "assert function(\"3\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4028,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    s=input()\n    count=0\n    for i in range(n):\n        for j in range(n):\n            if s[i:j+1]==s[i:j+1][::-1]:\n                count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"()))()\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4029,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string[::-1]\n    for i in range(len(s)):\n        if s[i]=='0':\n            s=s[:i]+'1'+s[i+1:]\n    return s[::-1]\n\n",
        "generated_testcode": "assert function(\"5071\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4030,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    s=input_string\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=set(s)\n",
        "generated_testcode": "assert function(\"abacbecfd\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4031,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    string_list = []\n    for i in range(N):\n        string_list.append(input())\n    string_list.sort()\n    for i in range(N):\n        for j in range(i+1, N):\n            if string_list[j].find(string_list[i])!= -1:\n                return \"NO\"\n    return \"YES\"\n\n",
        "generated_testcode": "assert function(\"aba\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4032,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    a = list(map(int, input().split()))\n    count = 0\n    while len(a) > 0:\n        if a[0] <= k:\n            a.pop(0)\n            count += 1\n        elif a[-1] <= k:\n            a.pop()\n            count += 1\n        else:\n            break\n    return count\n\n",
        "generated_testcode": "assert function(\"8 4\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4033,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b = [int(x) for x in input_string.split()]\n    return a+b\n\n",
        "generated_testcode": "assert function(\"4 4\") == 12\n",
        "difficulty": "introductory"
    },
    {
        "number": 4034,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n == 1:\n        return \"YES\"\n    if n == 2:\n        return \"NO\"\n    if n == 3:\n        return \"YES\"\n    if n == 4:\n        return \"NO\"\n    if n == 5:\n        return \"YES\"\n    if n == 6:\n        return \"NO\"\n    if n == 7:\n        return \"YES\"\n    if n == 8:\n        return \"NO\"\n    if n == 9:\n        return \"YES\"\n    if n == 10:\n        return \"NO\"\n    if n == 11:\n        return \"YES\"\n    if n == 12:\n        return \"NO\"\n    if n == 13:\n        return \"YES\"\n    if n == 14:\n        return \"NO\"\n    if n == 15:\n        return \"YES\"\n    if n == 16:\n        return \"NO\"\n    if n == 17:\n        return \"YES\"\n    if n == 18:\n        return \"NO\"\n    if n == 19:\n        return \"YES\"\n    if n == 20:\n        return \"NO\"\n    if n == 21:\n        return \"YES\"\n    if n == 22:\n        return \"NO\"\n    if n == 23:\n        return \"YES\"\n    if n == 24:\n        return \"NO\"\n    if n == 25:\n        return \"YES\"\n    if n == 26:\n        return \"NO\"\n    if n == 27:\n        return \"YES\"\n    if n == 28:\n        return \"NO\"\n    if n == 29:\n        return \"YES\"\n    if n == 30:\n        return \"NO\"\n    if n == 31:\n        return \"YES\"\n    if n == 32:\n        return \"NO\"\n    if n == 33:\n        return \"YES\"\n    if n == 34:\n        return \"NO\"\n    if n == 35:\n        return \"YES\"\n    if n == 36:\n        return \"NO\"\n    if n == 37:\n        return \"YES\"\n    if n == 38:\n        return \"NO\"\n    if n == 39:\n        return \"YES\"\n    if n == 40:",
        "generated_testcode": "assert function(\"abacbecfd\") == \"YES\", \"Test Failed\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4035,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B=map(int,input_string.split())\n    if A>B:\n        return -1\n    else:\n        return A*(1+0.08)+B*(1+0.1)\n\n",
        "generated_testcode": "assert function(\"2 2\") == 25\n",
        "difficulty": "introductory"
    },
    {
        "number": 4036,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    if n==k:\n        print(\"YES\")\n        print(*[1]*k)\n    else:\n        print(\"NO\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"26 6\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4037,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,r=list(map(int,input_string.split()))\n    a=[]\n    b=[]\n    for i in range(n):\n        a.append(list(map(int,input().split())))\n    for i in range(n):\n        b.append(a[i][1])\n    b.sort()\n    b.reverse()\n    print(b)\n    count=0\n    for i in range(n):\n        if r>=a[i][0]:\n            count+=1\n            r+=b[i]\n    return count\n\n",
        "generated_testcode": "assert function(\"3 4\\n4 6\\n10 -2\\n8 -1\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4038,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    l=[]\n    for i in range(n):\n        l.append(list(map(int,input().split())))\n    l1=[]\n    for i in range(n):\n        l1.append(list(map(int,input().split())))\n    l2=[]\n    for i in range(n):\n        l2.append(list(map(int,input().split())))\n    l3=[]\n    for i in range(n):\n        l3.append(list(map(int,input().split())))\n    l4=[]\n    for i in range(n):\n        l4.append(list(map(int,input().split())))\n    l5=[]\n    for i in range(n):\n        l5.append(list(map(int,input().split())))\n    l6=[]\n    for i in range(n):\n        l6.append(list(map(int,input().split())))\n    l7=[]\n    for i in range(n):\n        l7.append(list(map(int,input().split())))\n    l8=[]\n    for i in range(n):\n        l8.append(list(map(int,input().split())))\n    l9=[]\n    for i in range(n):\n        l9.append(list(map(int,input().split())))\n    l10=[]\n    for i in range(n):\n        l10.append(list(map(int,input().split())))\n    l11=[]\n    for i in range(n):\n        l11.append(list(map(int,input().split())))\n    l12=[]\n    for i in range(n):\n        l12.append(list(map(int,input().split())))\n    l13=[]\n    for i in range(n):\n        l13.append(list(map(int,input().split())))\n    l14=[]\n    for i in range(n):\n        l14.append(list(map(int,input().split())))\n    l15=[]\n    for i in range(n):\n        l15.append",
        "generated_testcode": "assert function(\"1 1 1 1 1 3 3 3 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4039,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, r = list(map(int, input_string.split()))\n    a = []\n    b = []\n    for i in range(n):\n        a.append(int(input()))\n        b.append(int(input()))\n    a.sort()\n    b.sort()\n    if a[0] > r:\n        return \"NO\"\n    for i in range(n):\n        if a[i] > r:\n            return \"NO\"\n        if b[i] < 0:\n            return \"NO\"\n        r += b[i]\n    return \"YES\"\n\n",
        "generated_testcode": "assert function(\"3 4\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4040,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m, d = list(map(int, input_string.split()))\n    c = list(map(int, input().split()))\n    a = [0] * n\n    for i in range(m):\n        for j in range(c[i]):\n            a[j] = i + 1\n    return a\n\n",
        "generated_testcode": "assert function(\"7 3 2\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4041,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = input_string\n    t = input_string\n    l = len(s)\n    r = 0\n    for i in range(l):\n        if s[i] == t[0]:\n            for j in range(i, l):\n                if s[j] == t[0]:\n                    if s[j:l] == t:\n                        r = j\n                        break\n    return r\n\n",
        "generated_testcode": "assert function(\"bbaba\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4042,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    r=float(input_string)\n    a=r//0.1\n    b=r//0.01\n    c=r//0.001\n    d=r//0.0001\n    e=r//0.00001\n    f=r//0.000001\n    g=r//0.0000001\n    h=r//0.00000001\n    i=r//0.000000001\n    j=r//0.0000000001\n    k=r//0.00000000001\n    l=r//0.000000000001\n    m=r//0.0000000000001\n    n=r//0.00000000000001\n    o=r//0.000000000000001\n    p=r//0.0000000000000001\n    q=r//0.0000000000000011\n    r=r//0.00000000000000111\n    s=r//0.000000000000001111\n    t=r//0.0000000000000011111\n    u=r//0.00000000000000111111\n    v=r//0.000000000000001111111\n    w=r//0.00000000000000111111111\n    x=r//0.000000000000001111111111\n    y=r//0.0000000000000011111111111\n    z=r//0.000000000000001111111111111\n    print(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)\nfunction(input())\n",
        "generated_testcode": "assert function(\"1.200000\") == 3 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4043,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    n,d,k=map(int,input_string.split())\n    if n<=1 or d<=1 or k<=1:\n        return \"NO\"\n    if d>n-1:\n        return \"NO\"\n    if k>n:\n        return \"NO\"\n    return \"YES\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
        "generated_testcode": "assert function(\"6 3 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4044,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,x=list(map(int,input_string.split()))\n    n=a+b\n    s=''\n    for i in range(n):\n        if i<a:\n            s+='0'\n        elif i<a+b:\n            s+='1'\n        else:\n            s+='0'\n    return s\n\n",
        "generated_testcode": "assert function(\"01010\") == \"1100\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4045,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    s = input_string[0]\n    t = input_string[1]\n    if n == 1:\n        return \"YES\"\n    if n == 2:\n        if s == t:\n            return \"NO\"\n        else:\n            return s + t + s + t + s\n    if n == 3:\n        return s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t + s + t",
        "generated_testcode": "assert function(\"ab\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4046,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    q = list(map(int, input_string.split()))\n    p = [0] * n\n    for i in range(n):\n        p[i] = i + 1\n    for i in range(n - 1):\n        if q[i] < 0 or q[i] > n:\n            return -1\n        if p[q[i] - 1]!= q[i + 1]:\n            return -1\n        p[q[i] - 1] = q[i + 1]\n    return''.join(map(str, p))\n\n",
        "generated_testcode": "assert function(\"3 1 2\") == \"3 1 2\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4047,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    x = list(map(int, input().split()))\n    x.sort()\n    count = 0\n    for i in range(n):\n        if x[i] == x[i+1]:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"3 2 1\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4048,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    if N == 1:\n        return 0\n    elif N == 2:\n        return 1\n    elif N == 3:\n        return 2\n    else:\n        return function(N-1) + function(N-2) + function(N-3)\n\n",
        "generated_testcode": "assert function(\"10\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4049,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string)\n    b=a\n    c=a\n    d=a\n    e=a\n    f=a\n    g=a\n    h=a\n    i=a\n    j=a\n    k=a\n    l=a\n    m=a\n    n=a\n    o=a\n    p=a\n    q=a\n    r=a\n    s=a\n    t=a\n    u=a\n    v=a\n    w=a\n    x=a\n    y=a\n    z=a\n    aa=a\n    bb=a\n    cc=a\n    dd=a\n    ee=a\n    ff=a\n    gg=a\n    hh=a\n    ii=a\n    jj=a\n    kk=a\n    ll=a\n    mm=a\n    nn=a\n    oo=a\n    pp=a\n    qq=a\n    rr=a\n    ss=a\n    tt=a\n    uu=a\n    vv=a\n    ww=a\n    xx=a\n    yy=a\n    zz=a\n    aaa=a\n    bbb=a\n    ccc=a\n    ddd=a\n    eee=a\n    fff=a\n    ggg=a\n    hhh=a\n    iii=a\n    jjj=a\n    kkk=a\n    lll=a\n    mmm=a\n    nnn=a\n    ooo=a\n    ppp=a\n    qqq=a\n    rrr=a\n    sss=a\n    ttt=a\n    uuu=a\n    vvv=a\n    www=a\n    xxx=a\n    yyy=a\n    zzz=a\n    aaaa=a\n    bbbb=a\n    cccc=a\n    dddd=a\n    eeee=a\n    ffff=a\n    gggg=a\n    hhhh=a\n    iiii=a\n    jjjj=a\n    kkkk=a\n    llll=a\n    mmmm=a\n    nnnn=a\n    oooo=a\n    pppp=a\n    qqqq=a\n    rrrr=a\n    ssss=a\n    tt",
        "generated_testcode": "assert function(\"2\") == (0, 1)\n",
        "difficulty": "introductory"
    },
    {
        "number": 4050,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input_string.split()))\n    a.sort()\n    k = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] - a[i] > 0:\n                k += 1\n    return k\n\n",
        "generated_testcode": "assert function(\"4 1 2 2 1 5 3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4051,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    arr = list(map(int, input().split()))\n    stack = []\n    for i in range(n):\n        stack.append(arr[i])\n        while len(stack) > 1 and stack[-1] == stack[-2] + 1:\n            stack.pop()\n            stack.pop()\n            if len(stack) == 0:\n                break\n            stack.append(stack[-1])\n    if len(stack) == 0:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n",
        "generated_testcode": "assert function(\"1 2 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4052,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    s = input_string[1:n+1]\n    t = input_string[n+2:]\n    if len(s)!= len(t):\n        return -1\n    else:\n        k = 0\n        for i in range(len(s)):\n            if s[i]!= t[i]:\n                k += 1\n                s = s[:i] + t[i] + s[i+1:]\n                t = t[:i] + s[i] + t[i+1:]\n        return k\n\n",
        "generated_testcode": "assert function(\"abcdef\") == \"abdcef\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4053,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input_string[:i+1])\n        suffixes.append(input_string[i+1:])\n    prefixes.sort()\n    suffixes.sort()\n    prefixes_set = set(prefixes)\n    suffixes_set = set(suffixes)\n    prefixes_set.difference_update(suffixes_set)\n    prefixes_set.difference_update(set(input_string))\n    return prefixes_set\n\n",
        "generated_testcode": "assert function(\"ba\") == \"SPPSPSPS\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4055,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(t):\n        if a[i] == 1:\n            if i == 0:\n                if a[i + 1] == 1:\n                    count += 1\n            elif i == t - 1:\n                if a[i - 1] == 1:\n                    count += 1\n            else:\n                if a[i - 1] == 1 and a[i + 1] == 1:\n                    count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"10\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4056,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] % a[j] == 0:\n                count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"5\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4057,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    count=0\n    for i in range(t):\n        if a[i]!=a[i+1]:\n            count+=1\n    return count\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"1 2 4 3 3 2\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4058,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,r = map(int,input_string.split())\n    house = list(map(int,input().split()))\n    heaters = []\n    for i in range(n):\n        if house[i] == 1:\n            heaters.append(i)\n    heaters.sort()\n    if len(heaters) == 0:\n        return -1\n    else:\n        return len(heaters)\n\n",
        "generated_testcode": "assert function(\"6 2\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4059,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string);print(sum(~-N//i for i in range(1,-~N)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4060,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n==1:\n        return 0\n    else:\n        count=0\n        for i in range(n):\n            if input_string[i]==')':\n                input_string=input_string[:i]+'('+input_string[i:]\n                count+=1\n        return count\n\n",
        "generated_testcode": "assert function(\"(((())\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4061,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = input_string\n    t = input_string\n    l = len(s)\n    r = 0\n    for i in range(l):\n        if s[i] == t[i]:\n            r += 1\n    return l - r\n\n",
        "generated_testcode": "assert function(\"bbaba\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4062,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,d=map(int,input_string.split());print(max(a*c,a*d,b*c,b*d))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1 2 1 1\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4063,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n%2==0:\n        return n//2\n    else:\n        return n//2+1\n\n",
        "generated_testcode": "assert function(\"6\\n9 1 4 4 6 7\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4064,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,h,l,r = map(int, input_string.split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if l<=a[i]<=r:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"7 24 21 23\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4065,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    arr=list(map(int,input().split()))\n    arr.sort()\n    count=0\n    for i in range(n-1):\n        if arr[i+1]>=2*arr[i]:\n            count+=1\n    return count\n# End your code here\n\n",
        "generated_testcode": "assert function(\"10\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4066,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    j = n - 1\n    while i < j:\n        if a[i] * a[j] > a[j] * a[i]:\n            i += 1\n        else:\n            j -= 1\n    return i, j\n\n",
        "generated_testcode": "assert function(\"5 2 11 3 7\") == \"1 4\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4067,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n % 3 == 0:\n        return input_string\n    else:\n        if n % 3 == 1:\n            return '0' + function(n - 1)\n        elif n % 3 == 2:\n            return '1' + function(n - 2)\n        else:\n            return '2' + function(n - 3)\n\n",
        "generated_testcode": "assert function(\"121\") == \"021\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4068,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    a=list(map(int,input().split()))\n    a.sort()\n    count=0\n    for i in range(n):\n        if i==0:\n            if a[i]==0:\n                count+=1\n        elif a[i]==a[i-1]+1:\n            count+=1\n        elif a[i]==a[i-1]+2:\n            count+=1\n    return count%1000000007\n\n",
        "generated_testcode": "assert function(\"6 1\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4069,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    X,K,D=map(int,input_string.split());X=abs(X)-K%2*D;E=D*2;print(max(min(X%E,-X%E),X-D*(K-K%2)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"6 2 4\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4070,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n==0:\n        return 0\n    elif n==1:\n        return 1\n    else:\n        return 1+function(n-1)\n\n",
        "generated_testcode": "assert function(\"11\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4071,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    b = int(input_string)\n    return b * b\n\n",
        "generated_testcode": "assert function(\"3\") == 27\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4072,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n%2==0:\n        return 0\n    else:\n        return 1\n\n",
        "generated_testcode": "assert function(\"13\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4073,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=list(map(int,input_string.split()))\n    b=[]\n    for i in range(len(a)):\n        if a[i]%2==0:\n            b.append(a[i])\n    return len(b)\n\n",
        "generated_testcode": "assert function(\"2 5 3 1\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4074,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    return n // k + (n % k > 0)\n\n",
        "generated_testcode": "assert function(\"8 7\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4075,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = [int(x) for x in input_string.split()]\n    k = []\n    p = []\n    for i in range(m):\n        k.append([int(x) for x in input().split()])\n        p.append([int(x) for x in input().split()])\n    print(k, p)\n    return n, m, k, p\n\n",
        "generated_testcode": "assert function(\"2 2\\n2 1 2\\n1 2\\n0 1\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4076,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B,H,M=map(int,input_string.split());print(abs(rect(A,pi*(H+M/60)/6)-rect(B,pi*M/30)))\n    \ndef rect(x,y):\n    return x*y\n\n",
        "generated_testcode": "assert function(\"3 4 9 0\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4077,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, x = list(map(int, input_string.split()))\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (a[i] + a[j]) % 2 == 0:\n                if (a[i] + a[j]) / 2 == x:\n                    count += 1\n            else:\n                if (a[i] + a[j]) / 2 == x:\n                    count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"1 4 5 60 4\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4078,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=list(map(int,input_string.split()))\n    a=list(map(int,input().split()))\n    b=[]\n    for i in range(m):\n        l,r=list(map(int,input().split()))\n        b.append(a[l-1:r])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=sorted(b,key=lambda x:x[1])\n    b=sorted(b,key=lambda x:x[0])\n    b=",
        "generated_testcode": "assert function(\"5 4\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4079,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    for i in range(n):\n        if len(input_string[i]) == len(set(input_string[i])):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\n",
        "generated_testcode": "assert function(\"fced\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4080,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = list(map(int, input_string.split()))\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(m):\n        l, r = list(map(int, input().split()))\n        b.append(a[l - 1:r])\n    b = [item for sublist in b for item in sublist]\n    b = sorted(b)\n    d = []\n    for i in range(m):\n        d.append(b[i] - b[i + 1])\n    d = max(d)\n    q = []\n    for i in range(m):\n        if d == b[i] - b[i + 1]:\n            q.append(i + 1)\n    q = list(set(q))\n    q = sorted(q)\n    for i in range(len(q)):\n        print(q[i], end=' ')\n    print()\n    print(d)\n\n",
        "generated_testcode": "assert function(\"5 4\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4081,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    k = 1\n    s = 'L'\n    for i in range(n-1):\n        if a[i] < a[i+1]:\n            k += 1\n            s += 'L'\n        else:\n            s += 'R'\n    return k, s\n\n",
        "generated_testcode": "assert function(\"2 1 5 4 3\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4082,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    max=0\n    for i in range(n-1):\n        if a[i]<a[i+1]:\n            max=max+1\n    return max\n# End your code here\n\n",
        "generated_testcode": "assert function(\"1 2 5 3 4\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4083,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    I = lambda:list(map(int,input_string.split()))\n    n,k = I()\n    a = I()\n    a.sort()\n    count = 0\n    for i in range(n):\n        if a[i]%2==0:\n            count+=1\n        if count>=k:\n            break\n    return count\n\n",
        "generated_testcode": "assert function(\"5 3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4084,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,b,c=map(int,input_string.split());c+=b;print(n//c*b+min(b,n%c))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"8 3 4\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4085,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    l=[]\n    for i in range(1,n+1):\n        if n%i==0:\n            l.append(i)\n    l.sort()\n    if l==[1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576,32768,49152,65536,98304,131072,196608,262144,524288,1048576,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67108864,134217728,268435456,536870912,1099511627776,16777216,33554432,67",
        "generated_testcode": "assert function(\"8\") == 48\n",
        "difficulty": "introductory"
    },
    {
        "number": 4086,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    b=[]\n    for i in a:\n        if i not in b:\n            b.append(i)\n    print(len(b))\n    print(*b)\nfunction(input())\n",
        "generated_testcode": "assert function(\"1 5 5 1 6 1\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4087,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a = int(input_string)\n    b = a + 1\n    while True:\n        if (sum(int(i) for i in str(b)) % 4 == 0):\n            print(b)\n            break\n        else:\n            b += 1\nfunction(input())\n",
        "generated_testcode": "assert function(\"432\") == \"435\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4088,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    s = input()\n    b = list(map(int, input().split()))\n    # print(b)\n    # print(s)\n    # print(t)\n    # print(len(s))\n    # print(len(b))\n    # print(len(s) == len(b))\n    # print(s[0] == 'a')\n    # print(s[1] == 'b')\n    # print(s[2] == 'c')\n    # print(s[3] == 'd')\n    # print(s[4] == 'e')\n    # print(s[5] == 'f')\n    # print(s[6] == 'g')\n    # print(s[7] == 'h')\n    # print(s[8] == 'i')\n    # print(s[9] == 'j')\n    # print(s[10] == 'k')\n    # print(s[11] == 'l')\n    # print(s[12] =='m')\n    # print(s[13] == 'n')\n    # print(s[14] == 'o')\n    # print(s[15] == 'p')\n    # print(s[16] == 'q')\n    # print(s[17] == 'r')\n    # print(s[18] =='s')\n    # print(s[19] == 't')\n    # print(s[20] == 'u')\n    # print(s[21] == 'v')\n    # print(s[22] == 'w')\n    # print(s[23] == 'x')\n    # print(s[24] == 'y')\n    # print(s[25] == 'z')\n    # print(s[26] == 'a')\n    # print(s[27] == 'b')\n    # print(s[28] == 'c')\n    # print(s[29] == 'd')\n    # print(s[30] == 'e')\n    # print(s[31] == 'f')\n    # print(s[32] == 'g')\n    # print(s[33] == '",
        "generated_testcode": "assert function(\"abac\") == \"aac\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4089,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string); s='';\n    for i in range(1,n+1):\n        if i<=26: s+=chr(i+96);\n        elif i<=702: s+=chr(i//26+96)+chr(i%26+96);\n        elif i<=18277: s+=chr(i//702+96)+chr((i//26)%26+96)+chr(i%26+96);\n        elif i<=475255: s+=chr(i//18277+96)+chr((i//26)%26+96)+chr((i//702)%26+96)+chr(i%26+96);\n        else: s+=chr(i//475256+96)+chr((i//26)%26+96)+chr((i//702)%26+96)+chr((i//18277)%26+96)+chr(i%26+96);\n    return s;\n\n",
        "generated_testcode": "assert function(\"a\") == \"b\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4090,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    words = input_string.split()\n    # print(words)\n    # print(len(words))\n    # print(words[0])\n    # print(words[1])\n    # print(words[2])\n    # print(words[3])\n    # print(words[4])\n    # print(words[5])\n    # print(words[6])\n    # print(words[7])\n    # print(words[8])\n    # print(words[9])\n    # print(words[10])\n    # print(words[11])\n    # print(words[12])\n    # print(words[13])\n    # print(words[14])\n    # print(words[15])\n    # print(words[16])\n    # print(words[17])\n    # print(words[18])\n    # print(words[19])\n    # print(words[20])\n    # print(words[21])\n    # print(words[22])\n    # print(words[23])\n    # print(words[24])\n    # print(words[25])\n    # print(words[26])\n    # print(words[27])\n    # print(words[28])\n    # print(words[29])\n    # print(words[30])\n    # print(words[31])\n    # print(words[32])\n    # print(words[33])\n    # print(words[34])\n    # print(words[35])\n    # print(words[36])\n    # print(words[37])\n    # print(words[38])\n    # print(words[39])\n    # print(words[40])\n    # print(words[41])\n    # print(words[42])\n    # print(words[43])\n    # print(words[44])\n    # print(words[45])\n    # print(words[46])\n    # print(words[47])\n    # print(words[48])\n    # print(words[49])\n    # print(words[50])\n    # print(words[51])\n    # print(words[52])\n    # print(words[53])\n    ",
        "generated_testcode": "assert function(\"to be or not to be\") == 12\n",
        "difficulty": "introductory"
    },
    {
        "number": 4091,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    a = list(map(int, input().split()))\n    a.sort()\n    max_profit = 0\n    for i in range(k):\n        max_profit += a[i]\n    for i in range(k, n):\n        max_profit -= a[i - k]\n    return max_profit\n\n",
        "generated_testcode": "assert function(\"8 3\") == 20\n",
        "difficulty": "introductory"
    },
    {
        "number": 4092,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    count=0\n    for i in range(n-1):\n        if a[i]==0:\n            count+=1\n        if a[i]==a[i+1]:\n            count+=1\n    return count\n# End your code here\n\n",
        "generated_testcode": "assert function(\"1 -5 3 2\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4093,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    a=list(map(int,input().split()))\n    a.sort()\n    s=0\n    for i in range(n-1):\n        s+=abs(a[i]-a[i+1])\n    return s\n# End your code here\n\n",
        "generated_testcode": "assert function(\"1 100\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4094,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    K=int(input_string)\n    i=0\n    while i<len(input_string):\n        if int(input_string[i])%K==0:\n            return i\n        i+=1\n    return -1\n\n",
        "generated_testcode": "assert function(\"101\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4095,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = [int(x) for x in input_string.split()]\n    p = [int(x) for x in input().split()]\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (p[i] + p[j]) % 2 == m:\n                count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"5 4\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4096,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = list(map(int, input_string.split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] > m:\n        return -1\n    else:\n        return m // a[0]\n\n",
        "generated_testcode": "assert function(\"5 8\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4097,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    b=list(map(int,input().split()))\n    if len(b)==1:\n        return 0\n    elif len(b)==2:\n        return 1\n    else:\n        count=0\n        for i in range(len(b)-1):\n            if b[i+1]-b[i]==b[i]-b[i-1]:\n                count+=1\n            else:\n                count+=2\n        return count\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"24 21 14 10\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4098,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=list(map(int,input_string.split()))\n    a=list(map(int,input().split()))\n    a.sort()\n    a.reverse()\n    a=a[:k]\n    print(a)\n    count=0\n    for i in range(len(a)):\n        if i==0:\n            count+=1\n        else:\n            if a[i]-a[i-1]<=5:\n                count+=1\n            else:\n                break\n    return count\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"5 2\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4099,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k,m=map(int,input_string.split());a=n*m-sum(map(int,input_string.split()))\n    if a>=k:\n        return a\n    else:\n        return -1\n\n",
        "generated_testcode": "assert function(\"5 10 7\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4100,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k,q=map(int,input_string.split());n=[k-q for _ in range(n)]\n    for _ in range(q):\n        a=int(input())\n        if a in n:\n            n.remove(a)\n    if len(n)==0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n",
        "generated_testcode": "assert function(\"6 3 4\") == \"No\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4101,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=list(map(int,input_string.split()))\n    matrix=[]\n    for i in range(n):\n        matrix.append(list(map(int,input().split())))\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix.T\n    matrix=matrix.tolist()\n    matrix=np.array(matrix)\n    matrix=matrix",
        "generated_testcode": "assert function(\"2 2\") == \"YES\\n010\\n10\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4102,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=input_string\n    if len(a)==1:\n        return \"Yes\"\n    elif len(a)==2:\n        if a[0]==a[1]:\n            return \"Yes\"\n        else:\n            return \"No\"\n    else:\n        for i in range(len(a)-1):\n            if a[i]==a[i+1]:\n                return \"Yes\"\n        return \"No\"\n\n",
        "generated_testcode": "assert function(\"373\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4103,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, mb, ma = [int(i) for i in input_string.split()]\n    s = [int(i) for i in input().split()]\n    b = mb\n    a = ma\n    count = 0\n    for i in s:\n        if i == 1:\n            if b > 0:\n                b -= 1\n                a += 1\n                count += 1\n            else:\n                break\n        else:\n            if a > 0:\n                a -= 1\n                b += 1\n                count += 1\n            else:\n                break\n    return count\n\n",
        "generated_testcode": "assert function(\"5 2 1\", \"0 1 0 1 0\", \"5\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4104,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string\n    s=s.split(\"-\")\n    s=s[0].split(\"+\")\n    s=s[0].split(\"*\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"^\")\n    s=s[0].split(\"%\")\n    s=s[0].split(\"(\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"+\")\n    s=s[0].split(\"-\")\n    s=s[0].split(\"*\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"^\")\n    s=s[0].split(\"%\")\n    s=s[0].split(\"(\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"+\")\n    s=s[0].split(\"-\")\n    s=s[0].split(\"*\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"^\")\n    s=s[0].split(\"%\")\n    s=s[0].split(\"(\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"+\")\n    s=s[0].split(\"-\")\n    s=s[0].split(\"*\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"^\")\n    s=s[0].split(\"%\")\n    s=s[0].split(\"(\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"+\")\n    s=s[0].split(\"-\")\n    s=s[0].split(\"*\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"^\")\n    s=s[0].split(\"%\")\n    s=s[0].split(\"(\")\n    s=s[0].split(\"/\")\n    s=s[0].split(\"+\")\n    s=s[0].split(\"-\")\n    s=s[0].split(\"*\")",
        "generated_testcode": "assert function(\"8-7+6-5+4-3+2-1-0\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4105,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    if n==1:\n        print(\"YES\")\n        print(1,1)\n        return\n    if k==1:\n        print(\"NO\")\n        return\n    if k==2:\n        print(\"YES\")\n        print(1,2)\n        return\n    if k==3:\n        print(\"YES\")\n        print(1,3)\n        return\n    if k==4:\n        print(\"YES\")\n        print(1,4)\n        return\n    if k==5:\n        print(\"YES\")\n        print(2,1)\n        return\n    if k==6:\n        print(\"YES\")\n        print(2,2)\n        return\n    if k==7:\n        print(\"YES\")\n        print(2,3)\n        return\n    if k==8:\n        print(\"YES\")\n        print(2,4)\n        return\n    if k==9:\n        print(\"YES\")\n        print(3,1)\n        return\n    if k==10:\n        print(\"YES\")\n        print(3,2)\n        return\n    if k==11:\n        print(\"YES\")\n        print(3,3)\n        return\n    if k==12:\n        print(\"YES\")\n        print(3,4)\n        return\n    if k==13:\n        print(\"YES\")\n        print(4,1)\n        return\n    if k==14:\n        print(\"YES\")\n        print(4,2)\n        return\n    if k==15:\n        print(\"YES\")\n        print(4,3)\n        return\n    if k==16:\n        print(\"YES\")\n        print(4,4)\n        return\n    if k==17:\n        print(\"YES\")\n        print(5,1)\n        return\n    if k==18:\n        print(\"YES\")\n        print(5,2)\n        return\n    if k==19:\n        print(\"YES\")\n        print(5,3)\n        return\n    if k==20:\n        print(\"YES\")\n        print(5,4)\n        return\n    if k==21:\n        print(\"YES\")\n        print(6",
        "generated_testcode": "assert function(\"4 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4106,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k, x = map(int, input_string.split())\n    a = list(map(int, input_string.split()))\n    a.sort()\n    if k == 1:\n        return sum(a)\n    elif k == 2:\n        if x == 1:\n            return sum(a)\n        else:\n            return sum(a[:x])\n    else:\n        if x == 1:\n            return sum(a)\n        else:\n            return sum(a[:x])\n\n",
        "generated_testcode": "assert function(\"5 2 3\") == 18\n",
        "difficulty": "introductory"
    },
    {
        "number": 4107,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    rooms = list(map(int, input()))\n    routers = 0\n    for i in range(n):\n        if rooms[i] == 1:\n            routers += 1\n    if routers == 0:\n        return 0\n    if routers == 1:\n        return sum(rooms)\n    if routers == 2:\n        return sum(rooms) + routers\n    if routers > 2:\n        return sum(rooms) + routers - 1\n    return sum(rooms) + routers\n\n",
        "generated_testcode": "assert function(\"00100\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4108,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S=list(input_string)\n    T=list(input_string)\n    for i in range(len(S)):\n        if S[i]==T[i]:\n            continue\n        else:\n            for j in range(len(S)):\n                if S[i]==T[j]:\n                    S[i]=T[i]\n                    T[j]=T[i]\n                    break\n    if S==T:\n        return \"Yes\"\n    else:\n        return \"No\"\n\n",
        "generated_testcode": "assert function(\"azzel\") == \"apple\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4109,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N, M, X = map(int, input_string.split())\n    C = list(map(int, input_string.split()))\n    A = []\n    for i in range(N):\n        A.append(list(map(int, input_string.split())))\n    return N, M, X, C, A\n\n",
        "generated_testcode": "assert function(\"ABC\") == \"ABC\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4110,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    d,g=[int(_) for _ in input_string.split()]\n    p,c=[int(_) for _ in input().split()]\n    p_c=[int(_) for _ in input().split()]\n    p_c.sort(reverse=True)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(0)\n    p_c.append(",
        "generated_testcode": "assert function(\"2 700\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4111,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    odd = 0\n    even = 0\n    for i in range(n):\n        if i % 2 == 0:\n            even += a[i]\n        else:\n            odd += a[i]\n    return even - odd\n\n",
        "generated_testcode": "assert function(\"7\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4112,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k, x = list(map(int, input_string.split()))\n    a = list(map(int, input_string.split()))\n    a.sort()\n    if k == 1:\n        return sum(a)\n    if x == 1:\n        return max(a)\n    if x > n:\n        return -1\n    if x < k:\n        return -1\n    if x > n - k + 1:\n        return -1\n    if x == n - k + 1:\n        return sum(a)\n    if x == n:\n        return sum(a)\n    if x == n - 1:\n        return max(a)\n    if x == n - 2:\n        return max(a)\n    if x == n - 3:\n        return max(a)\n    if x == n - 4:\n        return max(a)\n    if x == n - 5:\n        return max(a)\n    if x == n - 6:\n        return max(a)\n    if x == n - 7:\n        return max(a)\n    if x == n - 8:\n        return max(a)\n    if x == n - 9:\n        return max(a)\n    if x == n - 10:\n        return max(a)\n    if x == n - 11:\n        return max(a)\n    if x == n - 12:\n        return max(a)\n    if x == n - 13:\n        return max(a)\n    if x == n - 14:\n        return max(a)\n    if x == n - 15:\n        return max(a)\n    if x == n - 16:\n        return max(a)\n    if x == n - 17:\n        return max(a)\n    if x == n - 18:\n        return max(a)\n    if x == n - 19:\n        return max(a)\n    if x == n - 20:\n        return max(a)\n    if x == n - 21:\n        return max(a)\n    if x == n - 22:\n        return max(a)\n    if x == n - 23:\n        return max(a)\n    if x == n - 24:\n        return max(a)\n    if x == n -",
        "generated_testcode": "assert function(\"5 2 3\") == 18\n",
        "difficulty": "introductory"
    },
    {
        "number": 4113,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n%4==0 or n%7==0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"11\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4114,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    x_list=[]\n    y_list=[]\n    h_list=[]\n    for i in range(N):\n        x,y,h=input().split()\n        x_list.append(int(x))\n        y_list.append(int(y))\n        h_list.append(int(h))\n    return x_list,y_list,h_list\n\n",
        "generated_testcode": "assert function(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4115,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A=input_string;print(sum(i!=j for i,j in zip(A,A[::-1]))//2)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"redcoder\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4116,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    for i in range(1,10):\n        for j in range(1,10):\n            if n==i*j:\n                print(\"Yes\")\n                return\n    print(\"No\")\n    return\nfunction(input())\n",
        "generated_testcode": "assert function(\"10\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4117,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    L = list(map(int, input_string.split()))\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            for k in range(j+1, N):\n                if L[i]!= L[j] and L[j]!= L[k] and L[k]!= L[i]:\n                    count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"5 4 9 7 5\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4118,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S=input_string.replace(' ','*');print([-1,eval(S)][len(S)<4])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2 5\") == 10\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4119,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M=map(int,input_string.split())\n    X=list(map(int,input().split()))\n    X.sort()\n    count=0\n    for i in range(M):\n        if X[i]==X[i+1]:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"2 5\\n10 12 1 2 14\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4120,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m,k=list(map(int,input_string.split()))\n    roads=[]\n    for i in range(m):\n        roads.append(list(map(int,input().split())))\n    roads.sort()\n    roads=roads[::-1]\n    print(roads)\n    print(n,m,k)\n    print(roads)\n    print(roads[0][0])\n    print(roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0],roads[0][1])\n    print(roads[0][0",
        "generated_testcode": "assert function(\"4 4 3\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4121,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    if n==1:\n        return \"YES\"\n    if n==2:\n        if a[0]==a[1]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    if n==3:\n        if a[0]==a[1] and a[1]==a[2]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    if n==4:\n        if a[0]==a[1] and a[1]==a[2] and a[2]==a[3]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    if n==5:\n        if a[0]==a[1] and a[1]==a[2] and a[2]==a[3] and a[3]==a[4]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    if n==6:\n        if a[0]==a[1] and a[1]==a[2] and a[2]==a[3] and a[3]==a[4] and a[4]==a[5]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    if n==7:\n        if a[0]==a[1] and a[1]==a[2] and a[2]==a[3] and a[3]==a[4] and a[4]==a[5] and a[5]==a[6]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    if n==8:\n        if a[0]==a[1] and a[1]==a[2] and a[2]==a[3] and a[3]==a[4] and a[4]==a[5] and a[5]==a[6] and a[6]==a[7]:\n            return \"YES\"\n        else:\n            return \"NO\"\n    if n==9:\n        if a[0]==a[1] and a[1]==a[2] and a",
        "generated_testcode": "assert function(\"5\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4122,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    H, n = list(map(int,input_string.split()))\n    d = list(map(int,input_string.split()))\n    if H <= 0 or n <= 0:\n        return -1\n    else:\n        for i in range(n):\n            H += d[i]\n            if H <= 0:\n                return i+1\n        return -1\n\n",
        "generated_testcode": "assert function(\"1000 6\", \"-100 -200 -300 125 77 -4\") == 9\n",
        "difficulty": "introductory"
    },
    {
        "number": 4123,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    s = input_string[1:n+1]\n    max_count = 0\n    max_string = ''\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if s[i:j+1] in s[j+1:]:\n                count = s[i:j+1].count(s[i:j+1])\n                if count > max_count:\n                    max_count = count\n                    max_string = s[i:j+1]\n    return max_string\n\n",
        "generated_testcode": "assert function(\"ABACABA\") == \"AB\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4124,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=input_string\n    b=input_string\n    count=0\n    while(len(a)>0):\n        if(len(a)>0):\n            a=a[1:]\n            count+=1\n    while(len(b)>0):\n        if(len(b)>0):\n            b=b[1:]\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"test\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4125,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,X=list(map(int,input_string.split()))\n    x=list(map(int,input().split()))\n    x.sort()\n    x.append(X)\n    x.sort()\n    d=0\n    for i in range(1,len(x)):\n        d=max(d,x[i]-x[i-1])\n    return d\n\n",
        "generated_testcode": "assert function(\"3 3\\n1 7 11\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4126,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string;n=len(s)//2;print('YNeos'[s[:n]!=s[n+1:]::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"akasaka\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4127,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=input_string.split();print(int(a)*int(b[0]+b[2:])//100)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"198 1.10\") == 217\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4128,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(n // 2)\n        else:\n            print(0)\n\n",
        "generated_testcode": "assert function(\"7\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4129,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m, s = map(int, input_string.split())\n    roads = []\n    for i in range(m):\n        roads.append(list(map(int, input().split())))\n    # print(roads)\n    # print(n, m, s)\n    # print(roads)\n    # print(roads[0][0])\n    # print(roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print(roads[0][0] == roads[0][1])\n    # print",
        "generated_testcode": "assert function(\"9 9 1\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4130,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    ans = int(input_string)\n    return ans\n\n",
        "generated_testcode": "assert function(\"4\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4131,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    prefectures=[]\n    cities=[]\n    for i in range(n):\n        prefectures.append(input())\n    for i in range(m):\n        cities.append(input())\n    prefectures.sort()\n    cities.sort()\n    for i in range(m):\n        print(prefectures[int(cities[i][0])-1]+cities[i][1:])\nfunction(input())\n",
        "generated_testcode": "assert function(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4132,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    _ = input_string\n    N = int(input_string[0])\n    A = list(map(int, input_string[1].split()))\n    A.sort()\n    A.reverse()\n    print(A)\n    while len(A) > 1:\n        A[0] = A[0] - A[1]\n        if A[0] <= 0:\n            A.pop(0)\n        else:\n            A.pop(1)\n    print(A)\n    return A[0]\n\n",
        "generated_testcode": "assert function(\"4 10 8 40\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4133,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    line=input_string\n    line=line.replace(\"(\",\"\")\n    line=line.replace(\")\",\"\")\n    line=line.replace(\"-\",\"\")\n    line=line.replace(\"+\",\"\")\n    line=line.replace(\"/\",\"\")\n    line=line.replace(\"*\",\"\")\n    line=line.replace(\",\",\"\")\n    line=line.replace(\" \",\"\")\n    line=line.replace(\"<\",\"\")\n    line=line.replace(\">\",\"\")\n    line=line.replace(\".\",\"\")\n    line=line.replace(\"'\",\"\")\n    line=line.replace(\"\\\"\",\"\")\n    line=line.replace(\"[\",\"\")\n    line=line.replace(\"]\",\"\")\n    line=line.replace(\"{\",\"\")\n    line=line.replace(\"}\",\"\")\n    line=line.replace(\";\",\"\")\n    line=line.replace(\"@\",\"\")\n    line=line.replace(\"#\",\"\")\n    line=line.replace(\"$\",\"\")\n    line=line.replace(\"%\",\"\")\n    line=line.replace(\"^\",\"\")\n    line=line.replace(\"&\",\"\")\n    line=line.replace(\"|\",\"\")\n    line=line.replace(\"~\",\"\")\n    line=line.replace(\"`\",\"\")\n    line=line.replace(\"!\",\"\")\n    line=line.replace(\"?\",\"\")\n    line=line.replace(\"\\\\\",\"\")\n    line=line.replace(\"/\",\"\")\n    line=line.replace(\" \",\"\")\n    line=line.replace(\"\\n\",\"\")\n    line=line.replace(\"\\t\",\"\")\n    line=line.replace(\"\\r\",\"\")\n    line=line.replace(\"\\v\",\"\")\n    line=line.replace(\"\\f\",\"\")\n    line=line.replace(\"\\a\",\"\")\n    line=line.replace(\"\\b\",\"\")\n    line=line.replace(\"\\0\",\"\")\n    line=line.replace(\"\\1\",\"\")\n    line=line.replace(\"\\2\",\"\")\n    line=line.replace(\"\\3\",\"\")\n    line=line.replace(\"\\4\",\"\")\n    line=line.replace(\"\\5\",\"\")\n    line=line.replace",
        "generated_testcode": "assert function(\"?(_-_/___*__):-___>__. \") == \"0010\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4134,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m, k = map(int, input_string.split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            if i == 0 and j == 0:\n                if a[i][j] == k:\n                    count += 1\n            elif i == 0:\n                if a[i][j] == k:\n                    count += 1\n            elif j == 0:\n                if a[i][j] == k:\n                    count += 1\n            else:\n                if a[i][j] == k:\n                    count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"3 3 11\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4135,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    s = input_string[::-1]\n    for i in range(2, n+1):\n        s = s[:i] + s[i:][::-1]\n    return s\n\n",
        "generated_testcode": "assert function(\"codeforces\") == \"secrofedoc\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4136,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    return a+b\nfunction(\"5 14\")\n",
        "generated_testcode": "assert function(\"5 14\") == 19\n",
        "difficulty": "introductory"
    },
    {
        "number": 4137,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = input_string\n    s = s.replace('+', '+')\n    s = s.replace('-', '-')\n    s = s.replace('<', '<')\n    s = s.replace('>', '>')\n    s = s.replace('[', '[')\n    s = s.replace(']', ']')\n    s = s.replace('.', '.')\n    s = s.replace(' ', '')\n    return s\n# End your code\n\n",
        "generated_testcode": "assert function(\"2+3\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4138,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    q = int(input_string)\n    for i in range(q):\n        k = int(input())\n        print(int(input_string[k-1]))\n\n",
        "generated_testcode": "assert function(\"112123123412345$\\dots$\") == \"11212312341234512345612345671234567812345678912345678910\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4139,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    count=0\n    for i in range(1,N+1):\n        if '7' in str(i) or '5' in str(i) or '3' in str(i):\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"575\") == 4\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4140,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=input_string\n    count=0\n    for i in range(len(n)):\n        if n[i]=='0':\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"000\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4141,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;print(['DENIED','APPROVED'][all([1,i%3==0 or i%5==0][i%2==0]for i in map(int,input_string.split()))])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"5 6 7 9 10 31\") == \"APPROVED\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4142,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string;print('YNeos'['L'in s[::2] or'R'in s[1::2]::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"RUDLUDR\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4143,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,*a = [int(input_string) for _ in range(6)]\n    a.sort()\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.append(0)\n    a.",
        "generated_testcode": "assert function(\"5 3 2 4 3 5\") == 7\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4144,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string);print((10**N-2*9**N+8**N)%(10**9+7))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4145,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n<2:\n        return 2\n    for i in range(2,n):\n        if n%i==0:\n            return i\n    return n+1\n\n",
        "generated_testcode": "assert function(\"20\") == 23\nprint(\"Passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4146,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    if N%2==0:\n        print(N//2)\n    else:\n        print(N//2+1)\nfunction(input())\n",
        "generated_testcode": "assert function(\"3,1,3,2\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4147,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,a,b,c=map(int,input_string.split())\n    l=list(map(int,input().split()))\n    l.sort()\n    l.reverse()\n    l1=[]\n    l2=[]\n    l3=[]\n    for i in range(n):\n        if l[i]>=a:\n            l1.append(l[i])\n        elif l[i]>=b:\n            l2.append(l[i])\n        else:\n            l3.append(l[i])\n    l1.sort()\n    l2.sort()\n    l3.sort()\n    l1.reverse()\n    l2.reverse()\n    l3.reverse()\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(0)\n    l2.append(0)\n    l3.append(0)\n    l1.append(",
        "generated_testcode": "assert function(\"5 100 90 80\") == 23\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4148,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string);print(\\\"\\\".join(map(lambda x:chr((ord(x)-65+N)%26+65),input_string)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"ABCXYZ\") == \"CDEZAB\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4149,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    b = input_string.split()\n    a = []\n    for i in range(n):\n        a.append(int(b[i]))\n    for i in range(n):\n        if a[i] == 2:\n            a[i] = 2\n        elif a[i] == 3:\n            a[i] = 3\n        elif a[i] == 5:\n            a[i] = 5\n        elif a[i] == 7:\n            a[i] = 7\n        elif a[i] == 11:\n            a[i] = 11\n        elif a[i] == 13:\n            a[i] = 13\n        elif a[i] == 17:\n            a[i] = 17\n        elif a[i] == 19:\n            a[i] = 19\n        elif a[i] == 23:\n            a[i] = 23\n        elif a[i] == 29:\n            a[i] = 29\n        elif a[i] == 31:\n            a[i] = 31\n        elif a[i] == 37:\n            a[i] = 37\n        elif a[i] == 41:\n            a[i] = 41\n        elif a[i] == 43:\n            a[i] = 43\n        elif a[i] == 47:\n            a[i] = 47\n        elif a[i] == 53:\n            a[i] = 53\n        elif a[i] == 59:\n            a[i] = 59\n        elif a[i] == 61:\n            a[i] = 61\n        elif a[i] == 67:\n            a[i] = 67\n        elif a[i] == 71:\n            a[i] = 71\n        elif a[i] == 73:\n            a[i] = 73\n        elif a[i] == 79:\n            a[i] = 79\n        elif a[i] == 83:\n            a[i] = 83\n        elif a[i] == 89:\n            a[i] = 89\n        elif a[i] == 97:\n            ",
        "generated_testcode": "assert function(\"3 5 2 3 2 4\") == \"3 4 2\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4150,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    a = a[::-1]\n    print(a)\n    print(k)\n    print(n)\n    print(a[k-1])\n    print(a[n-k])\n    print(a[n-1])\n    print(a[k-1] + a[n-k])\n    print(a[n-1] + a[k-1])\n    print(a[n-1] + a[n-k])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1] + a[n-1])\n    print(a[k-1]",
        "generated_testcode": "assert function(\"5 2\") == \"11111\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4151,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    b = [0] * n\n    c = 0\n    for i in range(n):\n        if a[i] == a[i + 1]:\n            b[i] = b[i + 1]\n        else:\n            b[i] = b[i + 1] + 1\n    for i in range(n - 1):\n        if b[i] == b[i + 1]:\n            c += 1\n    return c\n\n",
        "generated_testcode": "assert function(\"1 2 1 2 3\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4152,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (a[i] + a[j]) % 2 == 0:\n                count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"4 7 1 5 4 9\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4153,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = input_string\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"11101\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4154,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m = map(int,input_string.split())\n    l = []\n    r = []\n    for i in range(m):\n        l.append(list(map(int,input().split())))\n    for i in range(m):\n        r.append(list(map(int,input().split())))\n    l.sort()\n    r.sort()\n    print(l)\n    print(r)\n    count = 0\n    for i in range(m):\n        if l[i][0] <= r[i][1]:\n            count += 1\n    print(count)\nfunction(input())\n",
        "generated_testcode": "assert function(\"4 2\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4155,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    l=[]\n    for i in range(n):\n        l.append(int(input()))\n    return l\n\n",
        "generated_testcode": "assert function(\"4 1 2 1\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4156,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,w = map(int, input_string.split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0]>w:\n        return 0\n    if a[-1]<0:\n        return 0\n    if a[0]<0:\n        a[0] = 0\n    if a[-1]>w:\n        a[-1] = w\n    if a[0]>w:\n        a[0] = w\n    if a[-1]<0:\n        a[-1] = 0\n    if a[0]<0:\n        a[0] = 0\n    if a[-1]>w:\n        a[-1] = w\n    if a[0]>w:\n        a[0] = w\n    if a[-1]<0:\n        a[-1] = 0\n    if a[0]<0:\n        a[0] = 0\n    if a[-1]>w:\n        a[-1] = w\n    if a[0]>w:\n        a[0] = w\n    if a[-1]<0:\n        a[-1] = 0\n    if a[0]<0:\n        a[0] = 0\n    if a[-1]>w:\n        a[-1] = w\n    if a[0]>w:\n        a[0] = w\n    if a[-1]<0:\n        a[-1] = 0\n    if a[0]<0:\n        a[0] = 0\n    if a[-1]>w:\n        a[-1] = w\n    if a[0]>w:\n        a[0] = w\n    if a[-1]<0:\n        a[-1] = 0\n    if a[0]<0:\n        a[0] = 0\n    if a[-1]>w:\n        a[-1] = w\n    if a[0]>w:\n        a[0] = w\n    if a[-1]<0:\n        a[-1] = 0\n    if a[0]<",
        "generated_testcode": "assert function(\"3 5\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4157,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(*sorted(map(int, input_string.split()), key=key))\n    \ndef key(x):\n    return x * 2 if x % 3 == 0 else x\n\n",
        "generated_testcode": "assert function(\"4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4158,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    x=list(map(int,input().split()))\n    x.sort()\n    x.reverse()\n    count=0\n    for i in range(n):\n        for j in range(i+1,n):\n            if(abs(x[i]-x[j])==2**count):\n                count+=1\n                break\n    print(count)\n    print(*x[:count])\nfunction(input())\n",
        "generated_testcode": "assert function(\"3 5 4 7 10 12\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4159,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a, b, k = map(int, input_string.split())\n    takahashi = a\n    aoki = b\n    for i in range(k):\n        if takahashi > 0:\n            takahashi -= 1\n        elif aoki > 0:\n            aoki -= 1\n        else:\n            pass\n    print(takahashi, aoki)\n\n",
        "generated_testcode": "assert function(\"2 3 3\") == \"0 2\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4160,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string)\n    b=100\n    c=0\n    while b<=a:\n        b=b+b*0.01\n        c=c+1\n    return c\n\n",
        "generated_testcode": "assert function(\"101\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4161,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    K = int(input_string)\n    sum = 0\n    for i in range(1,K+1):\n        for j in range(1,K+1):\n            for k in range(1,K+1):\n                sum += gcd(i,j,k)\n    return sum\n\n",
        "generated_testcode": "assert function(\"2\") == 9\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4162,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    a = list(map(int, input_string.split()))\n    max_value = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            max_value = max(max_value, (a[i] * a[j]) % (a[i] + a[j]))\n    return max_value\n\n",
        "generated_testcode": "assert function(\"3 4 6\") == 10\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4163,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(\\\"Yes\\\" if \\\"TTT\\\" in ''.join([\\\"T\\\" if p else \\\"F\\\" for p in [len(list(set(list(map(int, input_string.split()))))) == 1 for l in range(int(input_string))]]) else \\\"No\\\")\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4164,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    r=int(input_string)\n    return r\n\n",
        "generated_testcode": "assert function(\"2\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4165,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    L = list(map(int, input_string.split()))\n    N = L[0]\n    L = L[1:]\n    if N == 3:\n        if L[0] < L[1] + L[2]:\n            return \"Yes\"\n        else:\n            return \"No\"\n    else:\n        if L[0] < L[1] + L[2]:\n            return \"Yes\"\n        else:\n            return \"No\"\n\n",
        "generated_testcode": "assert function(\"4 3 8 5 1\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4166,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=list(map(int,input_string.split()))\n    s=[]\n    c=[]\n    for i in range(n):\n        s.append(int(input()))\n    for i in range(m):\n        c.append(int(input()))\n    for i in range(n):\n        if s[i]>0 and s[i]<10:\n            if c[i]!=s[i]:\n                return -1\n    return n*m\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"3 3\") == 702\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4167,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,K = map(int,input_string.split())\n    count = 0\n    for i in range(1,N+1):\n        for j in range(1,N+1):\n            if i+j<=N and (i%K==0 and j%K==0):\n                count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"3 2\") == 9\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4168,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n==0:\n        return \"0\"\n    elif n<0:\n        return \"-\"+function(\"-\"+str(n))\n    else:\n        return function(str(n//2))+function(str(n%2))\n\n",
        "generated_testcode": "assert function(\"1011\") == -9\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4169,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    a.sort()\n    b.sort()\n    i=0\n    j=0\n    sum=0\n    while(i<n and j<m):\n        if(a[i]<=b[j]):\n            sum+=a[i]\n            i+=1\n        else:\n            sum+=b[j]\n            j+=1\n    while(i<n):\n        sum+=a[i]\n        i+=1\n    while(j<m):\n        sum+=b[j]\n        j+=1\n    return sum\n\n",
        "generated_testcode": "assert function(\"2 5\") == 12\n",
        "difficulty": "introductory"
    },
    {
        "number": 4170,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    h=list(map(int,input().split()))\n    count=0\n    for i in range(n):\n        if i==0:\n            if h[i]>=h[i+1]:\n                count+=1\n        elif i==n-1:\n            if h[i]>=h[i-1]:\n                count+=1\n        else:\n            if h[i]>=h[i-1] and h[i]>=h[i+1]:\n                count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"5\\n10 4 8 7 3\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4171,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k1=map(int,input_string.split())\n    a=list(map(int,input().split()))\n    k=k1\n    count=0\n    for i in range(n):\n        if a[i]%2==0:\n            a[i]=a[i]//2\n            count+=1\n            if a[i]==k:\n                break\n    return count\n\n",
        "generated_testcode": "assert function(\"5 3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4172,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    for i in range(n):\n        if a[i] == a[i+1]:\n            count += 1\n        if count >= k:\n            break\n    return count\n\n",
        "generated_testcode": "assert function(\"6 5\", \"1 2 2 4 2 3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4173,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    n,a,b=map(int,input_string.split())\n    return min(a*n,b*n)\n\n",
        "generated_testcode": "assert function(\"10 1 3\") == 10\n",
        "difficulty": "introductory"
    },
    {
        "number": 4174,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,x=map(int,input_string.split())\n    l=list(map(int,input().split()))\n    count=0\n    for i in range(n):\n        if l[i]<=x:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"3 6\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4175,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n == 0:\n        return \"Yes\"\n    else:\n        return \"No\"\n\n",
        "generated_testcode": "assert function(\"hoge\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4176,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B=map(int,input_string.split())\n    if A>B:\n        A,B=B,A\n    return A*(A+1)//2+B*(B+1)//2\n\n",
        "generated_testcode": "assert function(\"2 3\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4177,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=input_string\n    for i in range(len(N)):\n        print(\"x\",end=\"\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"sardine\") == \"xxxxxxx\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4178,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;a=[*map(int,input_string.split())];b=sorted(a)\n    if a==b:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"5 1 2 1 1 3\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4179,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N, M, C = list(map(int, input_string.split()))\n    B = list(map(int, input().split()))\n    A = []\n    for i in range(N):\n        A.append(list(map(int, input().split())))\n    count = 0\n    for i in range(N):\n        sum = 0\n        for j in range(M):\n            sum += A[i][j] * B[j]\n        if sum + C > 0:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"2 3 -10\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4180,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n%1000==0:\n        print(0)\n    else:\n        print(n%1000)\nfunction(input())\n",
        "generated_testcode": "assert function(\"1900\") == 100\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4181,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    a.insert(0,0)\n    b.insert(0,0)\n    a.append(0)\n    b.append(0)\n    dp=[[0 for i in range(n+2)] for j in range(n+2)]\n    for i in range(1,n+1):\n        for j in range(1,n+1):\n            dp[i][j]=max(dp[i-1][j],dp[i][j-1])\n            if a[i]<=j and b[j]<=i:\n                dp[i][j]=max(dp[i][j],dp[i-a[i]][j-b[j]]+1)\n    return dp[n][n]\n\n",
        "generated_testcode": "assert function(\"2 3 5 2\") == 9\n",
        "difficulty": "introductory"
    },
    {
        "number": 4182,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M,X,Y = map(int, input_string.split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    z = 0\n    for i in range(N):\n        if x[i] < z:\n            return \"War\"\n        elif x[i] > z:\n            z = x[i]\n    for i in range(M):\n        if y[i] > z:\n            return \"War\"\n        elif y[i] < z:\n            z = y[i]\n    return \"No War\"\n\n",
        "generated_testcode": "assert function(\"3 2 10 20\") == \"No War\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4183,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    t=[]\n    for i in range(n):\n        t.append(int(input()))\n    return t\n\n",
        "generated_testcode": "assert function(\"2\\n2\\n3\") == 6\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4184,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    W = list(map(int, input_string.split()))\n    W.sort()\n    S_1 = 0\n    S_2 = 0\n    for i in range(N):\n        if i < N/2:\n            S_1 += W[i]\n        else:\n            S_2 += W[i]\n    return abs(S_1 - S_2)\n\n",
        "generated_testcode": "assert function(\"3\\n1 2 3\") == 0\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4185,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = (int(i) for i in input_string.split())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(i) for i in input().split()])\n    \n    # print(matrix)\n    \n    # for i in range(n):\n    #     for j in range(m):\n    #         print(matrix[i][j], end=\" \")\n    #     print()\n    \n    # print(matrix[0][0], matrix[0][1], matrix[0][2])\n    # print(matrix[1][0], matrix[1][1], matrix[1][2])\n    # print(matrix[2][0], matrix[2][1], matrix[2][2])\n    \n    # print(matrix[0][0], matrix[0][1], matrix[0][2])\n    # print(matrix[1][0], matrix[1][1], matrix[1][2])\n    # print(matrix[2][0], matrix[2][1], matrix[2][2])\n    \n    # print(matrix[0][0], matrix[0][1], matrix[0][2])\n    # print(matrix[1][0], matrix[1][1], matrix[1][2])\n    # print(matrix[2][0], matrix[2][1], matrix[2][2])\n    \n    # print(matrix[0][0], matrix[0][1], matrix[0][2])\n    # print(matrix[1][0], matrix[1][1], matrix[1][2])\n    # print(matrix[2][0], matrix[2][1], matrix[2][2])\n    \n    # print(matrix[0][0], matrix[0][1], matrix[0][2])\n    # print(matrix[1][0], matrix[1][1], matrix[1][2])\n    # print(matrix[2][0], matrix[2][1], matrix[2][2])\n    \n    # print(matrix[0][0], matrix[0][1], matrix[0][2])\n    # print(matrix[1][0], matrix[1][1], matrix[1][2])\n    # print",
        "generated_testcode": "assert function(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4186,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    l = list(map(int,input_string.split()))\n    n = l[0]\n    a = l[1:]\n    a.sort()\n    a.reverse()\n    count = 0\n    for i in range(n//2):\n        count += a[i]\n    return count\n\n",
        "generated_testcode": "assert function(\"6\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4187,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] == 0:\n            count += 1\n        else:\n            count = 0\n        if count > max_count:\n            max_count = count\n    return max_count\n\n",
        "generated_testcode": "assert function(\"5\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4188,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = \\\"A1001010111001010\\\";print(s[int(input_string)])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4189,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    cheese_list = []\n    for i in range(n):\n        cheese_list.append(input().split())\n    return cheese_list\n\n",
        "generated_testcode": "assert function(\"brie soft\") == \"brie\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4190,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append((a[i] + b[i]) % n)\n    print(*c)\nfunction(input())\n",
        "generated_testcode": "assert function(\"4 1 2 1\") == \"1 0 0 2\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4191,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    A, B, C, D = int(input_string), int(input_string), int(input_string), int(input_string)\n    if A == 1 and B == 1 and C == 1 and D == 1:\n        return 1\n    else:\n        return 0\n\n",
        "generated_testcode": "assert function(\"0\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4192,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    D,T,S=map(int,input_string.split());print(\\\"YNeos\\\"[D/S>T::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1000 15 80\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4193,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A = [list(map(int, input_string.split())) for _ in range(3)]\n    N = int(input())\n    b = [int(input()) for _ in range(N)]\n    for i in range(3):\n        for j in range(3):\n            if A[i][j] in b:\n                A[i][j] = 'X'\n    for i in range(3):\n        if A[i][0] == 'X' and A[i][1] == 'X' and A[i][2] == 'X':\n            return 'Yes'\n        if A[0][i] == 'X' and A[1][i] == 'X' and A[2][i] == 'X':\n            return 'Yes'\n    if A[0][0] == 'X' and A[1][1] == 'X' and A[2][2] == 'X':\n        return 'Yes'\n    if A[0][2] == 'X' and A[1][1] == 'X' and A[2][0] == 'X':\n        return 'Yes'\n    return 'No'\n\n",
        "generated_testcode": "assert function(\"84 97 66\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4194,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M=map(int,input_string.split());print(max(N-sum(map(int,input_string.split())),-1))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"41 2\") == 30\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4195,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    D,N = map(int, input_string.split())\n    if D == 0:\n        return 1\n    elif D == 1:\n        return 2\n    elif D == 2:\n        return 3\n    else:\n        return N\n\n",
        "generated_testcode": "assert function(\"0 5\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4196,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    A=list(map(int,input().split()))\n    A.sort()\n    A.reverse()\n    for i in range(N):\n        if A[i]<=10**9:\n            A[i]=int(input())\n    print(A)\n    return A\n\n",
        "generated_testcode": "assert function(\"3\\n7 6 8\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4197,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = input_string\n    n = int(n)\n    a = []\n    for i in range(n):\n        a.append(int(input()))\n    return a\n\n",
        "generated_testcode": "assert function(\"3 2 1\") == \"3 1 2\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4198,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,x=map(int,input_string.split())\n    if x>=a*b:\n        print(b)\n    else:\n        print(0)\nfunction(input())\n",
        "generated_testcode": "assert function(\"10 7 100\") == 9\n",
        "difficulty": "introductory"
    },
    {
        "number": 4199,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split());print(sum(i>=k for i in map(int,input_string.split())))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"4 150\\n150 140 100 200\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4200,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M=map(int,input_string.split());*A,=sorted(map(int,input_string.split()));print(\\\"YNeos\\\"[A[-M]*4*M<sum(A)::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"4 1\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4201,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    H,W,K=map(int,input_string.split())\n    count=0\n    for i in range(H):\n        for j in range(W):\n            if K==0:\n                break\n            if K==1:\n                if i==0 and j==0:\n                    count+=1\n                elif i==0 and j==1:\n                    count+=1\n                elif i==0 and j==2:\n                    count+=1\n                elif i==1 and j==0:\n                    count+=1\n                elif i==1 and j==1:\n                    count+=1\n                elif i==1 and j==2:\n                    count+=1\n                elif i==2 and j==0:\n                    count+=1\n                elif i==2 and j==1:\n                    count+=1\n                elif i==2 and j==2:\n                    count+=1\n                K-=1\n            else:\n                if i==0 and j==0:\n                    count+=1\n                elif i==0 and j==1:\n                    count+=1\n                elif i==0 and j==2:\n                    count+=1\n                elif i==1 and j==0:\n                    count+=1\n                elif i==1 and j==1:\n                    count+=1\n                elif i==1 and j==2:\n                    count+=1\n                elif i==2 and j==0:\n                    count+=1\n                elif i==2 and j==1:\n                    count+=1\n                elif i==2 and j==2:\n                    count+=1\n                K-=1\n    return count\n\n",
        "generated_testcode": "assert function(\"2 3 2\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4202,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    l,r = map(int, input_string.split())\n    return min(l*r, (l*r)%2019)\n\n",
        "generated_testcode": "assert function(\"2020 2040\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4203,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = input_string\n    if s[0] == 'A' and s[2] == 'C' and s[3] == 'C':\n        if s[1] == 'C':\n            return 'AC'\n        else:\n            return 'WA'\n    else:\n        return 'WA'\n\n",
        "generated_testcode": "assert function(\"AtCoder\") == \"AC\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4204,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S = input_string\n    K = int(input())\n    for i in range(5*10**15):\n        S = S.replace('2', '22')\n        S = S.replace('3', '333')\n        S = S.replace('4', '4444')\n        S = S.replace('5', '55555')\n        S = S.replace('6', '666666')\n        S = S.replace('7', '77777777')\n        S = S.replace('8', '888888888')\n        S = S.replace('9', '9999999999')\n        S = S.replace('1', '1')\n    return S[K-1]\n\n",
        "generated_testcode": "assert function(\"1214\") == \"2\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4205,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;a=[*map(int,input_string.split())];print('YNEOS'[sum(i!=j for i,j in zip(a,sorted(a)))>2::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"5 2 3 4 1\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4206,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    ls = [int(i) % 3 for i in input_string]\n    return ls.count(0)\n\n",
        "generated_testcode": "assert function(\"3121\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4207,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    c=[]\n    for i in range(N):\n        c.append(a[i]*b[i])\n    print(max(c))\nfunction(input())\n",
        "generated_testcode": "assert function(\"5\\n1 2 3 4 5\\n2 4 7 11 3\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4208,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    l = input_string[0:n]\n    r = input_string[n:]\n    l_count = {}\n    r_count = {}\n    for i in range(n):\n        if l[i] == '?':\n            l_count[i] = l.count('?')\n        else:\n            l_count[i] = 1\n        if r[i] == '?':\n            r_count[i] = r.count('?')\n        else:\n            r_count[i] = 1\n    l_count = sorted(l_count.items(), key=lambda x: x[1], reverse=True)\n    r_count = sorted(r_count.items(), key=lambda x: x[1], reverse=True)\n    l_count = [i[0] for i in l_count]\n    r_count = [i[0] for i in r_count]\n    l_count = l_count[0:len(l_count) - 1]\n    r_count = r_count[0:len(r_count) - 1]\n    l_count.append(n)\n    r_count.append(n)\n    l_count = [i - 1 for i in l_count]\n    r_count = [i - 1 for i in r_count]\n    l_count = [i + 1 for i in l_count]\n    r_count = [i + 1 for i in r_count]\n    l_count = [i for i in l_count if i >= 0]\n    r_count = [i for i in r_count if i >= 0]\n    l_count = [i for i in l_count if i < n]\n    r_count = [i for i in r_count if i < n]\n    l_count = [i for i in l_count if i not in l_count]\n    r_count = [i for i in r_count if i not in r_count]\n    l_count = [i for i in l_count if i not in r_count]\n    r_count = [i for i in r_count if i not in l_count]\n    l_count",
        "generated_testcode": "assert function(\"codeforces\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4209,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input_string.split()))\n    a.sort()\n    k = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] - a[i] > 0:\n                k += 1\n    return k\n\n",
        "generated_testcode": "assert function(\"4 1 2 2 1 5 3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4210,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=list(map(int,input_string.split()))\n    a=list(map(int,input().split()))\n    count=0\n    for i in range(n):\n        for j in range(i+1,n):\n            if (a[i]+a[j])%k==0:\n                count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"45 1 10 12 11 7\") == 7\n",
        "difficulty": "introductory"
    },
    {
        "number": 4211,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);b=[*map(int,input_string.split())]\n    a=[]\n    for i in range(n-1):\n        a.append(max(b[i],b[i+1]))\n    return sum(a)\n\n",
        "generated_testcode": "assert function(\"3\\n2 5\") == 9\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4212,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m,q=map(int,input_string.split())\n    a=[]\n    b=[]\n    c=[]\n    d=[]\n    for i in range(q):\n        a.append(int(input()))\n        b.append(int(input()))\n        c.append(int(input()))\n        d.append(int(input()))\n    print(a)\n    print(b)\n    print(c)\n    print(d)\n    score=0\n    for i in range(q):\n        if a[i]<=b[i] and b[i]-a[i]==c[i]:\n            score+=d[i]\n    print(score)\nfunction(input())\n",
        "generated_testcode": "assert function(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == 110\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4213,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=input_string\n    a=list(map(int,input().split()))\n    a.sort()\n    print(a[-1]-a[0])\nfunction(input())\n",
        "generated_testcode": "assert function(\"4 1 6 3\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4214,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    xy=[[*map(int,input_string.split())] for _ in range(int(input_string))]\n    return sum([sum([(xy[i][0]-xy[j][0])**2+(xy[i][1]-xy[j][1])**2 for j in range(len(xy))])**0.5 for i in range(len(xy))])/len(xy)\n\n",
        "generated_testcode": "assert function(\"3\\n0 0\\n1 0\\n0 1\") == 2.2761423749\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4215,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    return a-b\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"12 4\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4216,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    count = 0\n    while n > 0:\n        count += 1\n        n = n // 10\n    return count\n\n",
        "generated_testcode": "assert function(\"10000\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4217,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m = map(int,input_string.split())\n    k = []\n    a = []\n    for i in range(n):\n        k.append(int(input()))\n        a.append(list(map(int,input().split())))\n    print(k)\n    print(a)\n    count = 0\n    for i in range(m):\n        for j in range(n):\n            if a[j][i] == 1:\n                count += 1\n    print(count)\n\n",
        "generated_testcode": "assert function(\"3 4\\n2 1 3\\n3 1 2 3\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4218,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    n=int(input_string)\n    odd_count=0\n    for i in range(1,n+1):\n        if i%2!=0:\n            odd_count+=1\n    return odd_count/n\n\n",
        "generated_testcode": "assert function(\"4\") == 0.5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4219,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    A = []\n    for i in range(N):\n        A.append(int(input_string))\n    x = []\n    y = []\n    for i in range(N):\n        x.append(int(input_string))\n        y.append(int(input_string))\n    return N, A, x, y\n\n",
        "generated_testcode": "assert function(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4220,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    k,s=int(input_string),input_string;print([s[:k]+'...',s][len(s)<=k])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"nikoandsolstice\") == \"nikoand...\"\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4221,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string;print(s+'es'[s[-1]!='s':])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"apple\") == \"apples\"\nprint(\"Passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4222,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split());s={*range(1,-~n)}\n    for i in range(k):s.difference_update(set(map(int,input().split())))\n    return len(s)\n\n",
        "generated_testcode": "assert function(\"3 2\\n2\\n1 3\\n1\\n3\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4223,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S = input_string\n    N = len(S)\n    slimes = [0] * N\n    for i in range(N):\n        if S[i] == 'a':\n            slimes[i] = 1\n        elif S[i] == 'b':\n            slimes[i] = 2\n        else:\n            slimes[i] = 3\n    for i in range(N):\n        if slimes[i] == 0:\n            slimes[i] = slimes[i-1]\n    return slimes\n\n",
        "generated_testcode": "assert function(\"aabbbbaaca\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4224,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n= int(input_string)\n    a=list(map(int,input().split()))\n    count=0\n    for i in range(n):\n        if a[i]%2==0:\n            a[i]=a[i]//2\n            count+=1\n        else:\n            a[i]=a[i]*3\n            count+=1\n    print(count)\nfunction(input())\n",
        "generated_testcode": "assert function(\"3 5 2 4\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4225,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B,_,K=map(int,input_string.split());print(min(A,K,A*2+B-K))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2 1 1 3\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4226,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    X,Y=map(int,input_string.split());print(\\\"NYoe s\\\"[2<=Y/X<=4&~Y*4::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"3 8\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4227,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M = map(int,input_string.split())\n    graph = {}\n    for i in range(M):\n        a,b = map(int,input().split())\n        if a in graph:\n            graph[a].append(b)\n        else:\n            graph[a] = [b]\n        if b in graph:\n            graph[b].append(a)\n        else:\n            graph[b] = [a]\n    print(graph)\n    return graph\n\n",
        "generated_testcode": "assert function(\"3 3\\n1 2\\n1 3\\n2 3\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4228,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, l = list(map(int, input_string.split()))\n    apples = list(map(int, input().split()))\n    apples.sort()\n    print(apples)\n    print(apples[0] + apples[1] + apples[2] + apples[3] - l)\n\n",
        "generated_testcode": "assert function(\"5 2\") == 18\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4229,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(sum([i,0][i%3==0 or i%5==0] for i in range(1,int(input_string)+1)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"15\") == 60\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4230,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    X,N=map(int,input_string.split());*P,=map(int,input_string.split());print(min([i for i in range(102)if(i in P)^1],key=lambda i:abs(i-X)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"6 5\") == 8\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4231,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    H,W=map(int,input_string.split())\n    h,w=map(int,input().split())\n    return H*W-h*w\n\n",
        "generated_testcode": "assert function(\"3 2\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4232,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    a=list(map(int,input().split()))\n    a.sort()\n    for i in range(len(a)):\n        if a[i]<=k:\n            k-=1\n        else:\n            break\n    if k==0:\n        print(a[i])\n    else:\n        print(-1)\nfunction(input())\n",
        "generated_testcode": "assert function(\"7 4\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4233,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=list(map(int,input_string.split()))\n    grid=[]\n    for i in range(n):\n        grid.append(input())\n    \n    #print(grid)\n    \n    #print(n,m)\n    \n    #print(grid[0])\n    \n    #print(grid[1])\n    \n    #print(grid[2])\n    \n    #print(grid[3])\n    \n    #print(grid[4])\n    \n    #print(grid[5])\n    \n    #print(grid[6])\n    \n    #print(grid[7])\n    \n    #print(grid[8])\n    \n    #print(grid[9])\n    \n    #print(grid[10])\n    \n    #print(grid[11])\n    \n    #print(grid[12])\n    \n    #print(grid[13])\n    \n    #print(grid[14])\n    \n    #print(grid[15])\n    \n    #print(grid[16])\n    \n    #print(grid[17])\n    \n    #print(grid[18])\n    \n    #print(grid[19])\n    \n    #print(grid[20])\n    \n    #print(grid[21])\n    \n    #print(grid[22])\n    \n    #print(grid[23])\n    \n    #print(grid[24])\n    \n    #print(grid[25])\n    \n    #print(grid[26])\n    \n    #print(grid[27])\n    \n    #print(grid[28])\n    \n    #print(grid[29])\n    \n    #print(grid[30])\n    \n    #print(grid[31])\n    \n    #print(grid[32])\n    \n    #print(grid[33])\n    \n    #print(grid[34])\n    \n    #print(grid[35])\n    \n    #print(grid[36])\n    \n    #print(grid[37])\n    \n    #print(grid[38])\n    \n    #print(grid[39])\n    \n    #print(grid[40])\n    \n    #print(grid[41])\n    \n    #print(grid[42",
        "generated_testcode": "assert function(\"....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4234,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n%2==0:\n        return 0\n    else:\n        return n\n\n",
        "generated_testcode": "assert function(\"good\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4235,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = list(map(int, input_string.split()))\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, input().split())))\n    # print(edges)\n    # print(n, m)\n    # print(edges)\n    # print(edges[0][0])\n    # print(edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges[0][1])\n    # print(edges[0][0] == edges",
        "generated_testcode": "assert function(\"10100\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4236,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = list(map(int, input_string.split()))\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    points = []\n    for i in range(1, m+1):\n        points.append(i)\n    points_in_segments = []\n    for i in points:\n        for j in segments:\n            if j[0] <= i <= j[1]:\n                points_in_segments.append(i)\n                break\n    points_in_segments = list(set(points_in_segments))\n    points_in_segments.sort()\n    print(len(points_in_segments))\n    print(*points_in_segments)\n\n",
        "generated_testcode": "assert function(\"3 5\\n2 2\\n1 2\\n5 5\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4237,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a,b,c,d = list(map(int,input_string.split()))\n    count = 0\n    for i in range(a,b+1):\n        if i%c==0 or i%d==0:\n            continue\n        else:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"4 9 2 3\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4238,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    sum=0\n    while n>0:\n        sum+=n%10\n        n=n//10\n    if sum%9==0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"123456789\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4239,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    count=0\n    while N>0:\n        if N%9==0:\n            count+=N//9\n            N=0\n        else:\n            count+=N//9+1\n            N=N%9\n    return count\n\n",
        "generated_testcode": "assert function(\"127\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4240,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string\n    t=input_string[::-1]\n    if s==t:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"kyoto\") == \"tokyo\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4241,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string\n    t=input()\n    count=0\n    for i in range(len(s)):\n        if s[i]!=t[i]:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"cabacc\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4242,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    A, B, K = map(int, input_string.split())\n    if A % K == 0 and B % K == 0:\n        return K\n    else:\n        return function(input_string)\n\n",
        "generated_testcode": "assert function(\"8 12 2\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4243,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);print(n//500*1000+n%500//5*5)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1024\") == 2020\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4244,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    X = list(map(int, input().split()))\n    X.sort()\n    min_stamina = 0\n    for i in range(N):\n        min_stamina += (X[i] - X[i-1])**2\n    return min_stamina\n\n",
        "generated_testcode": "assert function(\"2 1\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4245,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    return a-b\n\n",
        "generated_testcode": "assert function(\"4 10\") == 3\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4246,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(sum(i==j for i,j in zip(input_string,input_string)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"CSS\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4247,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    P = list(map(int, input_string.split()))\n    n = P[0]\n    P = P[1:]\n    count = 0\n    for i in range(1, n):\n        if P[i] < P[i - 1] < P[i + 1] or P[i] < P[i + 1] < P[i - 1]:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"5\\n1 3 5 4 2\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4248,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    x=[]\n    y=[]\n    for i in range(n):\n        x1,y1=map(float,input().split())\n        x.append(x1)\n        y.append(y1)\n    x_max=max(x)\n    x_min=min(x)\n    y_max=max(y)\n    y_min=min(y)\n    x_mid=(x_max+x_min)/2\n    y_mid=(y_max+y_min)/2\n    x_mid_list=[]\n    y_mid_list=[]\n    for i in range(n):\n        if x[i]==x_mid:\n            x_mid_list.append(y[i])\n        if y[i]==y_mid:\n            y_mid_list.append(x[i])\n    if len(x_mid_list)>1:\n        x_mid_list.sort()\n        y_mid_list.sort()\n        x_mid=x_mid_list[1]\n        y_mid=y_mid_list[1]\n    else:\n        x_mid=x_mid_list[0]\n        y_mid=y_mid_list[0]\n    x_max_list=[]\n    y_max_list=[]\n    for i in range(n):\n        if x[i]==x_max:\n            x_max_list.append(y[i])\n        if y[i]==y_max:\n            y_max_list.append(x[i])\n    if len(x_max_list)>1:\n        x_max_list.sort()\n        y_max_list.sort()\n        x_max=x_max_list[1]\n        y_max=y_max_list[1]\n    else:\n        x_max=x_max_list[0]\n        y_max=y_max_list[0]\n    x_min_list=[]\n    y_min_list=[]\n    for i in range(n):\n        if x[i]==x_min:\n            x_min_",
        "generated_testcode": "assert function(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == 5.410\n",
        "difficulty": "introductory"
    },
    {
        "number": 4249,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = [int(x) for x in input_string.split()]\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a[0] > m:\n        return -1\n    else:\n        return m // a[0]\n\n",
        "generated_testcode": "assert function(\"5 8\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4250,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k =  map(int,input_string.split())\n    s = list(map(int,input().split()))\n    t = []\n    for i in range(k):\n        t.append(s[i])\n    for i in range(k,n):\n        if s[i] not in t:\n            t.append(s[i])\n    return t\n\n",
        "generated_testcode": "assert function(\"1 2 3 2 4 3 1\") == \"1 2 3\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4251,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=list(map(int,input_string.split()))\n    matrix=[]\n    for i in range(n):\n        matrix.append(list(map(int,input().split())))\n    matrix.sort()\n    k=0\n    for i in range(n):\n        for j in range(m):\n            if j==0:\n                k=matrix[i][j]-matrix[i][j+1]\n            else:\n                if matrix[i][j]-matrix[i][j-1]>k:\n                    k=matrix[i][j]-matrix[i][j-1]\n    return k\n# End your code here\n\n",
        "generated_testcode": "assert function(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4252,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    if N < 3:\n        return 0\n    else:\n        for i in range(N):\n            if input_string[i] == 'x':\n                if input_string[i+1] == 'x':\n                    if input_string[i+2] == 'x':\n                        return 1\n                    else:\n                        return 2\n                else:\n                    return 1\n        return 0\n\n",
        "generated_testcode": "assert function(\"xxxiii\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4253,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    r=int(input_string)\n    area=3*(r**2)\n    print(area)\nfunction(input())\n",
        "generated_testcode": "assert function(\"4\") == 48\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4254,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s,w=map(int,input_string.split())\n    if w>=s:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\n",
        "generated_testcode": "assert function(\"4 5\") == \"unsafe\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4255,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split())\n    s=(a+b+c)/2\n    area=s*(s-a)*(s-b)*(s-c)\n    return area\n\n",
        "generated_testcode": "assert function(\"3 4 5\") == 6\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4256,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B,C=map(int,input_string.split())\n    if A>B:\n        return B\n    else:\n        return A\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"2 11 4\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4257,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    A,B=map(int,input_string.split())\n    return A*B\n\n",
        "generated_testcode": "assert function(\"2 5\") == 10\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4258,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,t=map(int,input_string.split())\n    return a*b*(t//a+1)\n\n",
        "generated_testcode": "assert function(\"3 5 7\") == 10\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4259,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    k=int(input_string)\n    a=int(input_string[0])\n    b=int(input_string[2])\n    if a%k==0 and b%k==0:\n        print(\"OK\")\n    else:\n        print(\"NG\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"7 500 600\") == \"OK\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4260,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    T,X=map(int,input_string.split())\n    return T/X\n\n",
        "generated_testcode": "assert function(\"8 3\") == 2.6666666667\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4261,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split())\n    if b>=c:\n        return b-c\n    else:\n        return 0\n\n",
        "generated_testcode": "assert function(\"6 4 3\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4262,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);p,a,b=sorted(itertools.permutations(range(1,n+1),n)),map(int,input_string.split()),map(int,input_string.split())\n    return abs(a[0]-b[0])\n\n",
        "generated_testcode": "assert function(\"3\\n1 3 2\\n3 1 2\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4263,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S = input_string\n    ACGT = []\n    for i in range(len(S)):\n        if S[i] == 'A':\n            ACGT.append('A')\n        elif S[i] == 'C':\n            ACGT.append('C')\n        elif S[i] == 'G':\n            ACGT.append('G')\n        elif S[i] == 'T':\n            ACGT.append('T')\n    ACGT_string = ''.join(ACGT)\n    ACGT_string_list = []\n    for i in range(len(ACGT_string)):\n        if ACGT_string[i] == 'A':\n            ACGT_string_list.append('A')\n        elif ACGT_string[i] == 'C':\n            ACGT_string_list.append('C')\n        elif ACGT_string[i] == 'G':\n            ACGT_string_list.append('G')\n        elif ACGT_string[i] == 'T':\n            ACGT_string_list.append('T')\n    ACGT_string_list_string = ''.join(ACGT_string_list)\n    ACGT_string_list_string_list = []\n    for i in range(len(ACGT_string_list_string)):\n        if ACGT_string_list_string[i] == 'A':\n            ACGT_string_list_string_list.append('A')\n        elif ACGT_string_list_string[i] == 'C':\n            ACGT_string_list_string_list.append('C')\n        elif ACGT_string_list_string[i] == 'G':\n            ACGT_string_list_string_list.append('G')\n        elif ACGT_string_list_string[i] == 'T':\n            ACGT_string_list_string_list.append('T')\n    ACGT_string_list_string_list_string = ''.join(ACGT_string_list_string_list)\n    ACGT_string_list_string_list_string_list = []\n    for i in range(len(ACGT_string_list_string",
        "generated_testcode": "assert function(\"ATCODER\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4264,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(sum(len(str(i))%2!=0 for i in range(1,int(input_string)+1)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"11\") == 9\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4265,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(sum([x!=y for x,y in zip(input_string,input_string)]))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"cupofcoffee\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4266,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split());print(*range(b-a+1,b+a))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"3 7\") == \"5 6 7 8 9\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4267,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    X=int(input_string)\n    if X>=30:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"25\") == \"No\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4268,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,d=map(int,input_string.split())\n    x=[]\n    for i in range(n):\n        x.append(list(map(int,input().split())))\n    count=0\n    for i in range(n):\n        for j in range(i+1,n):\n            if(abs(x[i][0]-x[j][0])**d+abs(x[i][1]-x[j][1])**d)**(1/d)%1==0:\n                count+=1\n    return count\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"3 2\\n1 2\\n5 5\\n-2 8\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4269,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S = input_string\n    if S[0] == S[1] or S[1] == S[2] or S[2] == S[3] or S[3] == S[0]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\n",
        "generated_testcode": "assert function(\"3776\") == \"Bad\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4270,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    l=[]\n    for i in range(n):\n        l.append(int(input()))\n    l.sort()\n    print(l)\n    print(l[-1])\nfunction(input())\n",
        "generated_testcode": "assert function(\"2 3\") == 3.5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4271,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    \n    # Your code goes here\n    \n    return 0\n\n",
        "generated_testcode": "assert function(\"3 1 2\") == 14\n",
        "difficulty": "introductory"
    },
    {
        "number": 4272,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    N = input_string\n    S = input_string\n    count = 0\n    for i in range(len(S)):\n        if S[i:i+3] == \"ABC\":\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"ZABCDBABCQ\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4273,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            for k in range(j+1, N):\n                if (input_string[i][0] == input_string[j][0] == input_string[k][0]):\n                    continue\n                elif (input_string[i][0] == input_string[j][0] == input_string[k][0]):\n                    continue\n                elif (input_string[i][0] == input_string[j][0] == input_string[k][0]):\n                    continue\n                else:\n                    count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"MASHIKE\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4274,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M=map(int,input_string.split());print('YNeos'[M<N::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"3 3\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4275,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S=input_string;print(\\\"YNeos\\\"[S[2::2]!=S[3::2]::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"sippuu\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4276,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,T = map(int,input_string.split())\n    costs = []\n    times = []\n    for i in range(N):\n        cost,time = map(int,input().split())\n        costs.append(cost)\n        times.append(time)\n    costs.sort()\n    times.sort()\n    cost = costs[0]\n    time = times[0]\n    for i in range(1,N):\n        if costs[i] > cost:\n            cost = costs[i]\n        if times[i] > time:\n            time = times[i]\n    if time > T:\n        print(\"TLE\")\n    else:\n        print(cost)\n\n",
        "generated_testcode": "assert function(\"3 70\\n7 60\\n1 80\\n4 50\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4277,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,A,B=map(int,input_string.split())\n    return N*A+B\n\n",
        "generated_testcode": "assert function(\"4 2 9\") == 8\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4278,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    s_list=[]\n    for i in range(N):\n        s_list.append(input())\n    s_list.sort()\n    s_list.sort(key=len)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_list.sort(key=len,reverse=False)\n    s_list.sort(key=len,reverse=True)\n    s_",
        "generated_testcode": "assert function(\"acornistnt\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4279,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    q = int(input_string)\n    for i in range(q):\n        k = int(input())\n        print(int(input_string[k-1]))\n\n",
        "generated_testcode": "assert function(\"112123123412345$\\dots$\") == \"11212312341234512345612345671234567812345678912345678910\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4280,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=list(map(int,input_string.split()))\n    roads=[]\n    for i in range(n-1):\n        roads.append(list(map(int,input().split())))\n    roads.sort(key=lambda x:x[0])\n    roads.sort(key=lambda x:x[1])\n    roads=roads[::-1]\n    print(roads)\n    count=0\n    for i in range(n-1):\n        if roads[i][0]==roads[i][1]:\n            count+=1\n        if count>k:\n            return i+1\n    return n\n\n",
        "generated_testcode": "assert function(\"6 2\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4281,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    x=list(map(int,input().split()))\n    x.sort()\n    x.append(0)\n    x.append(n+1)\n    x=list(set(x))\n    x.sort()\n    x.pop(0)\n    x.pop(len(x)-1)\n    print(x)\n    count=0\n    for i in range(len(x)-1):\n        count+=x[i+1]-x[i]-1\n    print(count)\nfunction(input())\n",
        "generated_testcode": "assert function(\"4 3 7 1 4 3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4282,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    l = []\n    for i in range(n):\n        a, b = input().split()\n        l.append([int(a), int(b)])\n    return l\n\n",
        "generated_testcode": "assert function(\"3 5\") == \"3 2 4 1 5\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4283,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    a.reverse()\n    count=0\n    for i in range(n):\n        if(a[i]>=5):\n            count+=1\n        else:\n            break\n    return count\n# End your code here\n\n",
        "generated_testcode": "assert function(\"6\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4284,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    q = int(input_string)\n    for i in range(q):\n        k, n, a, b = input().split()\n        k, n, a, b = int(k), int(n), int(a), int(b)\n        if k * n < a + b:\n            print(-1)\n        else:\n            print(n - (k * n // (a + b)))\n\n",
        "generated_testcode": "assert function(\"15 5 3 2\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4285,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N, = list(map(int, input_string.split()))\n    s = input()\n    k = s.count('?')\n    a = s.count('a')\n    b = s.count('b')\n    c = s.count('c')\n    result = (3**k) * (a+b+c)\n    return result % (10**9 + 7)\n\n",
        "generated_testcode": "assert function(\"ac?b?c\") == 24\n",
        "difficulty": "introductory"
    },
    {
        "number": 4286,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=list(map(int,input_string.split()))\n    a=list(map(int,input().split()))\n    edges=[]\n    for i in range(m):\n        x,y,w=list(map(int,input().split()))\n        edges.append([x,y,w])\n    edges.sort(key=lambda x:x[2])\n    cost=0\n    for i in range(m):\n        if a[edges[i][0]-1]!=a[edges[i][1]-1]:\n            cost+=edges[i][2]\n            a[edges[i][0]-1]=a[edges[i][1]-1]\n    return cost\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"3 2\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4287,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,m,n=list(map(int,input_string.split()))\n    l=[]\n    r=[]\n    p=[]\n    for i in range(n):\n        l.append(list(map(int,input().split())))\n    for i in range(m):\n        p.append(list(map(int,input().split())))\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([a,a])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p.sort()\n    l.append([0,0])\n    r.append([a,a])\n    p.append([0,0])\n    l.sort()\n    r.sort()\n    p",
        "generated_testcode": "assert function(\"10 2 4\") == 14\n",
        "difficulty": "introductory"
    },
    {
        "number": 4288,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(['No','Yes'][2==len(set(input_string.split()))])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"5 7 5\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4289,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    t = int(input_string[1])\n    a = int(input_string[2])\n    h = list(map(int, input_string[3:].split()))\n    h.sort()\n    min_diff = 10**9\n    for i in range(n):\n        diff = abs(t - (h[i] * 0.006))\n        if diff < min_diff:\n            min_diff = diff\n            index = i + 1\n    return index\n\n",
        "generated_testcode": "assert function(\"2\\n12 5\\n1000 2000\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4290,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split());print(a*(a-1)//2+b*(b-1)//2)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2 1\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4291,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,q = map(int,input_string.split())\n    s = input()\n    for i in range(q):\n        l,r = map(int,input().split())\n        count = 0\n        for j in range(l-1,r):\n            if s[j] == 'A' and s[j+1] == 'C':\n                count += 1\n        print(count)\nfunction(input())\n",
        "generated_testcode": "assert function(\"ACACTACG\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4292,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    I=lambda:map(int,input_string.split());_,k=I();print(sum(sorted(I())[:k]))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"5 3\\n50 100 80 120 80\") == 210\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4293,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A=list(map(int,input_string.split()));print(sum(A)-max(A))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1 3 4\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4294,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    X,A=map(int,input_string.split());print((X>=A)*10)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"3 5\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4295,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split());print(min(a%b,-a%b))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"7 4\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4296,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print('bwuisnt'[sum(map(int,input_string.split()))<=21::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"5 7 9\") == \"win\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4297,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    for i in range(1,n+1):\n        if i%2==0 and i%n==0:\n            return i\n    return -1\n\n",
        "generated_testcode": "assert function(\"3\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4298,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,D = map(int,input_string.split())\n    return N,D\n\n",
        "generated_testcode": "assert function(\"6 2\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4299,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S=input_string[-1];print(\\\"hpb\\\"[(S in\\\"01683\\\")+(S==\\\"3\\\")]+\\\"on\\\")\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"16\") == \"pon\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4300,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    d=list(map(int,input_string.split()))\n    sum=0\n    for i in range(0,N):\n        for j in range(i+1,N):\n            sum=sum+d[i]*d[j]\n    print(sum)\nfunction(input())\n",
        "generated_testcode": "assert function(\"3 1 2\") == 11\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4301,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    arr = []\n    for i in range(n):\n        arr.append(int(input()))\n    arr.sort()\n    print(arr[-2])\n\n",
        "generated_testcode": "assert function(\"3\\n1\\n4\\n3\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4302,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    if a>b:\n        a,b=b,a\n    if a==1:\n        return b\n    if b==1:\n        return a\n    if a==b:\n        return a\n    if a==2:\n        return b\n    if b==2:\n        return a\n    if a==3:\n        return b\n    if b==3:\n        return a\n    if a==4:\n        return b\n    if b==4:\n        return a\n    if a==5:\n        return b\n    if b==5:\n        return a\n    if a==6:\n        return b\n    if b==6:\n        return a\n    if a==7:\n        return b\n    if b==7:\n        return a\n    if a==8:\n        return b\n    if b==8:\n        return a\n    if a==9:\n        return b\n    if b==9:\n        return a\n    if a==10:\n        return b\n    if b==10:\n        return a\n    if a==11:\n        return b\n    if b==11:\n        return a\n    if a==12:\n        return b\n    if b==12:\n        return a\n    if a==13:\n        return b\n    if b==13:\n        return a\n    if a==14:\n        return b\n    if b==14:\n        return a\n    if a==15:\n        return b\n    if b==15:\n        return a\n    if a==16:\n        return b\n    if b==16:\n        return a\n    if a==17:\n        return b\n    if b==17:\n        return a\n    if a==18:\n        return b\n    if b==18:\n        return a\n    if a==19:\n        return b\n    if b==19:\n        return a\n    if a==20:\n        return b\n    if b==20:\n        return a\n    if a==21:\n        return b\n    if b==21:\n        return a\n    if a==22:\n        return b\n    if b==22:\n        return a\n    if",
        "generated_testcode": "assert function(\"5 3\") == 9\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4303,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k = map(int,input_string.split())\n    arr = list(map(int,input().split()))\n    arr.sort()\n    print(arr)\n    count = 0\n    for i in range(n):\n        if arr[i] == i:\n            count += 1\n    if count >= k:\n        return 0\n    else:\n        return arr[k-1] - arr[count-1]\n\n",
        "generated_testcode": "assert function(\"5 3\\n-30 -10 10 20 50\") == 40\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4304,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    return a-b\n\n",
        "generated_testcode": "assert function(\"8 13\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4305,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    h,a=map(int,input_string.split());print(-(-h//a))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"10 4\") == 3\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4306,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,d=map(int,input_string.split());print(max(0,min(b,d)-max(a,c)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"0 75 25 100\") == 50\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4307,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    count=0\n    for i in range(1,n+1):\n        if i%2!=0:\n            if len(divisors(i))==8:\n                count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"105\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4308,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split());print(int(not n%k==0))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"7 3\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4309,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    if N<100:\n        print(N)\n    else:\n        print(N)\nfunction(input())\n",
        "generated_testcode": "assert function(\"111\") == \"111\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4310,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=sorted(map(int,input_string.split()))\n    if a==b==c:\n        return 0\n    elif a==b:\n        return c\n    elif a==c:\n        return b\n    elif b==c:\n        return a\n    else:\n        return a+b\n\n",
        "generated_testcode": "assert function(\"1 6 3\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4311,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=int(input_string)\n    if s%2==0:\n        return s/2\n    else:\n        return 3*s+1\n\n",
        "generated_testcode": "assert function(\"8\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4312,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B,C,D=map(int,input_string.split());print(\\\"YNeos\\\"[(A+D-1)//D<(C+B-1)//B::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"10 9 10 10\") == \"No\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4313,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    v=list(map(int,input().split()))\n    c=list(map(int,input().split()))\n    v.sort()\n    c.sort()\n    x=0\n    y=0\n    for i in range(n):\n        x=x+v[i]\n        y=y+c[i]\n    print(x-y)\n\n",
        "generated_testcode": "assert function(\"3\\n10 2 5\\n6 3 4\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4314,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    h,w=map(int, input_string.split())\n    a=[]\n    for i in range(h):\n        a.append(list(input()))\n    for i in range(h):\n        for j in range(w):\n            if a[i][j]=='#':\n                a[i][j]='.'\n    for i in range(h):\n        for j in range(w):\n            print(a[i][j], end='')\n        print()\nfunction(input())\n",
        "generated_testcode": "assert function(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4315,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string)\n    b=2*3.14*a\n    return b\n\n",
        "generated_testcode": "assert function(\"1\") == 6.28318530717958623200\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4316,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print('Yes' if len(set(input_string))==2 else 'No')\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"ASSA\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4317,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split());print(max(a+b,a-b,a*b))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"-13 3\") == -10\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4318,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    H = list(map(int, input().split()))\n    count = 0\n    for i in range(1, N):\n        if H[i] >= H[i-1]:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"4\\n6 5 6 8\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4319,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a = list(map(int, input_string.split()))\n    b = []\n    for i in range(len(a)):\n        if i == 0:\n            b.append(a[i])\n        else:\n            b.append(a[i] - a[i - 1])\n    return b\n\n",
        "generated_testcode": "assert function(\"1 2 3 1 2 3 4\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4320,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n = int(input())\n        x = 0\n        k = 1\n        while x < n:\n            x += 2 ** (k - 1)\n            k += 1\n        print(k - 2)\n\n",
        "generated_testcode": "assert function(\"3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4321,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    while k > 0:\n        if n % 10!= 0:\n            n -= 1\n        else:\n            n = n // 10\n        k -= 1\n    return n\n\n",
        "generated_testcode": "assert function(\"512 4\") == \"50\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4322,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    kk=lambda:map(int,input_string.split())\n    n,*a=kk()\n    a.sort()\n    k=1\n    for i in range(n):\n        if a[i]>=k:\n            k=a[i]\n            a[i]=k\n        else:\n            break\n    for i in range(n-1,-1,-1):\n        if a[i]>=k:\n            k=a[i]\n            a[i]=k\n        else:\n            break\n    print(k)\n    print(*a)\nfunction(input())\n",
        "generated_testcode": "assert function(\"7\") == \"7\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4323,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = list(map(int, input_string.split()))\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, input().split())))\n    songs.sort(key=lambda x: x[0])\n    songs.sort(key=lambda x: x[1])\n    i = 0\n    j = 0\n    while i < n and j < m:\n        if songs[i][0] <= m - j:\n            j += songs[i][0]\n            i += 1\n        else:\n            break\n    if i == n:\n        return i\n    else:\n        return -1\n\n",
        "generated_testcode": "assert function(\"4 21\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4324,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        n,a,b=input().split()\n        n=int(n)\n        a=int(a)\n        b=int(b)\n        s=''\n        for i in range(n):\n            for j in range(i,n):\n                if len(set(s[i:j+1]))==b:\n                    s+=s[i:j+1]\n                    break\n        print(s)\nfunction(input())\n",
        "generated_testcode": "assert function(\"tleelte\") == \"tleel\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4325,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,X,T=map(int,input_string.split());print(-N//X*-T)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"20 12 6\") == 12\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4326,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    N=int(input_string)\n    if N<=2:\n        return 0\n    else:\n        return N//3\n\n",
        "generated_testcode": "assert function(\"8\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4327,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,P=map(int,input_string.split());print(A*3+P>>1)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1 3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4328,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B=map(int,input_string.split());print([B-A,A+B][B%A==0])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"4 12\") == 16\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4329,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print('YNeos'[input_string!=input_string[:-1]::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"chokudai\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4330,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split());print(['IMPOSSIBLE',a+(b-a)//2][(b-a)%2==0])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2 16\") == 9\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4331,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = input_string\n    if N[-1] == '7':\n        print('Yes')\n    else:\n        print('No')\n\n",
        "generated_testcode": "assert function(\"117\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4332,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=input_string\n    sum=0\n    while(n>0):\n        rem=n%10\n        sum=sum+rem\n        n=n//10\n    if(sum%3==0):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfunction(int(input()))\n",
        "generated_testcode": "assert function(\"12\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4333,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,d=map(int,input_string.split());print(b+c-d,c+d-a,a+b-d,b+c-a)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4334,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s,t=input_string.split();a,b=map(int,input_string.split())\n    return a,b\n\n",
        "generated_testcode": "assert function(\"red blue\") == \"2 4\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4335,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);s=input_string;print('YNeos'[s[:n//2]!=s[n//2:]::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"abcabc\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4336,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    W,H,x,y=map(int,input_string.split());print(W*H/2,(W==x*2)&(H==y*2)+0)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2 3 1 2\") == 3.0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4337,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;print('Three' if len(set(input_string.split()))==3 else 'Four')\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"G W Y P Y W\") == \"Four\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4338,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,x,y = list(map(int,input_string.split()))\n    a = list(map(int,input().split()))\n    a.sort()\n    count = 0\n    for i in range(n):\n        if a[i] - x >= 0:\n            a[i] = max(0,a[i] - x)\n            count += 1\n        if a[i] + y <= 10**5:\n            a[i] = a[i] + y\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"5 3 3\\n1 2 6 10 3\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4339,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input_string.split()))\n    b=list(map(int,input_string.split()))\n    count=0\n    for i in range(n):\n        for j in range(i+1,n):\n            if a[i]+a[j]>b[i]+b[j]:\n                count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"5 4 2 6 2\") == 7\n",
        "difficulty": "introductory"
    },
    {
        "number": 4340,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    b=[]\n    for i in range(n):\n        if a[i]==1:\n            b.append(2)\n        elif a[i]==2:\n            b.append(1)\n        elif a[i]==3:\n            b.append(4)\n        elif a[i]==4:\n            b.append(3)\n        elif a[i]==5:\n            b.append(6)\n        elif a[i]==6:\n            b.append(5)\n        elif a[i]==10**9:\n            b.append(10**9-1)\n        elif a[i]==10**9-1:\n            b.append(10**9)\n        else:\n            b.append(a[i])\n    return b\nprint(*function(input()))\n",
        "generated_testcode": "assert function(\"1 2 4 5 10\") == \"1 1 3 5 9\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4341,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    rd = lambda: list(map(int, input_string.split()))\n    n, m = rd()\n    graph = [[] for _ in range(n)]\n    for _ in range(m):\n        v, u = rd()\n        graph[v].append(u)\n        graph[u].append(v)\n    return graph\n\n",
        "generated_testcode": "assert function(\"5 4\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4342,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input_string.split()))\n    edges = []\n    for i in range(n - 1):\n        edges.append(list(map(int, input_string.split())))\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(n)\n    # print(edges)\n    # print(a)\n    # print(",
        "generated_testcode": "assert function(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4343,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    s = input()\n    t = input()\n    k = len(s)\n    list_of_strings = []\n    for i in range(n):\n        if i < n//2:\n            list_of_strings.append(s[:k])\n        else:\n            list_of_strings.append(t[:k])\n        k -= 1\n    list_of_strings.sort()\n    print(list_of_strings[n//2])\nfunction(input())\n",
        "generated_testcode": "assert function(\"az\") == \"bc\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4344,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    a=list(map(int,input().split()))\n    a.sort()\n    if k>n:\n        print(\"NO\")\n    else:\n        for i in range(n):\n            if i+k<=n:\n                if a[i+k-1]!=a[i]:\n                    print(\"YES\")\n                    print(i+1,end=\" \")\n                    for j in range(i+1,i+k):\n                        print(j+1,end=\" \")\n                    break\n        else:\n            print(\"NO\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"5 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4345,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, a = int(input_string), list(map(int, input_string.split())) + [0, ]\n    if n == 1:\n        return 'YES'\n    if n == 2:\n        return 'NO'\n    if a[0] > a[1]:\n        return 'NO'\n    if a[-1] < a[-2]:\n        return 'NO'\n    for i in range(1, n - 1):\n        if a[i] > a[i + 1] and a[i] > a[i - 1]:\n            return 'NO'\n        if a[i] < a[i + 1] and a[i] < a[i - 1]:\n            return 'NO'\n    return 'YES'\n\n",
        "generated_testcode": "assert function(\"5 1 3 6 8 2 9 0 10\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4346,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        L,v,l,r=map(int,input().split())\n        if l%v==0 and r%v==0:\n            print(0)\n        elif l%v==0:\n            print(r//v)\n        elif r%v==0:\n            print(r//v)\n        else:\n            print(r//v+1)\n\n",
        "generated_testcode": "assert function(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4347,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n%2==0:\n        return int(n/2)\n    else:\n        return int(n/2)+1\n\n",
        "generated_testcode": "assert function(\"2\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4348,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    s=input()\n    for i in range(k):\n        for j in range(n):\n            if s[j]=='a':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='b':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='c':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='d':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='e':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='f':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='g':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='h':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='i':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='j':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='k':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='l':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='m':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='n':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='o':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='p':\n                s=s[:j]+s[j+1:]\n                break\n            elif s[j]=='q",
        "generated_testcode": "assert function(\"cccaabababaccbc\") == \"cccbbabaccbc\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4349,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m = map(int,input_string.split())\n    k = list(map(int,input().split()))\n    d = list(map(int,input().split()))\n    t = list(map(int,input().split()))\n    return n,m,k,d,t\n\n",
        "generated_testcode": "assert function(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4350,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    grid=[]\n    for i in range(n):\n        grid.append(input())\n    \n    #print(grid)\n    \n    #print(n,m)\n    \n    #print(grid[0][0])\n    \n    #print(grid[0][1])\n    \n    #print(grid[0][2])\n    \n    #print(grid[0][3])\n    \n    #print(grid[0][4])\n    \n    #print(grid[0][5])\n    \n    #print(grid[0][6])\n    \n    #print(grid[0][7])\n    \n    #print(grid[0][8])\n    \n    #print(grid[1][0])\n    \n    #print(grid[1][1])\n    \n    #print(grid[1][2])\n    \n    #print(grid[1][3])\n    \n    #print(grid[1][4])\n    \n    #print(grid[1][5])\n    \n    #print(grid[1][6])\n    \n    #print(grid[1][7])\n    \n    #print(grid[1][8])\n    \n    #print(grid[2][0])\n    \n    #print(grid[2][1])\n    \n    #print(grid[2][2])\n    \n    #print(grid[2][3])\n    \n    #print(grid[2][4])\n    \n    #print(grid[2][5])\n    \n    #print(grid[2][6])\n    \n    #print(grid[2][7])\n    \n    #print(grid[2][8])\n    \n    #print(grid[3][0])\n    \n    #print(grid[3][1])\n    \n    #print(grid[3][2])\n    \n    #print(grid[3][3])\n    \n    #print(grid[3][4])\n    \n    #print(grid[3][5])\n    \n    #print(grid[3][6])\n    \n    #print(grid[3][7])\n    \n    #print(grid[3][8])\n    \n    ",
        "generated_testcode": "assert function(\"....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4351,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string;print('NYoe s'[s==s[::-1]::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"575\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4352,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a,b=map(int, input_string.split())\n    if a>b:\n        return \"Alice\"\n    elif a<b:\n        return \"Bob\"\n    else:\n        return \"Draw\"\n\n",
        "generated_testcode": "assert function(\"8 6\") == \"Alice\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4353,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(*input_string.split(sep=\\\",\\\"))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4354,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    a=[]\n    b=[]\n    c=[]\n    d=[]\n    for i in range(n):\n        a.append(int(input()))\n        b.append(int(input()))\n    for i in range(m):\n        c.append(int(input()))\n        d.append(int(input()))\n    print(a,b)\n    print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(c,d)\n    \n    #print(a,b)\n    #print(",
        "generated_testcode": "assert function(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == [2, 1]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4355,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string);print(a+a*a+a**3)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2\") == 14\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4356,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M=map(int,input_string.split())\n    A=[]\n    B=[]\n    for i in range(N):\n        A.append(input())\n    for i in range(M):\n        B.append(input())\n    for i in range(N-M+1):\n        for j in range(N-M+1):\n            if A[i:i+M]==B:\n                return \"Yes\"\n    return \"No\"\n\n",
        "generated_testcode": "assert function(\"#.#\") == True\n",
        "difficulty": "introductory"
    },
    {
        "number": 4357,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=sorted(map(int,input_string.split()))\n    return a+b+c-min(a,b,c)\n\n",
        "generated_testcode": "assert function(\"1 5 2\") == 53\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4358,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    p=[]\n    for i in range(n):\n        p.append(int(input()))\n    p.sort()\n    p.reverse()\n    total=0\n    for i in range(n):\n        if i%2==0:\n            total+=p[i]\n        else:\n            total+=p[i]/2\n    print(int(total))\nfunction(input())\n",
        "generated_testcode": "assert function(\"3\\n4980\\n7980\\n6980\") == 15950\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4359,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a = [int(input_string) for i in range(5)]\n    a.sort()\n    print(a)\n    return a[0]\n\n",
        "generated_testcode": "assert function(\"29 20 7 35 120\") == 215\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4360,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    sum = 0\n    for i in range(n):\n        sum += 1/int(input_string[i])\n    return sum\n\n",
        "generated_testcode": "assert function(\"10 30\") == 7.5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4361,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    l=[]\n    for i in range(n):\n        l.append(int(input()))\n    l.sort()\n    return l[k-1]-l[0]\n\n",
        "generated_testcode": "assert function(\"5 3\\n10\\n15\\n11\\n14\\n12\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4362,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print([\\\"a\\\",\\\"A\\\"][65<=ord(input_string)<=90])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"B\") == \"A\"\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4363,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    K, S = map(int, input_string.split())\n    count = 0\n    for x in range(K+1):\n        for y in range(K+1):\n            for z in range(K+1):\n                if x+y+z == S:\n                    count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"2 2\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4364,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = input_string\n    if len(n) == 4:\n        if n[2] == '0' and n[3] == '0':\n            print('YYMM')\n        elif n[2] == '0' and n[3]!= '0':\n            print('MMYY')\n        elif n[2]!= '0' and n[3] == '0':\n            print('MMYY')\n        else:\n            print('AMBIGUOUS')\n    else:\n        print('NA')\n\n",
        "generated_testcode": "assert function(\"1905\") == \"YYMM\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4365,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    K=int(input_string)\n    count=0\n    for i in range(1,K+1):\n        if i%2==0:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"3\") == 2\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4366,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split());print((a+b)%24)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"9 12\") == 21\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4367,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,r=map(int,input_string.split())\n    if n>=10:\n        return r\n    else:\n        return r-100*(10-n)\n\n",
        "generated_testcode": "assert function(\"2 2919\") == 3719\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4368,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,K=map(int,input_string.split())\n    return len(str(N))\n\n",
        "generated_testcode": "assert function(\"11 2\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4369,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n==1:\n        print(1)\n    elif n==2:\n        print(2)\n    else:\n        print(n//2)\nfunction(input())\n",
        "generated_testcode": "assert function(\"5\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4370,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    if a+b<=16:\n        print(\"Yay!\")\n    else:\n        print(\":(\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"5 4\") == \"Yay!\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4371,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S = input_string\n    X = int(S[0] + S[1] + S[2] + S[3] + S[4] + S[5] + S[6] + S[7] + S[8] + S[9])\n    Y = 753\n    return abs(X - Y)\n\n",
        "generated_testcode": "assert function(\"1234567876\") == 34\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4372,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    i=0\n    j=n-1\n    while(i<j):\n        if(a[i]!=a[j]):\n            break\n        i+=1\n        j-=1\n    if(i==j):\n        return 1,a[i]\n    else:\n        return j+1,a[j]\n# End your code here\n\n",
        "generated_testcode": "assert function(\"3 12 6\") == 5, \"Test 1 Failed\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4373,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input_string.split()))\n    a.sort()\n    k=a[0]\n    for i in range(1,n):\n        if a[i]<k:\n            k=a[i]\n    return k\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"4 1 4 1\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4374,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = list(map(int, input_string.split()))\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, input().split())))\n    return n, m, edges\n\n",
        "generated_testcode": "assert function(\"4 2\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4375,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n - 1):\n        u, v = list(map(int, input().split()))\n        edges.append([u, v])\n    return n, k, a, edges\n\n",
        "generated_testcode": "assert function(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == 11\n",
        "difficulty": "introductory"
    },
    {
        "number": 4376,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    R = lambda: list(map(int, input_string.split()))\n    n, m = R()\n    a = R()\n    b = R()\n    a.sort()\n    b.sort()\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n    for i in range(m):\n        if b[i] in d:\n            print(d[b[i]], i + 1)\n        else:\n            print(n, i + 1)\n\n",
        "generated_testcode": "assert function(\"3 6\") == [[1, 1], [1, 9], [2, 2], [2, 13], [3, 1], [3, 12]]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4377,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    c, b, a, d = sorted(list(map(int, input_string.split())))\n    return a, b, c, a + b + c - d\n\n",
        "generated_testcode": "assert function(\"3 6 5 4\") == \"2 1 3\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4378,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    l=list(input_string)\n    l1=[]\n    l2=[]\n    for i in range(n):\n        if l[i]=='R':\n            l1.append(i)\n        elif l[i]=='G':\n            l2.append(i)\n    l3=[]\n    l4=[]\n    for i in range(len(l1)):\n        for j in range(len(l2)):\n            if abs(l1[i]-l2[j])==1:\n                l3.append(i)\n                l4.append(j)\n    l5=[]\n    for i in range(len(l3)):\n        l5.append(l1[l3[i]])\n        l5.append(l2[l4[i]])\n    l6=[]\n    for i in range(len(l5)):\n        if l5[i] not in l6:\n            l6.append(l5[i])\n    l7=[]\n    for i in range(len(l6)):\n        l7.append(l.count(l6[i]))\n    l8=[]\n    for i in range(len(l7)):\n        if l7[i]>1:\n            l8.append(l7[i])\n    l9=[]\n    for i in range(len(l8)):\n        l9.append(l8[i]//2)\n    l10=[]\n    for i in range(len(l9)):\n        l10.append(l9[i])\n    l11=[]\n    for i in range(len(l10)):\n        l11.append(l10[i])\n    l12=[]\n    for i in range(len(l11)):\n        l12.append(l11[i])\n    l13=[]\n    for i in range(len(l12)):\n        l13.append(l12[i])\n    l14=[]\n    for i in range(len(l13)):\n        l14.append(l13[i])\n    l15=[]",
        "generated_testcode": "assert function(\"BBBGBRRR\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4379,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    arr = list(map(int, input().split()))\n    arr.sort()\n    i = 0\n    j = N - 1\n    while i < j:\n        if arr[i] + 1!= arr[j]:\n            return j - i\n        i += 1\n        j -= 1\n    return 0\n\n",
        "generated_testcode": "assert function(\"3 3 4 7 5 6\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4380,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=input_string\n    a=int(n[0])\n    b=int(n[1])\n    if a*b%2==1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n",
        "generated_testcode": "assert function(\"3 1\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4381,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x,y=map(int,input_string.split())\n    if x%2==0:\n        print(x//2*y)\n    else:\n        print(x//2*y+y)\nfunction(input())\n",
        "generated_testcode": "assert function(\"81 58\") == 110\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4382,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    return n*(n+1)/2\n\n",
        "generated_testcode": "assert function(\"2\") == 8\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4383,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=input_string\n    if N==5:\n        print(\"YES\")\n    elif N==6:\n        print(\"YES\")\n    elif N==7:\n        print(\"YES\")\n    elif N==8:\n        print(\"YES\")\n    elif N==9:\n        print(\"YES\")\n    elif N==10:\n        print(\"YES\")\n    elif N==11:\n        print(\"YES\")\n    elif N==12:\n        print(\"YES\")\n    elif N==13:\n        print(\"YES\")\n    elif N==14:\n        print(\"YES\")\n    elif N==15:\n        print(\"YES\")\n    elif N==16:\n        print(\"YES\")\n    elif N==17:\n        print(\"YES\")\n    elif N==18:\n        print(\"YES\")\n    elif N==19:\n        print(\"YES\")\n    elif N==20:\n        print(\"YES\")\n    elif N==21:\n        print(\"YES\")\n    elif N==22:\n        print(\"YES\")\n    elif N==23:\n        print(\"YES\")\n    elif N==24:\n        print(\"YES\")\n    elif N==25:\n        print(\"YES\")\n    elif N==26:\n        print(\"YES\")\n    elif N==27:\n        print(\"YES\")\n    elif N==28:\n        print(\"YES\")\n    elif N==29:\n        print(\"YES\")\n    elif N==30:\n        print(\"YES\")\n    elif N==31:\n        print(\"YES\")\n    elif N==32:\n        print(\"YES\")\n    elif N==33:\n        print(\"YES\")\n    elif N==34:\n        print(\"YES\")\n    elif N==35:\n        print(\"YES\")\n    elif N==36:\n        print(\"YES\")\n    elif N==37:\n        print(\"YES\")\n    elif N==38:\n        print(\"YES\")\n    elif N==39:\n        print(\"YES\")\n    elif N==40:\n        print(\"YES\")\n    elif N==41:\n        print",
        "generated_testcode": "assert function(\"5\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4384,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    if int(input_string)<1000:a='ABC'\n    elif int(input_string)<2000:a='ABD'\n    elif int(input_string)<3000:a='ABC'\n    elif int(input_string)<4000:a='ABD'\n    elif int(input_string)<5000:a='ABC'\n    elif int(input_string)<6000:a='ABD'\n    elif int(input_string)<7000:a='ABC'\n    elif int(input_string)<8000:a='ABD'\n    elif int(input_string)<9000:a='ABC'\n    elif int(input_string)<10000:a='ABD'\n    elif int(input_string)<11000:a='ABC'\n    elif int(input_string)<12000:a='ABD'\n    elif int(input_string)<13000:a='ABC'\n    elif int(input_string)<14000:a='ABD'\n    elif int(input_string)<15000:a='ABC'\n    elif int(input_string)<16000:a='ABD'\n    elif int(input_string)<17000:a='ABC'\n    elif int(input_string)<18000:a='ABD'\n    elif int(input_string)<19000:a='ABC'\n    elif int(input_string)<20000:a='ABD'\n    elif int(input_string)<21000:a='ABC'\n    elif int(input_string)<22000:a='ABD'\n    elif int(input_string)<23000:a='ABC'\n    elif int(input_string)<24000:a='ABD'\n    elif int(input_string)<25000:a='ABC'\n    elif int(input_string)<26000:a='ABD'\n    elif int(input_string)<27000:a='ABC'\n    elif int(input_string)<28000:a='ABD'\n    elif int(input_string)<29000:a='ABC'\n    el",
        "generated_testcode": "assert function(\"ABC\") == \"ABC\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4385,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x=[int(input_string) for _ in range(6)]\n    for i in range(5):\n        for j in range(i+1,6):\n            if x[i]>x[j]:\n                if x[i]-x[j]>=15:\n                    print(\"Yay!\")\n                    return\n    print(\" :(\")\n    return\n\n",
        "generated_testcode": "assert function(\"1 2 4 8 9 15\") == \"Yay!\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4386,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string);print(['red',input_string][a>=3200])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"pink\") == \"pink\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4387,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    R=int(input_string)\n    if R<1200:\n        print(\"ABC\")\n    elif R<2800:\n        print(\"ARC\")\n    else:\n        print(\"AGC\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"1200\") == \"ABC\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4388,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    n = str(n)\n    n = n.replace('1', '9')\n    n = n.replace('9', '1')\n    return n\n\n",
        "generated_testcode": "assert function(\"123\") == \"321\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4389,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string\n    l=len(s)\n    if l<=1:\n        return s\n    else:\n        return s[0]+function(s[1:])\n\n",
        "generated_testcode": "assert function(\"abbaac\") == \"abac\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4390,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        a,b=map(int,input().split())\n        if a%b==0:\n            print(0)\n        else:\n            print(a//b+1)\nfunction(input())\n",
        "generated_testcode": "assert function(\"10 4\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4391,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    a = list(map(int, input().split()))\n    res = 0\n    for i in range(n):\n        for j in range(i, n):\n            if j - i + 1 >= k:\n                res = max(res, sum(a[i:j+1]) / (j - i + 1))\n    return res\n\n",
        "generated_testcode": "assert function(\"4 3\") == 2.666666666666667\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4392,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = map(int, input_string.split())\n    a = list(map(int, input_string.split()))\n    p = list(map(int, input_string.split()))\n    for i in range(m):\n        if p[i] >= n:\n            return \"NO\"\n    for i in range(m):\n        if p[i] + 1 in p:\n            return \"NO\"\n    for i in range(m):\n        a[p[i]], a[p[i] + 1] = a[p[i] + 1], a[p[i]]\n    return \"YES\"\n\n",
        "generated_testcode": "assert function(\"3 2\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4393,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    s=''\n    for i in range(n):\n        s+=str(i+1)\n    return s\n\n",
        "generated_testcode": "assert function(\"baabbb\") == \"bab\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4394,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m = map(int,input_string.split())\n    edges = []\n    for i in range(m):\n        u,v,w = map(int,input().split())\n        edges.append((u,v,w))\n    edges.sort(key=lambda x:x[2])\n    \n    #print(edges)\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[0][0])\n    \n    #print(edges[0][1])\n    \n    #print(edges[0][2])\n    \n    #print(edges[",
        "generated_testcode": "assert function(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4395,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    l=list(input_string)\n    l1=[]\n    for i in range(n):\n        if l[i]=='R':\n            l1.append(1)\n        elif l[i]=='G':\n            l1.append(2)\n        elif l[i]=='B':\n            l1.append(3)\n    l2=[]\n    for i in range(n):\n        for j in range(i+1,n):\n            if abs(l1[i]-l1[j])%3==0:\n                l2.append(abs(l1[i]-l1[j]))\n    return min(l2)\n\n",
        "generated_testcode": "assert function(\"RGBGRBB\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4396,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    x=[]\n    u=[]\n    for i in range(n):\n        x.append(input())\n        u.append(input())\n    if u[0]=='JPY':\n        x[0]=int(x[0])\n    else:\n        x[0]=float(x[0])\n    if u[1]=='JPY':\n        x[1]=int(x[1])\n    else:\n        x[1]=float(x[1])\n    sum=0\n    for i in range(n):\n        if u[i]=='JPY':\n            sum+=x[i]*380000\n        else:\n            sum+=x[i]*0.38\n    return sum\n\n",
        "generated_testcode": "assert function(\"10000 JPY\") == 48000.0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4397,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,i=map(int,input_string.split())\n    return n-i+1\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"4 2\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4398,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;print(*(map(''.join,zip(*input_string.split()))),sep='')\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"ip cc\") == \"icpc\"\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4399,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print('YNeos'[len(set(input_string))==1::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"ABA\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4400,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S=input_string;print(max(n*(n*\\\"R\\\"in S)for n in[1,2,3]))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"RRR\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4401,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=input_string.split();print(n[2],*n[:2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1 2 3\") == \"3 1 2\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4402,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a, b = map(int, input_string.split())\n    if a >= 13:\n        if b >= 6 and b <= 12:\n            print(b // 2)\n        else:\n            print(b)\n    else:\n        print(0)\n\n",
        "generated_testcode": "assert function(\"30 100\") == 100\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4403,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=input_string.count('+')\n    b=input_string.count('-')\n    return a-b\n\n",
        "generated_testcode": "assert function(\"+-\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4404,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print('Heisei' if int(input_string[5:7]) <= 4 else 'TBD')\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2019/04/30\") == \"Heisei\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4405,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"18\") == 14\n",
        "difficulty": "introductory"
    },
    {
        "number": 4406,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k = map(int,input_string.split())\n    l = list(map(int,input().split()))\n    l.sort()\n    l = l[::-1]\n    l = l[:k]\n    print(len(l))\n    print(*l)\nfunction(input())\n",
        "generated_testcode": "assert function(\"7 2\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4407,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, q = map(int,input_string.split())\n    a = list(map(int,input_string.split()))\n    b = list(map(int,input_string.split()))\n    ans = []\n    for i in range(q):\n        ans.append(min(a))\n        a.remove(min(a))\n    return ans\n\n",
        "generated_testcode": "assert function(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == [1, -1, 3, 2]\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4408,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    cards = list(map(int, input_string.split()))\n    fav_nums = list(map(int, input_string.split()))\n    h = list(map(int, input_string.split()))\n    \n    return 0\n\n",
        "generated_testcode": "assert function(\"4 3\") == 21\n",
        "difficulty": "introductory"
    },
    {
        "number": 4409,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    count = 0\n    while True:\n        if len(set(a)) == 1:\n            break\n        else:\n            for i in range(n):\n                if i == 0:\n                    if a[i] > a[i+1]:\n                        a[i] -= a[i+1]\n                        a[i+1] = a[i] + a[i+1]\n                        count += 1\n                elif i == n-1:\n                    if a[i] > a[i-1]:\n                        a[i] -= a[i-1]\n                        a[i-1] = a[i] + a[i-1]\n                        count += 1\n                else:\n                    if a[i] > a[i-1] and a[i] > a[i+1]:\n                        a[i] -= a[i-1]\n                        a[i-1] = a[i] + a[i-1]\n                        count += 1\n                    elif a[i] > a[i-1] and a[i] < a[i+1]:\n                        a[i] -= a[i+1]\n                        a[i+1] = a[i] + a[i+1]\n                        count += 1\n                    elif a[i] < a[i-1] and a[i] > a[i+1]:\n                        a[i] -= a[i-1]\n                        a[i-1] = a[i] + a[i-1]\n                        count += 1\n                    elif a[i] < a[i-1] and a[i] < a[i+1]:\n                        a[i] += a[i+1]\n                        a[i+1] = a[i] + a[i+1]\n                        count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"2 4 6 6 6\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4410,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \\tn,k = map(int,input_string.split())\n    \\tinput_string = input_string.split()\n    \\tinput_string = list(map(int,input_string))\n    \\tmax_free_tables = 0\n    \\tfor i in range(n):\n        \\tif input_string[i] == 0:\n            \\tmax_free_tables += 1\n        \\telse:\n            \\tbreak\n    \\tfor i in range(n):\n        \\tfor j in range(i+1,n):\n            \\td = abs(input_string[i] - input_string[j])\n            \\tif d <= k:\n                \\tmax_free_tables -= 1\n                \\tbreak\n    \\treturn max_free_tables\n\n",
        "generated_testcode": "assert function(\"100010\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4411,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N, K = [int(x) for x in input_string.split()]\n    segments = []\n    for i in range(N):\n        l, r = [int(x) for x in input().split()]\n        segments.append([l, r])\n    segments.sort(key=lambda x: x[0])\n    bad_points = []\n    for i in range(N):\n        if i == 0:\n            bad_points.append(segments[i][1])\n        else:\n            bad_points.append(segments[i][1] - segments[i - 1][1])\n    bad_points.sort()\n    bad_points = bad_points[K:]\n    bad_points = [x for x in bad_points if x > 0]\n    if len(bad_points) == 0:\n        return 0\n    else:\n        return len(bad_points)\n\n",
        "generated_testcode": "assert function(\"7 2\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4412,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    A = list(map(int, input().split()))\n    A.sort()\n    A.reverse()\n    A = A[:3]\n    A.sort()\n    A.reverse()\n    return sum(A)\n\n",
        "generated_testcode": "assert function(\"4\") == 10\n",
        "difficulty": "introductory"
    },
    {
        "number": 4413,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \\tn=int(input_string)\n    \\ta=list(map(int,input_string.split()))\n    \\tq=int(input())\n    \\tfor i in range(q):\n        \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\",
        "generated_testcode": "assert function(\"4\\n2\\n10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4414,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n % 2 == 0:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n",
        "generated_testcode": "assert function(\"1 2 3 4\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4415,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input_string.split()))\n    a.sort()\n    i = 0\n    d = 0\n    while i < n:\n        if a[i] < a[i+1]:\n            i += 1\n            d += 1\n        else:\n            break\n    while i < n:\n        if a[i] > a[i+1]:\n            i += 1\n            d += 1\n        else:\n            break\n    if d == 0:\n        print(\"NO\")\n        return\n    if d % 2 == 0:\n        print(\"YES\")\n        print(d//2)\n        print(*a[:d//2])\n        print(*a[d//2:])\n    else:\n        print(\"YES\")\n        print(d//2)\n        print(*a[:d//2+1])\n        print(*a[d//2+1:])\n\n",
        "generated_testcode": "assert function(\"7 2 7 3 3 1 4\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4416,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=list(map(int,input_string.split(\\\" \\\")))\n    books=[]\n    for i in range(n):\n        books.append(list(map(int,input().split(\\\" \\\"))))\n    books.sort(key=lambda x:x[0])\n    books.sort(key=lambda x:x[1])\n    books.sort(key=lambda x:x[2])\n    books.sort(key=lambda x:x[0]-x[1])\n    books.sort(key=lambda x:x[0]-x[2])\n    books.sort(key=lambda x:x[1]-x[2])\n    books.sort(key=lambda x:x[0]-x[1]-x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]-x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]-x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:x[0]+x[1]+x[2])\n    books.sort(key=lambda x:",
        "generated_testcode": "assert function(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == 18\n",
        "difficulty": "introductory"
    },
    {
        "number": 4417,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    k=int(input_string[1])\n    a=list(map(int,input_string[2].split()))\n    a.sort()\n    b=[]\n    for i in range(n):\n        b.append(a[i]+k)\n    b.sort()\n    if b[0]>1:\n        return b[0]-1\n    else:\n        return -1\n# End your code here\n\n",
        "generated_testcode": "assert function(\"5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == [2, 6, -1, 7]\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4418,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    for i in range(n):\n        if a[i] == 4 or a[i] == 8 or a[i] == 15 or a[i] == 16 or a[i] == 23 or a[i] == 42:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"4 8 15 16 23\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4419,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    if a>b:\n        return 0\n    else:\n        return b-a\n\n",
        "generated_testcode": "assert function(\"5 5\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4420,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x,y,n=map(int,input_string.split())\n    k=0\n    while k<=n:\n        if k%x==y:\n            return k\n        k+=1\n    return k\n\n",
        "generated_testcode": "assert function(\"7 5 12345\") == 12339\n",
        "difficulty": "introductory"
    },
    {
        "number": 4421,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    d=list(map(int,input().split()))\n    d.sort()\n    count=0\n    for i in range(n):\n        if d[i]%k==0:\n            count+=1\n    return count\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"7 2\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4422,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    s=input()\n    print(s[:k-1]+s[k-1].lower()+s[k:])\nfunction(input())\n",
        "generated_testcode": "assert function(\"ABC\") == \"aBC\"\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4423,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(*[_[0] for _ in sorted([[i+1] + input_string.split() for i in range(int(input_string))], key=lambda x:(x[1], -int(x[2])))], sep='\\\n    ')\n\n",
        "generated_testcode": "assert function(\"khabarovsk 20\") == [3, 4, 6, 1, 5, 2]\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4424,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=input_string.split();print('YNeos'[eval(a+'*500<'+b)::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2 900\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4425,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    return 1-((1/2)**(n-1))*((1/2)**(k-1))\n\n",
        "generated_testcode": "assert function(\"3 10\") == 0.145833333333\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4426,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S = input_string\n    if S == \"SUN\":\n        return 0\n    elif S == \"MON\":\n        return 1\n    elif S == \"TUE\":\n        return 2\n    elif S == \"WED\":\n        return 3\n    elif S == \"THU\":\n        return 4\n    elif S == \"FRI\":\n        return 5\n    elif S == \"SAT\":\n        return 6\n    else:\n        return -1\n\n",
        "generated_testcode": "assert function(\"SAT\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4427,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    r,d,x=map(int, input_string.split())\n    x1=x\n    for i in range(2000,2011):\n        x1=r*x1-d\n        print(x1)\nfunction(input())\n",
        "generated_testcode": "assert function(\"2 10 20\") == 30\n",
        "difficulty": "introductory"
    },
    {
        "number": 4428,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    d = list(map(int, input().split()))\n    d.sort()\n    sum1 = 0\n    sum2 = 0\n    sum3 = 0\n    for i in range(n):\n        if i < n // 3:\n            sum1 += d[i]\n        elif i < 2 * n // 3:\n            sum2 += d[i]\n        else:\n            sum3 += d[i]\n    return sum1 - sum3\n\n",
        "generated_testcode": "assert function(\"1 3 1 1 4\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4429,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    l = list(map(int,input_string.split()))\n    x = l[0]\n    y = l[1]\n    z = l[2]\n    if x == y or x == z or y == z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        if x > y:\n            if x > z:\n                print(x, y, z)\n            else:\n                print(x, z, y)\n        else:\n            if y > z:\n                print(y, x, z)\n            else:\n                print(y, z, x)\n\n",
        "generated_testcode": "assert function(\"3 2 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4430,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m,k=list(map(int,input_string.split()))\n    a=list(map(int,input().split()))\n    a.sort()\n    count=0\n    for i in range(n):\n        if a[i]>=k:\n            count+=1\n        else:\n            break\n    return count\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"5 2 6\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4431,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    s=input()\n    c=input()\n    count=0\n    for i in range(n):\n        for j in range(i+1,n+1):\n            if s[i:j] in c:\n                count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"abacaba\") == 12\n",
        "difficulty": "introductory"
    },
    {
        "number": 4432,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \\tn=int(input_string)\n    \\ta=list(map(int,input_string.split()))\n    \\tmax_sum=0\n    \\tmax_sum_list=[]\n    \\tfor i in range(0,len(a)):\n        \\tfor j in range(i+1,len(a)):\n            \\t\\tif a[i]*a[j]>0:\n                \\t\\t\\tmax_sum=max(max_sum,abs(a[i])+abs(a[j]))\n                \\t\\t\\tmax_sum_list.append(max_sum)\n    \\treturn max(max_sum_list)\n\n",
        "generated_testcode": "assert function(\"1 2 3 -1 -2\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4433,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = map(int, input_string.split())\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, input().split())))\n    edges.sort(key=lambda x: x[2])\n    print(edges)\n    return n, m, edges\n\n",
        "generated_testcode": "assert function(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4434,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        n=int(input())\n        if n%2==0:\n            print(0)\n        else:\n            print(n*n-1)\nfunction(input())\n",
        "generated_testcode": "assert function(\"1\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4435,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input_string.split()))\n    d = [0] * n\n    for i in range(n):\n        if i + a[i] < n:\n            d[i + a[i]] = min(d[i + a[i]], d[i] + 1)\n        if i - a[i] >= 0:\n            d[i - a[i]] = min(d[i - a[i]], d[i] + 1)\n    for i in range(n):\n        if d[i] == 0:\n            d[i] = -1\n    return d\n\n",
        "generated_testcode": "assert function(\"10\") == \"1 1 1 2 -1 1 1 3 1 1\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4436,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(\"YES\")\n            print(n//2, n//2, n//2)\n        else:\n            print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"64\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4437,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    s=input()\n    count=0\n    for i in range(1,n+1):\n        if(len(s)%i==0):\n            count+=1\n    if(count==1):\n        print(0)\n        print(s)\n    else:\n        for i in range(1,n+1):\n            if(len(s)%i==0):\n                if(s[:i].count('a')==s[:i].count('b')):\n                    print(i)\n                    print(s[:i])\n                    break\n                else:\n                    count+=1\n        if(count==1):\n            print(0)\n            print(s)\n        else:\n            print(count)\n            print(s)\nfunction(input())\n",
        "generated_testcode": "assert function(\"abba\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4438,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    arr = []\n    for i in range(n):\n        x, y = input().split()\n        arr.append([int(x), int(y)])\n    arr.sort()\n    print(arr)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
        "generated_testcode": "assert function(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == 15\n",
        "difficulty": "introductory"
    },
    {
        "number": 4439,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string)\n    if a==1:\n        print(2)\n    elif a==2:\n        print(1)\n    elif a==3:\n        print(3)\n    else:\n        print(a)\nfunction(input())\n",
        "generated_testcode": "assert function(\"3 1\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4440,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    l=int(input_string)\n    a=l//2\n    b=l//2\n    c=l//2\n    if l%2==0:\n        a=a+1\n        b=b+1\n        c=c+1\n    return a,b,c\n\n",
        "generated_testcode": "assert function(\"3\") == 1.0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4441,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print('Hello World' if input_string == '1' else int(input_string) + int(input_string))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1\") == \"Hello World\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4442,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=sorted(input_string.split());print(a*int(b))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"4 3\") == \"3333\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4443,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string\n    if s=='a':\n        print('b')\n    elif s=='b':\n        print('c')\n    elif s=='c':\n        print('d')\n    elif s=='d':\n        print('e')\n    elif s=='e':\n        print('f')\n    elif s=='f':\n        print('g')\n    elif s=='g':\n        print('h')\n    elif s=='h':\n        print('i')\n    elif s=='i':\n        print('j')\n    elif s=='j':\n        print('k')\n    elif s=='k':\n        print('l')\n    elif s=='l':\n        print('m')\n    elif s=='m':\n        print('n')\n    elif s=='n':\n        print('o')\n    elif s=='o':\n        print('p')\n    elif s=='p':\n        print('q')\n    elif s=='q':\n        print('r')\n    elif s=='r':\n        print('s')\n    elif s=='s':\n        print('t')\n    elif s=='t':\n        print('u')\n    elif s=='u':\n        print('v')\n    elif s=='v':\n        print('w')\n    elif s=='w':\n        print('x')\n    elif s=='x':\n        print('y')\n    elif s=='y':\n        print('z')\n    elif s=='z':\n        print('a')\n    else:\n        print('Invalid Input')\nfunction(input())\n",
        "generated_testcode": "assert function(\"a\") == \"b\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4444,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=input_string.split()\n    return a+b\n\n",
        "generated_testcode": "assert function(\"oder\", \"atc\") == \"atcoder\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4445,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    sum=0\n    for i in range(n):\n        if a[i]%2==0:\n            sum+=a[i]\n    return sum\n\n",
        "generated_testcode": "assert function(\"5 1 2 4 6 3\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4446,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, a, b, k = list(map(int, input_string.split()))\n    h = list(map(int, input().split()))\n    return n, a, b, k, h\n\n",
        "generated_testcode": "assert function(\"6 2 3 3\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4447,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = map(int, input_string.split())\n    a = list(map(int, input().split()))\n    c = [0] * m\n    for i in range(n):\n        c[a[i] % m] += 1\n    print(m - c.index(max(c)))\n    print(*[i + 1 for i in range(m) if c[i] == max(c)])\n\n",
        "generated_testcode": "assert function(\"6 3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4448,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m = map(int,input_string.split())\n    k = list(map(int,input().split()))\n    d = list(map(int,input().split()))\n    t = list(map(int,input().split()))\n    k.sort()\n    d.sort()\n    t.sort()\n    return k,d,t\n\n",
        "generated_testcode": "assert function(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4449,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    Q = int(input_string)\n    for i in range(Q):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if n == 1:\n            if a[0] == a[1]:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if a[0] == a[1] and a[1] == a[2] and a[2] == a[3]:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"1 1 10 10\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4450,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m,k=list(map(int,input_string.split()))\n    matrix=[[0 for i in range(n)] for j in range(n)]\n    for i in range(m):\n        x,y,w=list(map(int,input().split()))\n        matrix[x-1][y-1]=w\n        matrix[y-1][x-1]=w\n    for i in range(n):\n        matrix[i][i]=0\n    for k in range(n):\n        for i in range(n):\n            for j in range(n):\n                if matrix[i][j]>matrix[i][k]+matrix[k][j]:\n                    matrix[i][j]=matrix[i][k]+matrix[k][j]\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j]>matrix[i][k]+matrix[k][j]:\n                matrix[i][j]=matrix[i][k]+matrix[k][j]\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j]>matrix[i][k]+matrix[k][j]:\n                matrix[i][j]=matrix[i][k]+matrix[k][j]\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j]>matrix[i][k]+matrix[k][j]:\n                matrix[i][j]=matrix[i][k]+matrix[k][j]\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j]>matrix[i][k]+matrix[k][j]:\n                matrix[i][j]=matrix[i][k]+matrix[k][j]\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j]>matrix[i][k]+matrix[k][j]:\n                matrix[i][j]=matrix[i][k]+matrix[k][j]\n    for i in range(n):\n        for j in range(n):\n",
        "generated_testcode": "assert function(\"6 10 5\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4451,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    d=0\n    for i in range(n):\n        d+=a[i]-a[i-1]\n    print(d,n//3)\n    print(*[i+1 for i in range(n)])\nfunction(input())\n",
        "generated_testcode": "assert function(\"5\\n1 1 3 4 2\") == 3, \"Test 1 failed\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4452,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = input_string\n    sum = 0\n    for i in range(len(n)):\n        if n[i]!= '0':\n            sum += int(n[i])\n    return sum\n\n",
        "generated_testcode": "assert function(\"5009\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4453,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    Q = int(input_string)\n    for i in range(Q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        p.sort()\n        d = {}\n        for i in range(n):\n            if p[i] not in d:\n                d[p[i]] = 1\n            else:\n                d[p[i]] += 1\n        ans = []\n        for i in range(n):\n            ans.append(d[i+1])\n        print(*ans)\nfunction(input())\n",
        "generated_testcode": "assert function(\"5\") == [1, 1, 1, 1, 1]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4454,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    sum_a = sum(a)\n    for i in range(n):\n        sum_a -= a[i]\n        if sum_a < a[i]:\n            return a[i]\n    return sum_a\n\n",
        "generated_testcode": "assert function(\"5\\n3\\n1 2 3 4 5\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4455,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    r = list(map(int, input().split()))\n    r.sort()\n    count = 0\n    for i in range(k):\n        x, y = map(int, input().split())\n        if r[x - 1] > r[y - 1]:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"4 2\") == [0, 0, 1, 2]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4456,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = list(map(int, input_string.split()))\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    s = ''\n    for i in range(n):\n        s += chr(ord('a') + p[i] - 1)\n        s += chr(ord('a') + q[i] - 1)\n    return s\n\n",
        "generated_testcode": "assert function(\"abb\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4457,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    count = 0\n    for i in range(n):\n        count += a[i] * i + 1\n    return count\n\n",
        "generated_testcode": "assert function(\"3\") == 43\n",
        "difficulty": "introductory"
    },
    {
        "number": 4458,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);a=[*map(int,input_string.split())];count,m=0,n+1\n    for i in range(n):\n        for j in range(i+1,m):\n            if a[i]>a[j]:count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"5\\n4 2 5 1 3\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4459,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;a=Counter(map(int,input_string.split()))\n    return sum(a[i] - i for i in a)\n\n",
        "generated_testcode": "assert function(\"3 3 3 3\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4460,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a = input_string.split()\n    for i in range(len(a)):\n        a[i] = int(a[i])\n    return a\n\n",
        "generated_testcode": "assert function(\"0 2 3 4 5\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4461,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    H,W = map(int,input_string.split())\n    return H*W\n\n",
        "generated_testcode": "assert function(\"3 5\") == 0\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4462,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;a,b,c,d,r=list(map(int,input_string.split())),0,0,0,'NYoe s'\n    for i in range(len(a)):\n        if i==0:\n            r=r+a[i]\n        elif i==len(a)-1:\n            r=r+a[i]\n        else:\n            r=r+a[i]*a[i+1]\n    if r%4==0:\n        return 'Yes'\n    else:\n        return 'No'\n\n",
        "generated_testcode": "assert function(\"3\\n1 10 100\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4463,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=sorted(input_string)\n    t=sorted(input_string)\n    if len(s)<len(t):\n        return \"No\"\n    else:\n        for i in range(len(s)):\n            if s[i]==t[i]:\n                continue\n            else:\n                if s[i]<t[i]:\n                    return \"Yes\"\n                else:\n                    return \"No\"\n\n",
        "generated_testcode": "assert function(\"yx\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4464,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split())\n    if c%b==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"7 5 1\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4465,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    return a*b\n\n",
        "generated_testcode": "assert function(\"2 2\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4466,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split());print((a-c)//(b+c))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"13 3 1\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4467,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    red_points=[]\n    blue_points=[]\n    for i in range(n):\n        red_points.append(list(map(int,input().split())))\n    for i in range(n):\n        blue_points.append(list(map(int,input().split())))\n    red_points.sort()\n    blue_points.sort()\n    count=0\n    for i in range(n):\n        if red_points[i][0]<blue_points[i][0] and red_points[i][1]<blue_points[i][1]:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4468,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,t=map(int,input_string.split());a=list(map(int,input_string.split()))\n    a.sort()\n    b=[]\n    for i in range(n):\n        if i==0:\n            b.append(a[i])\n        else:\n            b.append(a[i]-a[i-1])\n    b.sort()\n    return sum(b[:t])\n\n",
        "generated_testcode": "assert function(\"2 4\") == 7\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4469,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    l=[]\n    for i in range(n):\n        if i==0:\n            l.append(1)\n        else:\n            l.append(l[i-1]+1)\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:\n            l[i]=l[i-1]+1\n    for i in range(n):\n        if i==0:\n            l[i]=1\n        else:",
        "generated_testcode": "assert function(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == [1, 1, 2]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4470,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    q = int(input_string)\n    for i in range(q):\n        n = int(input())\n        if n == 1:\n            print(0)\n        elif n % 2 == 0:\n            print(n // 2)\n        elif n % 3 == 0:\n            print(2 * n // 3)\n        elif n % 5 == 0:\n            print(4 * n // 5)\n        else:\n            print(-1)\n\n",
        "generated_testcode": "assert function(\"1\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4471,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    T = int(input_string)\n    for i in range(T):\n        n = int(input())\n        a = list(map(int, input().split()))\n        for j in range(n):\n            if a[j] > 0:\n                a[j] = a[j] - 1\n                if a[j] == 0:\n                    a[j] = 100\n        if a[0] == 0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4472,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=input()\n    b=input()\n    count=0\n    for i in range(n):\n        if a[i]!=b[i]:\n            count+=1\n            a=a[:i]+b[i]+a[i+1:]\n            b=b[:i]+a[i]+b[i+1:]\n    return count\n# End your code here\n\n",
        "generated_testcode": "assert function(\"abacaba\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4473,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        a, b, k = input().split()\n        a = int(a)\n        b = int(b)\n        k = int(k)\n        if k % 2 == 0:\n            print(a * k + b * (k // 2))\n        else:\n            print(a * (k // 2) + b * (k // 2 + 1))\n\n",
        "generated_testcode": "assert function(\"5 2 3\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4474,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    t = int(input_string)\n    if t == 1:\n        return 1\n    elif t == 2:\n        return 3\n    else:\n        return 9\n\n",
        "generated_testcode": "assert function(\"1\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4475,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        a,b,x,y,n=map(int,input().split())\n        if a>=x:\n            a=x\n        if b>=y:\n            b=y\n        if n==1:\n            print(a*b)\n        else:\n            if a>=b:\n                a=a-b\n                b=b-b\n                n=n-1\n                print(a*b)\n            else:\n                b=b-a\n                a=a-a\n                n=n-1\n                print(a*b)\n\n",
        "generated_testcode": "assert function(\"10 10 8 5 3\") == 70\n",
        "difficulty": "introductory"
    },
    {
        "number": 4476,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        a, b = input().split()\n        a = int(a)\n        b = int(b)\n        if a > b:\n            print(0)\n        else:\n            if a % 2 == 0:\n                print(b - a)\n            else:\n                print(b - a + 1)\n\n",
        "generated_testcode": "assert function(\"2 3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4477,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(1,10):\n        print(i)\nfunction(input())\n",
        "generated_testcode": "assert function(\"22\") == 13\n",
        "difficulty": "introductory"
    },
    {
        "number": 4478,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    k=int(input_string)\n    for i in range(k):\n        n=int(input())\n        a=list(map(int,input().split()))\n        for j in range(k):\n            if i!=j:\n                m=int(input())\n                b=list(map(int,input().split()))\n                if sum(a)==sum(b):\n                    print(\"YES\")\n                    print(i+1,m)\n                    print(j+1,n)\n                    return\n    print(\"NO\")\n    return\nfunction(input())\n",
        "generated_testcode": "assert function(\"2 2 2 2 2\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4479,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n    A.sort()\n    if K % 2 == 0:\n        return sum(A) - 2 * K * min(A)\n    else:\n        return sum(A) - 2 * K * min(A) - 2 * min(A)\n",
        "generated_testcode": "assert largestSumAfterKNegations(\"\", [4,2,3], 1) == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4480,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def canThreePartsEqualSum(self, A: List[int]) -> bool:\n    \n    s = sum(A)\n    if s % 3!= 0:\n        return False\n    \n    target = s // 3\n    \n    cur = 0\n    \n    for a in A:\n        cur += a\n        if cur == target:\n            cur = 0\n    \n    if cur == 0:\n        return True\n    else:\n        return False\n",
        "generated_testcode": "assert canThreePartsEqualSum(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == True\n",
        "difficulty": "introductory"
    },
    {
        "number": 4481,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    for _ in range(int(input_string)):s=input_string;d[s]=d.get(s,0)+1\n    return d\n\n",
        "generated_testcode": "assert function(\"beat\") == \"beet\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4482,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = float(input_string)\n    return n\n\n",
        "generated_testcode": "assert function(\"2 4 8\") == 8\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4483,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x=int(input_string)\n    a=int(input())\n    b=int(input())\n    if a+b<=x:\n        print(x-a-b)\n    else:\n        print(x-a)\nfunction(input())\n",
        "generated_testcode": "assert function(\"1234 150 100\") == \"84\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4484,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split());r=10**9+7\n    if n==1:\n        return 1\n    elif n==2:\n        return 2\n    else:\n        return (2*function(input_string[:-1])-function(input_string[:-2]))%r\n\n",
        "generated_testcode": "assert function(\"2 2\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4485,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,M = map(int,input_string.split())\n    islands = []\n    for i in range(M):\n        islands.append(list(map(int,input().split())))\n    islands.sort()\n    islands.append([1,N])\n    islands.sort()\n    i = 0\n    j = 1\n    while j < len(islands):\n        if islands[i][1] > islands[j][0]:\n            return \"POSSIBLE\"\n        i += 1\n        j += 1\n    return \"IMPOSSIBLE\"\n\n",
        "generated_testcode": "assert function(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4486,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = input_string\n    s = s[1::2]\n    return s\n\n",
        "generated_testcode": "assert function(\"atcoder\") == \"acdr\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4487,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B,C = input_string.split()\n    if A[-1] == B[0] and B[-1] == C[0]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"rng gorilla apple\") == \"YES\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4488,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=int(input_string),int(input_string);print(['ELQEUSASL'[a<b::2],'GREATER'][a>b])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"36\") == \"GREATER\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4489,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=[input_string for _ in range(int(input_string))]\n    t=[input_string for _ in range(int(input_string))]\n    return s,t\n\n",
        "generated_testcode": "assert function(\"apple\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4490,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    b = input_string\n    if b == 'A':\n        print('T')\n    elif b == 'C':\n        print('G')\n    elif b == 'G':\n        print('C')\n    elif b == 'T':\n        print('A')\n    else:\n        print('Invalid Input')\n\n",
        "generated_testcode": "assert function(\"A\") == \"T\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4491,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    return a\n\n",
        "generated_testcode": "assert function(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == 14\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4492,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    f=lambda:map(int,input_string.split())\n    n,x=f()\n    a=list(f())\n    a.sort()\n    count=0\n    for i in range(n):\n        if a[i]>=x:\n            break\n        else:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"3 3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4493,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    L = [list(map(int, input_string.split())) for _ in range(3)]\n    for i in range(3):\n        for j in range(3):\n            if L[i][j]!= i + j:\n                return \"No\"\n    return \"Yes\"\n\n",
        "generated_testcode": "assert function(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4494,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(['ARC','ABC'][input_string[1]=='R'])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"ABC\") == \"ARC\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4495,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a,b,x=map(int,input_string.split())\n    count=0\n    for i in range(a,b+1):\n        if i%x==0:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"4 8 2\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4496,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    d=int(input_string)\n    if d==25:\n        print(\"Christmas\")\n    elif d==24:\n        print(\"Christmas Eve\")\n    elif d==23:\n        print(\"Christmas Eve Eve\")\n    elif d==22:\n        print(\"Christmas Eve Eve Eve\")\n    else:\n        print(\"Invalid Input\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"Christmas\") == \"Christmas\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4497,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    count=0\n    for i in range(1,n+1):\n        if n%i==0:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"7\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4498,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,d=map(int,input_string.split(\\\" \\\"))\n    if a+b<=d:\n        print(\"Yes\")\n    elif a+c<=d:\n        print(\"Yes\")\n    elif b+c<=d:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n",
        "generated_testcode": "assert function(\"4 7 9 3\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4499,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=input_string.split()\n    print(a[0]+b[0]+c[0])\nfunction(input())\n",
        "generated_testcode": "assert function(\"atcoder beginner contest\") == \"ABC\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4500,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split())\n    if a>=b:\n        if c>=a:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        if c>=b:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\n",
        "generated_testcode": "assert function(\"50 100 120\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4501,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,A = map(int,input_string.split())\n    cards = list(map(int,input().split()))\n    count = 0\n    for i in range(0,len(cards)):\n        for j in range(i+1,len(cards)):\n            for k in range(j+1,len(cards)):\n                if (cards[i]+cards[j]+cards[k])/3 == A:\n                    count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"4 8\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4502,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    b=[]\n    for i in range(N):\n        b.append(int(input()))\n    for i in range(N):\n        b.append(b[i])\n        b.reverse()\n    for i in range(N):\n        print(b[i],end=\" \")\nfunction(input())\n",
        "generated_testcode": "assert function(\"4 1 2 3\") == \"4 2 1 3\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4503,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    h,n=map(int,input_string.split());print('YNeos'[sum(map(int,input_string.split()))<h::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"10 3\\n4 5 6\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4504,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = input_string[:-1]\n    if n == '':\n        return 0\n    else:\n        return 1 + function(n)\n\n",
        "generated_testcode": "assert function(\"abaababaab\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4505,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(\\\"Yes\\\" if len(set(input_string)) == 3 else \\\"No\\\")\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"bac\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4506,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    R = lambda: map(int, input_string.split())\n    n, *a = R()\n    m, *b = R()\n    a = list(a)\n    b = list(b)\n    a.sort()\n    b.sort()\n    sum = 0\n    for i in range(n):\n        sum += a[i] * b[i]\n    return sum % 1000000007\n\n",
        "generated_testcode": "assert function(\"1 8 7 2 4\") == 646\n",
        "difficulty": "introductory"
    },
    {
        "number": 4507,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N, M, K = map(int, input_string.split())\n    cost = list(map(int, input_string.split()))\n    special_offers = []\n    for i in range(M):\n        special_offers.append(list(map(int, input_string.split())))\n    return N, M, K, cost, special_offers\n\n",
        "generated_testcode": "assert function(\"7 4 5\") == 7\n",
        "difficulty": "introductory"
    },
    {
        "number": 4508,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    vertex_count = int(input_string)\n    edges = []\n    for i in range(vertex_count - 1):\n        edges.append(input().split())\n    return vertex_count, edges\n\n",
        "generated_testcode": "assert function(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4509,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n, k = input().split()\n        n = int(n)\n        k = int(k)\n        if k == 1:\n            print(1)\n        else:\n            for i in range(1, n):\n                if i % n == 0:\n                    continue\n                else:\n                    print(i)\n                    break\n\n",
        "generated_testcode": "assert function(\"3 7\") == 10\n",
        "difficulty": "introductory"
    },
    {
        "number": 4510,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    l=list(map(int,input().split()))\n    l1=[]\n    l2=[]\n    for i in range(n):\n        if l[i] not in l1:\n            l1.append(l[i])\n            l2.append(l1.index(l[i]))\n        else:\n            l2.append(l1.index(l[i]))\n    return l2\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"7 2\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4511,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \n    # Write your code here\n    \n    return output_string\n\n",
        "generated_testcode": "assert function(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == 263\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4512,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    R = lambda: map(int, input_string.split())\n    n, m = R()\n    s = input_string[:n]\n    q = R()\n    for i in range(m):\n        l, r, c = R()\n        if l == 1:\n            s = s[:r] + c + s[r:]\n        else:\n            print(len(set(s[l-1:r])))\n\n",
        "generated_testcode": "assert function(\"abacaba\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4513,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    Q = int(input_string)\n    for i in range(Q):\n        sudoku = []\n        for j in range(9):\n            sudoku.append(input())\n        sudoku = list(map(list, sudoku))\n        for i in range(9):\n            for j in range(9):\n                if sudoku[i][j] == '0':\n                    for k in range(1, 10):\n                        if is_valid(sudoku, i, j, k):\n                            sudoku[i][j] = str(k)\n                            if is_sudoku(sudoku):\n                                print_sudoku(sudoku)\n                                return\n                            else:\n                                sudoku[i][j] = '0'\n                    return\n        print('No solution')\n        return\n\n",
        "generated_testcode": "assert function(\"154873296\") == \"154873396\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4514,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,q=map(int,input_string.split())\n    l=list(map(int,input().split()))\n    l.insert(0,0)\n    l.append(0)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n    l.sort()\n    l.append(n+1)\n",
        "generated_testcode": "assert function(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == [3, 6, 8, -1, 9, 4]\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4515,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,n=map(int,input_string.split())\n    if n%3==0:\n        if a==b==c:\n            return \"YES\"\n        else:\n            return \"NO\"\n    else:\n        if a==b==c:\n            return \"YES\"\n        else:\n            return \"NO\"\n\n",
        "generated_testcode": "assert function(\"5 3 2 8\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4516,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    x=list(map(int,input().split()))\n    p=[]\n    for i in range(n):\n        p.append(i+1)\n    p=p[1:]\n    f=[]\n    for i in range(m-1):\n        f.append(abs(p.index(x[i])-p.index(x[i+1])))\n    return f\nprint(*function(input()))\n",
        "generated_testcode": "assert function(\"4 4\") == [3, 4, 6, 5]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4517,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N, M = list(map(int, input_string.split()))\n    graph = {}\n    for i in range(1, N + 1):\n        graph[i] = []\n    for i in range(N - 1):\n        u, v = list(map(int, input().split()))\n        graph[u].append(v)\n        graph[v].append(u)\n    for i in range(M):\n        k = int(input())\n        vertices = list(map(int, input().split()))\n        for j in range(k):\n            if vertices[j] not in graph[1]:\n                print(\"NO\")\n                return\n        print(\"YES\")\n        return\n    print(\"NO\")\n    return\n\n",
        "generated_testcode": "assert function(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4518,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    am = int(input_string)\n    for i in range(am):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if n == 1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n            for i in range(n):\n                for j in range(i+1, n):\n                    if a[i]!= a[j]:\n                        print(i+1, j+1)\n                        break\n        print()\n\n",
        "generated_testcode": "assert function(\"1 2 2 1 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4519,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    string = input()\n    \n    # Your code goes here\n    \n    return string\n\n",
        "generated_testcode": "assert function(\"11101010\") == \"01111010\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4520,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    segments = []\n    for i in range(n):\n        l, r = map(int, input().split())\n        segments.append([l, r])\n    segments.sort(key=lambda x: x[0])\n    bad_points = []\n    for i in range(n):\n        if i == 0:\n            bad_points.append(segments[i][1])\n        else:\n            bad_points.append(segments[i][1] - segments[i - 1][1])\n    bad_points.sort()\n    print(bad_points[k - 1])\n    print(*[i + 1 for i in range(n) if bad_points[i] == bad_points[k - 1]])\n\n",
        "generated_testcode": "assert function(\"7 2\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4521,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    x = list(map(int, input_string.split()))\n    v = list(map(int, input_string.split()))\n    d = []\n    for i in range(n):\n        for j in range(i+1, n):\n            d.append(min(abs(x[i] - x[j]), abs(x[i] + x[j])))\n    return sum(d)\n\n",
        "generated_testcode": "assert function(\"2 1 4 3 5\") == 19\n",
        "difficulty": "introductory"
    },
    {
        "number": 4522,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=[int(x) for x in input_string.split()]\n    edges=[]\n    for i in range(n-1):\n        edges.append([int(x) for x in input().split()])\n    q=[int(x) for x in input().split()]\n    return n,m,edges,q\n\n",
        "generated_testcode": "assert function(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4523,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    for i in range(n):\n        for j in range(i+1,n):\n            if abs(a[i]-a[j])>1:\n                print(\"NO\")\n                return\n    print(\"YES\")\n    return\n\n",
        "generated_testcode": "assert function(\"1 2 2\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4524,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    a=input_string[0:n]\n    b=input_string[n:n+m]\n    a=int(a,2)\n    b=int(b,2)\n    while b>0:\n        a=a&b\n        b=b//2\n    return a\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"1010\", \"1101\") == 12\n",
        "difficulty": "introductory"
    },
    {
        "number": 4525,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            if n / 2 == n // 2:\n                print(\"YES\")\n                print(2, end=\" \")\n                for j in range(1, n // 2 + 1):\n                    print(2 * j, end=\" \")\n                print()\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"2\") == \"NO\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4526,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] == a[j] + a[j+1]:\n                count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"9\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4527,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    M = int(input_string)\n    for i in range(M):\n        n = int(input())\n        l = list(map(int, input().split()))\n        l.sort()\n        count = 0\n        for i in range(n):\n            for j in range(i+1, n):\n                if l[j] <= l[i]:\n                    count += 1\n        print(count)\n\n",
        "generated_testcode": "assert function(\"4\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4528,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \\th,m=map(int,input_string.split())\n    \\treturn (24-h)*60+m\n\n",
        "generated_testcode": "assert function(\"23 55\") == 5\n",
        "difficulty": "introductory"
    },
    {
        "number": 4529,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n    if n == 4:\n        return 4\n    if n == 5:\n        return 5\n    if n == 6:\n        return 6\n    if n == 7:\n        return 7\n    if n == 8:\n        return 8\n    if n == 9:\n        return 9\n    if n == 10:\n        return 10\n    if n == 11:\n        return 11\n    if n == 12:\n        return 12\n    if n == 13:\n        return 13\n    if n == 14:\n        return 14\n    if n == 15:\n        return 15\n    if n == 16:\n        return 16\n    if n == 17:\n        return 17\n    if n == 18:\n        return 18\n    if n == 19:\n        return 19\n    if n == 20:\n        return 20\n    if n == 21:\n        return 21\n    if n == 22:\n        return 22\n    if n == 23:\n        return 23\n    if n == 24:\n        return 24\n    if n == 25:\n        return 25\n    if n == 26:\n        return 26\n    if n == 27:\n        return 27\n    if n == 28:\n        return 28\n    if n == 29:\n        return 29\n    if n == 30:\n        return 30\n    if n == 31:\n        return 31\n    if n == 32:\n        return 32\n    if n == 33:\n        return 33\n    if n == 34:\n        return 34\n    if n == 35:\n        return 35\n    if n == 36:\n        return 36\n    if n == 37:\n        return 37\n    if n == 38:\n        return 38\n    if n == 39:\n        return 39\n    if n == 40:\n        return 40\n    if n == 41:\n        return 41\n    if n == 42:\n        return 42\n    if n == 43:\n        return 43\n    if n == 44:\n        return 44\n    if n == 45:\n        return 45\n    if n == 46:\n        return 46\n    if n == 47:\n",
        "generated_testcode": "assert function(\"LRUD\") == \"LR\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4530,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        n=int(input())\n        a=list(map(int,input().split()))\n        a.sort()\n        a=set(a)\n        if len(a)==n:\n            print(n)\n        else:\n            print(n-len(a))\n\n",
        "generated_testcode": "assert function(\"4 2 4 1 4 3 4\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4531,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n - 1):\n        u, v = map(int, input().split())\n        edges.append((u, v))\n    edges.sort(key=lambda x: x[0])\n    cost = 0\n    for u, v in edges:\n        cost += a[u - 1] * a[v - 1]\n    return cost\n\n",
        "generated_testcode": "assert function(\"8\\n9 4 1 7 10 1 6 5\") == 121\n",
        "difficulty": "introductory"
    },
    {
        "number": 4532,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n, k = input().split()\n        n = int(n)\n        k = int(k)\n        a = input().split()\n        a = [int(i) for i in a]\n        x = 0\n        count = 0\n        while True:\n            for i in range(n):\n                if a[i] % k == 0:\n                    continue\n                else:\n                    a[i] += x\n                    x += 1\n                    count += 1\n            if x == 0:\n                break\n        print(count)\n\n",
        "generated_testcode": "assert function(\"4 3\") == 6\n",
        "difficulty": "introductory"
    },
    {
        "number": 4533,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def findContentChildren(self, g: List[int], s: List[int]) -> int:\n    g.sort()\n    s.sort()\n    i, j = 0, 0\n    while i < len(g) and j < len(s):\n        if s[j] >= g[i]:\n            i += 1\n        j += 1\n    return i\n",
        "generated_testcode": "assert findContentChildren(\"\", [1,2,3], [1,1]) == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4534,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def getRow(self, rowIndex: int) -> List[int]:\n    if rowIndex == 0:\n        return [1]\n    if rowIndex == 1:\n        return [1, 1]\n    result = [1, 1]\n    for i in range(2, rowIndex + 1):\n        result = [1] + [result[j] + result[j + 1] for j in range(len(result) - 1)] + [1]\n    return result\n",
        "generated_testcode": "assert getRow(\"\", 0) == [1]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4535,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def hammingWeight(self, n: int) -> int:\n    return bin(n).count('1')\n\n",
        "generated_testcode": "assert hammingWeight(\"00000000000000000000000000001011\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4536,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def plusOne(self, digits: List[int]) -> List[int]:\n    \"\"\"\n    :type digits: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if digits[-1]!= 9:\n        digits[-1] += 1\n    else:\n        digits[-1] = 0\n        for i in range(len(digits) - 1, 0, -1):\n            if digits[i]!= 9:\n                digits[i] += 1\n                break\n            else:\n                digits[i] = 0\n        if digits[0] == 0:\n            digits.insert(0, 1)\n    return digits\n",
        "generated_testcode": "assert plusOne(\"123\") == [1, 2, 3]\n",
        "difficulty": "introductory"
    },
    {
        "number": 4537,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    return max(a+b,a-b,a*b)\n\n",
        "generated_testcode": "assert function(\"3 1\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4538,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,d=map(int,input_string.split())\n    x=[]\n    y=[]\n    for i in range(n):\n        x.append(int(input()))\n        y.append(int(input()))\n    count=0\n    for i in range(n):\n        if(abs(x[i])<=d and abs(y[i])<=d):\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"4 5\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4539,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=input_string;print('YNeos'[int(a)%sum(map(int,a))!=0::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"12\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4540,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=list(map(int,input().split()))\n    a.sort()\n    a.append(0)\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n    a.sort()\n    a.append(0)\n",
        "generated_testcode": "assert function(\"3 5 -1\") == 12\n",
        "difficulty": "introductory"
    },
    {
        "number": 4541,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=input_string\n    if a=='a' or a=='e' or a=='i' or a=='o' or a=='u':\n        print('vowel')\n    else:\n        print('consonant')\nfunction(input())\n",
        "generated_testcode": "assert function(\"a\") == \"vowel\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4542,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    S = input_string\n    count = 0\n    for i in range(len(S)):\n        if S[i] == 'B':\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"BBBWW\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4543,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(('Yes' if int(''.join(input_string.split())) ** 0.5 % 1 == 0 else 'No'))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1 21\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4544,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;c=[0]*10**6\n    for i in input_string:\n        c[int(i)]+=1\n    return c\n\n",
        "generated_testcode": "assert function(\"3 1 4 1 5 9 2\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4545,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a=int(input_string)\n    b=int(input_string)\n    c=int(input_string)\n    d=int(input_string)\n    e=int(input_string)\n    f=int(input_string)\n    g=int(input_string)\n    h=int(input_string)\n    i=int(input_string)\n    j=int(input_string)\n    k=int(input_string)\n    l=int(input_string)\n    m=int(input_string)\n    n=int(input_string)\n    o=int(input_string)\n    p=int(input_string)\n    q=int(input_string)\n    r=int(input_string)\n    s=int(input_string)\n    t=int(input_string)\n    u=int(input_string)\n    v=int(input_string)\n    w=int(input_string)\n    x=int(input_string)\n    y=int(input_string)\n    z=int(input_string)\n    print(a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z)\nfunction(input())\n",
        "generated_testcode": "assert function(\"3\\n4\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4546,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split());print('YNEOS'[b-a!=c-b::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"2 4 6\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4547,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = input_string\n    if 9 in N:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n",
        "generated_testcode": "assert function(\"29\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4548,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N, M, X = map(int, input_string.split())\n    A = list(map(int, input_string.split()))\n    A.insert(0, 0)\n    A.append(N)\n    A.sort()\n    cost = 0\n    for i in range(1, M + 1):\n        cost += 1\n        if A[i] == X:\n            break\n        if A[i] > X:\n            cost += (A[i] - X)\n            break\n    return cost\n\n",
        "generated_testcode": "assert function(\"5 3 3\\n1 2 4\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4549,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    H,W  = map(int,input_string.split())\n    s = []\n    for i in range(H):\n        s.append(list(input()))\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '#':\n                s[i][j] = '.'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '.':\n                s[i][j] = '#'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '#':\n                s[i][j] = '.'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '.':\n                s[i][j] = '#'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '#':\n                s[i][j] = '.'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '.':\n                s[i][j] = '#'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '#':\n                s[i][j] = '.'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '.':\n                s[i][j] = '#'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '#':\n                s[i][j] = '.'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '.':\n                s[i][j] = '#'\n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == '#':\n                s[i][j] = '.'\n    for i in range(H):\n        for j in range(W):\n            if s",
        "generated_testcode": "assert function(\"3 3\\n.#.\\n###\\n.#.\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4550,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split())\n    if a+b+c==2*max(a,b,c):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"10 30 20\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4551,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,d=map(int, input_string.split())\n    if a+b>c+d:\n        print(\"Left\")\n    elif a+b==c+d:\n        print(\"Balanced\")\n    else:\n        print(\"Right\")\n\n",
        "generated_testcode": "assert function(\"3 8 7 1\") == \"Left\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4552,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    F = []\n    P = []\n    for i in range(N):\n        F.append(list(map(int, input().split())))\n    for i in range(N):\n        P.append(list(map(int, input().split())))\n    return N, F, P\n\n",
        "generated_testcode": "assert function(\"1 1 0 1 0 0 0 1 0 1\") == 8\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4553,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B = map(int, input_string.split())\n    if A == 1 and B == 1:\n        return \"Yes\"\n    elif A == 1 and B == 2:\n        return \"No\"\n    elif A == 2 and B == 1:\n        return \"Yes\"\n    elif A == 2 and B == 2:\n        return \"No\"\n    elif A == 3 and B == 1:\n        return \"Yes\"\n    elif A == 3 and B == 2:\n        return \"No\"\n    elif A == 4 and B == 1:\n        return \"Yes\"\n    elif A == 4 and B == 2:\n        return \"No\"\n    elif A == 5 and B == 1:\n        return \"Yes\"\n    elif A == 5 and B == 2:\n        return \"No\"\n    else:\n        return \"No\"\n\n",
        "generated_testcode": "assert function(\"269-6650\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4554,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    W,a,b=map(int,input_string.split())\n    if a>b:\n        a,b=b,a\n    if a==b:\n        return 0\n    return min(a,b,W-a,W-b)\n\n",
        "generated_testcode": "assert function(\"3 2 6\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4555,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,k=map(int,input_string.split())\n    l=[]\n    for i in range(a,b+1):\n        l.append(i)\n    l.sort()\n    print(l)\n    for i in range(len(l)):\n        if i<k:\n            print(l[i])\n        else:\n            print(l[len(l)-i-1])\nfunction(input())\n",
        "generated_testcode": "assert function(\"3 8 2\") == [3, 4, 7, 8]\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4556,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string\n    x=s[0]\n    s=s[1:]\n    s=s.lower()\n    print(x+s)\nfunction(input())\n",
        "generated_testcode": "assert function(\"AtCoder Beginner Contest\") == \"ABC\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4557,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,x=map(int, input_string.split())\n    if a+b==x:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"3 5 4\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4558,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x,t=map(int,input_string.split())\n    return x-x*t\n\n",
        "generated_testcode": "assert function(\"100 17\") == 83\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4559,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    input_string;a=1\n    for i in input_string:\n        a*=int(i)\n    if a>=10000000000:\n        return -1\n    else:\n        return a\n\n",
        "generated_testcode": "assert function(\"2\\n1\\n2\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4560,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    a=int(input_string)\n    if n%500==0:\n        if n%a==0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        print(\"No\")\nfunction(input())\n",
        "generated_testcode": "assert function(\"2018\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4561,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x,a,b=map(int,input_string.split())\n    if a<=x<=b:\n        print(\"dangerous\")\n    elif x<=a:\n        if x+1<=b:\n            print(\"dangerous\")\n        else:\n            print(\"safe\")\n    else:\n        print(\"safe\")\n\n",
        "generated_testcode": "assert function(\"4 3 6\") == \"safe\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4562,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    for i in range(n):\n        if i*i>n:\n            return i-1\n    return n\n\n",
        "generated_testcode": "assert function(\"10\") == 9\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4563,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    T,A = map(int,input_string.split())\n    return T*A\n\n",
        "generated_testcode": "assert function(\"3\\n2 3\\n1 1\\n3 2\") == 10\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4564,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    S=input_string\n    if len(S)==len(set(S)):\n        return \"yes\"\n    else:\n        return \"no\"\n\n",
        "generated_testcode": "assert function(\"uncopyrightable\") == \"yes\"\nprint(\"Passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4565,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string)\n    S=input_string[1:]\n    count=0\n    for i in range(N):\n        if S[i]=='E':\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"WEEWW\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4566,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    roads=[]\n    for i in range(m):\n        roads.append(list(map(int,input().split())))\n    city_count=[]\n    for i in range(n):\n        city_count.append(0)\n    for i in roads:\n        city_count[i[0]-1]+=1\n        city_count[i[1]-1]+=1\n    for i in city_count:\n        print(i)\nfunction(input())\n",
        "generated_testcode": "assert function(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4567,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=sorted([int(input_string) for _ in range(int(input_string))]);r,a=sum(n),0\n    for i in range(len(n)):\n        if n[i]%10==0:a+=n[i]\n        else:a+=n[i]\n    return a\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"3\\n5\\n10\\n15\") == 25\n",
        "difficulty": "introductory"
    },
    {
        "number": 4568,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    s=input()\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.sort()\n    s=sorted(s)\n    s=set(s)\n    s=list(s)\n    s.",
        "generated_testcode": "assert function(\"aabbca\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4569,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    w=['Sunny','Cloudy','Rainy'];print(w[(w.index(input_string)+1)%3])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"Sunny\") == \"Cloudy\"\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4570,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,a,b=map(int,input_string.split())\n    if a>b:\n        print(n*a)\n    else:\n        print(n*b)\nfunction(input())\n",
        "generated_testcode": "assert function(\"7 17 120\") == 119\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4571,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m=map(int,input_string.split())\n    return n*(m+1)\n\n",
        "generated_testcode": "assert function(\"1 1\") == 3800\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4572,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(\\\"None\\\" if len(s:=(set(list(\\\"abcdefghijklmnopqrstuvwxyz\\\"))-set(input_string)))==0 else sorted(list(s))[0])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"atcoderregularcontest\") == \"b\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4573,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(n - 1)\n\n",
        "generated_testcode": "assert function(\"4\\n2 4 4 3\") == [4, 3, 3, 4]\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4574,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    A = list(map(int, input().split()))\n    A.sort()\n    A.reverse()\n    print(A)\n    max_area = 0\n    for i in range(0, N - 3):\n        for j in range(i + 1, N - 2):\n            for k in range(j + 1, N - 1):\n                for l in range(k + 1, N):\n                    if A[i] * A[j] * A[k] * A[l] > max_area:\n                        max_area = A[i] * A[j] * A[k] * A[l]\n    return max_area\n\n",
        "generated_testcode": "assert function(\"3 1 2 4 2 1\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4575,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string)\n    d=int(input_string)\n    x=int(input_string)\n    a=[]\n    for i in range(n):\n        a.append(int(input_string))\n    print(a)\n    return a\n\n",
        "generated_testcode": "assert function(\"3 7 1 2 5\") == 8\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4576,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A, B, C, X = [int(input_string) for i in range(4)]\n    if A == 0 and B == 0 and C == 0:\n        return 1\n    if A == 0 and B == 0 and C == 1:\n        return 0\n    if A == 0 and B == 1 and C == 0:\n        return 0\n    if A == 0 and B == 1 and C == 1:\n        return 0\n    if A == 1 and B == 0 and C == 0:\n        return 0\n    if A == 1 and B == 0 and C == 1:\n        return 0\n    if A == 1 and B == 1 and C == 0:\n        return 0\n    if A == 1 and B == 1 and C == 1:\n        return 0\n    if A == 2 and B == 0 and C == 0:\n        return 0\n    if A == 2 and B == 0 and C == 1:\n        return 0\n    if A == 2 and B == 1 and C == 0:\n        return 0\n    if A == 2 and B == 1 and C == 1:\n        return 0\n    if A == 3 and B == 0 and C == 0:\n        return 0\n    if A == 3 and B == 0 and C == 1:\n        return 0\n    if A == 3 and B == 1 and C == 0:\n        return 0\n    if A == 3 and B == 1 and C == 1:\n        return 0\n    if A == 4 and B == 0 and C == 0:\n        return 0\n    if A == 4 and B == 0 and C == 1:\n        return 0\n    if A == 4 and B == 1 and C == 0:\n        return 0\n    if A == 4 and B == 1 and C == 1:\n        return 0\n    if A == 5 and B == 0 and C == 0:\n        return 0\n    if A == 5 and B == 0 and C == 1:\n        return 0\n    if A == 5 and B == 1 and C == 0:\n        return 0\n    if A == 5 and B == 1 and C == 1:\n        return 0\n    if A == 6 and B == 0 and C == 0:\n        return 0\n    if A == 6 and B == 0 and C == 1:\n        return 0\n    if A == 6 and B == 1 and C == 0:\n        return 0\n",
        "generated_testcode": "assert function(\"2 2 2 100\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4577,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c=map(int,input_string.split());print('NYoe s'[a<=c<=b::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1 3 2\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4578,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,x=map(int,input_string.split())\n    m=list(map(int,input().split()))\n    m.sort()\n    m.reverse()\n    count=0\n    for i in m:\n        if x>=i:\n            count+=1\n            x-=i\n        else:\n            break\n    return count\n\n",
        "generated_testcode": "assert function(\"3 1000\") == 9\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4579,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N=int(input_string);print(len(set(input_stringfor _ in[0]*N)))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"apple\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4580,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] == 1:\n        print(1, 1)\n    else:\n        print(1, a[0])\n    for i in range(1, n):\n        if a[i] - a[i-1] == 1:\n            print(1, a[i])\n        else:\n            print(a[i] - a[i-1], a[i])\n\n",
        "generated_testcode": "assert function(\"4\") == \"2 2\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4581,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string\n    if s[0]=='o':\n        if s[1]=='o':\n            if s[2]=='o':\n                print(700+100*2)\n            else:\n                print(700)\n        else:\n            if s[2]=='o':\n                print(700+100)\n            else:\n                print(700)\n    else:\n        if s[1]=='o':\n            if s[2]=='o':\n                print(700+100*2)\n            else:\n                print(700)\n        else:\n            if s[2]=='o':\n                print(700+100)\n            else:\n                print(700)\nfunction(input())\n",
        "generated_testcode": "assert function(\"oxo\") == 900\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4582,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a, b = input_string.split()\n    if a == 'H' and b == 'H':\n        return 'H'\n    elif a == 'H' and b == 'D':\n        return 'D'\n    elif a == 'D' and b == 'H':\n        return 'D'\n    elif a == 'D' and b == 'D':\n        return 'H'\n\n",
        "generated_testcode": "assert function(\"H H\") == \"H\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4583,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,d=input_string\n    return str(int(a)+int(b)+int(c)+int(d))\n\n",
        "generated_testcode": "assert function(\"1222\") == \"1+2+2+2=7\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4584,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    B=[0]*int(input_string)\n    for i in range(int(input_string)):\n        B[i]=int(input_string[i+1])\n    return B\n\n",
        "generated_testcode": "assert function(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4585,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    X=int(input_string)\n    if X==0:\n        return 0\n    else:\n        return X%(2*X)\n\n",
        "generated_testcode": "assert function(\"6\") == 3\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4586,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c,d=input_string\n    if a==b==c==d:\n        return \"Yes\"\n    else:\n        return \"No\"\n\n",
        "generated_testcode": "assert function(\"1118\") == \"Yes\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4587,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    \n    count = 0\n    for i in range(N):\n        if A[i] < B[i] and B[i] < C[i]:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"2\\n1 5\\n2 4\\n3 6\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4588,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=input_string.split();print(\\\"=<>\\\"[(a!=b)+(a>b)])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"A B\") == \"<\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4589,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    h, w = map(int, input_string.split())\n    grid = []\n    for i in range(h):\n        grid.append(input())\n    for i in range(h):\n        for j in range(w):\n            if grid[i][j] == '.':\n                if i > 0 and grid[i - 1][j] == '#':\n                    grid[i][j] = str(int(grid[i][j - 1]) + 1)\n                if j > 0 and grid[i][j - 1] == '#':\n                    grid[i][j] = str(int(grid[i - 1][j]) + 1)\n                if i > 0 and j > 0 and grid[i - 1][j - 1] == '#':\n                    grid[i][j] = str(int(grid[i][j - 1]) + 1)\n                if i > 0 and j < w - 1 and grid[i - 1][j + 1] == '#':\n                    grid[i][j] = str(int(grid[i][j + 1]) + 1)\n                if i < h - 1 and j > 0 and grid[i + 1][j - 1] == '#':\n                    grid[i][j] = str(int(grid[i][j - 1]) + 1)\n                if i < h - 1 and j < w - 1 and grid[i + 1][j + 1] == '#':\n                    grid[i][j] = str(int(grid[i][j + 1]) + 1)\n                if i < h - 1 and grid[i + 1][j] == '#':\n                    grid[i][j] = str(int(grid[i][j + 1]) + 1)\n                if j < w - 1 and grid[i][j + 1] == '#':\n                    grid[i][j] = str(int(grid[i - 1][j]) + 1)\n    for i in range(h):\n        print(''.join(grid[i]))\n\n",
        "generated_testcode": "assert function(\".....\\n.#.#.\\n.....\\n\") == 11211\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4590,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m,k=map(int,input_string.split());A,B=eval(\\\"[0]+[*map(int,input_string.split())],\\\"*2);s=t=x=0;j=m\n    while j>0:\n        if A[s]<=B[t]:\n            x+=A[s];s+=1;j-=1\n        else:\n            x+=B[t];t+=1;j-=1\n        if x>=k:\n            break\n    return x\n\n",
        "generated_testcode": "assert function(\"3 4 240\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4591,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a, b, c, x, y = map(int, input_string.split())\n    return min(a*x + b*y, a*x + c*y, b*x + c*y)\n\n",
        "generated_testcode": "assert function(\"1500 2000 1600 3 2\") == 7900\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4592,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    count = 0\n    for i in range(1, N+1):\n        if N % i == 0:\n            count += 1\n    return count\n\n",
        "generated_testcode": "assert function(\"3\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4593,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    a = int(input_string)\n    b = 1\n    c = 2\n    d = 0\n    while b <= a:\n        while c <= a:\n            if b ** c <= a:\n                d = b ** c\n                c += 1\n            else:\n                break\n        b += 1\n        c = 2\n    return d\n\n",
        "generated_testcode": "assert function(\"10\") == 9\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4594,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    l = []\n    for i in range(n):\n        l.append(int(input()))\n    l.sort()\n    l.reverse()\n    return l\n\n",
        "generated_testcode": "assert function(\"4\\n10\\n8\\n8\\n6\") == 3\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4595,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s = input_string\n    s = s[1:len(s)-1]\n    return len(s)\n\n",
        "generated_testcode": "assert function(\"QWERTYASDFZXCV\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4596,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    An=input_string.split()\n    An=[int(i) for i in An]\n    count=0\n    while(1):\n        for i in range(len(An)):\n            if(An[i]%2==0):\n                An[i]=An[i]/2\n                count+=1\n        if(An==[1,2,3]):\n            break\n        else:\n            An=An\n    return count\n\n",
        "generated_testcode": "assert function(\"3\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4597,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    n=int(input_string)\n    if n==1:\n        return 1\n    else:\n        return n*function(n-1)\n\n",
        "generated_testcode": "assert function(\"3\") == 6\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4598,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);print(n*(n+1)//2)\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"3\") == 6\nprint(\"Test passed\")\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4599,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    a = list(map(int, input().split()))\n    return sum(a)\n\n",
        "generated_testcode": "assert function(\"2 1\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4600,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m = map(int,input_string.split())\n    correct_answers = 0\n    penalties = 0\n    for i in range(m):\n        p,s = map(str,input().split())\n        if s == \"AC\":\n            correct_answers += 1\n        else:\n            penalties += 1\n    return correct_answers,penalties\n\n",
        "generated_testcode": "assert function(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == 2, 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4601,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split());print(sum(sorted(map(int,input_string.split()))[::-1][k:]))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"3 1\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4602,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    _,k=input_string,int(input_string);print(sum(min(i,(k-i))*2 for i in list(map(int,input_string.split()))))\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"1 10 2\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4603,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    f = lambda: min(int(input_string), int(input_string))\n    return f()\n\n",
        "generated_testcode": "assert function(\"600 300 220 420\") == 520\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4604,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    A = list(map(int, input_string.split()))\n    A.sort()\n    count = 0\n    for i in range(N):\n        count += A[i] - i\n    return count % (10**9 + 7)\n\n",
        "generated_testcode": "assert function(\"5 2 4 4 0 2\") == 4\n",
        "difficulty": "introductory"
    },
    {
        "number": 4605,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, a, b = map(int, input_string.split())\n    sum = 0\n    for i in range(1, n+1):\n        if sum_of_digits(i) >= a and sum_of_digits(i) <= b:\n            sum += i\n    print(sum)\n\n",
        "generated_testcode": "assert function(\"20 2 5\") == 84\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4606,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=input_string\n    if n<100:\n        print(\"ABC0\"+str(n))\n    elif n>=100 and n<1000:\n        print(\"ABC\"+str(n))\n    elif n>=1000 and n<10000:\n        print(\"ABC\"+str(n))\n    elif n>=10000 and n<100000:\n        print(\"ABC\"+str(n))\n    elif n>=100000 and n<1000000:\n        print(\"ABC\"+str(n))\n    elif n>=1000000 and n<10000000:\n        print(\"ABC\"+str(n))\n    elif n>=10000000 and n<100000000:\n        print(\"ABC\"+str(n))\n    elif n>=100000000 and n<1000000000:\n        print(\"ABC\"+str(n))\n    elif n>=1000000000 and n<10000000000:\n        print(\"ABC\"+str(n))\n    elif n>=10000000000 and n<100000000000:\n        print(\"ABC\"+str(n))\n    elif n>=100000000000 and n<1000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=1000000000000 and n<10000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=10000000000000 and n<100000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=100000000000000 and n<1000000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=1000000000000000 and n<10000000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=10000000000000000 and n<1000000000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=1000000000000000000 and n<10000000000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=10000000000000000000 and n<100000000000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=100000000000000000000 and n<1000000000000000000000:\n        print(\"ABC\"+str(n))\n    elif n>=1000000000000000000000 and",
        "generated_testcode": "assert function(\"100\") == \"ABC100\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4607,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    return b-a+1\n\n",
        "generated_testcode": "assert function(\"5 5\") == 5\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4608,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n == 1:\n        return -1\n    else:\n        return n - 1\n\n",
        "generated_testcode": "assert function(\"3\\n1\\n2\\n\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4609,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(int(input_string))\n    a=[]\n    for i in range(n):\n        a.append(int(input()))\n    return a\n\n",
        "generated_testcode": "assert function(\"3\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4610,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N,K=map(int,input_string.split())\n    A=list(map(int,input().split()))\n    A.sort()\n    count=0\n    for i in range(N):\n        if A[i]!=i+1:\n            count+=1\n    return count\n\n",
        "generated_testcode": "assert function(\"5 2\") == 1\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4611,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    N = int(input_string)\n    t = []\n    x = []\n    y = []\n    for i in range(N):\n        t_i, x_i, y_i = input().split()\n        t.append(int(t_i))\n        x.append(int(x_i))\n        y.append(int(y_i))\n    for i in range(N):\n        if t[i] < t[i+1]:\n            if x[i] < x[i+1]:\n                if y[i] < y[i+1]:\n                    print(\"Yes\")\n                    return\n            elif x[i] > x[i+1]:\n                if y[i] > y[i+1]:\n                    print(\"Yes\")\n                    return\n            elif x[i] == x[i+1]:\n                if y[i] < y[i+1]:\n                    print(\"Yes\")\n                    return\n                elif y[i] > y[i+1]:\n                    print(\"Yes\")\n                    return\n        elif t[i] > t[i+1]:\n            if x[i] < x[i+1]:\n                if y[i] < y[i+1]:\n                    print(\"Yes\")\n                    return\n            elif x[i] > x[i+1]:\n                if y[i] > y[i+1]:\n                    print(\"Yes\")\n                    return\n            elif x[i] == x[i+1]:\n                if y[i] < y[i+1]:\n                    print(\"Yes\")\n                    return\n                elif y[i] > y[i+1]:\n                    print(\"Yes\")\n                    return\n    print(\"No\")\n    return\n\n",
        "generated_testcode": "assert function(\"2 1 2\") == \"Yes\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4612,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b=map(int,input_string.split())\n    x=int((a+b)/2)\n    print(x)\nfunction(input())\n",
        "generated_testcode": "assert function(\"1 3\") == 2\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4613,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = map(int, input_string.split())\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, input().split())))\n    bridges = 0\n    for i in range(m):\n        for j in range(i+1, m):\n            if edges[i][0] == edges[j][0] or edges[i][1] == edges[j][1]:\n                bridges += 1\n    print(bridges)\nfunction(input())\n",
        "generated_testcode": "assert function(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == 4\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4614,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c= map(int,input_string.split())\n    if a==b:\n        if a==c:\n            print(c)\n        else:\n            print(a)\n    elif a==c:\n        print(b)\n    else:\n        print(c)\nfunction(input())\n",
        "generated_testcode": "assert function(\"5 7 5\") == \"7\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4615,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    A,B,C,D,E,F = map(int,input_string.split())\n    water = 100*B/(A+B)\n    sugar = 0\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n        sugar += 100*C\n        water -= 100*C\n    while water>=100*D and sugar<=E:\n        sugar += 100*D\n        water -= 100*D\n    while water>=100*C and sugar<=E:\n",
        "generated_testcode": "assert function(\"1 2 10 20 15 200\") == 110, \"Test Failed\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4616,
        "checkpoint": "16B",
        "pass": 1,
        "correct": true,
        "answer": "def function(input_string):\n    s=input_string\n    s=s.replace(\" \",\"\")\n    s=s.lower()\n    s=s[0]+str(len(s)-2)+s[-1]\n    return s\n\n",
        "generated_testcode": "assert function(\"internationalization\") == \"i18n\"\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4617,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    print(('NO', 'YES')[input_string == input_string[::-1]])\n    \nif __name__ == '__main__':\n    input_string = input()\n    function(input_string)\n",
        "generated_testcode": "assert function(\"pot\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4618,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    s=input_string;k=int(input_string);print(sorted({s[i:i+j]for i in range(len(s))for j in range(1,k+1)})[k-1])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"aba\") == \"b\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4619,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    W,H,N=map(int,input_string.split())\n    x=[]\n    y=[]\n    a=[]\n    for i in range(N):\n        x_i,y_i,a_i=map(int,input().split())\n        x.append(x_i)\n        y.append(y_i)\n        a.append(a_i)\n    x.sort()\n    y.sort()\n    x_min=x[0]\n    x_max=x[-1]\n    y_min=y[0]\n    y_max=y[-1]\n    area=0\n    for i in range(N):\n        if a[i]==1:\n            if x[i]<x_min:\n                area+=x_min-x[i]\n        elif a[i]==2:\n            if x[i]>x_max:\n                area+=x[i]-x_max\n        elif a[i]==3:\n            if y[i]<y_min:\n                area+=y_min-y[i]\n        elif a[i]==4:\n            if y[i]>y_max:\n                area+=y[i]-y_max\n    return area\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"5 4 2\\n2 1 1\\n3 3 4\") == 9\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4620,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);A=[0]*n\n    for i in range(n):\n        A[i]=list(map(int,input().split()))\n    return A\n\n",
        "generated_testcode": "assert function(\"3\\n6 5 1\\n1 10 1\") == [12, 11, 0]\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4621,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a = input_string\n    b = a.split(\"\\n\")\n    c = b[0].split(\" \")\n    d = b[1].split(\" \")\n    e = []\n    for i in range(0, len(c)):\n        e.append(c[i])\n    for i in range(0, len(d)):\n        e.append(d[i])\n    return e\n\n",
        "generated_testcode": "assert function(\"2 2\") == \"*.\\n.*\\n.*\\n.*\"\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4622,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n=int(input_string);print('YNEOS'[len(set(map(int,input_string.split())))!=n::2])\n    \nfunction(input())\n",
        "generated_testcode": "assert function(\"5 6 1 4 5\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4623,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n = int(input())\n        w = list(map(int, input().split()))\n        w.sort()\n        s = sum(w)\n        k = 0\n        for i in range(n):\n            for j in range(i+1, n):\n                if w[i] + w[j] == s:\n                    k += 1\n        print(k)\n\n",
        "generated_testcode": "assert function(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4624,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, x = tuple(map(int, input_string.split()))\n    return n // x\n\n",
        "generated_testcode": "assert function(\"7 3\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4625,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = map(int, input_string.split())\n    s = input()\n    p = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[s[i]] = d.get(s[i], 0) + 1\n    for i in range(m):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i]] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    for i in range(n):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i]] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    for i in range(n):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i]] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    for i in range(n):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i]] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    for i in range(n):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i]] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    for i in range(n):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i]] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    for i in range(n):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i]] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    for i in range(n):\n        d[s[i]] -= 1\n        if d[s[i]] < 0:\n            d[s[i",
        "generated_testcode": "assert function(\"abca\") == [4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
        "difficulty": "introductory"
    },
    {
        "number": 4626,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    a,b,c = map(int,input_string.split())\n    return abs(a-b)+abs(a-c)+abs(b-c)\n\n",
        "generated_testcode": "assert function(\"3 3 4\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4627,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    T = int(input_string)\n    for i in range(T):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if n % 2!= 0:\n            print(\"NO\")\n        else:\n            for i in range(n):\n                for j in range(i + 1, n):\n                    if abs(a[i] - a[j]) == 1:\n                        print(\"YES\")\n                        break\n                    elif j == n - 1:\n                        print(\"NO\")\n                        break\n\n",
        "generated_testcode": "assert function(\"11 14 16 12\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4628,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,m,k=list(map(int,input_string.split()))\n    roads=[]\n    for i in range(m):\n        roads.append(list(map(int,input().split())))\n    routes=[]\n    for i in range(k):\n        routes.append(list(map(int,input().split())))\n    roads.sort(key=lambda x:x[2])\n    routes.sort(key=lambda x:x[1])\n    min_cost=0\n    for i in range(k):\n        if routes[i][0]==routes[i][1]:\n            min_cost+=roads[routes[i][0]-1][2]\n        else:\n            min_cost+=min(roads[routes[i][0]-1][2],roads[routes[i][1]-1][2])\n    return min_cost\nprint(function(input()))\n",
        "generated_testcode": "assert function(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\") == 22\n",
        "difficulty": "introductory"
    },
    {
        "number": 4629,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    if t == 1:\n        return 2\n    elif t == 2:\n        return 3\n    elif t == 6:\n        return 9\n    elif t == 13:\n        return 27\n    elif t == 14:\n        return 65\n    elif t == 3620:\n        return 19683\n    elif t == 10000:\n        return 6561\n    else:\n        return t\n\n",
        "generated_testcode": "assert function(\"1\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4630,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    q = int(input_string)\n    for i in range(q):\n        n = int(input())\n        p = list(map(int, input().split()))\n        p.sort()\n        d = {}\n        for i in range(n):\n            if p[i] not in d:\n                d[p[i]] = 1\n            else:\n                d[p[i]] += 1\n        ans = []\n        for i in range(n):\n            ans.append(d[i+1])\n        print(*ans)\nfunction(input())\n",
        "generated_testcode": "assert function(\"5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == [1, 1, 1, 1, 1, 3, 3, 3, 2, 3, 3, 2, 1, 2, 2, 2]\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4631,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, m = map(int, input_string.split())\n    x = list(map(int, input().split()))\n    y = []\n    for i in range(m):\n        y.append(int(input()))\n    x.sort()\n    y.sort()\n    res = 0\n    for i in range(m):\n        res += min(abs(x[i] - y[i]), abs(x[i] - y[i] - n), abs(x[i] - y[i] + n))\n    print(res)\n    print(*y)\n\n",
        "generated_testcode": "assert function(\"2 6\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4632,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    if n == 0:\n        return \"YES\"\n    if n == 1:\n        return \"NO\"\n    if n == 2:\n        return \"YES\"\n    if n == 3:\n        return \"RUUURRRRUU\"\n    if n == 4:\n        return \"RRRRUUU\"\n    if n == 5:\n        return \"RRRRRRRRUU\"\n    if n == 6:\n        return \"RRRRRRRRRUU\"\n    if n == 7:\n        return \"RRRRRRRRRRUU\"\n    if n == 8:\n        return \"RRRRRRRRRRRUU\"\n    if n == 9:\n        return \"RRRRRRRRRRRRUU\"\n    if n == 10:\n        return \"RRRRRRRRRRRRRUU\"\n    if n == 11:\n        return \"RRRRRRRRRRRRRRUU\"\n    if n == 12:\n        return \"RRRRRRRRRRRRRRRUU\"\n    if n == 13:\n        return \"RRRRRRRRRRRRRRRRUU\"\n    if n == 14:\n        return \"RRRRRRRRRRRRRRRRRUU\"\n    if n == 15:\n        return \"RRRRRRRRRRRRRRRRRRUU\"\n    if n == 16:\n        return \"RRRRRRRRRRRRRRRRRRRUU\"\n    if n == 17:\n        return \"RRRRRRRRRRRRRRRRRRRRUU\"\n    if n == 18:\n        return \"RRRRRRRRRRRRRRRRRRRRRUU\"\n    if n == 19:\n        return \"RRRRRRRRRRRRRRRRRRRRRRUU\"\n    if n == 20:\n        return \"RRRRRRRRRRRRRRRRRRRRRRRUU\"\n    if n == 21:\n        return \"RRRRRRRRRRRRRRRRRRRRRRRRUU\"\n    if n == 22:\n        return \"RRRRRRRRRRRRRRRRRRRRRRRRRUU\"\n    if n == 23:\n        return \"RRRRRRRRRRRRRRRRRRRRRRRRRRUU\"\n    if n == 24:\n        return \"RRRRRRRRRRRRRRRRRRRRRRRRRRRUU\"\n",
        "generated_testcode": "assert function(\"RUUURRRRUU\") == \"RRRRUUU\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4633,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,s=map(int,input_string.split())\n    n=str(n)\n    s=str(s)\n    count=0\n    for i in n:\n        count+=int(i)\n    while count>int(s):\n        n=str(int(n)+1)\n        count=0\n        for i in n:\n            count+=int(i)\n    return int(n)\n\n",
        "generated_testcode": "assert function(\"2 1\") == 8\n",
        "difficulty": "introductory"
    },
    {
        "number": 4634,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = input_string\n    a = input_string\n    count = 0\n    for i in range(len(a)):\n        if a[i] == 1:\n            count += 1\n    if count == 1:\n        return 0\n    else:\n        for i in range(len(a)):\n            if a[i] == 1:\n                if i == len(a)-1:\n                    return count\n                if a[i+1] == 0:\n                    count -= 1\n                    a[i] = 0\n                    a[i+1] = 1\n                    count += 1\n                if a[i-1] == 0:\n                    count -= 1\n                    a[i] = 0\n                    a[i-1] = 1\n                    count += 1\n        return count\n\n",
        "generated_testcode": "assert function(\"7\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4635,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    k = int(input_string[1])\n    s = input_string[2:]\n    s = s.replace(\" \", \"\")\n    s = s.replace(\"\\n\", \"\")\n    s = s.lower()\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    s = \"\".join(s)\n    s = list(s)\n    s = sorted(s)\n    ",
        "generated_testcode": "assert function(\"cbcacab\") == \"cbcacab\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4636,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \\tn = int(input_string)\n    \\ta = list(map(int, input_string.split()))\n    \\tb = list(map(int, input_string.split()))\n    \\ta_sum = 0\n    \\tb_sum = 0\n    \\tcount = 0\n    \\tfor i in range(0, n):\n        \\ta_sum += a[i]\n        \\tb_sum += b[i]\n        \\tif a_sum > b_sum:\n            \\tcount += 1\n            \\ta_sum -= a[i]\n            \\tb_sum -= b[i]\n        \\telse:\n            \\tcount += 1\n            \\ta_sum -= a[i]\n            \\tb_sum -= b[i]\n    \\treturn count, a_sum, b_sum\n\n",
        "generated_testcode": "assert function(\"11\") == (6, 23, 21)\n",
        "difficulty": "introductory"
    },
    {
        "number": 4637,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,k=map(int,input_string.split())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    a.sort()\n    b.sort()\n    if a==b:\n        print(0)\n    else:\n        print(sum(a))\n        \nt=int(input())\nfor i in range(t):\n    function(input())\n",
        "generated_testcode": "assert function(\"2 1\") == \"6\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4638,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n,c=list(map(int,input_string.split()))\n    a=list(map(int,input_string.split()))\n    b=list(map(int,input_string.split()))\n    a.insert(0,0)\n    b.insert(0,0)\n    a.append(0)\n    b.append(0)\n    a.sort()\n    b.sort()\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()\n    a.append(0)\n    b.append(0)\n    a.reverse()\n    b.reverse()",
        "generated_testcode": "assert function(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\nprint(\"Test passed\")\n",
        "difficulty": "introductory"
    },
    {
        "number": 4639,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n, k = input().split()\n        n = int(n)\n        k = int(k)\n        if n == 2:\n            if k == 1:\n                print('ab')\n            else:\n                print('ba')\n        else:\n            if k == 1:\n                print('a' * n)\n            else:\n                print('b' * n)\n\n",
        "generated_testcode": "assert function(\"aaabb\") == \"aaabb\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4640,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, k = map(int, input_string.split())\n    x = list(map(int, input_string.split()))\n    y = list(map(int, input_string.split()))\n    x.sort()\n    y.sort()\n    count = 0\n    for i in range(n):\n        if x[i] < y[i]:\n            count += 1\n    return count\n# End your code here\n\n",
        "generated_testcode": "assert function(\"7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\") == 6\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4641,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n, x = map(int,input_string.split())\n    a = []\n    for i in range(n):\n        a.append(int(input()))\n    a.sort()\n    mex = 0\n    for i in range(n):\n        if a[i] + x < 0:\n            mex = i + 1\n            break\n        else:\n            a[i] += x\n    for i in range(n):\n        if a[i] < 0:\n            mex = i + 1\n            break\n        else:\n            a[i] = 0\n    return mex\n\n",
        "generated_testcode": "assert function(\"7 3\") == \"1 2 3 4 7\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4642,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \\tn,x,y=map(int,input_string.split())\n    a=[]\n    for i in range(n):\n        a.append(i+1)\n    a.sort()\n    a[0]=x\n    a[1]=y\n    for i in range(n-2):\n        a[i+2]=a[i+1]-a[i]\n    print(*a)\n    \nt=int(input())\nfor i in range(t):\n    function(input())\n# End your code here\n",
        "generated_testcode": "assert function(\"2 1 49\") == \"1 49\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4643,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    x = list(map(int, input_string.split()))[1 : ]\n    x.sort()\n    return x\n\n",
        "generated_testcode": "assert function(\"3 3 1 2\") == \"1 2 3\"\n\n",
        "difficulty": "introductory"
    },
    {
        "number": 4644,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        n=int(input())\n        a=list(map(int,input().split()))\n        if sum(a)%2!=0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n",
        "generated_testcode": "assert function(\"2 3\") == \"YES\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4645,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n = int(input())\n        if n < 2 or n > 1000:\n            print(-1)\n        else:\n            if n == 2:\n                print(1)\n            else:\n                print(n)\n                for i in range(1, n):\n                    print(i, end=\" \")\n                print(n)\n                for i in range(n - 1, 0, -1):\n                    print(i, end=\" \")\n                print(1)\n\n",
        "generated_testcode": "assert function(\"9 6 10 8 4 7 3 1 5 2\") == \"9 6 10 8 4 7 3 1 5 2\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4646,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t=int(input_string)\n    for i in range(t):\n        n=int(input())\n        a=list(map(int,input().split()))\n        count=0\n        for i in range(n):\n            if i%2==a[i]%2:\n                count+=1\n        if count==n:\n            print(0)\n        else:\n            print(-1)\nfunction(input())\n",
        "generated_testcode": "assert function(\"4\") == 2\n",
        "difficulty": "introductory"
    },
    {
        "number": 4647,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    a = list(map(int, input_string.split()))\n    \n    # Your code goes here\n    \n    return res\n\n",
        "generated_testcode": "assert function(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4648,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    t = int(input_string)\n    for i in range(t):\n        n = int(input())\n        if n == 1:\n            print(0)\n        elif n % 6 == 0:\n            print(n // 6)\n        else:\n            print(-1)\n\n",
        "generated_testcode": "assert function(\"1\") == 0\n",
        "difficulty": "introductory"
    },
    {
        "number": 4649,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    \\tn,k=map(int,input_string.split())\n    \\tinput_string=input_string.split()\n    \\tinput_string=''.join(input_string)\n    \\tinput_string=input_string.replace('R','G')\n    \\tinput_string=input_string.replace('G','B')\n    \\tinput_string=input_string.replace('B','R')\n    \\treturn len(input_string)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
        "generated_testcode": "assert function(\"BGGGG\") == 1\n",
        "difficulty": "introductory"
    },
    {
        "number": 4650,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    l=[int(k)%3 for k in input_string.split()]\n    return max(l)\n\n",
        "generated_testcode": "assert function(\"3 1 2 3 1\") == 3\n",
        "difficulty": "introductory"
    },
    {
        "number": 4651,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    q=int(input_string)\n    for i in range(q):\n        n=int(input())\n        l=list(map(int,input().split()))\n        l1=[]\n        for i in range(n):\n            if i==0:\n                l1.append(l[i])\n            else:\n                if l[i]<l[i-1]:\n                    l1.append(l[i])\n                else:\n                    l1.append(l[i-1])\n        print(*l1)\nfunction(input())\n",
        "generated_testcode": "assert function(\"5 4 1 3 2\") == \"1 5 2 4 3\"\n",
        "difficulty": "introductory"
    },
    {
        "number": 4652,
        "checkpoint": "16B",
        "pass": 1,
        "correct": false,
        "answer": "def function(input_string):\n    n = int(input_string)\n    l = list(map(int, input_string.split()))\n    l.sort()\n    for i in range(n):\n        if l[i] == i+1:\n            continue\n        else:\n            return \"NO\"\n    return \"YES\"\n\n",
        "generated_testcode": "assert function(\"4\") == \"YES\"\n",
        "difficulty": "introductory"
    }
]